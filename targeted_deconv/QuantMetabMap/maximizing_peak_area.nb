(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     44062,       1087]
NotebookOptionsPosition[     41240,        990]
NotebookOutlinePosition[     41578,       1005]
CellTagsIndexPosition[     41535,       1002]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Maximizing Peak Area (and Peak Height)", "Title",
 CellChangeTimes->{{3.580845497934316*^9, 3.580845501774011*^9}, {
  3.581068209551298*^9, 3.581068213159184*^9}}],

Cell["Eric Moyer", "Subtitle",
 CellChangeTimes->{{3.581066854247344*^9, 3.581066856574886*^9}}],

Cell["June 2013", "Subsubtitle",
 CellChangeTimes->{{3.581066860935388*^9, 3.58106686492692*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.580845504046333*^9, 3.580845507534482*^9}}],

Cell["\<\
In order to make the sampled distributions more accurate and avoid missing \
generated peak parameter values, I will augment the sampled distributions by \
setting the their maxima and minima to the true maxima and minima.\
\>", "Text",
 CellChangeTimes->{{3.581068216671107*^9, 3.581068220742992*^9}, {
  3.581068301719128*^9, 3.581068449095988*^9}}],

Cell["\<\
Peak height is generated by first selecting heights from a known distribution \
and then dividing them by the highest point in the resulting noiseless \
spectrum.\
\>", "Text",
 CellChangeTimes->{{3.581068458607165*^9, 3.58106853251912*^9}}],

Cell[TextData[{
 "Peak areas are generated by a simple nonlinear formula (that is essentially \
a scaled product of the parameters). In hindsight (I am writing this \
introduction after doing the work) it should have been obvious that the \
maximum area came when you took the maximum of the two main parameters and \
let P be 1 (since  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Pi]", ">", 
    SqrtBox[
     FractionBox["\[Pi]", 
      RowBox[{"log", "(", "2", ")"}]]]}], TraditionalForm]], "Output",
  CellChangeTimes->{{3.581068802152763*^9, 3.581068836757212*^9}}],
 ")"
}], "Text",
 CellChangeTimes->{{3.581068590463077*^9, 3.58106863122292*^9}, {
  3.581068734247294*^9, 3.581068791535287*^9}, {3.581068844305129*^9, 
  3.581068874449246*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Work", "Section",
 CellChangeTimes->{{3.580845512262078*^9, 3.580845515542012*^9}}],

Cell[CellGroupData[{

Cell["Calculate max area and max height", "Subsection",
 CellChangeTimes->{{3.58106892992746*^9, 3.581068934865465*^9}}],

Cell["\<\
Formula for the area of a peak with the given height (M) width at half height \
(G) and Lorentzianness (P).\
\>", "Text",
 CellChangeTimes->{{3.580845464726285*^9, 3.580845488902121*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"area", "[", 
   RowBox[{"M_", ",", "G_", ",", "P_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}], " ", "M", " ", "G", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"P", " ", "Pi"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "P"}], ")"}], " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Pi", "/", 
        RowBox[{"Log", "[", "2", "]"}]}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.580844810743547*^9, 3.580844854766369*^9}, {
  3.581066882232624*^9, 3.5810668920629*^9}}],

Cell["\<\
Take the first derivative with respect to each variable (glad I took Calc 3 :)\
\>", "Text",
 CellChangeTimes->{{3.580845556870246*^9, 3.580845583313327*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"area", "[", 
    RowBox[{"M", ",", "G", ",", "P"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"M", ",", "G", ",", "P"}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580844869457729*^9, 3.580844909576855*^9}, {
   3.580844940255346*^9, 3.580844942681806*^9}, {3.580844979415593*^9, 
   3.580844983634641*^9}, 3.581068670882645*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", "G", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"P", " ", "\[Pi]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "P"}], ")"}], " ", 
        SqrtBox[
         FractionBox["\[Pi]", 
          RowBox[{"Log", "[", "2", "]"}]]]}]}], ")"}]}], ",", 
    RowBox[{
     FractionBox["1", "2"], " ", "M", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"P", " ", "\[Pi]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "P"}], ")"}], " ", 
        SqrtBox[
         FractionBox["\[Pi]", 
          RowBox[{"Log", "[", "2", "]"}]]]}]}], ")"}]}], ",", 
    RowBox[{
     FractionBox["1", "2"], " ", "G", " ", "M", " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"Log", "[", "2", "]"}]]]}], ")"}]}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]], "Output",
 CellChangeTimes->{3.580844878310518*^9, 3.580844911865927*^9, 
  3.580844943387511*^9, 3.58084498433572*^9, 3.581066897630974*^9}]
}, Open  ]],

Cell["Find the zeros of the derivative.", "Text",
 CellChangeTimes->{{3.580845594302148*^9, 3.580845602885962*^9}, {
  3.581068683593344*^9, 3.581068695055101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "G", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "\[Pi]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "P"}], ")"}], " ", 
          SqrtBox[
           FractionBox["\[Pi]", 
            RowBox[{"Log", "[", "2", "]"}]]]}]}], ")"}]}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "\[Pi]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "P"}], ")"}], " ", 
          SqrtBox[
           FractionBox["\[Pi]", 
            RowBox[{"Log", "[", "2", "]"}]]]}]}], ")"}]}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "G", " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         SqrtBox[
          FractionBox["\[Pi]", 
           RowBox[{"Log", "[", "2", "]"}]]]}], ")"}]}], "\[Equal]", "0"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"M", ",", "G", ",", "P"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580845016754465*^9, 3.580845078120783*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"svars\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Equations may not give \
solutions for all \\\\\\\\\\\\\\\"solve\\\\\\\\\\\\\\\" \
variables.\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.58084506893471*^9, 3.580845078875253*^9}, 
   3.581066902854364*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", 
      FractionBox[
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"Log", "[", "2", "]"}]]], 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", 
        SqrtBox[
         FractionBox["\[Pi]", 
          RowBox[{"Log", "[", "2", "]"}]]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", 
      FractionBox[
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"Log", "[", "2", "]"}]]], 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", 
        SqrtBox[
         FractionBox["\[Pi]", 
          RowBox[{"Log", "[", "2", "]"}]]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M", "\[Rule]", "0"}], ",", 
     RowBox[{"G", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M", "\[Rule]", "0"}], ",", 
     RowBox[{"G", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", 
      FractionBox[
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"Log", "[", "2", "]"}]]], 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", 
        SqrtBox[
         FractionBox["\[Pi]", 
          RowBox[{"Log", "[", "2", "]"}]]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", 
      FractionBox[
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"Log", "[", "2", "]"}]]], 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", 
        SqrtBox[
         FractionBox["\[Pi]", 
          RowBox[{"Log", "[", "2", "]"}]]]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.580845068940685*^9, 3.580845078885007*^9}, 
   3.581066902926908*^9}]
}, Open  ]],

Cell[TextData[{
 "The only unconstrained optima are where the area is 0. Double check using \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s maximize routine."
}], "Text",
 CellChangeTimes->{{3.581066914719164*^9, 3.581066940847474*^9}, {
  3.581068704457518*^9, 3.58106871240728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"area", "[", 
    RowBox[{"M", ",", "G", ",", "P"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"M", ",", "G", ",", "P"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581066942256249*^9, 3.581066992752899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Maximize", "::", "\<\"natt\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The maximum is not attained \
at any point satisfying the given constraints. \\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Maximize\\\", ButtonNote -> \
\\\"Maximize::natt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.581067012548171*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Infinity]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M", "\[Rule]", 
      RowBox[{"-", "\[Infinity]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"P", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.581067012552231*^9}]
}, Open  ]],

Cell["\<\
Now, look at the maxima where the height, width, and lorentzianness are \
constrained by the values from the original distributions.\
\>", "Text",
 CellChangeTimes->{{3.581067053495804*^9, 3.581067100599226*^9}}],

Cell["Range of Lorentzianness: 0..1", "Text",
 CellChangeTimes->{{3.581067106880031*^9, 3.581067141718962*^9}, {
  3.58106719260748*^9, 3.581067200966988*^9}}],

Cell["\<\
Range of width-at-half-height:  [0.00172017711207981768, \
0.0449550522830431884]\
\>", "Text",
 CellChangeTimes->{{3.581067204263148*^9, 3.581067231807198*^9}, {
  3.581067318165553*^9, 3.581067354855653*^9}}],

Cell["\<\
Range of height is more complicated because the heights in any spectrum are \
divided by the height of the highest point in that spectrum. The maximum \
height is 1 (put all the other peaks as far away as possible and make them as \
small as possible and their contribution to the largest peak will be \
negligable.) The minimum is the smallest original height divided by its \
height plus 6 times the largest original height (put all the peaks at one \
place and make 6 of them be maximum size.\
\>", "Text",
 CellChangeTimes->{{3.581067361718955*^9, 3.581067636591362*^9}}],

Cell["\<\
Unscaled height range: [ 0.000191973000000000013, 1.99409999999999998 ]\
\>", "Text",
 CellChangeTimes->{{3.581067638663113*^9, 3.581067701775002*^9}}],

Cell["min / (6*max + min):", "Text",
 CellChangeTimes->{{3.58106771552699*^9, 3.581067745767259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxOrigHeight", " ", "=", 
  RowBox[{"199409999999999998", "/", "100000000000000000"}]}]], "Input",
 CellChangeTimes->{{3.581067760015006*^9, 3.581067815681902*^9}}],

Cell[BoxData[
 FractionBox["99704999999999999", "50000000000000000"]], "Output",
 CellChangeTimes->{3.581067817959822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minOrigHeight", "=", 
  RowBox[{"191973000000000013", "/", "1000000000000000000000"}]}]], "Input",
 CellChangeTimes->{{3.581067822420515*^9, 3.581067872436946*^9}}],

Cell[BoxData[
 FractionBox["191973000000000013", "1000000000000000000000"]], "Output",
 CellChangeTimes->{3.581067877366581*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scaledMinHeight", "=", 
  RowBox[{"minOrigHeight", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"6", "*", "maxOrigHeight"}], "+", "minOrigHeight"}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.58106788838022*^9, 3.581067906543415*^9}}],

Cell[BoxData[
 FractionBox["191973000000000013", "11964791972999999880013"]], "Output",
 CellChangeTimes->{3.581067908287255*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"scaledMinHeight", ",", "28"}], "]"}]], "Input",
 CellChangeTimes->{{3.581067922217228*^9, 3.581067967865162*^9}}],

Cell[BoxData["0.000016044825554277107775099842413369415512771055`28."], \
"Output",
 CellChangeTimes->{{3.581067927467416*^9, 3.581067968558585*^9}}]
}, Open  ]],

Cell["\<\
So, the range for scaled heights is: [ 0.00001604482555427710777509984241, 1 ]\
\>", "Text",
 CellChangeTimes->{{3.581067976391197*^9, 3.581067993951367*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"area", "[", 
      RowBox[{"M", ",", "G", ",", "P"}], "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "P", "\[LessEqual]", "1"}], ",", 
     RowBox[{"scaledMinHeight", "\[LessEqual]", "M", "\[LessEqual]", "1"}], 
     ",", 
     RowBox[{
     "0.00172017711207981768", "\[LessEqual]", "G", "\[LessEqual]", 
      "0.0449550522830431884"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"M", ",", "G", ",", "P"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581068011074693*^9, 3.581068021476142*^9}, {
  3.581068057408483*^9, 3.581068121615601*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.07061523099707677151511324756`17.235573164837184", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"M", "\[Rule]", "1.`16.934543169173203"}], ",", 
     RowBox[{
     "G", "\[Rule]", "0.04495505228304318840000000001`16.934543169173203"}], 
     ",", 
     RowBox[{"P", "\[Rule]", "1.`16.934543169173203"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.581068123135978*^9}]
}, Open  ]],

Cell["\<\
Maximum area is attained by letting all the M,G, and P have their maximum \
values.\
\>", "Text",
 CellChangeTimes->{{3.581068154695302*^9, 3.581068176623343*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Double-check assumption that height contribution of 6 distant small peaks is \
negligable\
\>", "Subsection",
 CellChangeTimes->{{3.58106894187097*^9, 3.581068961455314*^9}}],

Cell["Width of most congested spectrum: 0.0260837320427020625", "Text",
 CellChangeTimes->{{3.581068974455047*^9, 3.581068982438954*^9}, {
  3.581069148559057*^9, 3.581069148925378*^9}}],

Cell["Function for Gauss-Lorentz Peak:", "Text",
 CellChangeTimes->{{3.58106915238302*^9, 3.581069180351079*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lorentzian", "[", 
   RowBox[{"G_", ",", "x_", ",", "x0_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"G", "^", "2"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "+", 
     RowBox[{"G", "^", "2"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.581069222274399*^9, 3.581069233890588*^9}, {
  3.581069265913407*^9, 3.581069337605904*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gaussian", "[", 
   RowBox[{"G_", ",", "x_", ",", "x0_"}], "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"G", "/", "2"}], " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", "2", "]"}]}], "]"}]}], ")"}], "^", "2"}]}], 
     ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581069348121124*^9, 3.581069355840713*^9}, {
  3.581069391452463*^9, 3.581069457000121*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"glp", "[", 
   RowBox[{"M_", ",", "G_", ",", "P_", ",", "x_", ",", "x0_"}], "]"}], ":=", 
  RowBox[{"M", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"P", " ", 
      RowBox[{"lorentzian", "[", 
       RowBox[{"G", ",", "x", ",", "x0"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "P"}], ")"}], " ", 
      RowBox[{"gaussian", "[", 
       RowBox[{"G", ",", "x", ",", "x0"}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.58106918197154*^9, 3.581069195248972*^9}, {
  3.581069242249391*^9, 3.581069287115271*^9}, {3.581069475069153*^9, 
  3.58106950945669*^9}}],

Cell["Make sure it looks right", "Text",
 CellChangeTimes->{{3.581069680904228*^9, 3.581069684071397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"glp", "[", 
    RowBox[{"1", ",", "1", ",", "0", ",", "x", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581069522742245*^9, 3.581069667535217*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
KW9kTKSAo9DJWpcac/i/+z74//u+/wGOX9Nn
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-2, 2}, {0, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.581069554500293*^9, 3.581069566113372*^9}, {
  3.581069596865147*^9, 3.581069669115668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"glp", "[", 
    RowBox[{"1", ",", "1", ",", "1", ",", "x", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581069522742245*^9, 3.581069688262557*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-2, 2}, {0, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.581069688970412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"glp", "[", 
    RowBox[{"0.5", ",", "1", ",", "1", ",", "x", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581069522742245*^9, 3.58106970673459*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1mHk01H/Ux0UiFZKQLFHWREl23aiQslcUKbIUsqVkSUgJLchPUY2RJfu+
Gz7WGLLv23wbWyLDWLKEeeY553n++pzXP/fc+77ve879XBEbVxM7RgYGhsM7
GBj+95UFnhkajYYkAhcuCAnhwHX96Kv1DRriVzQ+xSKBg9yCU+JLKzTksqa7
tSSHA3lJfZupWRo6e6VJfVATB0r7g4d+9NPQ7iNTH7rscHBunNocm0NDKk8z
8oOycWAS0ppx+jYNDXYpP5jWigev9uAHDlXbSK71t6eEOh56evbM1FhvocdM
JwykMxJAsNqVW0lgE13Omf+uL5sIRU71zByjG2joPe7xt6EkuPP61MJg0Dq6
mibblzKbAmtRvq8QrCGW32fmeo+kQSI76dBH8l/0OjHJHj+WAZ/1Tnl0h66g
5Qt5BLXdORDkbP1E6tIyevgXl6Cnmge+TOleHnOLSMyuoOGjfQFYB7Qf60ul
os7Tob4JLUVwfTD+7GgiFWmHkLu7e4tAT97NfAJHRW2zef17fxaBwgTn68Vo
Kior51iNWi4CVl2TJfZAKpJJ4zu+IFgM2Ry9NTo3qOjjn1rpJfdi+Icbsirb
TUVH3RTjtIRL4L/KyY+fHRcQwaz7mlFEKVg9ifNXsltA513dWKy/lILkaUPb
rtsLSGWiwtQ3vRTKU0vlWK8tICZ9LdKP+lIgvQ///hAW0FFd1vSJ9VKQcDy1
rMe9gFhzP2dT7MrA48QGbtF3Ho2beqalXyyHckxyb6YoBR1QVd3XIUYAP/Ud
WXF8FMSutFsxUIEAGrGD+qHsFMQpcuyH+nkCVJuEvbPfmEN6FU023XcI0Ngw
yyXSNYdCqsRPPPtMgJ6M7EMxgXNIp8R2euBgJVC8FCQCfv5BTxIMdvZwVsFR
znNaV3GzKCilLW6TuxreniT7OL6fRSLCW3eChaphzSioIODVLAovZM0+IFkN
PyLrj2V5zKIwWadVXbVq8DxwiWWXzizi63Ni4rCphu88Jj9K5mdQKKGTyp5X
DY6CttcPa86g0pXiWvZrNZAv/cpxbHwatQiOJyYW14Jw552y44PTSFR4zpq9
thZee6mwPmqbRnItX0WDWmvBrn4mmaVsGnHMrRCDJ2qBz0qfLPN2GvWlmget
ctXB00gucy/laaT18YVSrHsd6K59vrj3zS80tHjCkkmxHrCGvCOKilPIUt6q
V2q0AfxM1y8oy0yhLxfqZkRmGoCPfO6+qugUOmPeH3Z0tQGMNtvzzrJPIfaM
Sy/O7/8O1fIULZ2pSXRZjO3w6sXvgI+XtjOPmUQa+86HyOd9BxvvxDSfvxPo
pra/nOS7RpiU+U8eFY+jNT7zNi9HIkj7J1OmM8aRkKfoynVfIri0F6VzJYyj
Kzeqzpx/TYQ19z5R+/Bx9PzcU9Hz2URgK+E9sO/OOBq9/9GHvEiEk5pxSzd3
jyOtxO5XOP9m8L0WX/jXYgz5R5LJevgW2O+fpii7g4zsHZKaava1gYzivEzy
0gjKCsoSzvjYCc8vzHWUPelHhpJp2zZtPXDwanbEDd4u5BPl39UPA5AvHl5+
kakL8ees/fp5ZQCM1h0mTs13otaqDvffNwYgDCeizNbYieJatwLWHg7A9nQ0
Vv64EzmKc/XvSR2Aqae+sgJ9Haiomn8flWMQXAwjP1ZKtaOExaKZtdFByP/b
wNF0rBltWkf7BzgPw9v0r7Vn14lILfZ3ZLj3MDhZPXtU1EpEX15mSL15OQzH
visPf31MRI1uo6cf4och5r+MlKdNTajfPrepoXsYfBQiNU47N6Lb/DanbymP
gJaHpROuoB4V/BtI2r82AkLiKkIHX9Uj59QP76OZRuHf4MHOcMt6lNH+D1g5
RqFQs13Rm7keBQemH6wRGwXx/VqMV83qkPHRqMiHJqPAlisRu/tfDVILPduX
nzoKycOTb34HV6FOzqsaZjokGPLjif9yugrZOPwK/GdIAnYhnVzjsUpkmsPx
7I05CR7fSe0qg0okmOzO43OfBNqTjrxhGxVoUgGbcQ8jwTRlHi/tVoaCHIQs
qppIIBBxJJ8kVIZiTAQPyHaQwOiUcV1Uayn6KqB8L7SfBKUP8yc3pEtROPQ7
Mk6RIHTNU7plshi1LK86bOzAQJpxo8DJohA9M9Id+XUGA6tE6QZhtkLUy2bN
y6SOQdQFi77u0gJkOmvLzaqFwcZLwpoaTwFqvrt/uk0fg5Y9zzT2duYhf1sO
bn1bDBiycgyqn+UhXYKhT8F9DBQMft72lM1Dk9+OdTO6YvA5QjNoJDwX3R38
8M/CG4MBada3N95kI9aV0v9WXmNw7sH93JqZLBRicnITH4lBak5zl5RuFho3
4PmiEIOBt8Ib3g3GTHT6iZsKdzwG/Ge5EuKepKEsmYyE/BwMggIe1jH2pSIU
IYn7UoDBbG3PpOPpVJR5W0zRrQQDgs4HaTVKCrrXxUJtqcLglrFA4fDdJNQT
bV5k8QODP0srKo/qE9H3BnNej3YM/GLaEbtYItLZJRXq1kXPfzioRXMqAa0/
ItuJDWAg429pPKydgEQEvxUPD2FQcUSx3/MbHk38WRvzHsWgsKWrwbATh4qm
P+IejGHQw/myMyjqCyo8LspbN4HB0jWV0SLTzyicmK3B8AsD+Z/xy4f7YhGB
Z9Pp1CwGxmKmDIYfPqIqZHdHbA4DN8dde4PMPyCB/8RGGOYxyFl2Pjo9FI0G
pGp0XBYxaFM5Inf483v05luNBMMyBhT/blWDW1Ho9AsbV+8VDPbVv9QOFIpE
BdXtvEN/MTDn8ky6h96h+YgUftE1DD58Hqpo03yDynNW3I3XMegT1+xWqA9D
73AafPc2MODO+zYTp/0KmU+5sdr/w8BUjZ1xB/EFWjFe1ri8SfdLg+chh8vP
Uc7R+ELeLQw6DIdPtrYGoCcXK+610Fmo8HmEPd4PsXkym9lvY/CpyQjJJ3uh
etssv2k6840KUrbTPJDF1LV+YxoGx8d7VWJuOSGLTW67r3QW3+v2QdbBGt1d
eXhsiM4BPZI9h+v00XE/V+51OstwjDoyn1AAzUQvBRqd+6hB8Zxr5pA26xr8
h84LhhKLrh72wKuds7OGzr7vtZudFNxgi52h2I/O2/7en+LlHsFtZnys8P/G
d8x07pb2AQf1c3lp9PyYrmMaLOLPIJ+FmcZP57ojoSFfOIPAaezFi4f0+oJj
RN2U3gbDGeNWnQK6Htp7Ceade0Kgtcr80hBdL5aga5pOoaEQasr3dpquZ9Mq
RYqZ5TUkN7rwk+h6hz14xRUf/BbMTp5aKqf3I4Ua8VQgMAKIjSmCz1YxcHCQ
ti/ejoIbuTueVdL7qyvqdfO5RjS8oGTVKi1hIDlaZ2Dk9x/UJMS5x1IxmDG5
pTSz/gHI2V/kDlAwaN6XfrxEORZODjIYHv+DQUbTX+FgrzhwvKWxIT2DgfPZ
CFahlc+wMZVyiDyJgf76yObMaRzMk+MSPoxjIFsoRS3xiIflsysjZ8gYrEWT
/0iu4eEuWTROagSDMjbf3tpHiVArvMtvvgMD/ImD3TmiSbCVl4oSWjF4aZTT
8bk9CVQX634qNWNwNWa85bFUCtzFXWHmrKP3R+RKrfRoKhzcb7fpTp/f/gtT
iDcsDSItQ69cpM93lUNA5U6ldFi47iSwlY5BeFZhKSkiA1bLJ2L4v9L9oSKY
E3UhG+RPvInmeIfBXsuSzGfUbLDcXey3O4w+b/7G6c64HHgSJpw2HYzBnbFa
k6N+ucDrHadq5kOvT3JVf6s3D3rc8gzW7mJALLh9IS+0EByaWpVt5TFQb5Cp
k/hZCJJRN3dWH8cgt29dE6dYBKQl/DqjGAYx6+8hfLwItOzHfp/lxcAWmlTt
NEog+sxgftQGCWjNJ08dopaBtdR8OpFAAo+RrZx3OuXQ6ck6mFpIgqm5Ztld
uHLwueXz1D2TBD847WSW9CrAZeBYE/pEgrjrsRKtSQRIs8xtuepNgjNjO4QC
zRGkjyomBJ8kgWy5GfVkGoK734tacyVIIB6VVf9zHYH6FYW4FiES7EnIPIPX
rwaj1ef41r0k2DQyH6FRqkF6QV6HZXoURnNzpNCpWqjR0Xrp9mkU4t2s6jVK
6uHvTsa6w6sjcHShYl21lgi8Xa6O66HD4Nd6Pnh5jghalCuUWb9h6EtvYc8+
1AzLo1hvj+swhNkNHxVxb4YgR4PgsGvDsDC0oc9ypAWIMZpaYUeGoapB5Wv3
0x/wW1m0fUfRENz8VKLnrNIOi2pndf8NDMKlxMFWA/Mu+HHJNyT14ABc1Odi
WinqB+vyhzVPU3vg3e3+gJMlI2BefSNtqKwTGg0E9xlxkUHYfY5WONcK3LJk
Hg8BMmSFm+p0DrXCnX3JR6LFyRBrzKG60dgKGy0yCgOqZCgSmTvo8bUVZC6p
W9y5S4Z87UDjdbNWiDhvkeZWSAZeHb3fNg0/4KZy7MXI62NgtGLpGZLWAnMi
B/274sbh1wp5c08MEZR9E9xrksbBi2crKPAlEYJ6TtjlZo8D9akoB6MXEXhC
tK+8rR0HCTED0WPmRDj7x4tfb2YcxiYkI2b5ifCueKi4RmUCGFabzYK+NsGp
y/j53IEJ4BlM3pdc1giPPI9bv+OZAoc3rdTbu74DD9s84brIFMROht2+stYA
pfH5fEIyU2BWrbdwnr6fbjardGRqTgE+knzjalsDBInoQrPzFLi8p9qvxzTA
2zZbQea6KbCvUFDSl26AFEncoI/rL3Ax2uUwZl4P/SOcJvZN0yBuYF9J664F
vXC7Ac+uaaBqKuWpEmuBoFJu9XxkGkgdCbFPq2oBH3PXCb8wDYob0XKH02rh
nlFx8BDfbxglD9UV+tfCRp1FicH936D26L2S5fFaEMhIEVBim4HY9gPaJmE1
cMdb/RfLlVnoyJSTi7lF96VtUy/l+izM5LKrY6bVsGRwtb7XehbmL+6kyulV
w8tjzgmJXrPgaX1OeVqxGjLbP1lA4iyE3/cJKOCshnWxf+2PN2aBS6zihlU4
gqiustLJ1D/A3rPf/LBjFdQdVwqrY6aAQ+Lbb4eNCGAldzWRykGBrfELP2U0
CbAm704Q5qeAYUM+UVeeADKqGRRfWQp8seQKx3MTIFpX2FTBjALfm1g62gYr
wN6ORSA5lQLFGTsJQvYVwBrfn/Xy8jw4chtYG70sB/HdhOkk3QXoYKrkVRgv
BUGC00XmV1TAFh5y3ucoBoYNxjSPsUX4du/150bvAlg1rrRqEFuGge6AkGqX
PBhWuH1YLHgFjjQq5Cby5oCbGed+0ZG/kEGZdQygZMCh6AnznYJroPEjRVfV
Jg2yLfDflp6sAzkzRI/8LwXMNJ7pNlVuAPHL3YEQlmTIs3ogqrr5D1wSeRUo
1xNhje08U9m1LcjuwB5nlCaASaeaouDHbbDdy5Sqa4MHNrU9NYQv27DsJTGf
YomHmqShy5aJ2zD8XmcvqxkeTj7xtv6UvQ0GGhw1XZfxwC5c8vpQwzboPhAk
h57BA9FZfvzg4ja4uu68+3Q3Hs6xSkWwX6HBzRgryqB9PP0/s8afbUwDodTM
HRct4yFnuDFZ34wGZ36kGBYZx4NQjn3FaxsaXEo48TZZPR42ryVNsXnT4Hr3
plI9VzyUJAprsKTQYCYPu7mKcOCyb74xJYMGjNwM4YVFOBD3qjLRzqPHV5Ov
eZyBg2i9W/deEGgQfnJbnu0DDjyoce+ZumlQuyHc7eyCA2kLR6HEARp4a6QO
GdvigFyvkqZFosGA1K82tZs4MPo4UBX4mwbPZ3e7C2njgJUx9ZLIPA1yzxXy
8arjADl59VQv0/NR/YrnlsfB417t23c26PXwVzLzSuLg/+4z8P/3mf8BYt1D
EA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-2, 2}, {0, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.581069688970412*^9, 3.581069708185817*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{640, 750},
WindowMargins->{{141, Automatic}, {Automatic, 24}},
FrontEndVersion->"7.0 for Linux x86 (32-bit) (February 25, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 170, 2, 141, "Title"],
Cell[740, 26, 96, 1, 53, "Subtitle"],
Cell[839, 29, 97, 1, 32, "Subsubtitle"],
Cell[CellGroupData[{
Cell[961, 34, 97, 1, 73, "Section"],
Cell[1061, 37, 361, 6, 71, "Text"],
Cell[1425, 45, 251, 5, 51, "Text"],
Cell[1679, 52, 750, 17, 115, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2466, 74, 89, 1, 73, "Section"],
Cell[CellGroupData[{
Cell[2580, 79, 120, 1, 39, "Subsection"],
Cell[2703, 82, 197, 4, 51, "Text"],
Cell[2903, 88, 580, 17, 32, "Input"],
Cell[3486, 107, 168, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[3679, 114, 417, 10, 32, "Input"],
Cell[4099, 126, 1152, 36, 107, "Output"]
}, Open  ]],
Cell[5266, 165, 164, 2, 31, "Text"],
Cell[CellGroupData[{
Cell[5455, 171, 1288, 42, 173, "Input"],
Cell[6746, 215, 556, 11, 24, "Message"],
Cell[7305, 228, 1899, 64, 209, "Output"]
}, Open  ]],
Cell[9219, 295, 295, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[9539, 307, 276, 7, 32, "Input"],
Cell[9818, 316, 484, 9, 45, "Message"],
Cell[10305, 327, 334, 10, 31, "Output"]
}, Open  ]],
Cell[10654, 340, 222, 4, 51, "Text"],
Cell[10879, 346, 159, 2, 31, "Text"],
Cell[11041, 350, 220, 5, 31, "Text"],
Cell[11264, 357, 585, 9, 131, "Text"],
Cell[11852, 368, 161, 3, 31, "Text"],
Cell[12016, 373, 101, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[12142, 378, 189, 3, 32, "Input"],
Cell[12334, 383, 122, 2, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12493, 390, 188, 3, 32, "Input"],
Cell[12684, 395, 128, 2, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12849, 402, 267, 7, 55, "Input"],
Cell[13119, 411, 129, 2, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13285, 418, 158, 3, 32, "Input"],
Cell[13446, 423, 149, 2, 31, "Output"]
}, Open  ]],
Cell[13610, 428, 168, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[13803, 435, 646, 16, 77, "Input"],
Cell[14452, 453, 423, 11, 52, "Output"]
}, Open  ]],
Cell[14890, 467, 173, 4, 31, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15100, 476, 184, 4, 59, "Subsection"],
Cell[15287, 482, 186, 2, 31, "Text"],
Cell[15476, 486, 113, 1, 31, "Text"],
Cell[15592, 489, 493, 15, 32, "Input"],
Cell[16088, 506, 673, 21, 55, "Input"],
Cell[16764, 529, 634, 17, 55, "Input"],
Cell[17401, 548, 106, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[17532, 553, 413, 11, 32, "Input"],
Cell[17948, 566, 9746, 165, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27731, 736, 413, 11, 32, "Input"],
Cell[28147, 749, 6277, 108, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34461, 862, 414, 11, 32, "Input"],
Cell[34878, 875, 6310, 109, 255, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
