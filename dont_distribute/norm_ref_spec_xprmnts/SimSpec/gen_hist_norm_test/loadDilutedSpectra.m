function  [diluted, dilution_factors]= loadDilutedSpectra( )
% Loads generated spectra using loadSpectra and applies fixed dilution constants
%
% Loads 2 sets of 5 spectra generated by metAssimulo and then dilutes them
% by dividing by dilution factors generated from 2 sets of 5 uniformly 
% distributed numbers from random.org (the numbers were generated at the
% writing of this code and do not change from run to run.)
%
% The dilution factors from the first are in the range (1,4) and the second
% are in the range (1,8). The dilution factors are:
%
% For the first set of spectra: 
% [2.096453799904213,2.823065115645488,3.575062343515618,3.452403640402276,3.162280927424430]
%
% For the second set of spectra:
% [4.421008684175983,2.180269333548611,5.730896586768220,3.892134104356869,6.689773691619814]

% Uniform random numbers from random.org
rands={
    [0.365484599968070743   0.607688371881829306    0.858354114505206010    0.817467880134092043    0.720760309141476707], ...
    [0.488715526310854677	0.168609904792658657	0.675842369538317211	0.413162014908124172	0.812824813088544770], ...
    ...% The next 2 are unused, but I kept them because I generated them
    [0.635969814909487353	0.093955566934778895	0.411114684473785375	0.017640802732028036	0.924459995844657611], ...
    [0.387655764955923916	0.627870687786817475	0.478107027455221162	0.158573310650051873	0.922981594545587390] ...
    };

% Set the dilution factors for the first to 1:[1..4] and for the second to
% 1:[1..8], so the second has a larger range than the first
dilution_factors={(rands{1}.*3)+1; (rands{2}.*7)+1};

% Load the undiluted spectra
diluted=loadSpectra();

% Dilute them
diluted{1}.Y = diluted{1}.Y./ ...
    repmat(dilution_factors{1},size(diluted{1}.Y,1),1);
diluted{2}.Y = diluted{2}.Y./ ...
    repmat(dilution_factors{2},size(diluted{2}.Y,1),1);
end

