(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    371623,       8516]
NotebookOptionsPosition[    356233,       8095]
NotebookOutlinePosition[    356597,       8111]
CellTagsIndexPosition[    356554,       8108]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Visualizing Normalization", "Title",
 CellChangeTimes->{{3.547139824257725*^9, 3.547139830062993*^9}}],

Cell["A graphical presentation of NMR normalization methods.", "Subtitle",
 CellChangeTimes->{{3.547140124907233*^9, 3.547140128682735*^9}, {
  3.5471401699783297`*^9, 3.547140176641282*^9}}],

Cell["Eric Moyer", "Subsubtitle",
 CellChangeTimes->{{3.547139833729444*^9, 3.547139834949341*^9}}],

Cell["Started 27 May 2012", "Subsubtitle",
 CellChangeTimes->{{3.547139839967902*^9, 3.547139847471291*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.5471398550090647`*^9, 3.547139859094948*^9}}],

Cell["\<\
Normalization methods in NMR spectrography (and probably other spectrographic \
fields as well) are typically explained by the procedures that you go through \
to perform them and justified by arguments about the \"real concentration.\" \
Another way to look at normalization methods is to examine them as geometric \
operations on a vector space. This gives a different understanding of what is \
occurring, which can give the practitioner a deeper intuition about \
trade-offs he makes when he says, \"sum-normalize the data.\"\
\>", "Text",
 CellChangeTimes->{{3.547139862175673*^9, 3.547139961290236*^9}, {
  3.547140021256085*^9, 3.547140090613758*^9}, {3.5471503141743526`*^9, 
  3.547150319533565*^9}}],

Cell["\<\
I look at each spectrum generated as a point in a vector space, one variable \
in the vector for each value measured. I am mainly concerned with \
frequency-domain spectra, since it is on these that the normalization methods \
I present are typically used. The normalization methods do not solve extant \
problems on time-domain spectra, so they are not used there. However, my \
points are just as valid for time-domain spectra, since they too are vectors.\
\
\>", "Text",
 CellChangeTimes->{{3.5471402676850863`*^9, 3.547140474189971*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum Normalization", "Section",
 CellChangeTimes->{{3.54714020719221*^9, 3.547140209879217*^9}}],

Cell["\<\
Sum normalization takes each spectrum, divides it by its sum, and then \
multiplies it by a constant. After this operation, all spectra have the same \
sum.\
\>", "Text",
 CellChangeTimes->{{3.547140255131291*^9, 3.547140264629607*^9}, {
  3.547140534722814*^9, 3.547140621495376*^9}}],

Cell[TextData[{
 "If the spectra are interpreted as points in an n-dimensional vector space, \
this projects all points onto an n-1 dimensional subspace (hyperplane) along \
a line between the original point and the origin. In 3 dimensions, it \
projects points onto a the plane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "+", "y", "+", "z"}], "=", "s"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " . In 2 dimensions, all points are projected the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"s", "-", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The location of these figures is determined by the constant."
}], "Text",
 CellChangeTimes->{{3.547140681651354*^9, 3.5471406959475613`*^9}, {
   3.547140770921924*^9, 3.547140855582036*^9}, {3.547140892956802*^9, 
   3.547140993727613*^9}, {3.547141063390345*^9, 3.547141080699884*^9}, {
   3.547141114226123*^9, 3.547141132073366*^9}, 3.547150325936315*^9, {
   3.547304990758165*^9, 3.547305069804627*^9}}],

Cell["How can we see this?", "Text",
 CellChangeTimes->{{3.547141139476688*^9, 3.5471411457860193`*^9}}],

Cell["\<\
First, consider that multiplying a (non-zero) point by a constant moves it \
along a line connecting the point with the origin. Multiplying by a positive \
number less than 1 moves it closer to the origin. Multiplying by a number \
greater than 1 moves farther from the origin. And multiplying it by a \
negative number moves it away from the origin on the opposite side.\
\>", "Text",
 CellChangeTimes->{{3.547141147385028*^9, 3.547141175159586*^9}, {
  3.547145618896906*^9, 3.547145674137457*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xPlusYEq1TwoD", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", "-", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547141252885395*^9, 3.547141300559654*^9}, {
   3.547141537589252*^9, 3.5471416045080423`*^9}, {3.547142210245225*^9, 
   3.5471422209708843`*^9}, {3.5471433024178123`*^9, 3.547143453267515*^9}, 
   3.54714551168288*^9, {3.5473052214608*^9, 3.547305270898307*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"yEq2X", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Blue", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471415783926497`*^9, 3.547141591548118*^9}, {
   3.5471416246544447`*^9, 3.547141673527576*^9}, 3.5471418890719557`*^9, {
   3.547142204740473*^9, 3.5471422068217287`*^9}, {3.547142262492856*^9, 
   3.5471422658793793`*^9}, {3.547142389810174*^9, 3.547142390770712*^9}, {
   3.547144733799*^9, 3.547144739646644*^9}, 3.547145511683155*^9, {
   3.547305153157874*^9, 3.547305170513158*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptX3HalvesY3AndProjection", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", "/", "2"}], ",", "3"}], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"2", "/", "3"}]}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Medium"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", 
        RowBox[{"Darker", "[", "Magenta", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714168006174*^9, 3.547141719704781*^9}, {
   3.547141768927044*^9, 3.547141787089158*^9}, {3.54714202150038*^9, 
   3.5471420306007233`*^9}, {3.547142113270247*^9, 3.5471421266363688`*^9}, {
   3.5471421704905167`*^9, 3.54714217578865*^9}, {3.547142272496965*^9, 
   3.547142285318091*^9}, {3.54714234509508*^9, 3.54714236665021*^9}, {
   3.5471447451479273`*^9, 3.547144750372863*^9}, {3.5471448821963453`*^9, 
   3.547144900705575*^9}, 3.547145511683342*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"firstDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xPlusYEq1TwoD", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Constant sum surface\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Spectrum\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"3", "/", "2"}], ",", 
              RowBox[{"11", "/", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Darker", "[", "Blue", "]"}], "}"}]}]}], "]"}]}], "}"}],
         "]"}], ",", "yEq2X", ",", "ptX3HalvesY3AndProjection"}], "}"}], ",", 
     
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "300", "}"}]}], ",", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714178902284*^9, 3.5471418310216312`*^9}, {
   3.547141879108432*^9, 3.547141882302959*^9}, {3.547142036570444*^9, 
   3.547142070537751*^9}, {3.5471421834856787`*^9, 3.547142189015986*^9}, {
   3.547142300656996*^9, 3.5471423124001207`*^9}, {3.547142380518396*^9, 
   3.547142498330698*^9}, {3.5471426515745068`*^9, 3.547142657910717*^9}, {
   3.547142712617209*^9, 3.5471429125192623`*^9}, {3.5471430778815613`*^9, 
   3.547143110504135*^9}, {3.547143465248744*^9, 3.5471434837149267`*^9}, {
   3.5471436268941517`*^9, 3.547143648446703*^9}, 3.547143856228594*^9, {
   3.547143904330501*^9, 3.547143979443432*^9}, {3.547144014076792*^9, 
   3.547144109029076*^9}, {3.5471441448632727`*^9, 3.547144145375992*^9}, {
   3.5471442167831573`*^9, 3.5471442495488977`*^9}, {3.547144331187319*^9, 
   3.547144335358005*^9}, {3.547144367271785*^9, 3.5471445103343353`*^9}, {
   3.547144540485724*^9, 3.5471446496300507`*^9}, {3.547144686554137*^9, 
   3.547144720330497*^9}, {3.547144754121471*^9, 3.547144858472582*^9}, {
   3.5471449348656187`*^9, 3.547144947175726*^9}, {3.547145172647348*^9, 
   3.547145195816874*^9}, {3.547145248487441*^9, 3.547145317295732*^9}, 
   3.547145511683733*^9, {3.547149206811069*^9, 3.547149213441887*^9}, {
   3.5473053103536587`*^9, 3.547305379677505*^9}, {3.5473054176853523`*^9, 
   3.547305484881413*^9}}],

Cell[BoxData[
 RowBox[{"firstDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "firstDiagram", ",", 
    "\"\<Figure 1: Sum Normalization in Two Dimensions\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714178902284*^9, 3.5471418310216312`*^9}, {
   3.547141879108432*^9, 3.547141882302959*^9}, {3.547142036570444*^9, 
   3.547142070537751*^9}, {3.5471421834856787`*^9, 3.547142189015986*^9}, {
   3.547142300656996*^9, 3.5471423124001207`*^9}, {3.547142380518396*^9, 
   3.547142498330698*^9}, {3.5471426515745068`*^9, 3.547142657910717*^9}, {
   3.547142712617209*^9, 3.5471429125192623`*^9}, {3.5471430778815613`*^9, 
   3.547143110504135*^9}, {3.547143465248744*^9, 3.5471434837149267`*^9}, {
   3.5471436268941517`*^9, 3.547143648446703*^9}, 3.547143856228594*^9, {
   3.547143904330501*^9, 3.547143979443432*^9}, {3.547144014076792*^9, 
   3.547144109029076*^9}, {3.5471441448632727`*^9, 3.547144145375992*^9}, {
   3.5471442167831573`*^9, 3.5471442495488977`*^9}, {3.547144331187319*^9, 
   3.547144335358005*^9}, {3.547144367271785*^9, 3.5471445103343353`*^9}, {
   3.547144540485724*^9, 3.5471446496300507`*^9}, {3.547144686554137*^9, 
   3.547144720330497*^9}, {3.547144754121471*^9, 3.547144858472582*^9}, {
   3.5471449348656187`*^9, 3.547144947175726*^9}, {3.547145172647348*^9, 
   3.547145195816874*^9}, {3.547145248487441*^9, 3.547145317295732*^9}, 
   3.547145511683733*^9, {3.5471492177403812`*^9, 3.547149234357081*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[1, 0, 0], 
       LineBox[CompressedData["
1:eJwtlGs01HkcxlHbRe3kslNrUIipWbrJ0NnkKytqEOsSdpVOuZSUtGkLbVHE
LjVrZSttplW6Tyk6aeWrTFYyJzG143LGpWnWaMx/YhhmxvzWntOL5zzvnhef
c56P/Y6U0HgTIyOjoKn838+32fcQQuGOu1yKEALMMXbgoXEKLXUM5lo9gbxC
To1CRaHA72rMoXECgbU//NbRRyFTUvNCoSLQZtXo/6CBQvncd+UdfQR6RUn3
Ek5RuD+JHfWggYCeU5UlpFH4k1NnfcIpAm4e/o6ltkq8ULq4SEgj4I3mPX9a
KJDXk5fy7WwDrOBduxT61SB+2RoWzKJPQvHlirySgAFsDgnzfemkh5JQzoCf
rwwDWE4HFzvoID2mJrAsVorr+DEVr1ZoQUcXMuNC+9Hwc4KlK2sChqlNzk82
9+KE5srZbUvG4fcNjrszu7oxwXwTo8ddAydMDQmRTWK8nI0ddNcxYGft25et
FWEQr7SU5zUK7Wsqm9/Aa2Rvvn1gNFgNEWXpjtN3NeOHsDMnjYJGgLuyvlHf
+QwtZojPxX4/DBlGq45tjqzGWWYj/x6M+AjWp2+aWdLP4pqbPoHh4SrgS40v
z04ph+o+Kn7eCyUEz5n5aHC8BkoWkuv99Qo4v/y8Z16RAL6r6lBt7RqEBVYX
/eTNLfB4Ioq/QTgAEu+j7Zn72uDX2PUlT5tkkNxA17q5vgXOwtHs9zIp1Mvi
2F/4dwKvIOh9Wnc/BEfZJpbPl4A4LDWQr+6FIwJjhxx5L9B+1P816iKBZcta
GYGqfqi4GtucuKgTDJ7ttD0iKUzPje5nRb4F1z9WFdr2yeDi84vvBevaQNXN
7FsrHQDvgrgMs5QWaGkIWXlfMAitqlovjyEBzNG9mV0rVMD1JSGVi4pqILHj
jMS2Sgnc3SYLHOquQEXAfkHaRhUcl1vYpNoW4cvQxm3MgI9wzyVeEX+/Co/d
eTiW7TkM43uqqxdIn2LcPVEYy2cE7E5cvcQxb0bxjEJ+hrsatlu7PVZ2tKK5
0Ew9jTkKvm7ftM47J8LMtc8Mb1hjoBqapYu8Jsa0yc9nhttoQDTqYROS2o28
xFMi68Xj4P2KdsPDrxe561sKrJwmpvbPWa3m9CMt5ZbPFFKwkWzJyXWWYp3v
oycPGTrIzN+fsZctw8m9se5baHrQdtUl37YZQOOZbeedJ/VgQruyOlIrR/eN
B55xjAyQzJWePGukQG337QH6sAHUNdGvnaVD6JvcxA0aM0CemGtfqhjCQt27
NTlaAzA0f6eajg6hHcM6X20y9Qs3dwv5Z0r0j8xntVsSOM23CKtYosTi1/FJ
XDaBpeUvRXZ7lLi8caHC9AiBmIJ1YvqwEg9HfF3sc5SA6ubBpTlaJT6VRnim
ZxHIfnHrsNqEwvBphQXyfALXZzCs2i0pzPDWuTRdIDB2fCyay6aw6fE/e3Nq
CXDT7naZHqHQgjNCf1JPwLFY5pyeRWFMB61OLSDw6L5tpjyfQkqzgRYnJCCh
frFpukDhfHYV30dCwCVp19acWgq3C15tSe8nUJ9XdkctoPBG2AdDpYxA6LW3
kzuFFHoecAi2pwgclvpe8pFQmGvspYkaITB3WqayUkZhKze6jKshwLN/4GVP
UciwS/Nv0k15xHvwNFdD4c5P3mr85LH/AH2ko8c=
        "]]}}, {
      InsetBox[
      "\"Constant sum surface\"", {0.6, 0.5}, {-1, 0}, BaseStyle -> {
         RGBColor[1, 0, 0]}], 
      InsetBox["\"Spectrum\"", 
       NCache[{
         Rational[3, 2], 
         Rational[11, 4]}, {1.5, 2.75}], {-1, 0}, BaseStyle -> {
         RGBColor[0, 0, 
          Rational[2, 3]]}]}, {{}, {}, {
       RGBColor[0, 0, 
        NCache[
         Rational[2, 3], 0.6666666666666666]], 
       LineBox[CompressedData["
1:eJw9xX1MFGQcB/Dj9XEsMze6lQrzBYhwDldpUpPvT206LcJ0AoKhvIpEQKx8
gTDFzsruGC+1RSTIH0wZTCdOmJooqXCNxDkoxuxATlDvUDnujnsEgqv2e3Z/
fPZZkpq3LcNbo9HE/Of/n7+fe3Jr3p5oPj/6ePpr4XfCosF/iNvPhrMNnpNh
u7BBn+M5FyVax6Jdng+jq3PLyHbPpcg7tf/3WM81aNfrr8R4Pgs//wJhyT6n
vobNX6XoLsa1qjvReijDVH+3Td2N/sRPIgsO3FD3YP4mQ2Y7dar78FJvRvPb
SV3qe1i2OKdBl3pHPYg1pk+71lXcVQ+hferIB73VPeoHyLpmNLaV/KkeQVXa
6QUv7+lTP8KKhCHXbEa/2oIBR2w3bb6nHoV98NWV2h0m9VOUNRbujY8fVI8h
bN6cmIPV99U2tOQfaSytHVKPoze0UnxUYVbbEXKsJ/zjqgdqB6K2Dr5VWz2s
dsKUr4s26EfUE2iO2jn3VvlDtQvauM7+M7pHagmYNeW/ff5Y/RxV2qy5YQct
6kmU1Oz7ZlW2VT2Fk90/dZTmj6qnUZxbaQsqeKL+B6Mp4a/sTH2qnsH3M1bf
gcxn6llcfrJp7MXEMbUbf4WuMb8TYlNrKOv1tMjKeht4DbXHJRWtCx4H70Vv
JlgbAuvGwXtRzrGNfWsX2sF707eZc6a8Ku3gvelqUIrbGugA70OXZo/7RJQ6
wPtQ94UNVsN8J3hfurU4s0Nf4QTvS1+37qgbCpgA70e7lv6dnGSYAO9H0y2R
C5cLF3h/+tLH8sePh13g/UkbEpUSqpHgBR3IjXMGHJLgBS1anW4MK5LgBV2f
+eyX9cUSvKAAg+G9wqMSvKCaxps/WL6T4AV1PH5jlfFnCV5QYNq8/bpfJXhB
lyKCttS1SfCCku0RwVevS/CCzhzd2OG8KcELevdUsTb9tgQvKNU02rJ+QIIX
JOonTyTfl+AFNeWI3YVmCV6Qa3qpaH4owQs6sSAxfsmYBC8o0rx3+dpxCV5Q
b8MX7gSHBC8oOKr8dJmU4AXd0NQWNU1K8IKyjE2xxmkJXtALZZeXDc9I8ILO
xxul2y3BC/oXbzRR4Q==
        "]]}}, 
     GraphicsComplexBox[{{1.5, 3.}, {1.5, 3.}, {0.3333333333333333, 
      0.6666666666666666}, {0.3333333333333333, 0.6666666666666666}, {1.5, 
      3.}, {1.5, 3.}, {0.3333333333333333, 0.6666666666666666}, {
      0.3333333333333333, 0.6666666666666666}}, {{
        RGBColor[0, 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        InsetBox[
         StyleBox[
         "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> Medium], 
         5], 
        InsetBox[
         StyleBox[
         "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> Medium], 
         6]}, {
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        InsetBox[
         StyleBox[
         "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> Medium], 
         7], 
        InsetBox[
         StyleBox[
         "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> Medium], 
         8]}, {}}]}, AspectRatio -> Automatic, Axes -> True, 
    AxesOrigin -> {0, 0}, ImageSize -> {300}, PlotRange -> All, 
    PlotRangeClipping -> False, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],"\"Figure 1: Sum Normalization in Two Dimensions\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547145309986032*^9, 3.5471453180521*^9}, 
   3.547145511683803*^9, 3.547149238662257*^9, 3.547305277521377*^9, {
   3.54730531496458*^9, 3.547305357110805*^9}, 3.547305486309402*^9}]
}, {6}]],

Cell["\<\
The point at which the line through the origin intersects with the surface of \
points whose sum equals the target sum of the sum-normalization is the \
normalized point. Figures 1 and 2 show sum-normalization in two and three \
dimensions with a target sum of 1.\
\>", "Text",
 CellChangeTimes->{{3.547145562244855*^9, 3.547145593306345*^9}, {
  3.5471456864467897`*^9, 3.5471457210290194`*^9}, {3.547149581268351*^9, 
  3.547149600562848*^9}, {3.547149683045044*^9, 3.5471496867804728`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumEq1ThreeD", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", "Red", ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.547305653534075*^9, 3.547305800606991*^9}, {
  3.547305830727653*^9, 3.547305837778078*^9}, {3.547305898689085*^9, 
  3.547305964609899*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yEq2XThreeD", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", "Blue", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "2"}], ",", "0", ",", "3"}], "}"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "2"}], ",", "0", ",", "3"}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Origin\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.2"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "3"}], ",", "0", ",", 
         RowBox[{"2", "/", "3"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.5471495704037113`*^9, {3.54730596745403*^9, 3.5473060663645973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"secondDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"sumEq1ThreeD", ",", "yEq2XThreeD"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547149570403741*^9}],

Cell[BoxData[
 RowBox[{"secondDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "secondDiagram", ",", 
    "\"\<Figure 2: Sum Normalization in Three Dimensions\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547148102046866*^9, 3.547148119923295*^9}, {
   3.547148385478323*^9, 3.5471484105255127`*^9}, {3.547149333549288*^9, 
   3.547149402974711*^9}, 3.547149570403777*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[1, 0, 0], 
      Opacity[0.85], 
      Polygon3DBox[{{-1, -1, 3}, {1, -1, 1}, {1, 1, -1}, {-1, 1, 1}}]}, {
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      Line3DBox[
       NCache[{{0, 0, 0}, {
          Rational[3, 2], 0, 3}}, {{0, 0, 0}, {1.5, 0, 3}}]], {
       PointSize[Large], 
       Point3DBox[
        NCache[{
          Rational[3, 2], 0, 3}, {1.5, 0, 3}]], 
       Text3DBox["\"Origin\"", {0, 0, 0}, {-1.2, 0}], {
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        Point3DBox[
         NCache[{
           Rational[1, 3], 0, 
           Rational[2, 3]}, {0.3333333333333333, 0, 0.6666666666666666}]]}}}},
     Axes -> True, ImageSize -> {300.2629681393381, 432.}, 
    ViewPoint -> {2.8449534536648784`, -1.810962179339618, 
     0.2768678953612902}, 
    ViewVertical -> {0.7011121767154426, -0.5713974341174561, 
     0.8522683193990057}],
   "\"Figure 2: Sum Normalization in Three Dimensions\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547149407009749*^9, 3.547149570403864*^9, {3.547305818619281*^9, 
   3.547305841858737*^9}, 3.5473060692827873`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probabilistic Quotient Normalization", "Section",
 CellChangeTimes->{{3.547150113963293*^9, 3.547150123581194*^9}}],

Cell["\<\
Probabilistic Quotient Normalization (PQN) (Dieterle 2006) is a method that \
is more resistant to large fluctuations in parts of the spectrum due to \
factors other than dilution (such as treatments). Unlike sum-normalization, \
which normalizes each spectrum independently, PQN is designed to normalize \
several related spectra simultaneously, using their commonality to improve \
its estimates.\
\>", "Text",
 CellChangeTimes->{{3.547151802331935*^9, 3.547151867460561*^9}, {
  3.547151898339778*^9, 3.5471519206995068`*^9}, {3.547152260891184*^9, 
  3.547152261621705*^9}}],

Cell["\<\
PQN starts with sum-normalization. Next, the spectra are binned to take care \
of small peak-shifts. Then a reference spectrum is created. The original \
paper mentions several methods of creating reference spectra. However, for \
simplicity, we will choose the method that takes the median spectrum of all \
the spectra being analyzed. Then, for each spectrum to be normalized, the \
reference spectrum is divided by it and the median of the quotients is \
selected as the normalization factor. Finally the spectra are multiplied by \
their respective normalization factors.\
\>", "Text",
 CellChangeTimes->{{3.547151910238988*^9, 3.547152058749381*^9}, {
   3.547152106312064*^9, 3.547152258965447*^9}, 3.547152308258853*^9, {
   3.5471528738397007`*^9, 3.5471529206481743`*^9}, {3.5471529893927917`*^9, 
   3.547153010479535*^9}, {3.547153047624489*^9, 3.5471531343946333`*^9}}],

Cell["\<\
For the following discussion, we will assume that the initial spectra have no \
negative values. Negative values result from noise or special acquisition \
methods like dephasing the water signal and should be removed during \
preprocessing. Though PQN is well-defined with negative values, their \
inclusion unnecessarily complicates the explanation.\
\>", "Text",
 CellChangeTimes->{{3.547153163841505*^9, 3.547153301245123*^9}, {
   3.547153356493964*^9, 3.547153405823414*^9}, 3.547296335988079*^9}],

Cell[CellGroupData[{

Cell["2D PQN (the canonical way)", "Subsection",
 CellChangeTimes->{{3.547153710904858*^9, 3.5471537155820103`*^9}, {
   3.54729612429014*^9, 3.547296132204031*^9}, 3.547296338247633*^9}],

Cell[CellGroupData[{

Cell["Sum Normalize", "Subsubsection",
 CellChangeTimes->{{3.547221736512328*^9, 3.547221739656698*^9}}],

Cell["\<\
The first step of PQN we've seen before, we sum-normalize. In the diagrams, I \
sum-normalize to 1, since it is easy, but everything works out the same, just \
scaled a bit differently if you sum-normalize to a different constant.\
\>", "Text",
 CellChangeTimes->{{3.5471614958910217`*^9, 3.547161555374159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"orig2D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2.172454345958343`", ",", "1.7744919345405104`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.675301724350803`", ",", "1.359406145521423`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.87830990460933`", ",", "1.4709889319173473`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.8813454193984884`", ",", "1.073276896492814`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.3606473361385762`", ",", "1.7882842580601983`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.26005835257858`", ",", "1.7655977040112563`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.398151988227432`", ",", "2.097238014713233`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.0861624358478528`", ",", "0.9274842729247682`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.255768229218814`", ",", "1.8706253682049265`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.6917625635090703`", ",", "1.2898265639379862`"}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547159479445242*^9, 3.5471594971325607`*^9}, {
   3.547159608984823*^9, 3.547159612130081*^9}, 3.547160204004696*^9, 
   3.5471609689527607`*^9, 3.547161262639394*^9, {3.54729856994198*^9, 
   3.547298571324485*^9}, 3.5472990518051023`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNorm2D", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", "orig2D"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547160301710615*^9, 3.5471603283489027`*^9}, 
   3.547161262642583*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thirdDiagram", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"Darker", "[", "Blue", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "orig2D"}], "]"}], 
       ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          ",", "orig2D"}], "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5471598662264*^9, 3.547160104879672*^9}, {
   3.547160335177816*^9, 3.547160346330387*^9}, {3.547161024190194*^9, 
   3.5471610625535383`*^9}, {3.547161144522626*^9, 3.547161153551978*^9}, 
   3.547161262642654*^9}],

Cell[BoxData[
 RowBox[{"thirdDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "thirdDiagram", ",", 
    "\"\<Figure 3: First step of 2D PQN: Sum-Normalize\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161155778019*^9, 3.547161226824782*^9}, 
   3.547161262642714*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{2.172454345958343, 1.7744919345405104`}], 
      PointBox[{2.675301724350803, 1.359406145521423}], 
      PointBox[{2.87830990460933, 1.4709889319173473`}], 
      PointBox[{2.8813454193984884`, 1.073276896492814}], 
      PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
      PointBox[{2.26005835257858, 1.7655977040112563`}], 
      PointBox[{1.398151988227432, 2.097238014713233}], 
      PointBox[{3.0861624358478528`, 0.9274842729247682}], 
      PointBox[{2.255768229218814, 1.8706253682049265`}], 
      PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
      LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
      LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
      LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
      LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
      LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
      LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
      LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
      LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
      LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
      LineBox[{{0, 0}, {2.6917625635090703`, 1.2898265639379862`}}]}, {
      RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}}, Axes -> True],
   "\"Figure 3: First step of 2D PQN: Sum-Normalize\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161234422071*^9, 3.547161262642786*^9}, 
   3.547298576671081*^9, 3.547299054955244*^9}]
}, {5}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reference Spectrum", "Subsubsection",
 CellChangeTimes->{{3.5472217577756367`*^9, 3.547221761264093*^9}}],

Cell["\<\
Next, you generate a reference spectrum by taking the median of each variable.\
\>", "Text",
 CellChangeTimes->{{3.547161561218967*^9, 3.5471615916008368`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refPt2D", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Median", ",", 
    RowBox[{"Transpose", "[", "sumNorm2D", "]"}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547161686979788*^9, 3.547161745407681*^9}, 
   3.5471623243637466`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6153821371488181`", ",", "0.38461786285118194`"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161731438332*^9, 3.547161746942959*^9}, 
   3.547162324364176*^9, 3.547223110129066*^9, 3.547227411129094*^9, 
   3.547231697124165*^9, 3.5472914091316833`*^9, {3.547291776552536*^9, 
   3.547291805599752*^9}, 3.547292195681592*^9, 3.5472922762440023`*^9, 
   3.547298596172872*^9, 3.5472990620470123`*^9, 3.547305156248396*^9, 
   3.54737647859179*^9, 3.5473765994427156`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourthDiagram", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "Green", ",", 
       
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", "refPt2D", "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<Reference spectrum\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.025", ",", "0"}], "}"}], "+", "refPt2D"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547161614449*^9, 3.5471616561965446`*^9}, {
   3.547161755130888*^9, 3.547161789570849*^9}, {3.5471620647540607`*^9, 
   3.547162251470367*^9}, 3.547162324364464*^9}],

Cell[BoxData[
 RowBox[{"fourthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fourthDiagram", ",", 
    "\"\<Figure 4: Second step of 2D PQN: Create reference spectrum\>\"", ",",
     "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547162273031047*^9, 3.547162324364779*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}, {
      RGBColor[0, 1, 0], 
      PointSize[Large], 
      PointBox[{0.6153821371488181, 0.38461786285118194`}], 
      InsetBox[
      "\"Reference spectrum\"", {0.6403821371488181, 
       0.38461786285118194`}, {-1, 0}]}}, Axes -> True],
   "\"Figure 4: Second step of 2D PQN: Create reference spectrum\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471623055433273`*^9, 3.547162324365074*^9}, 
   3.54729859818176*^9, 3.54729906369809*^9}]
}, {5}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reciprocal Quotient Spectra", "Subsubsection",
 CellChangeTimes->{{3.547221774607359*^9, 3.547221783056197*^9}}],

Cell[TextData[{
 "In the next step, I make a change to the procedure that makes it easier to \
understand. Rather than dividing the reference spectrum by each of the \
individual spectra to get the quotient spectra, I divide each spectrum by the \
reference spectrum. This leaves me with quotient spectra that have the \
reciprocals of the proper coordinates. Because all of the individual \
coordinates are positive, this just reverses their ranks. The median element \
will still be the same. So, I can just divide by the median rather than \
multiplying to get the same final normalization. In the case of an even \
number of points, you can't get the reciprocal of the average by taking the \
average of the reciprocals. Thus, if the center two reciprocal quotients are ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the reciprocal quotient median is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    FractionBox[
     RowBox[{"2", "a", " ", "b"}], 
     RowBox[{"a", "+", "b"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5471639391715307`*^9, 3.547164040357667*^9}, {
  3.547164080635233*^9, 3.547164236886691*^9}, {3.547164676990178*^9, 
  3.5471646964190683`*^9}, {3.5473061384359293`*^9, 3.5473061472666807`*^9}, {
  3.5473063772566338`*^9, 3.547306470025505*^9}, {3.5473066700767527`*^9, 
  3.547306713955553*^9}, {3.547306764930867*^9, 3.547306768743227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"standardQuotientTransformPlot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", "t"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "u"}], "}"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"u", "/", "1.1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.025", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547164733906971*^9, 3.5471647595590563`*^9}, {
   3.547164830970419*^9, 3.547164931665399*^9}, {3.547164968136445*^9, 
   3.547165011121571*^9}, {3.547165162027791*^9, 3.547165257955388*^9}, {
   3.54716529804185*^9, 3.5471653016882668`*^9}, {3.547165332686492*^9, 
   3.547165336708681*^9}, 3.547165377464015*^9, {3.547165411249199*^9, 
   3.547165431912196*^9}, 3.547165501607873*^9, 3.547168240044064*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardQuotientArrows", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "Small", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "#", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "-", "#"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", "#"}], ",", 
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "#"}], ")"}]}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{".9", 
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "#"}], "]"}]}]}], 
               "}"}]}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.15"}], ",", 
            RowBox[{"-", "0.06"}], ",", "0.06", ",", "0.15"}], "}"}]}]}], 
        "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.5471661047819223`*^9, 3.547166187435761*^9}, {
   3.547166227353311*^9, 3.547166284736493*^9}, {3.5471663217221737`*^9, 
   3.5471664171426573`*^9}, 3.5471664761436243`*^9, {3.547166545333894*^9, 
   3.547166572827833*^9}, {3.5471666272346687`*^9, 3.547166821096075*^9}, {
   3.547166858818624*^9, 3.5471668888344603`*^9}, 3.547168240045233*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fifthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "standardQuotientTransformPlot", ",", "standardQuotientArrows", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Sum-normalized spectra\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Quotient spectra using standard method\>\"", ",", 
           RowBox[{"{", 
            RowBox[{".9", ",", "2.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Colors give correspondence (note reversal)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.9", ",", "2.36"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], " ", "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547165506400021*^9, 3.5471659055469217`*^9}, {
   3.5471664801811*^9, 3.547166485239188*^9}, {3.5471669557029667`*^9, 
   3.547166967367653*^9}, 3.547168240051927*^9, {3.547299337017605*^9, 
   3.5472993576971493`*^9}}],

Cell[BoxData[
 RowBox[{"fifthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fifthDiagram", ",", 
    "\"\<Figure 5: Standard method of creating quotient spectra\>\"", ",", 
    "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547166970768332*^9, 3.5471670255156927`*^9}, 
   3.547168240056696*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kx83eJuE/wcQdN6j
      "], {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> Automatic]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[CompressedData["
1:eJwt1WW0lVUUBdAHCJIS0t3d3V2iotIgDUp3tyDdJR0qmHQjjXQoSjcKKN3d
zjOGP+bYe63zXQbv3XPvS9e8U42OkSIiIjJGjoiobr4QJvGZXNCsZ942O5j/
On/PvCC3MYeYTc3HZifzR+fFzENyK7Or2dC8b2akhv2q2c4cYzY3n5pfeF0G
+y/heRrY75rv8KH9kjmcPzxXQT5l709j+0MzN7XtN8zxfOS5l+ZkCnFFrub8
L/uX/CQXl/+wdyMTNeVr5lgG///72GBvRFyqy5fNEfzpvKJ82j6APHyse2VO
oTBX5Z8p4bk/5e5kZoguk25j+P8Tj8O6Sroz9oHk5RPda3MqRbgmL6Kk5w7L
PcgSfh5dZt0mexPic0RXgzf2ryjKdXkxpTx7RO5JVobqsug2h/eSBBzV1SRC
P00uxg1xCcPIqt+ia8a7HNPVIpJ+ulycm/JShpNNvzW83yTkuK52+Of1M+QS
3JKXMYLs+m26FiTihK4OUfQz5ZLclpczkhz67bqWJOakri5v6WfJpbgjr2AU
OfW/hjtOEk7p6hFVP1suzV15JaOpTzRnc/RluCevYgwNeNvZXH1Z7surGcun
RHc2T1+OB/IaxtGQGM7m68vzUF7LeBoR09nX+go8ktcxgcbEcvaNviKP5fVM
pAmxnX2rr8QT+Rcm0ZQ4zhboK/NU3sBkmvGOs4X6KjyTNzKF5sR19p2+Ks/l
TUylBS35jM9pRWva0JZ2tCee13/vte/xQt7MV3QgvrMf9NV4KW9hGh1JEL5T
9O/zSt7KdDrxrrOf9B/wWt7GDDqT0NnP4buDN/J2ZtKFRM4Whc9zpHBh3QNj
Fl1J7Gxx+P4gEjt0s+lGEmdLwuecyOzUzSGXfof8OUk5retOUv3S8DkmCrt0
c8mt3ym3IhlndD1Ipl8m1+AtduvmkUe/S25Ncs7qepJcvzx8bxGVPbr55NXv
ltuQgnO6XqTQr5BrEY29uq/Jp98jtyUl53W9SalfKdfmbfbpviG/fq/cjlRc
0PUhlX6VXIfo7Nd9SwH9Prk9qflL15fU+tVyXWJwQFdad9Tei2ws0BXU7bd3
IA1/6/qRRr9GrkdMDurK6I7Ze5OdhbpCugP28EcuLRd1/UmrXyvXJxa/6crq
jtv7kIPvdIV1B+2dSBfuhvyPOZJLzivLZ+2DyMcAXTrdOnsDYof7K/9tDuV3
5+XkE/a+5OR7XRHdb/bOpA/3LPy9NUdx2XkV+Zz9C/KH37N805zAQOfp5fX2
T8PPZL9jxgmfD/tFcxiHPFdePmnvRyP7AzNXuBf26+Y4WtifmT94vqj993C/
zS7h3zfvmRnC3bZfCXfHHG02M5+EnyH8jry2qnk+3F1zsNnEfBTeC7NAeO/N
W+FumBPNluZzs4s5yOv/A4h6EDs=
         "], VertexColors -> Automatic]}}, 
      VertexColors -> {
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168], 
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090753084431745], 
        Hue[0.008922109451530515], 
        Hue[0.02751680794121024], 
        Hue[0.04622099992694738], 
        Hue[0.06410704162395528], 
        Hue[0.08256639870941393], 
        Hue[0.10113524929092998`], 
        Hue[0.11981359336850345`], 
        Hue[0.13906525283452767`], 
        Hue[0.1574987620118227], 
        Hue[0.1760417646851751], 
        Hue[0.19469426085458494`], 
        Hue[0.21252860673526558`], 
        Hue[0.23093626800439693`], 
        Hue[0.24945342276958568`], 
        Hue[0.26808007103083187`], 
        Hue[0.2872800346805288], 
        Hue[0.3056618480414965], 
        Hue[0.32415315489852164`], 
        Hue[0.3427539552516042], 
        Hue[0.3614642491007441], 
        Hue[0.3807478583383348], 
        Hue[0.5661552581179933], 
        Hue[0.5847880082426421], 
        Hue[0.6026026080785619], 
        Hue[0.6209905233029324], 
        Hue[0.6394879320233602], 
        Hue[0.6580948342398455], 
        Hue[0.6768112299523882], 
        Hue[0.6947094753762018], 
        Hue[0.713181036188466], 
        Hue[0.7317620904967876], 
        Hue[0.7504526383011668], 
        Hue[0.7697165014939965], 
        Hue[0.7881622143980972], 
        Hue[0.8067174207982551], 
        Hue[0.8253821206944706], 
        Hue[0.8432286703019568], 
        Hue[0.8616485352978938], 
        Hue[0.8801778937898881], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.02268051342213563], 
        Hue[0.04170519845315341], 
        Hue[0.059679822249245285`], 
        Hue[0.07776393954139459], 
        Hue[0.09665328316819129], 
        Hue[0.11495638745245541`], 
        Hue[0.1342966290175636], 
        Hue[0.15305063124013926`], 
        Hue[0.17121839412018233`], 
        Hue[0.19019138333487282`], 
        Hue[0.2081143113146374], 
        Hue[0.22614673279045938`], 
        Hue[0.2449843806009288], 
        Hue[0.26323578906886563`], 
        Hue[0.28252433481764655`], 
        Hue[0.3012266412238949], 
        Hue[0.31934270828761063`], 
        Hue[0.33826400168597387`], 
        Hue[0.3565990557418044], 
        Hue[0.3759712470784791], 
        Hue[0.5613368240641906], 
        Hue[0.5802900672341202], 
        Hue[0.5981932491691239], 
        Hue[0.6162059246001851], 
        Hue[0.6350238263658935], 
        Hue[0.6532554887890696], 
        Hue[0.6722923775468929], 
        Hue[0.6902792050697903], 
        Hue[0.7083755260887452], 
        Hue[0.7272770734423476], 
        Hue[0.7455923814534173], 
        Hue[0.764944826745331], 
        Hue[0.7837110326947122], 
        Hue[0.8018909993015609], 
        Hue[0.8208761922430571], 
        Hue[0.8388113239496272], 
        Hue[0.8568559491522548], 
        Hue[0.8757058006895299], 
        Hue[0.8941142872656807], 
        Hue[0.013383164177295771`], 
        Hue[0.03235310246028484], 
        Hue[0.05073680140074134], 
        Hue[0.06853426099866528], 
        Hue[0.08736885787743326], 
        Hue[0.10561721541366868`], 
        Hue[0.1246707992845515], 
        Hue[0.14383387665149172`], 
        Hue[0.1619468927835061], 
        Hue[0.18086513525016787`], 
        Hue[0.6991397456826131], 
        Hue[0.7179865462881867], 
        Hue[0.7362471075512278], 
        Hue[0.7553128951489163], 
        Hue[0.7744881762426619], 
        Hue[0.792613396101482], 
        Hue[0.8115438422949494], 
        Hue[0.8298880491458841], 
        Hue[0.8476460166542864], 
        Hue[0.8664411214435327], 
        Hue[0.8846499868902463], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.020262366162598335`], 
        Hue[0.03944729771625642], 
        Hue[0.057466212561890294`], 
        Hue[0.07536270995738494], 
        Hue[0.09441230010682193], 
        Hue[0.1125277844944314], 
        Hue[0.13191231710908158`], 
        Hue[0.15082656585429752`], 
        Hue[0.16880670883768595`], 
        Hue[0.18793994457501673`], 
        Hue[0.2059071636043233], 
        Hue[0.22375196518349064`], 
        Hue[0.24274985951660033`], 
        Hue[0.2608136480878825], 
        Hue[0.28014648488620547`], 
        Hue[0.2990090378150941], 
        Hue[0.31693748498215524`], 
        Hue[0.3360190249031587], 
        Hue[0.3541664590623346], 
        Hue[0.3735829414485513], 
        Hue[0.5589276070372893], 
        Hue[0.5780410967298593], 
        Hue[0.595988569714405], 
        Hue[0.6138136252488114], 
        Hue[0.6327917735371602], 
        Hue[0.6508358160636816], 
        Hue[0.6700329513441452], 
        Hue[0.6880640699165846], 
        Hue[0.705972771038885], 
        Hue[0.7250345649151275], 
        Hue[0.7431622530295426], 
        Hue[0.7625589893709983], 
        Hue[0.7814854418430197], 
        Hue[0.7994777885532137], 
        Hue[0.8186232280173502], 
        Hue[0.8366026507734625], 
        Hue[0.8544596560794353], 
        Hue[0.8734697541393507], 
        Hue[0.8916181836281426], 
        Hue[0.011152636814413143`], 
        Hue[0.02993495520074754], 
        Hue[0.04847890066384435], 
        Hue[0.06632065131131028], 
        Hue[0.0849676282934236], 
        Hue[0.10337623235229934`], 
        Hue[0.12224219632652747`], 
        Hue[0.1414495647430097], 
        Hue[0.15972282739766439`], 
        Hue[0.17845344996767148`], 
        Hue[0.6969246105294074], 
        Hue[0.7155837912383263], 
        Hue[0.7340045990240077], 
        Hue[0.7528827667250415], 
        Hue[0.7721023388683292], 
        Hue[0.7903878052497895], 
        Hue[0.8091306315466021], 
        Hue[0.8276350849201775], 
        Hue[0.8454373434781216], 
        Hue[0.8640448283707133], 
        Hue[0.8824139403400673], 
        Hue[0.9016025981782949], 
        Hue[0.0066915820886478865`], 
        Hue[0.02509866068167294], 
        Hue[0.0439630991900504], 
        Hue[0.06189343193660028], 
        Hue[0.08016516912540425], 
        Hue[0.823129156468764], 
        Hue[0.841019997125792], 
        Hue[0.8592522422250743], 
        Hue[0.877941847239709], 
        Hue[0.8966103909032188], 
        Hue[0.015613691540178401`], 
        Hue[0.03477124971982214], 
        Hue[0.05299470213763833], 
        Hue[0.8688374145163521], 
        Hue[0.8868860334404255], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.019053292532829683`], 
        Hue[0.03831834734780793], 
        Hue[0.05635940771821281], 
        Hue[0.07416209516538008], 
        Hue[0.09329180857613727], 
        Hue[0.11131348301541939`], 
        Hue[0.13072016115484056`], 
        Hue[0.14971453316137667`], 
        Hue[0.16760086619643774`], 
        Hue[0.18681422519508867`], 
        Hue[0.20480358974916626`], 
        Hue[0.22255458138000622`], 
        Hue[0.24163259897443617`], 
        Hue[0.259602577597391], 
        Hue[0.2789575599204848], 
        Hue[0.29790023611069366`], 
        Hue[0.3157348733294275], 
        Hue[0.33489653651175116`], 
        Hue[0.3529501607225997], 
        Hue[0.3723887886335874], 
        Hue[0.5577229985238387], 
        Hue[0.5769166114777288], 
        Hue[0.5948862299870454], 
        Hue[0.6126174755731246], 
        Hue[0.6316757471227935], 
        Hue[0.6496259797009876], 
        Hue[0.6689032382427713], 
        Hue[0.6869565023399818], 
        Hue[0.7047713935139547], 
        Hue[0.7239133106515175], 
        Hue[0.7419471888176051], 
        Hue[0.7613660706838319], 
        Hue[0.7803726464171736], 
        Hue[0.7982711831790403], 
        Hue[0.817496745904497], 
        Hue[0.8354983141853802], 
        Hue[0.8532615095430257], 
        Hue[0.8723517308642611], 
        Hue[0.8903701318093737], 
        Hue[0.01003737313297183], 
        Hue[0.028725881570978894`], 
        Hue[0.04734995029539586], 
        Hue[0.06521384646763277], 
        Hue[0.08376701350141877], 
        Hue[0.10225574082161466`], 
        Hue[0.12102789484751547`], 
        Hue[0.1402574087887687], 
        Hue[0.15861079470474357`], 
        Hue[0.17724760732642328`], 
        Hue[0.6958170429528046], 
        Hue[0.7143824137133962], 
        Hue[0.7328833447603977], 
        Hue[0.7516677025131041], 
        Hue[0.7709094201811629], 
        Hue[0.7892750098239434], 
        Hue[0.8079240261724286], 
        Hue[0.826508602807324], 
        Hue[0.8443330068900392], 
        Hue[0.8628466818343036], 
        Hue[0.8812959170649777], 
        Hue[0.9003545463595258], 
        Hue[0.0055763184072065725`], 
        Hue[0.023889587051904283`], 
        Hue[0.04283414882160191], 
        Hue[0.0607866270929228], 
        Hue[0.07896455433339943], 
        Hue[0.8220026743559105], 
        Hue[0.8399156605377096], 
        Hue[0.8580540956886646], 
        Hue[0.8768238239646196], 
        Hue[0.8953623390844497], 
        Hue[0.014498427858737086`], 
        Hue[0.03356217609005349], 
        Hue[0.05186575176918984], 
        Hue[0.8676392679799424], 
        Hue[0.8857680101653359], 
        Hue[0.905346753634602], 
        Hue[0.0033457910443239433`], 
        Hue[0.021471439792366983`], 
        Hue[0.8745877774144403], 
        Hue[0.8928662354469117], 
        Hue[0.012267900495854456`], 
        Hue[0.031144028830516195`], 
        Hue[0.865242974907123], 
        Hue[0.8835319636151567], 
        Hue[0.902850649997064], 
        Hue[0.007806845770089202], 
        Hue[0.026307734311441587`], 
        Hue[0.8978584427219878], 
        Hue[0.016728955221619716`], 
        Hue[0.8880040567155151], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.018448755717945357`], 
        Hue[0.03775387216358369], 
        Hue[0.055806005296374056`], 
        Hue[0.07356178776937766], 
        Hue[0.09273156281079495], 
        Hue[0.1107063322759134], 
        Hue[0.13012408317772006`], 
        Hue[0.14915851681491624`], 
        Hue[0.16699794487581365`], 
        Hue[0.18625136550512464`], 
        Hue[0.20425180282158775`], 
        Hue[0.22195588947826406`], 
        Hue[0.241073968703354], 
        Hue[0.2589970423521452], 
        Hue[0.2783630974376246], 
        Hue[0.29734583525849345`], 
        Hue[0.3151335675030636], 
        Hue[0.3343352923160473], 
        Hue[0.35234201155273226`], 
        Hue[0.3717917122261054], 
        Hue[0.5571206942671133], 
        Hue[0.5763543688516635], 
        Hue[0.5943350601233657], 
        Hue[0.6120194007352812], 
        Hue[0.6311177339156102], 
        Hue[0.6490210615196406], 
        Hue[0.6683383816920845], 
        Hue[0.6864027185516804], 
        Hue[0.7041707047514897], 
        Hue[0.7233526835197126], 
        Hue[0.7413396567116365], 
        Hue[0.7607696113402487], 
        Hue[0.7798162487042506], 
        Hue[0.7976678804919536], 
        Hue[0.81693350484807], 
        Hue[0.834946145891339], 
        Hue[0.8526624362748207], 
        Hue[0.8717927192267163], 
        Hue[0.8897461058999891], 
        Hue[0.009479741292251173], 
        Hue[0.02812134475609456], 
        Hue[0.04678547511117162], 
        Hue[0.06466044404579403], 
        Hue[0.08316670610541635], 
        Hue[0.10169549505627232`], 
        Hue[0.12042074410800947`], 
        Hue[0.1396613308116482], 
        Hue[0.1580547783582831], 
        Hue[0.1766446860057992], 
        Hue[0.6952632591645032], 
        Hue[0.713781724950931], 
        Hue[0.7323227176285926], 
        Hue[0.7510601704071355], 
        Hue[0.7703129608375797], 
        Hue[0.7887186121110202], 
        Hue[0.8073207234853419], 
        Hue[0.8259453617508973], 
        Hue[0.843780838595998], 
        Hue[0.8622476085660987], 
        Hue[0.880736905427433], 
        Hue[0.8997305204501415], 
        Hue[0.005018686566485915], 
        Hue[0.023285050237019957`], 
        Hue[0.04226967363737765], 
        Hue[0.06023322467108404], 
        Hue[0.07836424693739702], 
        Hue[0.8214394332994838], 
        Hue[0.8393634922436684], 
        Hue[0.8574550224204597], 
        Hue[0.8762648123270746], 
        Hue[0.8947383131750654], 
        Hue[0.013940796018016429`], 
        Hue[0.03295763927516917], 
        Hue[0.05130127658496558], 
        Hue[0.8670401947117375], 
        Hue[0.8852089985277911], 
        Hue[0.9047227277252176], 
        Hue[0.0027881592036032854`], 
        Hue[0.020866902977482657`], 
        Hue[0.8740287657768955], 
        Hue[0.8922422095375272], 
        Hue[0.0117102686551338], 
        Hue[0.03053949201563187], 
        Hue[0.8646439016389181], 
        Hue[0.8829729519776119], 
        Hue[0.9022266240876795], 
        Hue[0.007249213929368543], 
        Hue[0.025703197496557258`], 
        Hue[0.8972344168126034], 
        Hue[0.016171323380899053`], 
        Hue[0.8874450450779704], 
        Hue[0.9072188313627556], 
        Hue[0.001672895522161972], 
        Hue[0.8909941577187581], 
        Hue[0.010595004973692486`], 
        Hue[0.9009785722689103], 
        Hue[0.006133950247927229], 
        Hue[0.8959863649938342], 
        Hue[0.015056059699457747`], 
        Hue[0.9059707795439865], 
        Hue[0.0039034228850446002`], 
        Hue[0.9034746759064485], 
        Hue[0.008364477610809858], 
        Hue[0.8984824686313723], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.018146487310503195`], 
        Hue[0.03747163457147156], 
        Hue[0.05552930408545469], 
        Hue[0.07326163407137645], 
        Hue[0.09245143992812377], 
        Hue[0.1104027569061604], 
        Hue[0.12982604418915977`], 
        Hue[0.14888050864168603`], 
        Hue[0.1666964842155016], 
        Hue[0.18596993566014267`], 
        Hue[0.20397590935779847`], 
        Hue[0.22165654352739297`], 
        Hue[0.24079465356781293`], 
        Hue[0.2586942747295224], 
        Hue[0.27806586619619444`], 
        Hue[0.2970686348323934], 
        Hue[0.31483291458988166`], 
        Hue[0.33405467021819546`], 
        Hue[0.3520379369677985], 
        Hue[0.3714931740223644], 
        Hue[0.5568195421387506], 
        Hue[0.5760732475386309], 
        Hue[0.5940594751915258], 
        Hue[0.6117203633163595], 
        Hue[0.6308387273120186], 
        Hue[0.6487186024289671], 
        Hue[0.6680559534167411], 
        Hue[0.6861258266575297], 
        Hue[0.7038703603702571], 
        Hue[0.7230723699538101], 
        Hue[0.7410358906586522], 
        Hue[0.7604713816684571], 
        Hue[0.779538049847789], 
        Hue[0.7973662291484102], 
        Hue[0.8166518843198568], 
        Hue[0.8346700617443183], 
        Hue[0.8523628996407183], 
        Hue[0.8715132134079439], 
        Hue[0.889434092945297], 
        Hue[0.009200925371890845], 
        Hue[0.0278190763486524], 
        Hue[0.04650323751905949], 
        Hue[0.06438374283487465], 
        Hue[0.08286655240741514], 
        Hue[0.10141537217360115`], 
        Hue[0.12011716873825648`], 
        Hue[0.13936329182308793`], 
        Hue[0.15777677018505287`], 
        Hue[0.17634322534548716`], 
        Hue[0.6949863672703525], 
        Hue[0.7134813805696986], 
        Hue[0.73204240406269], 
        Hue[0.7507564043541511], 
        Hue[0.7700147311657881], 
        Hue[0.7884404132545587], 
        Hue[0.8070190721417985], 
        Hue[0.8256637412226839], 
        Hue[0.8435047544489774], 
        Hue[0.8619480719319962], 
        Hue[0.8804573996086605], 
        Hue[0.8994185074954492], 
        Hue[0.004739870646125586], 
        Hue[0.022982781829577796`], 
        Hue[0.04198743604526554], 
        Hue[0.059956523460164654`], 
        Hue[0.07806409323939581], 
        Hue[0.8211578127712705], 
        Hue[0.8390874080966478], 
        Hue[0.8571554857863573], 
        Hue[0.8759853065083023], 
        Hue[0.894426300220373], 
        Hue[0.013661980097656101`], 
        Hue[0.03265537086772701], 
        Hue[0.05101903899285347], 
        Hue[0.8667406580776351], 
        Hue[0.8849294927090188], 
        Hue[0.9044107147705253], 
        Hue[0.002509343283242957], 
        Hue[0.020564634570040496`], 
        Hue[0.8737492599581231], 
        Hue[0.8919301965828349], 
        Hue[0.011431452734773473`], 
        Hue[0.0302372236081897], 
        Hue[0.8643443650048157], 
        Hue[0.8826934461588395], 
        Hue[0.9019146111329872], 
        Hue[0.006970398009008215], 
        Hue[0.0254009290891151], 
        Hue[0.896922403857911], 
        Hue[0.01589250746053873], 
        Hue[0.8871655392591979], 
        Hue[0.9069068184080633], 
        Hue[0.0013940796018016431`], 
        Hue[0.8906821447640658], 
        Hue[0.010316189053332158`], 
        Hue[0.9006665593142182], 
        Hue[0.005855134327566901], 
        Hue[0.895674352039142], 
        Hue[0.014777243779097417`], 
        Hue[0.9056587665892943], 
        Hue[0.0036246069646842715`], 
        Hue[0.9031626629517563], 
        Hue[0.008085661690449528], 
        Hue[0.8981704556766802], 
        Hue[0.9081548702268324], 
        Hue[0.000836447761080986], 
        Hue[0.9000425334048336], 
        Hue[0.005297502486846243], 
        Hue[0.9050347406799097], 
        Hue[0.0030669751239636145`], 
        Hue[0.9025386370423717], 
        Hue[0.0075280298497288735`], 
        Hue[0.9075308443174479], 
        Hue[0.0019517114425223006`], 
        Hue[0.9062827924986788], 
        Hue[0.004182238805404929], 
        Hue[0.9037866888611407], 
        Hue[0.9087788961362168]}], {
      Thickness[Small], {
       Hue[0.46538213714881804`], 
       ArrowBox[{{0.46538213714881804`, 0.534617862851182}, {
        1.3223157659616696`, 0.71942576104728}}, {0, 0.13500000000000004`}]}, {
       Hue[0.5553821371488181], 
       ArrowBox[{{0.5553821371488181, 0.4446178628511819}, {
        1.1080337230650301`, 0.8650526552954024}}, {
        0, 0.05399999999999995}]}, {
       Hue[0.675382137148818], 
       ArrowBox[{{0.675382137148818, 0.324617862851182}, {0.9111614052256475, 
        1.1848327121403865`}}, {0, 0.05399999999999995}]}, {
       Hue[0.7653821371488181], 
       ArrowBox[{{0.7653821371488181, 0.2346178628511819}, {0.804019465937922,
         1.6393375089907156`}}, {0, 0.13500000000000004`}]}}, {
      InsetBox["\"Sum-normalized spectra\"", {1, 0.2}, {-1, 0}], 
      InsetBox[
      "\"Quotient spectra using standard method\"", {0.9, 2.5}, {-1, 0}], 
      InsetBox[
      "\"Colors give correspondence (note reversal)\"", {0.9, 2.36}, {-1, 
       0}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{0, 3}, {0, 3}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 5: Standard method of creating quotient spectra\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.54716703508914*^9, 3.547168240063203*^9, 3.547298625085485*^9, 
   3.5472990757226887`*^9, {3.547299344836932*^9, 3.547299359459889*^9}}]
}, {5}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"linearQuotientTransformPlot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "/", 
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}], "/", 
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "u"}], "}"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"u", "/", "1.1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.025", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547164733906971*^9, 3.5471647595590563`*^9}, {
   3.547164830970419*^9, 3.547164931665399*^9}, {3.547164968136445*^9, 
   3.547165011121571*^9}, {3.547165162027791*^9, 3.547165257955388*^9}, {
   3.54716529804185*^9, 3.5471653016882668`*^9}, {3.547165332686492*^9, 
   3.547165336708681*^9}, 3.547165377464015*^9, {3.547165411249199*^9, 
   3.547165431912196*^9}, 3.547165501607873*^9, {3.547167655012796*^9, 
   3.547167686323903*^9}, 3.5471681200291777`*^9, 3.547168210626031*^9, {
   3.5472987358262873`*^9, 3.547298748471684*^9}, {3.547299106231627*^9, 
   3.547299107923362*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"linearQuotientArrows", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "Small", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "#", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "-", "#"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "/", 
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "#"}], ")"}], "/", 
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
              "0.1"}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".25"}], ",", 
            RowBox[{"-", "0.15"}], ",", 
            RowBox[{"-", "0.06"}], ",", "0.06", ",", "0.15", ",", "0.25"}], 
           "}"}]}]}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471661047819223`*^9, 3.547166187435761*^9}, {
   3.547166227353311*^9, 3.547166284736493*^9}, {3.5471663217221737`*^9, 
   3.5471664171426573`*^9}, 3.5471664761436243`*^9, {3.547166545333894*^9, 
   3.547166572827833*^9}, {3.5471666272346687`*^9, 3.547166821096075*^9}, {
   3.547166858818624*^9, 3.5471668888344603`*^9}, {3.54716771067766*^9, 
   3.5471677114266977`*^9}, {3.547167768530044*^9, 3.547167780388905*^9}, {
   3.547167872105948*^9, 3.547167914542306*^9}, 3.5471682106262693`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sixthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "linearQuotientTransformPlot", ",", "linearQuotientArrows", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Sum-normalized\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1.1", ",", "0.1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Reciprocal Quotient spectra\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2.29"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Colors give correspondence\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2.15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], " ", "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547165506400021*^9, 3.5471659055469217`*^9}, {
   3.5471664801811*^9, 3.547166485239188*^9}, {3.5471669557029667`*^9, 
   3.547166967367653*^9}, {3.5471678066025743`*^9, 3.547167848549383*^9}, {
   3.547167938251989*^9, 3.547168075882759*^9}, 3.547168140445486*^9, 
   3.547168210626327*^9, {3.547168692324882*^9, 3.547168721306837*^9}, {
   3.5472994011803427`*^9, 3.547299514655484*^9}}],

Cell[BoxData[
 RowBox[{"sixthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "sixthDiagram", ",", 
    "\"\<Figure 6: Easy-to-visualize method of creating reciprocal quotient \
spectra\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547166970768332*^9, 3.5471670255156927`*^9}, {
  3.547168147163466*^9, 3.5471682106263857`*^9}, {3.547168724991063*^9, 
  3.547168727242344*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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

      "], {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> Automatic]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84, 85,
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 149, 143, 
         138, 134, 131, 129, 150, 144, 139, 135, 132, 151, 145, 140, 136, 152,
          146, 141, 153, 147, 154, 127}, VertexColors -> Automatic]}}, 
      VertexColors -> {
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168], 
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168]}], {
      Thickness[Small], {
       Hue[0.36538213714881806`], 
       ArrowBox[{{0.36538213714881806`, 0.6346178628511819}, {
        0.593748363970561, 1.6499958118084888`}}, 0.1]}, {
       Hue[0.46538213714881804`], 
       ArrowBox[{{0.46538213714881804`, 0.534617862851182}, {
        0.7562490183823365, 1.3899974870850933`}}, 0.1]}, {
       Hue[0.5553821371488181], 
       ArrowBox[{{0.5553821371488181, 0.4446178628511819}, {
        0.9024996073529348, 1.155998994834037}}, 0.1]}, {
       Hue[0.675382137148818], 
       ArrowBox[{{0.675382137148818, 0.324617862851182}, {1.0975003926470652`,
         0.8440010051659628}}, 0.1]}, {
       Hue[0.7653821371488181], 
       ArrowBox[{{0.7653821371488181, 0.2346178628511819}, {
        1.2437509816176635`, 0.6100025129149067}}, 0.1]}, {
       Hue[0.8653821371488181], 
       ArrowBox[{{0.8653821371488181, 0.13461786285118194`}, {
        1.406251636029439, 0.3500041881915112}}, 0.1]}}, {
      InsetBox["\"Sum-normalized\"", {1.1, 0.1}, {-1, 0}], 
      InsetBox["\"Reciprocal Quotient spectra\"", {0.4, 2.29}, {-1, 0}], 
      InsetBox["\"Colors give correspondence\"", {0.4, 2.15}, {-1, 0}]}}, 
    Axes -> True, AxesOrigin -> {0, 0}, PlotRange -> {{0, 3}, {0, 3}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 6: Easy-to-visualize method of creating reciprocal quotient \
spectra\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547168175514007*^9, 3.547168210626486*^9}, 
   3.5472986628808126`*^9, 3.547298751672412*^9, {3.547299092964314*^9, 
   3.547299113037181*^9}, {3.54729940971076*^9, 3.547299516037085*^9}}]
}, {5}]],

Cell["\<\
The standard method involves three non-linear transformations of the spectral \
space, one to create the quotient spectra and then another to extract their \
medians, and a third to multiply the corresponding spectra by their medians. \
My method involves only two non-linear transformations - extracting the \
medians and dividing by them. The creation of the reciprocal quotient  \
(r-quotient) spectra is a linear transformation. Further, my method of \
creating the quotients does not flip the axes. This makes my method much \
easier to visualize. You can compare the two methods of creating the quotient \
spectra by looking at figures 5 and 6 (these diagrams are created using the \
reference spectrum from figure 4).\
\>", "Text",
 CellChangeTimes->{{3.547167112202626*^9, 3.54716722675627*^9}, {
  3.547167261266342*^9, 3.547167262677088*^9}, {3.547167294770259*^9, 
  3.547167415948337*^9}, {3.547167549225038*^9, 3.5471676289273252`*^9}, {
  3.547167725828884*^9, 3.547167747732733*^9}, {3.5471686721793756`*^9, 
  3.5471686753793077`*^9}, {3.5471996367262573`*^9, 3.547199645578714*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Median Reciprocal Quotients", "Subsubsection",
 CellChangeTimes->{{3.547221831853545*^9, 3.5472218401872797`*^9}}],

Cell[TextData[{
 "After generating the r-quotient spectra, the next step is to take the \
median of the r-quotients, that is, the median of all of the coordinates of \
each spectrum. The r-quotient spectra lie on the line between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "r"], ",", "0"}], ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{"1", "-", "r"}]]}], ")"}], TraditionalForm]]],
 ". This line is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      FractionBox["r", 
       RowBox[{"r", "-", "1"}]], "x"}], "+", 
     FractionBox["1", 
      RowBox[{"1", "-", "r"}]]}]}], TraditionalForm]]],
 ". Applying the reciprocal median formula above to the points on the \
r-quotient  line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"q", ",", " ", 
     RowBox[{
      RowBox[{
       FractionBox["r", 
        RowBox[{"r", "-", "1"}]], "q"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "-", "r"}]]}]}], ")"}], TraditionalForm]]],
 " we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{"2", " ", "q", " ", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"r", " ", "q"}]}], ")"}], 
      RowBox[{"1", "+", "q", "-", 
       RowBox[{"2", " ", "r", " ", "q"}]}]]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.5471975748960457`*^9, 3.547197592175139*^9}, {
  3.547197643493672*^9, 3.5471978648037367`*^9}, {3.547197901058646*^9, 
  3.5471979532156067`*^9}, {3.54719800877719*^9, 3.547198081874114*^9}, {
  3.5471983358347816`*^9, 3.54719842826193*^9}, {3.5471985482233973`*^9, 
  3.5471985692296247`*^9}, {3.547199518378127*^9, 3.5471995293994617`*^9}, {
  3.54719960252917*^9, 3.547199606380126*^9}, {3.547308750971302*^9, 
  3.547308812020582*^9}, {3.54730884220995*^9, 3.547308869185907*^9}, {
  3.547308942288823*^9, 3.547309002137504*^9}, {3.5473095776827307`*^9, 
  3.547309581653508*^9}, {3.54730980486635*^9, 3.547309842903023*^9}, {
  3.547309924717206*^9, 3.547309924811638*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rMedianAndRQuotientCurve", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", "q"}], 
             RowBox[{"r", "-", "1"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "-", "r"}]]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"r", " ", "q"}], 
              RowBox[{"r", "-", "1"}]], "+", 
             FractionBox["1", 
              RowBox[{"1", "-", "r"}]]}]}], "}"}], "+", 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{"2", "q", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"r", " ", "q"}]}], ")"}]}], 
             RowBox[{"1", "+", "q", "-", 
              RowBox[{"2", "r", " ", "q"}]}]], ")"}], 
           "quotientLineUnitNormal"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", "0", ",", 
         RowBox[{"1", "/", "r"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, 
   3.547392013757592*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rqpt", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rqpt", "[", "q_", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"r", " ", "q"}], 
            RowBox[{"r", "-", "1"}]], "+", 
           FractionBox["1", 
            RowBox[{"1", "-", "r"}]]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", "q"}], 
             RowBox[{"r", "-", "1"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "-", "r"}]]}]}], "}"}], "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "q", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"r", " ", "q"}]}], ")"}]}], 
            RowBox[{"1", "+", "q", "-", 
             RowBox[{"2", "r", " ", "q"}]}]], ")"}], 
          "quotientLineUnitNormal"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rMedianRQuotientArrows", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"rqpt", "[", "#", "]"}], "]"}], "&"}], ",", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"refPt2D", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], 
            RowBox[{"{", 
             RowBox[{
             "0.125", ",", "0.25", ",", "0.375", ",", "0.5", ",", "0.625", 
              ",", "0.75", ",", "0.875"}], "}"}]}]}], "]"}]}], "}"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473107151456633`*^9, 3.547310843866932*^9}, {
   3.5473108783840733`*^9, 3.547311090649839*^9}, {3.547311249085258*^9, 
   3.547311265375798*^9}, {3.547311378310196*^9, 3.547311402621615*^9}, {
   3.547311617010564*^9, 3.547311674762067*^9}, {3.5473117696027517`*^9, 
   3.547311804197371*^9}, 3.547392013757699*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineLeftEndpoint", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "2", "]"}], "]"}]]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54722535705967*^9, 3.547225382853983*^9}, 
   3.547229709457631*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineRightEndpoint", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]], ",", "0"}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547225393229892*^9, 3.547225409952771*^9}, 
   3.547229709457706*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineUnitNormal", "=", 
   RowBox[{
    RowBox[{"Reverse", "[", 
     RowBox[{"Normalize", "[", 
      RowBox[{"quotientLineRightEndpoint", "-", "quotientLineLeftEndpoint"}], 
      "]"}], "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54722523255466*^9, 3.5472252805683603`*^9}, 
   3.547225647688549*^9, {3.547225684686095*^9, 3.547225698608755*^9}, {
   3.5472257366007853`*^9, 3.547225740035652*^9}, 3.547225908143572*^9, {
   3.547226535464799*^9, 3.5472265634310637`*^9}, {3.547226668644137*^9, 
   3.5472266708818398`*^9}, 3.5472274424443893`*^9, 3.54722970945776*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seventhDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"rMedianAndRQuotientCurve", ",", "rMedianRQuotientArrows"}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472265888683357`*^9, 3.547226651702548*^9}, {
   3.547227542977453*^9, 3.5472275549610777`*^9}, 3.547229709457896*^9, {
   3.547311694275868*^9, 3.5473117213341827`*^9}, 3.5473121153456373`*^9}],

Cell[BoxData[
 RowBox[{"seventhDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "seventhDiagram", ",", 
    "\"\<Figure 7: Median r-quotient as distance perpendicular to r-quotient \
line. \>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547227585016399*^9, 3.5472276112806387`*^9}, {
   3.5472295584134207`*^9, 3.547229589070476*^9}, 3.5472297094579487`*^9, {
   3.547311878858325*^9, 3.547311889008466*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJw11H0w1HkcB/Bl93IeunRJubrztEM6DS4x1Hn/ruk8dFZauiNHJrWlK+ch
FBFdW7sknQiTjfau7jh3CePaomQ9bXSRx6xn8hBtu8suG+pWM7/vzHe+85rP
5/Oez19f04M/Mw9rUigUhvouv+TZTXen1TbTiNsTDfwaXwLOflKZaRNpb2y+
lDNwVkQ6GDqzE/e315MOh0jIjSh7RDoJHiFN/fxS0lfgzvcSJOeQLoCryb4w
HKIRuu36idm0u/DX6XGSyqnEDaf36wvcBbh8PNnNnEsloswljKt3qzG0vupm
qCmVEBlrLFUb1sGzLDzwZYkmsXLAfqTLVoTuOteAETdNgmqw0vEF/yni6zPv
G3ZqEKFeYY/0KK3YsTqWFcjSINxPjiWaarfBuD3e1+IdhaB02EZ/6dKBz9jz
v9HTKIRNtq5WEaMLDv9kb7tlTiG+ow5/2sh8gf6d1ywjT70HUZSyT/yLGMkf
vb5Ny3mH4lLh1pD0PrDucYqu1y9BpvjPfbB+APFuBhG8kUVkyF799E41iOZj
jS11tEWM5ThoNCwN4UDi43K5/QL+CJyyS1k3ArOwooAUn7cw9zlacvGLUVh6
dV+wSFZBj+X15Oz2lwjQUZ7cwpvHFOOrm24+Y2jev2Nxf9UcLrD66zz8xpF0
vUErbVqJtLwZtmvUBELu7ey00lHCm9p6NSF+Epw6TasmBwW0URx0PvEVJllT
BlePzMImR1rLzp5C3KhQWHdhBvpmS6ce86bhyRxSLpbLESSKbJwTvIZXnmT6
RqsM/G/H2pdaJEiLo585IpeCLze1cel4g0888tPtzaTgBIVkVMZKETe+prk7
SYKNvUb2sQtSBH8elbxXPA3rXXvKc8/IUBlvHrrOZQpyZ6dzgo/liMko6yxN
mIThbq3YmFQ5KrhPPX8Qj0M6zhXYGs2A6dTg3rp2DJtuSM04vBnEiHYzfMNG
IXbpPOZmPAv9c8bn6c+GsSssnEIrnoXeTBvxRG8IuhWSykAbBdZz6Xryln5w
Lpk2lFcp0JIXzH/7jRhJjLY7UR5KcDTA4wm70GkR+uhZkxKEpV0hM7kdw5fL
Nlr5z6Gkari6dL4FnquGC4z75hC82bvNw68JdnHp1MSgeRDxxpKDg7V4GiUr
e/FK7QAx8fu/D1DPdkx9fkIFgpPWlvX131jjn/DjhnAVKEycyW8sRrC1cMuh
SLU3yuiFPsVYeO7VoohRofqOb0xl6F+wNWGtNUpS17s2GI1kFSL3fmb+gQy1
LYqCbCW3cPyNrGy6Qu0P+TwIahzZ2wRkXh5WXEv4PvGBCkkf8q6jYIe2alW1
2h/yctHBNXHZKiLzsuBC39N4WkzmpSF1LjO3pk/tkuX5VHQ/6TmmO0juw0VU
BGslb5ScZ+PPhwnM6tfkfAIUvwrNtaVqdy/3n8bOw9qKvXKyPxq9ulnZI0qy
/wSsBnqOWqvU3rRcP4yYUhPn6AW1ryzXA1HLZuk+XCLNwGr/4t4VlLcg/7H/
AQGLXkk=
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
A2jV4Wo=
        "]]}}, {
      RGBColor[0, 0, 1], 
      ArrowBox[{{0.20312581801471954`, 2.2749853413297108`}, {
       0.5193875525910301, 2.4726509950939377`}}], 
      ArrowBox[{{0.4062516360294391, 1.9499874354254663`}, {
       0.9764569820138291, 2.3063695081566395`}}], 
      ArrowBox[{{0.6093774540441587, 1.6249895295212218`}, {1.361010984280648,
        2.094765404697359}}], 
      ArrowBox[{{0.8125032720588782, 1.2999916236169775`}, {1.660499081949212,
        1.829994554182873}}], 
      ArrowBox[{{1.0156290900735978`, 0.9749937177127328}, {1.859297281321092,
        1.5022918583064075`}}], 
      ArrowBox[{{1.2187549080883173`, 0.6499958118084888}, {1.937705863213608,
        1.0993448636615066`}}], 
      ArrowBox[{{1.4218807261030368`, 0.32499790590424427`}, {
       1.8705276551839773`, 0.6054051725781671}}]}}, Axes -> True, 
    AxesOrigin -> {0, 0}, 
    PlotRange -> {{0., 1.9380744290643892`}, {0., 2.599983247233955}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   "\"Figure 7: Median r-quotient as distance perpendicular to r-quotient \
line. \""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547229593004534*^9, 3.547229709458009*^9, 3.547298779434237*^9, {
   3.547298813682805*^9, 3.5472988395567217`*^9}, 3.547299134825918*^9, {
   3.547299165215502*^9, 3.547299177646183*^9}, {3.547311882110387*^9, 
   3.547311889916273*^9}, 3.547312117467767*^9}]
}, {8}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Move Median R-Quotients", "Subsubsection",
 CellChangeTimes->{{3.547229882993054*^9, 3.547229891327001*^9}, {
  3.54723011455107*^9, 3.5472301264890823`*^9}}],

Cell[TextData[{
 "The median r-quotients in the previous step are displayed attached to their \
corresponding reciprocal quotient points. But they should be attached to the \
sum-normalized points. The next step matches the median quotients back to the \
original points. Substituting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    FractionBox["x", "r"]}], TraditionalForm]]],
 " into the median equation above yields ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
      RowBox[{"r", "+", "x", "-", 
       RowBox[{"2", " ", "r", " ", "x"}]}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}], 
       RowBox[{
        RowBox[{"r", "(", 
         RowBox[{"1", "-", "x"}], ")"}], "+", 
        RowBox[{"x", "(", 
         RowBox[{"1", "-", "r"}], ")"}]}]], "=", 
      FractionBox[
       RowBox[{"2", "x", " ", "y"}], 
       RowBox[{
        RowBox[{"x", "(", 
         RowBox[{"1", "-", "r"}], ")"}], "+", 
        RowBox[{"y", " ", "r"}]}]]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.547229949963725*^9, 3.547229954213456*^9}, {
  3.5472300908227367`*^9, 3.547230208811603*^9}, {3.547311990975381*^9, 
  3.547312063919002*^9}, {3.547312212416731*^9, 3.54731221500848*^9}, {
  3.54731234034552*^9, 3.54731247721067*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "==", 
       FractionBox[
        RowBox[{"2", "q", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"r", " ", "q"}]}], ")"}]}], 
        RowBox[{"1", "+", "q", "-", 
         RowBox[{"2", "r", " ", "q"}]}]]}], ",", 
      RowBox[{"q", "\[Equal]", 
       RowBox[{"x", "/", "r"}]}]}], "}"}], ",", 
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"{", "q", "}"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309894278715*^9, 3.547310015209132*^9}, {
   3.547310046007867*^9, 3.547310046420391*^9}, {3.5473120513383827`*^9, 
   3.547312055784575*^9}, 3.5473176358843613`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
     RowBox[{"r", "+", "x", "-", 
      RowBox[{"2", " ", "r", " ", "x"}]}]]}], "}"}], "}"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547312195394025*^9, 3.5473122062857943`*^9}, 
   3.547317635884602*^9}],

Cell[BoxData[
 RowBox[{"sumNormAppropriateMedianCurve", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "-", "x"}]}], "}"}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
         RowBox[{"r", "+", "x", "-", 
          RowBox[{"2", " ", "r", " ", "x"}]}]], 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, {
   3.547312129012969*^9, 3.547312172914791*^9}, {3.547312523893662*^9, 
   3.547312570117124*^9}, {3.547312647770303*^9, 3.5473126690748377`*^9}, {
   3.547313177569745*^9, 3.547313183875668*^9}, 3.547317635884653*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
q3KM5ss9tvC//7P/7z/u/wdmnmMi
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.3548887814431656`}, {0., 1.2521278254959864`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547312572154689*^9, 3.547312669802268*^9, {3.547313184667417*^9, 
   3.547313213924827*^9}, 3.547317635884718*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXHmYVdWRf4RG3FCJDsZolIZW0KDgCoZdjUsUzWSBEYkzmImDThhxmS9O
Jp/Jxx+oEyMqa3CLaAy4EHADNxaBbuiGptllp9ma7ga6Hw303jXnd27Ve6eb
e++pB+H7+EP8utv7Xv2qzlJVp06dOnfQ8CdG/Grk8Cce+uXwjrc9NnzUiId+
+XjHWx95zHzUulUi0WqE+bmzYwL/T4mE/LL/HsIvfsjg//vZP2dTzfa36ZGh
o+iZF5+hUUMfobeLawK+VQX0QK/hVFDVQCXTB1KH87Lpsi5dqIv5yblyCOUl
KdFJzSN4bKoupk8mPkyd2+fQqDdX08HGzHhUb5lKox54kp6b+BKN/s8H6Y+5
FdRImfCop7JPn6Khw/+Xnp/wAj31q1/QHz4vp/oUj7Oo4UA+zZw0knJMG0dO
mkn5BxqOakeInM7cBD88ejgvC2amr/1zDlFjGc0cdBXdv7CSmsx/lQvvp+6D
PqAy02VqqKSiz4uo0nBvOrSK/vTAH6mwqslKajhSQkcaKNuyOV3L5luWvDVR
5Xwa0HEAza+UMVG2pLaE3vlRT/rdmiO2FXXbJ1Cvq39H66q5JUo2B4toZLfr
afy2OmYziXp2+y9aeZg6h7QwaPVpaXhdpIiECh89ns2np62Z0aU0tEtveqek
0ZI1lkyn3l3vo/wqSmSxqPryufTcH16lwmQji4/HpSahahn9+8VtrJV/y/5u
TYkzetDE7XZUEh3VvAzNwSU0pOsAmr0v6E5T2SzqnX0bfWW6n50Jn+QiurNT
H5pVJnxmUp9Od9KiZPjQZil4h+FOCRm7ri2G3pAP7NifvqwIbIsOfEn9s2+y
8DaWJosaK3Lp6ft+TVM3VRs9oGwFNOgp5DdQ+fzJNAPuI92yTmoWoFlAt5x/
If18YgGVHSqlxWNupAuuepY21TqDruHTUEYf3Hs59X0ml0oNn9xn+lLXIbOo
tMEz6DG8w3Btw0ctQuWnp6ZympnKYXYqZdoOr3qSut/wNG2sOVq9wnCtLY2Z
tYb9tHDyNNq8Z14L/xOPT43UoRU0oltPemHKo9TvwjOoXfbtNDq30q4Pmnak
+DRVUdGL91H/Ib8xa8RY+u29/WjI84V2rdKoeRjvMNypIePVcriNv5w1qHva
mX31C+p+d+DMWrOu1u/9mJ4du4ySZraa9s2mfjl3wSKzFSyyUnOeT1PGjqNr
L2mu5jHQ9GAlafGD19Hg2fsw0NRUs5fWbq1qPugaPslc+nFOb5pRyoNXOoP6
5NxDi13fUjHv6EGP4R2GaxM/ajz+5wXIdIhlnrqwmtYWT6PHhj1ql/5Hhz1G
04pruTWnmIVjLU0eMZhGPj2exv7PEBo8OpcqG3lAw6HirUwzqGr576nHRQPR
0M4KaY0VefTiyMdpzPjxNObhu+n+CZupmmKltXZ0fNWkh+n+/36WJkyeSM8+
MYz+Y1wRmQWPbS7LBDJ5NHW0Gc4ut2OpaBPDtnMcJHJYYgbb/v7JyfF9u+Aj
8+8+/GoVjTrtOD47/Rt+x8WPP6PGxib5/Lhk/KPbF6yv36jNSczvqwXbTrr2
faM2Jz2/iRPyqLa24aRqX4zaXHUCP9u9O0nvTF8VSvf96CYdCj6j119bRhUV
1fZpqJ+8qqqWXnm5wEd+mMln/n0tbdt6wD7d6ydvaGikcS/l+siPMHnu4mJa
umSHffqXaPJqJgdnSMDTED/51q37adbMtUeRW+oaJnr1lQI6dKjWPg2O5ink
Bw4coalvFPrIa5n8b28X0d4Sm8dL/NxPXl1dT5MnLfGR1zH5nDkbaN26Uvv0
Mz+5WeXppRcX+8jrmXxF4W5aMH+rffppNHkDk08Yn0f19cHkxASJQr59ewX9
fcZaH3kjk0NlZZr+2U/uTlMMeROTv/3XIiorC0zkx37yI0fqaMqflx5FnqY2
RB99tJ62bQss555onkIOvZ40cYmKvBVj5s/bQqtXldinu5WYJtMJOF8NRvJq
y5fvpkWLttunQR5Ma8ZABhQOT3cpMRs3llud1mAkV/jnyUuxkNinO5UYeNwZ
769RYdow5rVX0wr4IyUGWvjWmytUGEkE/fWtFbRvX+BP73AwaUgqZXS4LuXJ
7/Bwb8uYGTPW0I5im91K3K7E1NWlNdOHkfTM559vSnmm25QYaMv4cbkqjGxc
luTtSC0gt3owHC7QOOMCRTN/qMSsW1tKX5g+aTBnMAYOEWOHp1uUGHjFWbPW
uZjACI/vxKl1lNwzWa5rRTcHchPtA8LjO07xi961K2nV0hV9KvcsMgUedlJg
ra5NSpAMKRw11lU83dScf3S2NyIdHtmZdixsz56D9O67q8OERSc6w3LAkZLO
YmLELfAAeBrYXFJ0ds+T/vQKxRo5fdpKV2ignseU4YsUdzaLc33ugEBcpAUJ
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
75PkZbG+7xOt/h+qBSvq\
\>"]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNormPointsPlot", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472315073400793`*^9, 3.54723153098685*^9}, {
   3.547291708384388*^9, 3.54729171230812*^9}, 3.547291849024194*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ninthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"sumNormAppropriateMedianCurve", ",", "sumNormPointsPlot", ",", 
     RowBox[{"Options", "[", "sumNormPointsPlot", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547231558731024*^9, 3.547231583003787*^9}, {
   3.5472316750222387`*^9, 3.547231693053355*^9}, 3.5472915105811043`*^9, 
   3.547291715461149*^9, {3.547291836013537*^9, 3.5472918490243273`*^9}, 
   3.5473127374537373`*^9}],

Cell[BoxData[
 RowBox[{"ninthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "ninthDiagram", ",", 
    "\"\<Figure 9: Sum-normalized points with their r-quotient scaling \
factors above them.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472915137778053`*^9, 3.5472915576132193`*^9}, {
   3.5472916477569313`*^9, 3.54729168424542*^9}, 3.547291849024382*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJxV2Xk4Fe/7B3DSok1ZKsoW2mRLssYdiZKEKClaLC1CoShZivhYkhBRlmxF
ElJ2pSSVlBb7TtazzJk5o7L1u/vj+8fPP+d6XefMzDPPPHPf7+ey9qS7pdMc
Hh6e37w8PP8+//8fAZVSaubLYsxh01i75QNeAo65P93if/s4/Lm93s6AjwA9
LZ6OI9HnocJrIiFoPgEx++i6lVGBkPatNmvOUgLceoL4IsKiIbTPV5wSI6B0
c99C18A0OP9Efk/yVgIMPtVKr3IrgD9xb7aucCYg4IX+PUH6FWTwOmwN+kyA
0tNuXf+JerCPHzk6rsCBunHHxFCrL6BuoeKVE8SBzPzTCQou32Hn1+GNmp0c
aIo9tuvp+lZojwpPi9hEgrQ4FX92dSfU5qdVOXuT0HbZL3rRQA8oDSqczqsi
4ccwdeVvTh/Eh6cGx/0hoa+rsonPdwDELB4p66hREDzafWRG+ifYrzD9OOpI
wVUHE6m/RUPAJZYMf4qi4GTe0fP1h0cgwk3R6NZzCpI0b8S1HBuBlo/egUIv
KIi/fpbz02kE5v0nfegOWnhS3JrHYwTkSKe2xBIKQqKmazaHj4C0WL5KShkF
BQmXpO3KR0Cz5d7auCoKXvWaO29aPQp1bmPv1N5ScPzzSKVDyyjImf75Y/SN
grnWH85Vd43C8kNCvWVof8UCBdHBUTgdoWim8J2Cb2VrO+uJUajvU3+97AcF
U5nvJyQXjUHdr838Tc0UeL6LmJuyfQya9+zn0W2nYMsKgYahtDGwJ+OMynsp
iK7UN5F9OAYbBVqEJfso2FCi9cP+yRhEHfA9dQ294PFSwW9lY1DU9fyBUT/e
b5eTRMHXMXBcFXT84wAFrwM/Xdg+dxw+b/ozVTVEgVb+SfNk53FQM6jfZ8yg
wOPEVGzKuXFweWuyMwkdPvx7NMVjHISL/tYw0Mv3VjXc9x+HJRqNttFMCu5X
ZZ+9GT8O1fH3fjexKDjD/cDRrxuH2dnuNj0OBTbSy31/yTHgkdJgWzWN/j2n
vV2eAYa1wl1zJihcX/K7q1QYQDZ0nTJCd1CFFgHbGdBcvVSkAf1gcePK3wcY
sP6C19umXxR0OWZZVl5nQMpZwWt1fyj44W/VEdXDANPbH3msZyhgl6S7EIMM
2HF7rmUI2sC9cIPFGAMsvkholaAzbCpkltMM+BJRV79qloIlPooywYuYIL3p
HeMbemv64FbDbUw417ZFT5OHC8xuvUt3tZmg0nF+5CRa0XzuwDgwQd3754ab
aErMVyfahAkj6YbOvWi/Jy9/Nh5jwu4r+T3XeLlA+DUvkQtnQvlMfUXBHC7s
L/o6fvYWEyynbIq//zO3jyqIY0JpgIf+b7SH6oC/dioT7v5cKabHxwUhlpD/
zmImzLWYqKxF899WEVDsZkKJbtynqrlciM1Q93IeYIKjfM7CDnR/CZc3dYQJ
5Kqktl/oqkr9uKUUE5RODKqpzOOCk1fl7d4FLEgxGW25h07sE+my28KC8/fl
6uznc0HUV/vxH3UWBPrpiHujj6+0vhy3nQWXekzJKHS3/B+Rd8YsOCS0QbIK
Xdc0ZiRtz4LlGiqewgu4EHI/W7DYgQU1KjHvNqBDn17qMDrDghgz/3s6aD++
AZczXixQeVBZcwL98Uvz1fRwFoi3Gc1/hOaektJVimYBr5a7dSk6IiRpqvQO
jrezQLYeLbq5xONjGgtCDhnrDqFhmfTmA9ksYHQF/MdFa2uY9LU9ZoH2/ETL
OfxcONl33mjwBQuIIDUHcfStNDX6VCULWr2TcjaiIyV2PxirYcEjk0duaugt
yQyC0YDjeXbdywQdU2EYd+4rXr9Z9bkVWvHzFbXxFhZUci287NEpPQIuP/tZ
kLAu0/U8uq55K++JERb4PS9/6INuKqmN7WCywEp7wfFAtCedKWNN4Xy6+saH
olVmS558+s2CdfMX7o1C22/vU9s1y4KbZQ/84tDiK+eWVvCxoVpbQykJfZzJ
p7FlIRsKtSuOpqL7pGoLswTYYHBaamEmevOCjRvFRNiged5666N/4/8tlBQh
xgbdGbOOx2j1XacXzEiyobdkhucpelZr8XlXOTbcMTqQWYi+K9XzrXMTG4r3
6b99hr6h/U51rzIbrrqXOTxH837MjixVY8Mi0ycBL9AiS0/0yWmzwemagFgJ
+qZmm0o0sMHjcaPyP88GklcmDdkw7dDz5t/vy1dEv3QwYUOegeqPf+cbWHtn
9uN+Ngh1lToUo80bBjW2WrMhsc7RvQidpXHSJdGWDXHRG37/G6/OdeLu7DE2
qHwgZ/LQmnUer046sSGQpzQwB+0r1tD39iwbvKpPB2ah02/2TG84z4bWyInp
NLSASrRg2EU2HCMtJ+6hvy+skRq9woZYT/dz8ejPUtYbdgeyoT9G91g0OspD
eWP2DTbEfMlvDEPvqzBYcSwax5O8Q9b33/3R257Z38H5WJgU74nOcBhwsUti
w+RN8wSXf9cDAUWbTDaMJmTtsEWb2hzdZpXDhiwPhVHzf+OdmmezP58NtkJ9
ksbol0JLGQalbFDXztyiigZRHTudKpyfxfcENqCvf3AaUX3NBgvVaJ81/563
mqWpVAMbjvMZUf/Wu4Yd05jZg+f7EnO9Ad+Hp9KnQroH2aAaqFxXhY7Rkupu
HGVDja1LfD46g3e8NY9iw9yO6M4otOP63Ol8zBGLygxn96B3rI75K4s5Yo5v
ZJYGmj+zLOouPwEjX4Xb5NC5txIsAjFX1NoWDs5gPbg+H06brCJg+aLWyFx0
HvfbxwrMGTZ1DXFx6H1XdlcoiBOwcvWDjf5oJcU03aVrCVA9U0rtR6vNlDbW
yxOQe8F8JQvr03H/P7fUFQngviJ8v6MNlco6M5TRestdy9FKdTdE/dQIEPW8
zwlG5yrwisrr4fiFEq6LoN1ujGyN20HAmGa3wb96eFiL1T5jQABZvjOqDT1/
k9yHz8YEtBtp1d1H680f2uxmQUDw0StlEmiXdWvIOEcCkhhP0hdi/V1a7PhK
/hQBO6/smerDeu1jHDn31RkCipe8eV+GttyiwRpxIyCFK1h/Cv3C33iX2mUC
JPXO7q7CfpBXmsUtuEmA2XkbEzPsF9cH/cT0oglQuHf9jwTavkXr2YcYAgRu
Rksw/1IgpyK5qz+BgP4B0dowtPVUT++idAJUHsuEVWK/6ky4Mqb/ggAC9v1c
gP2Nv3HzwbpSAmQvmnc0TlMQp1y7zaSCgBc/tHfdQR+dPGtu/oqAqJQbXtJo
u8/fONYfcL7d1UFligLbRNkWo24C+ras9N6G/VVz4m1F9TwOqAa08jRzKXAT
V5NYz88B1o31RZHouoEcOnIRB74oXm03QD+ScF98eBkHXm3kjX5CUeCr9qx+
TJQDz2pqI6+SFJhIF13lbsbvC1+/5CEoUPkZa59mwQGZgPTUB2MUXHwgGzRx
gAPsNUIixuiejgZx04Mc6FO/NzM+iud3UXxK23KgPLRCWQ3N13rBzMCRA2qX
AgSqhykQ1z10puYSByJ7HB6VDFJwJSo2/eA9DjhrpfTod1PgkH7D1iuZA+nD
H8W7urD/x/Qk3E7lQMqFEz3e6AmXhPQPGRxQCYzmPu6kQNXnyYR6Hl6PjrMT
6KBglZt01O9KDmyvHpSsbKFAdI6SlFQ3B3x+Pear+EJBuf7UWcVeDrg1FX83
QhdJRmvr9OPxu29s+vqZggHFTkfrIQ7cjtxtP9xIgWL2zcEgFgc2uY2Qiz9R
kLPsS/D7WQ7szF1QpfueAjJInzEhSULdG1WfnTUU+AgaxUivJeE/caew4lcU
6LyyyNwjS0J4fMr8dWiLk9pLkjaQIP6533DuSwpWmnqOblUhofXn18aKSrzf
klsf9uqTUJlrt3BZKQWZBbufLnYgQcWGStuVT4FlDs9zGSc8XrxNMPMJBdza
RDmtUyRMz0lj8KJPUpv0HV1IGHoX0VPxGI/37XB95kmClB+3dGMO5rsew5Bt
wSS81m6QH8rA9RhYoFmfSYLZLZFo9l3Md+fvSOdmkyA/L0jUGH34yPOgiEck
FHkpiKckUED5n6swzSPhWPpEnEk8BWoacuz6Z3j/bt9NkmPx/LtEjjx6TYJm
1vKKTZj3GR7Heub0kuAsyzXuvo7r1SJW6HsfCeUhhWvWoQXVt7zMHCAhhWg9
7XINn/+p88GGwyTwKWx2nwig4PH2E1V+LBIurDCQn+9HQe1+hc7maZwv88P7
lnhTMM+c6yQrRsGzB2U9RWdxPeSldbWvpuCso18V4wwFpxQVvt4Wp2CTqbTo
enS35aMts1IUFOt93JlwCr/PzK3/sp4CZ/nNnp64X+mIu2pih/sYhf2l64Tt
KWh9LaItvJ+CTz/rLrHNKVDP1lYtx88XynN/iOIn//nLWcctKRA6bpuvj78z
c+afeWxNwTlZ0a+39+F41drdth+lYFGkcedmEwru7iszN8RxqLb1sYx2UvBl
nc0jNs7DktW/Hopuo+DXjSW2j4JxnQk+z5LAcbzS3uZ6PISCIbvhuTJbKUiR
TCxpDKMg77z98MYtFHyNSWvPiMZ1bBCprayI71+e5R6VFBy/aMRCyXUU9Gt8
2tWE6yhvdWpdkAgF6WM5d5Rxn/C7Ij/BhUPC2dbVVlm4T+CZCm45QpCwLcAm
eDWbgsXUhrC9bBLuTk9q8WFdIITu6G9iknDdWvb3J8z57QWW87pHSLBqUira
jXU3/8V/HxTwOS+PkM7/KoZ1Pfhzp30jCRtqroSqr+HC28W3NHQ/kZB2LOtL
ojgX/Kck56xpICHqyeYieynM8ePuQ9/fk9DJ0i7ok+PCdg+RMf23JFyB/eEN
ylzoND3wmaeShF38m3dt24V9ZFNwmmAOCeCVsiPDCHPBqv18tQ9J4OZYRC/f
jeP5fLj8Iq7jaW05hVETLixy6pBrySCBUah6IMacC5mDxqO3U0hoaHlqWnuE
C61rrkkMx+Lxlua22Re4kF2WmLbMnwRCRen5rAcXGsQ+n8y7ivvjh49PHPTi
wnqhzEu7fUmQuKDylM+bC5d7W2L8fUjYv09g9cGrXLB6K3yv34OE+qOXxNtD
uCA9pNEahu/p6XVr9OzvccG5ycrdypyEQOrU66T7XNjIFyrdb0bC0USB+83J
XChYIrzBfR8JaudW7TdNw1yfPbQ11ISE9RdbC5WzuHBVT9fkqSEJi3xX2TTn
c6H0xMNDPZokzNY3x6fXcOHoWKVjtTSeb9XplPevcV9xf2uiuhQJQszK3+w3
mIN/uErnS5DQG2yXpV3HhTG1tvX3VpMwME+l890H3HcY6gu6ipDQrV75pOYb
Fxgxv/cQC0gIdms0Vf3JBYN5J0o8sS5evzG4YcsQXl+rlMthcCBfZvKM8jAX
bLkCie7jHCh+3C0jP8oFs9KLK8+McOBAxEMnUSYX6pfu7LfCuuvjN1e6lYvP
Y/xR/rJmDsy0vWIO8NEQL+WdJljFAUmdhaGf59KglMJz/2oFBxT+rr1RPo+G
ogDb6aEyDjDE/J9GLaDh+A/N8bIX2OdGOOXKi2mQXl0YYFPAAcM7e5KthGgw
KRL08sG+MTaiKbxJmgb7LiGBnWEc4Kd3HxVeS0OnxsHUS6Ec6BrWYEyjhS/7
eOfc4MDQy4O9n2Rp6GbOTC25zgFZ0RWrTm2gITUg7MDHKxxYMeSWe0mJhsRX
fhvXneOA3Y70uoXbaeDwDL0zNePADt0f1Z1oNVNT/jOmHKh/zzuVr0uD5Ia8
yGATDlQMjupZAA3fuiePlxlxICnSiYw0oEH91c5tq4EDr+UvU727aVwvHO9S
ZQ4oUSWlk1Y09Ac4vXJezgGvixaxOdY0WC+KEr0pwIHujMB3hw7SwNhh+qFo
CQcuaFluLzpEQ9uQjvY05gLBJQ+sj9nSoNBetyeUF+frctu2pGM0WIZ5r/Qn
CRD2uCQbc4aGk3PndTG/EfBwR9cihbM0yHZM6v9tIqA+wmnPW/R5JaHZZV8I
8N4Z8ZF2oeHyhLWvcgMB83X/9pm50VC5fP5/zrWYy3ZKGfV50PDCJqW1uJiA
/zJMjoX40uChU/6hKY4A54G1Z/iv0jDrmL+qFXPV7xN7GsPQWCtedmHu+jq4
PTfcD38vKy0zHEnAh57U7OAAfL5vJ+TJYAJYnKS0w0E0FMi16Y56EaCdce1g
Ezr3Zaf6Tw8CLjqEOO8OpiHmzGxY73kCZCSS49Ru0JA0Yab34xwBAesG188L
peFJ1sKuF5gjw/W5QqHheL/LePttrTAnbio8wUUP9rZ7mloSwPP74MITETRw
7ybb65oTEBe3zEEzEp8Hf7SehCkBP/VE9Hpu0jB6mH/9j514PzNHry29TcNp
Z83r67Zibl3Q/mw8noaGRcFDxoIE3DOXurg3gQZft9YvtAABXpmv3XLRjM5w
Kn0J5mbV6kXOd2moTs3sm1yAOdzuTf+3RBpczzZUGMywQSbl43TYfRrq7zQG
3m5hQ2jnYs0u9Gtj1z3fv7LBzEQ4VzmZBj+bpIAVjWxQcxZU/Yp+NPl1a2wt
G9gRM41LU3H9r5Z74VvIhtx8yfXHHuD4FtrQPBFsIN5+rMlCh7p+8ZcPYUNB
Z2bMOFr9S5qH5TU2vMjw/OaVTsOD+it3k73ZsLEnv9EvgwZ9kbMt0o5s2G8z
vLwaXa3z54ku7gsL4q6GzqALR/WZNrhv1HWyFrySSYM8rZwVbo77pC/DcWey
aFBM+8Rt384GBaaidwaaK+CzeFyDDTsu8dzsRO85qBP2R5UNbvv6LU2zaeBz
1ykTxH3x94RKQ5mHNES2nv6ptIINs2ptOQ8f0XCkMnaHOO7zBXROlzeh4UKo
5JkRFmgmRq+a+vd985M7xQMsKI8/VLI3B+dfZtjMuJ0FIk5O4YPoypOHR468
Y8ElIecZ/lwadjurRCS/ZkGxilWlAjpib//brioWzISnS3igcy3k59gWs7AP
Pnbhoh8Ox9zWf8ACn5QKHeHHNNyo/Y/lfZ8F252XHNqCbpr+25eXwIK6I2Lu
LuiLWm8jhKJYcEA51yUUfTCsUn9nGAtkpuWepaPLP4be9AhmAZl9TaYFPezB
+NlwhQWTApomBPrVuBL56yILLIOvVfLn0djXE2LXXmBBRfClQA10fJPCnfOn
WMBKDAmKRIumZkTNHGDBDgPPmVR08F1LkNjPgk8+hjVFaMf8D0E6Jix4LKC7
vhmdv/nUO88d+PtMzXdD6LS/W+tu6rDgrlpN4QR6xfvVNtnqLAiIWOsg8gTf
3/oQtW8KLNA592mTDLpItdh/eAMLhK7maymj103tPTIpw4J9L/NjdNAn5WU+
LJZkQb56qZoxerxm0cc1YjifPcVSluhtlW128iIsMHwWdeAoOmuJw3WNZSww
Kbx2xw2tb8sN2DePBepVbhmX0D2rM20O8rAgo6T3jx86sNTutd0UE+L+q7kb
jN7ER1c6TDDBX2QqIBz99o3u7tMcJhht9356Cy1RudjRhcGE3V1SG+LQQ9mq
y12HmWDW1D2UgC7VCDF17WdCPCuZlYRetqZd9FwXEz4uMNZLRhtM8F4808qE
RYw3P1LQoaeajjt9Y0Kv82xxKvrXPPHOY41MMNjR2/HPQSeeD9m8x/NtP2Dy
z9ScC4HmtUwoEtfn+Xc820Umx+glE74nx87cQ0+vTD6uU86ErMtqBoloR+/i
bKXnTFhSut/3DrphNvPBs6dMuDe+oSMaHXJ+2Zh6LhMuZqWdiEA3s8oDSjOZ
0HQhWeAGWj7G7aRmKhMGW3j7/80X4zTn9otEJpCHCzsuojO8FwlsjWOC4cVb
U+f+zW9pYPOTKCbIpAfoO6A1JdaMrw/D4w84PbFBH4pI25sSxITW37KwD93R
0/JL2J8JNpMpEzvQF5mh7FAfJlRXln3biu686q066cGEo6mHmtehn5m6vjrr
yoTI6SOzK9H5giqJbaeYMHZpXfW/9fZgjYZ80VEmlCgXWv9ENyfw9685xAST
JBWhb+gE75qBIAsmvA5O+PMYXXmCr9bMCOfHZ5dcAnrcUiy9cAcTGHxentfQ
ey6qvBfSwd/H9fgfQG/O8+V8VmbCh8F+bR30j4Pbyc3yuF4cqNUy6Db7VToh
ckzw2FtvxMT379fObZnbxJjA0ltlchl9xLriU8AcJhg/OCxri86Vm+RvnGaA
jUuNlDba6U1Q+OpfDPAhI6/9wnrRORR1LH+cAUJfB3+eQvt9Wb+35jsDlt6T
/aGPFnC1L+L9zIDc6pSh1ejBagH7He8ZwFL84f4B61VWEftaaRUD/m5bJiqF
VmXupWOzGbD92swKEuvdnqj+y3VpDHjcpLutFv1KS0L/VxJen9ZrcULfjo+N
P3CLAZpmi7NTsJ4GeIgc+uXNgMNnpqyGsP4mzdROju1mwOSk2J6naMFUz2an
nQyobfG67I1ubk6S79FlgEeBf9Q8dGLwbZ1PqgzIy98eKor1vuXyt8l4cQbI
7JRNEcP+cSROobaXPQ7xvg9NmrG/XAzKXr5zbBxa1w1siUFvPnjra8bgOHQu
kSpYgE6UHnt+vG0c5rCmTo9i/3racYZ+93ocyKmvL0Kxv20czVAwvTMO9ass
+DTRC1IFy+7cwvO/mflvGPvjD6/Okq6wcdCZGwiG6BDyzeIz/uOg8t3zIDeJ
Bp2ICwtcT+H1I0+vVMb+u441JCOvNY59QkFFIIYGG8fQm94dY9DzcfjaQ+zv
8dHhT/N+jMGvpHDBHehJd7t9vZ/HQKZ645hbNA0lmsVTBrVjkM2v6P8miobo
rxyJibwxCHT1Ed+NeeJnFmkm7D8G09scwqsxv6w1uS+8UWoM/mO9Owvoc9Ok
pYLYGKh9Fgl5eZ2GP7Ni/MrCY3B/0XzXqms0qPxe+U15wRg0xaf8eYr56OwK
vyFJ9igMWh/97Y55SzX5ZGtR9Si0u7T32mIeO96pGlNwdBTKlysveHEB5+v9
vk0z1qPgcWSOwXJ0Gq/zqPH+Uewf2dwadxo8E28PtOiPwhErd5PVrjRkvx0t
7Vs/CtPN+vdTTmGeHFhTcJ8YAcWTL/5wj9AgIi8llH99BCrmW91q0qdB73tU
hMqDYSg6JtH1dwfWo/smnQFJw+AcXHlQEf19ujD4U+wwhFUv/3RDjwbblLwO
h5BhMGuWeqOgg/Vso/v9qy7DUJa7o8pSjYbtIX+07LcNQ3x41+bZdfi+Pa09
0/tuCBLseumG+TTwyDPTvw//hJV7DLtPlHBhjaRwScrYACh46h3SPoz7q/0H
n1k290G0WMLSC7i/TX/pXFBxqwdsfFJ81nhQEPt4ycuQ5nawe1zXOzBKwqFi
tsTfzc2gkXwr1N2KhKVaGvNMDjfBLyW5oB+pHODdX+lQ//AdfLBzPXDsJwGn
bXapLblTBg3+khcm+jD35p54dm1LGUgE92yM7Cbgqf7Vb72fSkHudqHTsxYC
IL5w5Mj8Utjkf1GA856AH25i83ZdegHELavxjfmYu+8dpXosnoHoqrdGYRcJ
KLIXagYiBwQD9bSoCwRwea1cb8jmgOzi4uojbgRYjIg5Jh98BNbkk2sbTxHQ
0xxwwLAyGxj7YvsKbAgwtvU773ojAxZ15jdf1SHgiP/6HFPJJHg9Ntr1WYOA
QDVhfomAuyBnesNrrRoBQXdE4HZPPISc4Zq9UiDg5qzilGNqLFQLWxcxJAjo
tv2z4fy2cJAUUlNSW01A9L0PGns5IVA7mqZxZSUBI/7/CbjmBUH2rBbJu4yA
YzJuGgv1rwCxkJO+czEBM5ESytwiT4gJ39sbhDm3LjU4rsXoLDypF8h9zUeA
q3KM5ss9tvC//7P/7z/u/wdmnmMi
        "]]}}, {
      RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{0.5504139634968043, 0.44958603650319584`}], 
       PointBox[{0.6630719771133087, 0.3369280228866914}], 
       PointBox[{0.661787109323564, 0.33821289067643595`}], 
       PointBox[{0.7286019218118642, 0.2713980781881357}], 
       PointBox[{0.5689771649740721, 0.43102283502592786`}], 
       PointBox[{0.5614136729040614, 0.4385863270959386}], 
       PointBox[{0.39999885193102036`, 0.6000011480689795}], 
       PointBox[{0.768917311307553, 0.23108268869244708`}], 
       PointBox[{0.5466682166788871, 0.4533317833211128}], 
       PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
       RGBColor[1, 0, 0], 
       LineBox[{{1, 0}, {0, 1}}]}}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{0., 1.3548887814431656`}, {0., 1.2521278254959864`}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   "\"Figure 9: Sum-normalized points with their r-quotient scaling factors \
above them.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547291679984372*^9, 3.547291684882041*^9}, {
   3.547291840344864*^9, 3.547291849024444*^9}, 3.547298867032872*^9, 
   3.5472991888671083`*^9, 3.547312760647628*^9, {3.547313195612541*^9, 
   3.547313222429434*^9}}]
}, {8}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scale Sum-Normalized Points", "Subsubsection",
 CellChangeTimes->{{3.547233327719347*^9, 3.547233358998193*^9}}],

Cell[TextData[{
 "The final step is to divide each spectrum by its corresponding reciprocal \
quotient. This results in the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], TraditionalForm]]],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     FractionBox["r", "2"], ",", "\[Infinity]"}], ")"}], TraditionalForm]]],
 ". (Note that there is a ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " asymptote as well at",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{"1", "-", "r"}], "2"]}], TraditionalForm]]],
 "). Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["R", "x"], ",", 
     SubscriptBox["R", "y"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " be the coordinates of the reference point, this curve is the hyperbola ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", " ", "y"}], " ", "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["R", "x"], "2"], 
     FractionBox[
      SubscriptBox["R", "y"], "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with the origin translated to  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SubscriptBox["R", "x"], "2"], ",", 
     FractionBox[
      SubscriptBox["R", "y"], "2"]}], ")"}], TraditionalForm]]],
 " . The scaled spectra are the intersections of this curve with the lines \
connecting the original points and the origin."
}], "Text",
 CellChangeTimes->{{3.547233409357737*^9, 3.547233426602599*^9}, {
  3.547315611672408*^9, 3.547315612461529*^9}, {3.547318993409947*^9, 
  3.547319046408938*^9}, {3.547319077019785*^9, 3.547319227198279*^9}, {
  3.547319318108941*^9, 3.547319363116486*^9}, {3.5473194196952868`*^9, 
  3.547319539922263*^9}, {3.547319598973487*^9, 3.547319603472768*^9}, {
  3.54738919905938*^9, 3.547389334182631*^9}, {3.547389373949347*^9, 
  3.547389447121338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"originToPoints2D", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"Darker", "[", "Blue", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "orig2D"}], "]"}], 
       ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          ",", "orig2D"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5471598662264*^9, 3.547160104879672*^9}, {
   3.547160335177816*^9, 3.547160346330387*^9}, {3.547161024190194*^9, 
   3.5471610625535383`*^9}, {3.547161144522626*^9, 3.547161153551978*^9}, 
   3.547161262642654*^9, {3.547389660441325*^9, 3.5473897177279663`*^9}, 
   3.547389958138364*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalScalingPlot2D", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"r", "/", "2"}], "+", "0.0001"}], ",", "3"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2.5"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547315820284547*^9, 3.547315876113661*^9}, {
   3.547318520522623*^9, 3.5473185542564173`*^9}, {3.547318928248506*^9, 
   3.547318929567464*^9}, {3.547389501205985*^9, 3.547389516535078*^9}, {
   3.547389566921217*^9, 3.547389571153699*^9}, {3.547389684798848*^9, 
   3.547389685310708*^9}, {3.5473897799475117`*^9, 3.5473899477272882`*^9}, 
   3.5473906862822933`*^9, {3.547393836328681*^9, 3.547393836810052*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"scaledPoints2DPlot", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", 
       RowBox[{"Darker", "[", "Orange", "]"}], "]"}], ",", 
      RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", "=", 
           RowBox[{"refPt2D", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"t", "/", 
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
                  RowBox[{"r", "+", "t", "-", 
                   RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "t"}], ")"}], "/", 
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
                  RowBox[{"r", "+", "t", "-", 
                   RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Transpose", "[", "sumNorm2D", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5473899959131107`*^9, 3.5473901949805107`*^9}, {
   3.547390262558668*^9, 3.547390265503881*^9}, {3.547390645420309*^9, 
   3.5473906467773438`*^9}, 3.547390686282486*^9, {3.547391000532838*^9, 
   3.5473910721539288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tenthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "originToPoints2D", ",", "finalScalingPlot2D", ",", 
       "scaledPoints2DPlot"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547389728093873*^9, 3.547389745129978*^9}, {
   3.547389850426289*^9, 3.5473898559374733`*^9}, {3.547390169591282*^9, 
   3.547390173098926*^9}, {3.5473904123664722`*^9, 3.547390415950437*^9}, 
   3.547390492850726*^9, {3.547390650560094*^9, 3.547390686282548*^9}}],

Cell[BoxData[
 RowBox[{"tenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "tenthDiagram", ",", 
    "\"\<Figure 10: Final scaling of points based on generated median \
quotients.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547390487639607*^9, 3.547390555068609*^9}, {
   3.5473906090178833`*^9, 3.5473906133056307`*^9}, 3.547390686282605*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{2.172454345958343, 1.7744919345405104`}], 
       PointBox[{2.675301724350803, 1.359406145521423}], 
       PointBox[{2.87830990460933, 1.4709889319173473`}], 
       PointBox[{2.8813454193984884`, 1.073276896492814}], 
       PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
       PointBox[{2.26005835257858, 1.7655977040112563`}], 
       PointBox[{1.398151988227432, 2.097238014713233}], 
       PointBox[{3.0861624358478528`, 0.9274842729247682}], 
       PointBox[{2.255768229218814, 1.8706253682049265`}], 
       PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
       LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
       LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
       LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
       LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
       LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
       LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
       LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
       LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
       LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
       LineBox[{{0, 0}, {2.6917625635090703`, 
         1.2898265639379862`}}]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       LineBox[CompressedData["
1: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
/NGTjP8D83/w7Q==
        "]]}}, {
      RGBColor[
       NCache[
        Rational[4, 9], 0.4444444444444444], 0.22222222222222227`, 0], 
      PointSize[Medium], 
      PointBox[{{0.5431288103358621, 0.4436354186915789}, {0.6861536917911115,
        0.34865657839748754`}, {0.6839853356873696, 0.3495575152552775}, {
       0.8239683316769922, 0.30692126250356366`}, {0.5615509147589944, 
       0.4253971550894395}, {0.5538566621048238, 0.43268265611279816`}, {
       0.4358964095706468, 0.6538477421096109}, {0.9475904367568392, 
       0.2847793159093485}, {0.5395944657367983, 0.4474657826437218}, {
       0.7090240824172893, 0.3397469406742102}}]}}, AspectRatio -> Automatic, 
    Axes -> True],
   "\"Figure 10: Final scaling of points based on generated median quotients.\
\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547390615687723*^9, 3.547390686282668*^9, {3.54739100979552*^9, 
   3.5473910778087*^9}, 3.5473938530772943`*^9}]
}, {6}]],

Cell[CellGroupData[{

Cell["Work deriving equations", "Subsubsubsection",
 CellChangeTimes->{{3.547391875653401*^9, 3.547391881671582*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Equal]", 
       RowBox[{"t", "/", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
          RowBox[{"r", "+", "t", "-", 
           RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], ",", 
      RowBox[{"y", "\[Equal]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}], "/", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
          RowBox[{"r", "+", "t", "-", 
           RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}]}], "}"}], ",", 
    RowBox[{"{", "y", "}"}], ",", 
    RowBox[{"{", "t", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547315678490505*^9, 3.547315792141757*^9}, {
  3.5473159260094624`*^9, 3.547315934524352*^9}, {3.547316025974309*^9, 
  3.547316030952437*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547315775541061*^9, 3.547315792772892*^9}, 
   3.5473159377713633`*^9, 3.547316031415708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"t", "/", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316619099985*^9, 3.547316623312673*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"r", "+", "t", "-", 
   RowBox[{"2", " ", "r", " ", "t"}]}], 
  RowBox[{"2", "-", 
   RowBox[{"2", " ", "t"}]}]]], "Output",
 CellChangeTimes->{3.5473166239681273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]]}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316374848133*^9, 3.547316392164747*^9}, 
   3.5473166388419333`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox[
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "r"}], "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547316392990789*^9, 3.547316641798195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "t"}], ")"}], "/", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
      RowBox[{"r", "+", "t", "-", 
       RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     FractionBox[
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.54731641143988*^9, 3.5473164195544043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", 
       FractionBox[
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.5473164210602627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", 
       FractionBox[
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316426950857*^9, 3.547316443999943*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
   RowBox[{"r", "-", 
    RowBox[{"2", " ", "x"}]}]], "\[Equal]", "y"}]], "Output",
 CellChangeTimes->{3.54731645414047*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refPt2D", "/", "2"}]], "Input",
 CellChangeTimes->{{3.547317840890967*^9, 3.547317843609322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.30769106857440903`", ",", "0.19230893142559097`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.547317844104817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"1", "-", "t"}]}], "}"}], "/", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547318031714019*^9, 3.547318034654467*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}], 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "t"}]}]], ",", 
   FractionBox[
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}], 
    RowBox[{"2", " ", "t"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.547318036058297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]], ",", 
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", " ", "t"}]]}], "}"}], "/.", 
  RowBox[{"t", "\[Rule]", 
   SubscriptBox["x", "sn"]}]}]], "Input",
 CellChangeTimes->{{3.5473922441569366`*^9, 3.54739225075502*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"r", "+", 
     SubscriptBox["x", "sn"], "-", 
     RowBox[{"2", " ", "r", " ", 
      SubscriptBox["x", "sn"]}]}], 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", 
      SubscriptBox["x", "sn"]}]}]], ",", 
   FractionBox[
    RowBox[{"r", "+", 
     SubscriptBox["x", "sn"], "-", 
     RowBox[{"2", " ", "r", " ", 
      SubscriptBox["x", "sn"]}]}], 
    RowBox[{"2", " ", 
     SubscriptBox["x", "sn"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.547392253477168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bar", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"r", "+", "t", "-", 
          RowBox[{"2", " ", "r", " ", "t"}]}], 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "t"}]}]], ",", 
        FractionBox[
         RowBox[{"r", "+", "t", "-", 
          RowBox[{"2", " ", "r", " ", "t"}]}], 
         RowBox[{"2", " ", "t"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.547318045301791*^9, 3.547318070672861*^9}, {
  3.5473181761201572`*^9, 3.547318193913475*^9}, {3.547318506974475*^9, 
  3.547318507346719*^9}, {3.547318559605433*^9, 3.547318588031644*^9}, {
  3.547318733277388*^9, 3.547318750404436*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5473180726619987`*^9, {3.547318178151081*^9, 3.54731819481457*^9}, 
   3.547318508421997*^9, {3.5473185742356052`*^9, 3.5473185889656067`*^9}, {
   3.547318736091078*^9, 3.547318750975293*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]], ",", 
    RowBox[{"t", "\[Rule]", "0"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"X", " ", "asymptote"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547318847881042*^9, 3.5473189326004963`*^9}, {
  3.547319257475436*^9, 3.5473192865271997`*^9}}],

Cell[BoxData[
 FractionBox["r", "2"]], "Output",
 CellChangeTimes->{{3.547318862988669*^9, 3.547318871474601*^9}, {
   3.547318915669297*^9, 3.547318933207136*^9}, 3.54731925937846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", " ", "t"}]], ",", 
    RowBox[{"t", "\[Rule]", "1"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Y", " ", "asymptote"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547319263010157*^9, 3.547319294297826*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "r"}], "2"]], "Output",
 CellChangeTimes->{3.547319271049531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
       RowBox[{"r", "-", 
        RowBox[{"2", " ", "x"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"r", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547315820284547*^9, 3.547315876113661*^9}, {
  3.547318520522623*^9, 3.5473185542564173`*^9}, {3.547318928248506*^9, 
  3.547318929567464*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.3, 0.4},
  PlotRange->{{0.30769106857440903`, 1}, {0.27777907217978276`, 
    1.2401813281366454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.547315843337575*^9, 3.547315877133327*^9, {3.5473185277626143`*^9, 
   3.547318555022922*^9}, 3.54731895330225*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
F4c2yAXX1aoepD9+Ex7cVsPeRmfrGeSdbJQ9f7HSLbap2Le3jFsytYeOkHve
M2dkMMooxr29tkqkHfPAp9qntXANZm8sRbv/wuZGjycDP4sZheRK1RuVyRgd
8y+yF6PD0XPuIObEjcb7p/WIrq1gEX4ydjVKOvy8oe7rQG9w0O3gDYPVgG0r
ScLcqXNksDhn6lwklbSpAUIDnWjM/g8Mv3IcTQ5yQIwNNOpScXf//rg6Nhax
sddi9OwciL6JdoH66jKxZNbTeDUhAa/OnIhpywsg9s4Xqnpyb8g8CjdFHPUf
bDoot91iW631cVAfYbRTezFWjRyIgYNZMvF/cDSuuPZ55JmjPwQvRv3BFTMx
7dn5WL4yEfOfmYonluVCxGyqf0LwYpWtTVuAmXNfRcKKRXjx8ZlIPNTEIFjZ
jxTRfSbWvyz6L/ZuLgZRDmodIvpVyiLzBpwnV6/aI1dLsbOUW1yxd9VS7PHl
qj88nha5EWdEtWrlHomLDdE2e3KJMszNMbM93A2TZGaGaQYa/twej1eG2dPb
PsmXqzt3/syDtLR0bLcnF6iGKhVbbm7wSXIbXlbm0XbaY68pg9x+M4XGBYUo
UwwNDa3pOtlHFxY/k/RA2FZfryDPev4dy9mzUfLZ+ndypPMxQ8ZhGvk3VPZv
Xse/Z7n/d2+bZ7oLR8mIgwl1Mb3Jz8+daw+q9/9iHf/Wy/y/5N7XB3k2NMgz
/SBEz+czIElcnikXG4+nVQWg56c32LNg7LdQBT1xEonCwrMynuIkLfbVF/91
S/+calju8pnAXp6Qic8/O86ktnbEHntWVaaurkUesDHUyc+vzrcnnlYEDyd4
4MKjBkGfsCfmKILHHuxvHnp5vb5Ce+K3qjKMLRjAsDI8EBHvtSI/TCblfqPU
M3DaseMkli5J5z6n1F69TkRIlcuWZvBERCuzF39SifNsgMr37C7Vyu3Fn1Dl
4SzHgjMaE2WrsCceUwSPWhj2sUlFv1XaE4+qIjHYWrliN48FtWp78UeU+Oky
DxbFp2F/zmntrL34v6ry8ESMESFzBG1t3lp74lfKAM+f4hem8fhQq7cXf1gZ
oLMybmRKSjSRx56Y6leDJYvTmbDSGrt7whQl9NWXBfIcUJRfa7LXOVmJi+VH
RtrZ+8q0c/biv1TiTIrSa3gU1GIvPkmJ85Tzww8PSd9ttRf/hRKnF3NW2bmj
SGu3F39AifNAeXH8Lk5AWoe9+P1KnGfrr8/bIc/KvfbiP1fiPKZmd3KB9tmL
36fEmUfilMCtSqe9+M+UOOcBZp35Dt37cqIS+vTTfLlQmEIO23KD4fkpT3BN
xmHbMUExPGznVGMyEfbMeMOOKDyzpyYTac/cqxj6pqU+UfbMPYrh8SpnEZNx
WAd+qhh2HceAyfSyZ+5WDC8zcCDQVeUn6jqF3nzf7DSxRxC7dym7TU1tWCYm
Vl42kJ/oaQtNu1QX/GZHWkFN36lMc7gtXLBTnlzLT76jTPdWNbM9QHBzxuJk
mZkBnnKbHdTNsn262k3SX8rIjeQ/K3sMBiwOflHQmgbJi7pJLwer6R3KMtdN
LiOm5X+wWrbPwblJbwazbNSZjsUV23RoPUhTzHll1JzMrUjcLe9rmBVV5oKN
udsVw1iNNxdM5hJ7ZpxiKioa5LJpMt+1Z8Yqho6+eNGurjHmcGXJYJglLPV3
UQfmNsUwR8Zkl8lcas/cqhjGGSwb1w35yWV+jFwNxviViNeuTO2X2Ws3mNOn
PTKCMZnvhWb02cjrihmtGN6v4kxtMt+3Z0YphgEQHdRk/jE0wws3ljZwYH6i
GKYjmQ00mctDM9wKiG2ZK+YWxXBCY/lM5orQDGNkHkK7YUYqhnEmJzST+YEf
Iz1mhJJkpEbfDyrZTbvB8KKPZV3/YWiGdjr1FSAk82PFMAPPJLHJ/FNohnOM
pT4OzM2K4WU+xkQm0zc0w12FpVccmJsUwx0PN5Emc2VohrEu9z1umBsVw6DX
Mv/182Nk7/9ISXJjwS1DUEkb7dyiGs9CMYad3Nxymag1mf6hGbawpScdmBsU
w+y+pYUHhGa49FpWJQdmuGLoyfQ0k4kOzfBeIa/udWfcR4/2F8CCrbqGXUas
XEG62w0nerS/ihTUdJwyrTtiTpfpgcq0++jR4UaMk2WGDUxA2Vl2ET063Mfo
ih6v92tkowwONXWKHh0O/oPVdJiyXF/fYo0eB1ktu4geHQ6ZnSxzIePF0u6W
naJHNweeTjaZTLS0s7LpkLCU2zZuX03mqtDMnz48JCeTcBjuWCxlc2BURlPe
V7cEBDGhGeaDefwaDsNgxVI2f0YuCdcqSV6D4OGDKXm1vfbrFMMNe0HB2bAY
JkIsJXJgjLJxOeDxvMkMDs0wWOHXJMJheBXcEt66YLhQW+rjwFyjGPY+v95g
MrGhGSZ8GLKHw6jQ1hUzRDFc4lQf6R8O8WOkx8QqSYZP2/1TNkNCa6cPM6ce
DhPgww6MUTZ6jKUW14RmeJvAEt66YBh0cBMRDhOwZjgwg/3qw1sEJnNtaIYJ
WUsY7YJhRtYSFPkzsvevVpIBM7IL7QE1d2AMO1xpLEH6daEZRgH0znAYjhVL
2OmSsdTHgYlRjJHbN5mhoRleT033D6MVo6+Y532BP8LBJBcny0BVJo0beed7
dzzYIm/YVCGjK5turjI72QqYtt3YCnUNV4aGxr06Hp9s8g/QrndfG/sbntba
XKV0cY+Rva/M3laYd/ycbLFODQ2tAbZ0Jqz7ZsEc0DATMOsrM8HGSReT5ZoZ
pBjuVSwHAsNCM/y2nSW2cMFw5bNEli6YgPp8U0bO4NFKkiu9amVd0uELjYZT
80K85WzKBcMEAG/ChcMwMcmeCYcJqPm3zBjtxgiRx9EmMzw0wyjZsha7YOQq
5p/QdMEwSuYKEw4TEJH7M9JjBriR7KbdYJgss+QCbgjNMFnOK9jhMAF7EReM
OsAPiwmYl1wwAXGCCyagrR2Y/oph5GY5ZPhRaIbJ1j27S4Mzsvf7KUleqijz
Txq60E5/tCShXDABNXfBBLTwt2zHaAMm/hkjm8yNoRnOfZYDEBfMF2LsW05B
FWMkDUNHfF5UbBqHy78/EINj9cvpMddPQqZNbsewq++AfQF2XYV9ogidTQex
8JEFyGnU83becxU453W2GTCiHGwa33TrqN6ON/64BjkeX9AbwOejW78JwO+p
ZOC1h/4N60+08CJ9V2TXV0EBzuagtLd61nzw94j78Ws43hq8Ma5UclxcLKdy
N3XT7RfJ6aFVT3Sc+RjzF+3jVzvRWbMNt8aMZ6LUyQy/hEwf627GMYjrKbo3
DytnPIhZryVg0R8m4cGXM1Dvc7TE1Dfjpe6Wgnm/wXAOs+xCXTABAb0LRuWU
wmLUyh8Wo44mXDHy9X6/zyPNj38eBuXwuXbBXwABx9R9\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"foo", ",", "bar"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.547318594206092*^9, 3.54731860527495*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1Xk0lA0bBnCSEmJCUklkSYVQKMrVptLiVZGShJJWaZE2SSX10StLvhbZ
KvWhEpKsSSJCM5aZeWZGs1rG5BmTvLK+8/1xn+v8zrnvP69zGwWc2hk4SUFB
IUo+/89E30rKITc6Gty8/Orov1D3ZXTjHbm3pJQenCP3i3lbbW/up8P6dVFw
WcIvBDZ0qVy6TEeR9zaqJ+UXeGZGRYHv6dBaVp/tukCGB2UDISaldCzWpp/a
pSOD+866JYIKOiJo4YphU2T4GH4qw+8LHTYuKcGqvf1Iay2P3ddGhyoChN7v
+rH/uvfBHb/oUF76ePSIWz+YnETK6qUMpJekJ6bck8I+aP33UlsGOl682WB2
S4okqSzO0Z4B8/vGJh8vS+GutFNzxWoGfvoPMYyDpPhiTtFYtpWB03oeBi+c
pSg8G6u2KIgBSbyq3RiXxN/ToqbMTGPgtX9LoHF5HyQJy78kZjLwqv3g9Kqc
PrjqC6O0shiws/FeGfaoD5OXrlemvGIg1M3U3eJCHy57KE5WK2XAauPqgYLl
fTiSFq6oSGeAF3Y0TyP/J9bbnR+VaDDxydsot7hMgoTfls+LtJjI3qA2vSVX
Au470fZrukwwlmZXKj2RINzeM03bgInmrGkHXoRL8N5h+TpHSybWbs6IkkGC
JY6y6OitTFRLHk86U9cLbQRrL7gt31c+kfqnS4yACdOy3hgm+mdpBcUSYuRV
cg69i2PCdvqqm9aNYmxfs71o83+ZmDIQb5+bL0b0Wou9p7KYwBKdrpNXxRhZ
L04t+8xE/vMU3rieGILNhxd7KRIwXO2i9Z+9PZCWq5hoKhMgdKZprnPrwbht
zrxaFQKio3Ebp67vgd48KcWBQmCfv+O0DxY9cOu/+I/ufALmuQv83iv04MPD
u5/bVxEYmfFUVz2nG3HiQt/dFwjQJXPTolS6kXLAa4/GFQKrBc1VpeNdyG79
s+NLBIHglaHJowNd+Fzh7GIfTQD21ZqpvC4MJ9Qt0U0mYJP9y9+3tAuBTuyh
tgICg8V7hmpCuuAUq5ToSRLwlp2NqeZ3om8gMr5RRmCNmN5fTXQic7/CPZdB
AmEcp+EGWidUlo7F2o0RKLK+WCP71Il26uCtmWos2J67OvvR006EzBJfajNj
oSmsOXnj4U48y/we4OnLwv3sI+VUqQjTPzyx9WxkYabAr7tCT4T8PSZz9Kgs
WBjl9LbMEGH3ULYiq5WFKq2GXaSqCKkOxd/92PL7LIelK8eEsCqiBZ/oZWHC
YsxAjy+EW8HUnBvT2Hglig4byRXi3qvTxvkubET4H6yev0kInUwXHc0KNop3
ae3dHCOAr91LhYQqNqze/uWjd0uAl3WqP3Vq2Eg4Jg2QXBNgFdlcM+cbG/o7
vwalnxfg0CrvMDOCjSD3wGaHAAEK24OJ1YNs8PrDFhk6CuCh9iD9hBUHaymW
E8USPu6fE1vUp3IwKTSj0cqHj9Qyh2NOmRz0dnt8H/DiI2ty1Ivc5xxo/tpR
Wb6Lj+Kk+QvicjkwNqLs3rOVD3ahxyyPEg7MMhhaeY58mPyuUOxo4+DSpYYV
XbP5yA9NbO9X70DEs0NX/Agems+vujb7cge+1f7gSgJ4cLZLmWl87Af8Jsvc
ueFcJAWPSpNNuFiYVHY+4e4PPE23uXDxCRfLvNds5tl1IO5Yub6ZDg/DJsKX
hhQOVvyv1qflOg8GY3UbbAzYGKlhlHOGedA3nfmHvZyFy15HSrqP8RHOddGc
d4aAbu043V3Ix5VE1cc+hUzcberVurFPgN01uasuqjNRtcWr5129ANcXRtOV
rzJAef6V67JeiGTWC8GElA79cyVn2wuEKHeItvO7QMdklqKJzQIRFhqt83dW
o2Oqofvv7ocinGucb971pB21TP2AjGmdCOgRdASjHZmnpWTR9U6syYkvDeS2
YW/GnMfJfzpxhiVW+nSnDY0u1bzzR7qg/XF/5FbnNuyrO+NayO1CwMOk4x/6
W5FVmb5N5t6Nhvjh26WvW9HkZnpyuKIbzZzzuoKQVlDK8l4fsO/B9IrUtW9t
WqGZWhJT87wHnr5w0RtuwSLfhju3DcR4GXXuo1VVCxQSvY23xYnRe9z1ufTv
FhQcWEMwx8TYlLMb1n4tiFS1zP8c2guZaU7uDOsWqC9+YJon6oWhTBR6VLkF
+QtVS4Z8JbgSahcdyqRheTntuFq7BG2PFRkheTScrZ39wcDlJ1xeGlBlMTQ0
vglaGFf+E5W2oiLLwzQI1ZfbKFj1oWT3lttXN9BAV/Ta45TShwHLsgnChAZR
67X0Fm0SrYNXlUaUaMjTX3TzxA0SCuKNZvc7qeAaDlN9o0i46gbH68hNMW2Y
vyOaRP+eHO0kERUhlidL7WJIaG36a3+ikApr57ey8QQS3C1xkxP5VLw5sNI/
PpPEDq+YJ8kdVLzOdHUuqiKxvbCq6XU7FR1Zc2JfVpOIut5AsZFbI6eX+aiG
RG2V+dGCNiqCC+6GRnwlwWiq8SlupcLqMzV3M5XEkpVCt2oaVd7zvXNZ8r90
iXNnL6eJCnbP4qONfBI1qlPG/eRW7xspqhSSiLwTVixspOLE4JOdz7pJ9DkZ
n5J8o8JiKv/OSSmJ+iUj/NF6KnzUCugHZCT2342wj5Q7VvOm6c4BEk2D9WnK
cktmmVXZD5EwF6QVaHylQl//H41FwyRmSOb5JtZRsc2wzmfuKInvKtsM9OS+
YvIwe/o4idORJgMptVTkmh8bmpggMZGW8cNI7n8B9SxM4g==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.3, 0.4},
  PlotRange->{{0.30769106857440903`, 1}, {0.27777907217978276`, 
    1.2401813281366454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.547318605838408*^9, 3.5473189624160147`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
bsA4pO0iyxJJ9QLRDkl7T4EbOAFZ2w6p7kmLB4oen74CzaCJSCd5FWnxPGli
JiNKbuigGTwZutDNfApZIE34M8JYXCmkfz4L0VBdWyRNTGdOqNd8Dt3gSSjn
UlQl0uJ+TLww3oBbH3gj87MjqjJp8Y9Zecz1DVD7LoF64nw0VhrLpYmpzED2
0bNIGDgRd68kqCqlxacwA3y8JkwMATd7Dd+CVdLEZNGDG4m0jYuvJqiMrYNh
kti0YdvATZgNc129qkZa50QmXldYCm7IFKRFHVfVSYt/xMRzT5yDlkRCZVY+
e3HpUNyLiWtDw6H3DqGv9hqkxcczcX4ZoB4bBMOnUSqTtPg4Jl5fUgGuvydy
Tl1WNUmLezLxMm0KtH1HoTQpU2WWFh/LxO8SVxMGfoS68mqVRVp8DBNPjjyC
+HHBfFOqrNLio5k4t/EgkmcIr/zQui1HMiH16r1Im7PSJiSzRheZW8t2ImPh
ehsjs/zwYEz8om3ICAu3Me2kGXexbEsikRIWYWPaSzMjGJO4bDsMS7famA7S
zIdivX52DLf9l9gYmalgOGNyLtxCsoevjXlQmhnGmFKyAOZHE2uTWXj4kMAI
1ffbXi3e78DuUGa3prgC+v5j6VEE+kTYw1CpnhQEf9v7LYemhzDT/Atq7t0x
qE3NEh7+gZl+iHkm+TZByQsXOcsa9+n0tXdzA7WyLL13reQNAJWhC8q/M3s6
Mijejjhks/eIQ08dbJIq2Wt25OlgZjn7shp6r9k2y4+2tCy9Iadkr9ORZdHn
mnIjdO95EvlG4aGwMcqYX7W9Jmcu3t0flVqDzVFmzlGf+4Ax3NrPkbkhysY8
Ls0MYkwxGcX1Hn425glpZiBj+EDX9Rtj62MyZ51EhpsSioKLv9jsyDDvM+bu
5VvQf7zQxjwpzQxgjNlsgXbAeFjqG4SHT9kxdDZ4j0n+ErwRBSd+tGl/Slq7
yBQYcpFkX1t/dM7cGjIVpoIiRUx/xhg+/w7py+xmgz9JM/0Y01TXAI7kt/wa
gj75D+eMnoyu9y7etNmRYd5lTHV2Hj2U1cw87ZxJGB2A6qw8Rcw7jLl304Ck
KfNtzDPOmYShpK5LKxQxbzMm4+wNpAQuszH/acfQiOnLJDVkKWSpqXUs2Uq7
yKSdvIi0hRttzJ+dM9xAL1hNTYqYvzEm83A0DPb5w1+cM4kDST9pNCli3mIM
ycZhmLbYxnRyzmiGkVYpLlPEvMmYotR7SPIMsDHPOmdukrVFjSFDEfMGY+qN
9UgePsXGPGfH0Nb/K5NMWBiBkuiLjiUltOsGeTXfc8aIdtIO/4CU1TttTGfn
DPdf3i1bUoZ5nTEVqTn0ZF4z08U5o5m6CJXJGYqY1xjDb+5zg71tjJtzJv3g
aaSSdXprRnn2KH0azNGsK9rVkkjlT3S2tutK9ih9Lsmh6T7MNF19jbEL+K7M
tPLsUeZ4jJzl5EWbcfenWEnLCrJHmcMZtuyRbUSR9fHk5jLIeCqXPcqcAnDk
aW9muSotF5qP7Qavbi0tK8geZd44y1nm3/8VC6dkWliWyx6VvP2Us8kHc4t6
ZjZlNi7p4XUuYIWNed45o532CSoMmS4xmhF+Lcsmw7BNTXpSmT823Mx0d86o
g9agVJ3sEqMdMa1l2ewZOiW8xCT53R7NpBCb5AvS2l9mDP8e/c6Zay4xXOva
kmHEsvFJOn8AvZnp4ZzJ/JIMuzu+donRjpsFk7HWJYY/Fd3CHxnmRcaUJ2ci
yc+u7/Z0zvDn1osvxbnGDPcBnbMUML0Yw4vrh/nYmF52DI2YnkzyHhlnDUu3
OJaU0K4jSXpVSrZrTOu+L8OIZeMTCP7MejPzonMm5+R5JK/b5xKjnRyK6twC
lxh16z4pw/QQ/eG3P0f625iXnDM5311G0uoolxjN9DD6DSKHDG39F0TPh3/c
0gsl2of7KmZEO/xMo5+1ysa87JzRL9+BvDNXXWL474hY7Bcqihj/lv7IMN0Z
01TfSM+aNjOvOGdyv71Izz20ZoQZ81ef5m8nY1LnvwyVmXltTIrH837tQXJH
k7xok1WLIptKzjXL2dII04lrtpydyaWpoXjIrq64HFqfUJuFV5V7I33cs6U3
zzNdGV98i9R930jbcvHAn5wtft1kzC9pY0tgXDp85igARTPqka0aiJlx1E9E
Rts6t5BhujGGX6toP5prY3o7Z7IPRyN1+xGXGO2M5fTsoUvMiFbjpSLGT5qh
I7gbk+RfJLP8UJCU+bqjGNRFvyRCN2etSwz/LccsMre6wnAkE6svr3aJaVNb
vzMj1hufIWo8Z9mY15wzd3682nIuVsAkfhKJe5fiXWL47+rxb49dYloPhfYM
jZguouQoGclW2kXGVFNPz+41M687Z+6du4akFTtcYpKXf4Y7Z6+7xPBR1lhd
6xKjcW+VvSlgtK3XCEoYF+x0ZkxFdgH0votszF+dM/x3rVMjvnTM0NZ/jknq
F25G4XWtS9r5VVuLTSgljMf0lp4rYLjWtfU72xHroJqsXdT+y23MG86Z7K9+
gCHyiEtM4pItyLumbcOIm4bOMz4zCk4MwtN/6ooePYWT6t1f9cINib0d0a5m
QjBMdY1t7CpK+0gRrDV6bPULh8Yo7NuZ6wpQZ5a3mdB6VJGxKX7trankMras
2g9NlcXhSWBR960xsxTrFk4C8F9aicMG79k4nF7Pn6q3ZXadGKQWtjYVKX2I
3avVL0Gfv21AWoPjyniWyZlq6qCdMMem+81Wuu0yOSG1egBNhWewKTKB/54n
rKXnMKC7O79RKmeG/+0KiUu2tjEjm8Q9QJo3GXsCJiB4w05ELvXChNVxqLTI
WkqJOER6wI9tLDmKfpHhc6XK21muMcJrPJcYbpS/y4xu5HSXmSTPmYoZMcjo
ryFZs8bGvGXH0HH5L6JkVpbwy0IcSUppv3IFuHTJNebQISA9vQ2juu9/AB4G
jLU=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"medianScaledSumNorm", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], "/", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
        RowBox[{"r", "+", "t", "-", 
         RowBox[{"2", " ", "r", " ", "t"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, {
   3.547312129012969*^9, 3.547312172914791*^9}, {3.547312523893662*^9, 
   3.547312570117124*^9}, {3.547312647770303*^9, 3.5473126690748377`*^9}, {
   3.54731291394738*^9, 3.5473129688112698`*^9}, {3.5473130411268387`*^9, 
   3.5473130569356813`*^9}, {3.547316839707315*^9, 3.547316853000552*^9}, {
   3.547317119329213*^9, 3.54731713437667*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 3}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547312945334552*^9, 3.547312969483954*^9}, 
   3.54731305782784*^9, {3.547316849368409*^9, 3.54731685411171*^9}, {
   3.5473171299875193`*^9, 3.547317134964613*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnHtwVcUdxy+5CUi1llbH1j4UFAgBMdqHWt+002qtyB/tiMXHTKTOgC0D
orXaPzodrVVHi6Oi+EDFqBC0IkZ8Isg7kpAI4REgvMIjgYS8CAl53fy639/Z
vfee7HnsOTeJaYdk7knuOfvZ329/+9vd3+6ec8bn3Dflrmk5902dnDP0upk5
M6ZMnXzv0F9PnylORQdEIgOmiM9dQyP4nyIRdeCfqTjILwH+P43/nE6t++bT
9Ekz6LGnH6MZk6bT/IpWK9+mIrrzshwqaiKnNFmMf8sAj1H92kfolhun0COz
n6WH786hR1bUUqegs6QKnXWFtHjONBr+7eE0bc5iKqzrDKKCP+6uQqbMg8S3
qoXj6Kwzh9HIzEzKFJ/hYydSQaOvGrIYQwzzcNVllLJG7Qp6+JYJ9Kd/PUOP
T7+F7l1USe3+1kizqvVUpUysmhaPv5DuWN1AXeK3YfUdlD0+n6pj0LOBNi7d
SA3trmkyg2TT2UYV8/5KT25qEimI2vc9T5dm309bWmg0ZxMlalhB1w69llY0
UMRSdLCJFtK0Pry7+MgoWb1dx0vp33c+QSVNXewZnS1V1NJpZIlIlmkeBno0
FkylGx4soSZgB+fR5WOn0aZmMz0GJFfwIOEO62lS5hX0dlWM1YlVLaQrRt1K
hU3KRN5pMg3SDJTm76rOpyvPu4FWN1LEqUrTDfJyqspTHPJX6TpqltOT/3iF
ShpjRvmPduCc8h+jztUsoavO/y2taTSzV3fzi2KMG3oNLau3+hqqW0bXDPtF
kod6p8k0SBPlNAOpvTKfZuUVU/Xxo1Q4axyNvCmPKjscG1e6QbZONZFhIiqd
YvXr6NFb/0y55Sfg4yYFHeOMGpVNlKarhcrnTaCLbxeNoNNIoEs7WRiv0zxR
p7c5thOnNN3biVMaqzAZ1L7nNfrjm/m0YPYTNOvVT2lXc1fc37zai1Oe7rXk
LOcCmb659AHKvuRR2tlqVj4nzqs8o+W1jpqVtGDuHHry/sn0l9zt1NxlJq97
9YgB5v3x2Ykeb9XtlH2T1eOlGaTJNEgTlUWMVeVTztM7SEQokbHKvPVf6NXi
kVeWA5fhkP8Y6d8dhz+kx5/aQI3C57uOfkxXD78RXY5J0bK8s3AqlZLa1bSF
cuduoAZhf3R0V4+YQGvNpMr6OU1Wc1tFHs287R6ONO65bSblVbRJOzlfy/Ll
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
/t/vHcED/gsQCrCz\
\>"]]
}, Open  ]],

Cell["\<\
Find all equations that match what we know so far about the eventual \
function: its asymptotes are the two axis-parallel lines through refPt/2 (the \
two limit expressions) and it is a hyperbola (the long equation and \
inequality). Looks like I was wrong and it is not a hyperbola. The conditions \
only hold if x and y are constant functions of r. (Later, it is obvious it is \
a hyperbola, I don't know where I went wrong here.)\
\>", "Text",
 CellChangeTimes->{{3.547378763237494*^9, 3.547378859176252*^9}, {
  3.5473788966649513`*^9, 3.547378897790078*^9}, {3.5473789316005487`*^9, 
  3.547378953858738*^9}, {3.547379326733573*^9, 3.5473793725500727`*^9}, {
  3.547390757884078*^9, 3.5473907743895397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"b", " ", "x", " ", "y"}], "+", 
      RowBox[{"c", " ", 
       RowBox[{"y", "^", "2"}]}], "+", 
      RowBox[{"d", " ", "x"}], "+", 
      RowBox[{"e", " ", "y"}], "+", "f"}], "==", "0"}], "&&", 
    RowBox[{
     RowBox[{"b", "^", "2"}], ">", 
     RowBox[{"4", "a", " ", "c"}]}], " ", "&&", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"y", ",", 
       RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "&&", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"x", ",", 
       RowBox[{"y", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", 
     RowBox[{"r", "/", "2"}]}], "&&", 
    RowBox[{"0", "<", "r", "<", "1"}], "&&", 
    RowBox[{"x", ">=", 
     RowBox[{"r", "/", "2"}]}], "&&", 
    RowBox[{"y", ">=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}]}], ",", 
   RowBox[{"{", "y", "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.5473780940045357`*^9, 3.547378186235491*^9}, {
  3.547378336104927*^9, 3.547378340014043*^9}, {3.54737851071954*^9, 
  3.547378570311448*^9}, {3.547378675033185*^9, 3.547378700148028*^9}, {
  3.547378909688429*^9, 3.5473789187386923`*^9}, {3.547379030260063*^9, 
  3.547379043291792*^9}, {3.547379095495343*^9, 3.5473790984698067`*^9}, {
  3.547379146433846*^9, 3.547379148370112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "<", "0"}], "&&", 
      RowBox[{"0", "<", "x", "<", 
       FractionBox["1", "2"]}], "&&", 
      RowBox[{"f", "<", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "c"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"2", " ", "c", " ", "e"}], "-", 
          RowBox[{"2", " ", "b", " ", "c", " ", "x"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "x"}], "-", 
          RowBox[{"4", " ", "c", " ", "d", " ", "x"}], "+", 
          RowBox[{"4", " ", "c", " ", "e", " ", "x"}], "-", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"4", " ", "b", " ", "c", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "\[Equal]", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "<", "0"}], "&&", 
          RowBox[{"0", "<", "x", "<", 
           FractionBox["1", "2"]}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", ">", "0"}], "&&", 
          RowBox[{"0", "<", "x", "<", 
           FractionBox["1", "2"]}]}], ")"}]}], ")"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", ">", "0"}], "&&", 
      RowBox[{"0", "<", "x", "<", 
       FractionBox["1", "2"]}], "&&", 
      RowBox[{"f", ">", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "c"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"2", " ", "c", " ", "e"}], "-", 
          RowBox[{"2", " ", "b", " ", "c", " ", "x"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "x"}], "-", 
          RowBox[{"4", " ", "c", " ", "d", " ", "x"}], "+", 
          RowBox[{"4", " ", "c", " ", "e", " ", "x"}], "-", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"4", " ", "b", " ", "c", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]}], ")"}]}], ")"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   RowBox[{"2", " ", "x"}]}], "&&", 
  RowBox[{"a", "\[Equal]", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["x", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "f"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", "c", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}], "2"]}], "-", 
      RowBox[{"d", " ", "x"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}], " ", "x"}]}], ")"}]}]}], "&&", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{"1", "-", "r"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.547378709801333*^9, 3.547379045087605*^9, 
  3.547379099321327*^9, 3.547379149209437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"y", "==", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], ",", 
   RowBox[{"{", "r", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547379704125637*^9, 3.5473797165338783`*^9}, {
  3.547379989778921*^9, 3.547379990827318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"r", "\[Rule]", 
    FractionBox[
     RowBox[{"x", "-", 
      RowBox[{"2", " ", "x", " ", "y"}]}], 
     RowBox[{"x", "-", "y"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547379718144853*^9, 3.547379991575755*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"y", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "r"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"r", "/", "2"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"r", "/", "2"}]}], ")"}]}]}], ")"}]}]}]}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"2", "b"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547380925763398*^9, 3.547380982299218*^9}, {
  3.547381059067523*^9, 3.547381067209166*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "b"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"b", "+", "x"}], ")"}]}], 
   RowBox[{"2", " ", "x"}]], "+", "y"}]], "Output",
 CellChangeTimes->{{3.547380964874194*^9, 3.547380983164584*^9}, 
   3.547381070749242*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"r", "/", "2"}]}], ")"}], "/", "2"}], "x"}]}], "\[Equal]", 
      "0"}], "&&", 
     RowBox[{"0", "<", "r", "<", "1"}], "&&", 
     RowBox[{"z", "\[Equal]", 
      RowBox[{"Limit", "[", 
       RowBox[{"y", ",", 
        RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}]}]}], ",", 
    RowBox[{"{", "z", "}"}], ",", "Reals"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.54738124915397*^9, 3.54738135994096*^9}, {
  3.5473813985625563`*^9, 3.547381421214219*^9}, {3.547381513113594*^9, 
  3.547381542469658*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "r", "<", "1"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{"r", "+", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
    RowBox[{"4", " ", "y"}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{"y", "\[Equal]", "z"}]}]], "Output",
 CellChangeTimes->{
  3.547381239322997*^9, {3.5473812967438583`*^9, 3.547381341162168*^9}, {
   3.547381387357424*^9, 3.5473814263207912`*^9}, 3.547381545043584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"r", "/", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "x"}], ")"}]}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5473820818472843`*^9, 3.547382104572688*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r"}], 
   RowBox[{"4", " ", "x"}]]}]], "Output",
 CellChangeTimes->{3.5473821051118298`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"r", "/", "2"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "r"}], ")"}], "/", "2"}], ")"}]}]}], "\[Equal]", 
     "0"}], ",", 
    RowBox[{"{", "y", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547384127349904*^9, 3.547384236864567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547384178017151*^9, 3.547384237437482*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.547385657851766*^9, 3.5473856812108603`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.5473856820221024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{
   RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.547385754146994*^9, 3.547385756814584*^9}}],

Cell[BoxData["0.3440108736849544`"], "Output",
 CellChangeTimes->{{3.547385746725821*^9, 3.547385757798616*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"foc", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"foc", ",", "foc"}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.547385801326215*^9, 3.54738580538375*^9}, {
  3.5473858383885*^9, 3.547385870688696*^9}, {3.547390792715378*^9, 
  3.547390793456942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"untrFoc", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
         RowBox[{"r", "-", 
          RowBox[{"2", " ", "x"}]}]], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"r", "/", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Orange", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"untrFoc", ",", "untrFoc"}], "}"}], "+", 
           RowBox[{"refPt2D", "/", "2"}]}], "]"}], ",", "Green", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "}"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "/", "2"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "/", "2"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.547381677454176*^9, 3.547381687307905*^9}, {
  3.5473854202701597`*^9, 3.5473856250268507`*^9}, {3.5473856686931877`*^9, 
  3.547385722158538*^9}, {3.547385760662657*^9, 3.547385763482342*^9}, {
  3.547385824970233*^9, 3.5473858269201307`*^9}, {3.547385878165723*^9, 
  3.54738603264205*^9}, {3.547386090374501*^9, 3.547386131887589*^9}, {
  3.547386204803734*^9, 3.547386230136971*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
AN3cColUKsWMYmDpQRn/L3XDf10=
      "]]}}, 
   {RGBColor[1, 0.5, 0], PointSize[Large], 
    PointBox[{0.6517019422593635, 0.5363198051105453}], 
    {RGBColor[0, 1, 0], 
     LineBox[{{0, 0.19230893142559097`}, {2, 0.19230893142559097`}}], 
     LineBox[{{0.30769106857440903`, 0}, {0.30769106857440903`, 2}}]}}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547385444850819*^9, 3.547385507280954*^9}, 
   3.5473857228035507`*^9, 3.547385764903829*^9, 3.547385827441921*^9, 
   3.547385894565304*^9, {3.547386024186795*^9, 3.5473860336449947`*^9}, {
   3.547386124480647*^9, 3.547386132419715*^9}, 3.547386231064177*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rQuotientForX2D", "[", 
   RowBox[{"x_", ",", "refPt_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xQuot", "=", 
       RowBox[{"x", "/", 
        RowBox[{"refPt", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
      RowBox[{"yQuot", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"refPt", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"xQuot", "+", "yQuot"}], ")"}], "/", "2"}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.547233545119871*^9, 3.5472336990874767`*^9}, {
  3.5472343664689827`*^9, 3.5472343837966957`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
A digression on the form of the reciprocal median quotient curve\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.547314941286628*^9, 3.5473149661960907`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "There were two interesting characteristics of the median quotients. First, \
the median quotient is 1for exactly two spectra for any given reference \
spectrum. First, the reference spectrum is given a quotient of 1. Second \
(unless the reference spectrum has a 0) is the spectrum with all equal \
heights (normalized ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    FractionBox["1", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") is also always unchanged for two dimensional spectra."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547314974114048*^9, 3.54731519065355*^9}, {
  3.5473152756170177`*^9, 3.547315296318137*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
       RowBox[{"r", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], "\[Equal]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], ",", 
    RowBox[{"{", "x", "}"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547314667412683*^9, 3.547314707941905*^9}, {
   3.547314822227365*^9, 3.547314826179538*^9}, 3.54731529631826*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", "x"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "<", "r", "<", 
       FractionBox["1", "2"]}], "||", 
      RowBox[{
       FractionBox["1", "2"], "<", "r", "<", "1"}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "x"}], "\[Equal]", "1"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "r"}], "&&", 
    RowBox[{"r", "\[LessEqual]", "1"}]}], ")"}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{3.547314678122054*^9, 3.547314710944695*^9, 
  3.547314827512681*^9, 3.547315296318329*^9}]
}, Closed]],

Cell["\<\
Second, the maximum reciprocal quotient is located along a lovely s-shaped \
curve.\
\>", "Text",
 CellChangeTimes->{{3.5473153035153503`*^9, 3.5473153501547337`*^9}, 
   3.547315513195568*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
        RowBox[{"r", "+", "x", "-", 
         RowBox[{"2", " ", "r", " ", "x"}]}]], ",", "x"}], "]"}], "\[Equal]", 
     "0"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473134553390923`*^9, 3.5473135116716967`*^9}, {
   3.547313550070256*^9, 3.547313567331184*^9}, {3.547313723145562*^9, 
   3.54731377379069*^9}, 3.5473144172239857`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", "r", "<", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"x", "\[Equal]", 
     FractionBox["1", "2"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "<", "r", "<", "1"}], "&&", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "-", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}]}], ")"}]}]], "Output",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547313473182349*^9, 3.5473135129545527`*^9}, 
   3.547313568154154*^9, {3.54731374520894*^9, 3.5473137744640703`*^9}, 
   3.547314417224423*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
       RowBox[{"r", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], ",", "x"}], "]"}], "\[Equal]", 
    "0"}], "&&", 
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
   RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], "]"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473134553390923`*^9, 3.5473135116716967`*^9}, {
   3.547313550070256*^9, 3.547313567331184*^9}, {3.547313723145562*^9, 
   3.54731377379069*^9}, {3.547313887680892*^9, 3.547313888463971*^9}, 
   3.547315453199176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "x", "<", "1"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "x"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"]}]}]]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5473138890281563`*^9, 3.5473154531996326`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"0", "<", "r", "<", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"r", "\[Equal]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{
      FractionBox["1", "2"], "<", "r", "<", "1"}], ",", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "-", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<X Coordinate of Reference Point\>\"", ",", " ", 
      "\"\<X Coordinate of Maximum Reciprocal Quotient Median\>\""}], "}"}]}],
    ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Location of Maximum Reciprocal Quotient Median\>\""}]}], 
  "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473139389639597`*^9, 3.5473139415316668`*^9}, {
  3.547314024774284*^9, 3.547314285272215*^9}, {3.547314319485633*^9, 
  3.547314320381287*^9}, {3.5473143528458157`*^9, 3.547314417224608*^9}, {
  3.5473145050018063`*^9, 3.547314510507934*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->{True, True, False, False},
  FrameLabel->{
    FormBox["\"X Coordinate of Reference Point\"", TraditionalForm], 
    FormBox[
    "\"X Coordinate of Maximum Reciprocal Quotient Median\"", 
     TraditionalForm]},
  PlotLabel->FormBox[
   "\"Location of Maximum Reciprocal Quotient Median\"", TraditionalForm],
  PlotRange->{{0, 1}, {0., 0.9998571632610126}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.54731408138936*^9, {3.547314259729109*^9, 3.5473142861676483`*^9}, 
   3.547314322668672*^9, {3.547314393437736*^9, 3.547314417224821*^9}, 
   3.547314511252987*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/gOLuSmkf3W67tJqav1WV9Z6rgcu9bbfPevid8+Vou7/qTb+X8STFor/P3z/
j+Kx4asp/lPiXWw5FWS10e/8v+E71qMXxX9KvQVU68X/FT0r/bZJrRvi01vR
Tin3AGI75XXSnon+7N1709rYG+qdKqlt62C8sOnvcNuOdlK0XUpDzlHb6wJC
VduWJp779oqDGYe//lTvpwMdjX+2XHO7jlafHNUpCW1//nHlP6sjMU6Q13BM
O5wgbBthOWFHIe5vnYAwQWRfcYD8x8YwdeTyDFmYCbXq48MZu3DbYGKCI5jd
+ihsn/oOatcULcAStVBZ+jInCkuPH8f6EW+gjsd7mLrlEq7snIvB/X0we+Np
3LgTLPqSHTWx9Z8IFBQU2zXB9xnEjEdbvkDDOpXxrOeX8L9MkUyo7wDy6JE7
SErUa1Kd+wDbQs5j86zBGL7oXyTkZuDqpkl416MuOo8IwKG9c3A92zHVl0Li
EB2d6oj17zbojtknklAEWFlviMa+ub3RuO7bzlgfczcNISGP7FvgYnMVP55M
og2PVWxMSDr5I65ysSlrUXTCMysrHwcPRNnhqYkuR9y86art8L/uvM6Wzdfc
rrPpb/fbKQlthw/fRlparl0daXjYwcVZPwx9uylefKYsnnq6Cuq91gfTt0bB
YEY9B9A3byYhPDzBDprLHCnooKl489Pp2HzxHtLzjTDmp+Hu+b8w5f1W+Hyb
FJCgJhG8idzcIuzadcO+CSYRxifYN2IFbuRaJMKcG4HFXwTgvsYc5IeCdstR
R1vknOuYt/WhMBFtVFTsH4KsacwTV5EF5Tf9QLyt8itG/P4ZVinWQN6+/Try
84s1kfXX8MPY40g1WZGNSTg0+mfczHWMTMMYEfHEHpnNbWMitnevjw5DVuBS
ptEyt4uSzmPt96+jcd/TyDCrzm3eQl5ekaj3lC3wczhjTjzik7NRICzlakLH
XWJ2y14HCcfipRCDA3/Bp81eQMVyFfFC8174RYwqUOcAx93w+2UYjSZt3Pxo
/Pb1PByKzkChsRAZ0Ycw7+slFPkn0zwc7eLFh+L00EQTVNmM/fEo5nSIEvCj
pgRwXBp9pm00qVwiUHnwdhryi/ORdvugQOVSK5UKXM799esUXH1Nnau9mtcQ
uVqjRW/MDxRXJYe4NOIZGXl2uGoai9d5cD9DXM6c0eLqCFdkuGtWh9j2sb2b
I6yB+/df4dDrC7Vx3RxrjnvvXrotH1TodWesn2G4AWsv2fLhVXX+ujrWHHeH
oJ1sxlqJa85A6NIjSLAwwozM62sRrXeMm5qaiz27b2jgCjouNxKTWz4PCk+3
HA5VtUQCUGiKHXYlGS/MZhkv2ilpzsWtgLH4+TILBhOeaSFzEKExdhw3OOgR
rl1N0MAVaDZcxfetO2PNgyLrIZe5mLXhmGaTyQz/NSF22GpzqjKrQ5u++Phs
a522in5SSMnJOfi0xYt4pmx5PF+/K0ZuFgMKVPvJcUmr/77+sjZu7k3MG7MW
F+NyUGQsQHrUHkz2/laM6rBqTeYuEbcnNjNJ8tRaDApTNqIOx0A839Vfh++S
i0hjwmTS38GOebvxuEidYN5ESoqB77Zsm5A2xzCE00GjoG8lOSpT7S2HcsSj
XYgHBoOMcsnRa5nLzmSd4yQl6bFta4QdjtrYPs/q0IYlJ6fAWkc6DLBYwWS3
JJ05g4QC2YGqQE9O9G481LALODbNZ2Z12mBLC5IYoz7x9Y+xMyERB72roow4
91yagVVYC7RC0Ay3tNDSnnM5d3bggQalHIdWRraK2eBYJLE4GWc334WB13Qy
Ijy469TJGNyITLTitpDjkvaJwJimlfCUG9qHY5PmWbE8iGa0CjbNygI82LIY
R+MKLNonPfQXXNfQPtUY7r2YNBzYf8tKc3MFzXk3sWhyGMVL6zxVcKqzcrRH
oQljwWmmoC/7Ij73nosgPgtJO4b+LNJXmY1OaUJr1Fw6nLbCQiNWrQgiHqrT
ZkrH6QkdUePpMmB5S3xcmCYtdWSJGnkvMPLI+Dt2NNrKOmkGWxa1rMgAEj3x
0zOcZDcjKMqrtF+DlSNVSsrE0r50NOeSW1EjJMDqSeRjQD6M5csuWsegiWIM
KOxwZhd0mh+F+OM+aPLc82j23T4kFfMxcP8YXI3pL7Jyt24m4/Ch29ZON1bQ
Y7iOmT/swX1DEk79uB3RmXfxZ5+BCM6W0VPyc2A10moy0mjNefgw00paIwVp
2WEYtyQUaYnnsCIkHcW50dj961mkGvlUKtHpqCOSyI7wWxZImlOdpOIEbPus
HiqUYbNHVwYVG49GhIYmfonh0prBdmnSj1LYoVWjG1NwbsZKTTu1FitH+9Fj
x2RTqKGcPgoKisLyE4miXaqmxWqzcuQBstHgDSQcvj7mxfyFCe83RKWnZBq8
TDlU7/orYgrUaazD6tK6b6MhPRU8zArDxO2PUMRrCjzdP3gkLuc4xi0qMmGl
oN0sY6PELUxFSKyeBYzTnyJkCPzKN6vj1mW4mZn54j5I2OlKP3pIuGr2BVu5
RLtx1cpg6yyvr6BFsC/id45Gl5cro1y5SqjZ4mP8eDRJ07fDvsPt2ym2plg9
Ba6gdefM2IPAfyYiNDkLD4PXw6fbOFwzqOMyr4HoyyCvlwX3FQVuzhVMmn8G
4QJumLhKZyNk7DiEaYxJfYZ7+tQ9nDl9z4r7sgLXlIXg6Z1Rs/aHCMwqxJOD
K7BgWyyFDajiejDcA4J82rjR6srGRKzCpFvkFvlILSXraI8er0M2Bu1y7txO
cVqngawOzWBhEZN+rK1dp6GsDlmikdcTpR9raddpxOrQzjnimszrVFPBUTd3
+o1lfLoSFm/FfVGB6+ZOvwnDpR2ujX+6hgLXzZ0+442ooY4fl2m6F+zpdWen
34zhXgx8gO3brltxq6vz19WdfnOGS+ssyYdFi1RT4ObcxOKjT2R8cGxrt2C4
cXFZoj1s0XqSoWzxQpoNuLV6IF6r+xzKlykjNOeaud2SwdPCRAue8K/0YxUG
z7aX2eGY/GsoxFhnpd52su9vxZqg/TD1QLDApR+fZ01UkAoWxsLvzbYYJlgc
5qJM3IjPE7OPXXUBtGblaOkmIT93Nlb6Udo/2mzveJ2GKjhtWbnz5+6LOJYN
iGRqyFRPO1aSnFG0COTmFkklK8lKKtBfZXWys/NFZggLiPTjM9p12rM65IIl
2/Vy6GPpx4radTrIekFOUYs4OoiK6cjqPH4siVpqikH6sTwbKOZKz47ELyGp
FrOXBZGZinMRe8gXEdmqvu7XGTjtTciffCkkTvqxHANnTgaKeKyqszgZnMnv
Gwz2pLAVpcMFSz9Z8BbfjOuvwKdpFdTu0B/T159CjN5kTeLJR+yBHxCuIb4s
3gGPHmVi6ZJAJPARY3F9lvDyojRc37cEI99vhCpVG+P9Eb9id3iKOE3MxQYU
a5gfXRg+mTXUA8Gsk3601UXZt49i1fieaFGtMmp3HIAZGwORXqwO2Y1BXr2a
IO4DBWHTSd57S7qQyXAPJ1YMxUe9R2PpfinTQg3Km0GR64mMI2Hp0BklKOuJ
rBE5d45j3Xxf+C7YiFMxou1VXwXtTYZ24kSMeA5eVGTUFdkOlDEbEftWY9GC
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
TwRaDEhLOUaw+K1KtISuzP8Chubv9A==\
\>"]]
}, {6}]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2D PQN (the easy way)", "Subsection",
 CellChangeTimes->{{3.547291959347453*^9, 3.54729196525014*^9}, {
  3.547292023656331*^9, 3.547292027483858*^9}}],

Cell[TextData[{
 "Because 2D is such a special case (the median is the same as the mean and \
the reference spectrum can be specified by one variable), the entire \
normalization procedure can be viewed in three simple steps. First, sum \
normalize to half of the sum you would otherwise choose and choose the \
reference spectrum. This makes the reference spectrum ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " equal to ",
 Cell[BoxData[
  FormBox[
   FractionBox["r", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in the original procedure."
}], "Text",
 CellChangeTimes->{{3.5472919726738443`*^9, 3.547291974123293*^9}, {
  3.547292030206709*^9, 3.54729210372537*^9}, {3.54729223810205*^9, 
  3.547292243356351*^9}, {3.547292327120686*^9, 3.5472923282844353`*^9}, {
  3.547390844732553*^9, 3.5473909132786694`*^9}, {3.547394307350122*^9, 
  3.5473943078458548`*^9}}],

Cell[TextData[{
 "Second, call the coordinates of our new refrence point R, we can then \
construct the hyperbola ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", " ", "y"}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["R", "x"], " ", 
     SubscriptBox["R", "y"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " on the coordinates system with R as the origin."
}], "Text",
 CellChangeTimes->{{3.547392516942787*^9, 3.5473925685766373`*^9}, {
  3.547394314619931*^9, 3.547394315755945*^9}}],

Cell["\<\
Finally, intersect the lines to our original spectra with this hyperbola to \
get the final, scaled spectra.\
\>", "Text",
 CellChangeTimes->{{3.547392576621792*^9, 3.5473926076755323`*^9}, {
  3.547394323588785*^9, 3.547394338885096*^9}}],

Cell["This whole procedure can be represented in one diagram.", "Text",
 CellChangeTimes->{{3.5473926149582777`*^9, 3.547392625248283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"twelfthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "originToPoints2D", ",", "finalScalingPlot2D", ",", 
       "scaledPoints2DPlot", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<sum=0.5\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.15"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "Magenta", ",", 
          RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"#", "/", 
               RowBox[{"Total", "[", 
                RowBox[{"2", "#"}], "]"}]}], "]"}], "&"}], ",", "orig2D"}], 
           "]"}], ",", "Green", ",", 
          RowBox[{"Point", "[", 
           RowBox[{"refPt2D", "/", "2"}], "]"}], ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}], "}"}]}], "}"}],
            "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", "0"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", "2.5"}], 
              "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Reference point\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"2.0", ",", "0.2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", "Orange", 
          ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Hyperbola from\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "2.1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<reference point\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "1.98"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547392764664187*^9, 3.547393102077201*^9}, {
   3.547393188943568*^9, 3.54739321167036*^9}, {3.547393286812169*^9, 
   3.5473938136999493`*^9}, {3.547393871707777*^9, 3.547393871821124*^9}, 
   3.547393998020854*^9, 3.547394118732957*^9}],

Cell[BoxData[
 RowBox[{"twelfthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "twelfthDiagram", ",", 
    "\"\<Figure 12: Probabilistic quotient normalization process in one \
diagram.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547394004300308*^9, 3.5473941187330923`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{2.172454345958343, 1.7744919345405104`}], 
       PointBox[{2.675301724350803, 1.359406145521423}], 
       PointBox[{2.87830990460933, 1.4709889319173473`}], 
       PointBox[{2.8813454193984884`, 1.073276896492814}], 
       PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
       PointBox[{2.26005835257858, 1.7655977040112563`}], 
       PointBox[{1.398151988227432, 2.097238014713233}], 
       PointBox[{3.0861624358478528`, 0.9274842729247682}], 
       PointBox[{2.255768229218814, 1.8706253682049265`}], 
       PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
       LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
       LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
       LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
       LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
       LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
       LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
       LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
       LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
       LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
       LineBox[{{0, 0}, {2.6917625635090703`, 
         1.2898265639379862`}}]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       LineBox[CompressedData["
1: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
/NGTjP8D83/w7Q==
        "]]}}, {
      RGBColor[
       NCache[
        Rational[4, 9], 0.4444444444444444], 0.22222222222222227`, 0], 
      PointSize[Medium], 
      PointBox[{{0.5431288103358621, 0.4436354186915789}, {0.6861536917911115,
        0.34865657839748754`}, {0.6839853356873696, 0.3495575152552775}, {
       0.8239683316769922, 0.30692126250356366`}, {0.5615509147589944, 
       0.4253971550894395}, {0.5538566621048238, 0.43268265611279816`}, {
       0.4358964095706468, 0.6538477421096109}, {0.9475904367568392, 
       0.2847793159093485}, {0.5395944657367983, 0.4474657826437218}, {
       0.7090240824172893, 0.3397469406742102}}]}, {{
       RGBColor[1, 0, 0], 
       LineBox[{{0.5, 0}, {0, 0.5}}], 
       InsetBox["\"sum=0.5\"", {0.5, 0.15}, {-1, 1}]}, {
       RGBColor[1, 0, 1], 
       PointSize[Medium], {
        PointBox[{0.27520698174840214`, 0.22479301825159792`}], 
        PointBox[{0.33153598855665434`, 0.1684640114433457}], 
        PointBox[{0.330893554661782, 0.16910644533821798`}], 
        PointBox[{0.3643009609059321, 0.13569903909406786`}], 
        PointBox[{0.28448858248703607`, 0.21551141751296393`}], 
        PointBox[{0.2807068364520307, 0.2192931635479693}], 
        PointBox[{0.19999942596551018`, 0.30000057403448976`}], 
        PointBox[{0.3844586556537765, 0.11554134434622354`}], 
        PointBox[{0.27333410833944355`, 0.2266658916605564}], 
        PointBox[{0.33802615957450555`, 0.1619738404254944}]}, {
        RGBColor[0, 1, 0], 
        PointBox[{0.30769106857440903`, 0.19230893142559097`}], {
         Dashing[{Small, Small}], 
         LineBox[{{0, 0.19230893142559097`}, {3, 0.19230893142559097`}}], 
         LineBox[{{0.30769106857440903`, 0}, {0.30769106857440903`, 2.5}}], 
         InsetBox["\"Reference point\"", {2., 0.2}, {-1, 1}], {
          RGBColor[1, 0.5, 0], 
          InsetBox["\"Hyperbola from\"", {0.4, 2.1}, {-1, 1}], 
          InsetBox["\"reference point\"", {0.4, 1.98}, {-1, 1}]}}}}}}, 
    AspectRatio -> Automatic, Axes -> True],
   "\"Figure 12: Probabilistic quotient normalization process in one diagram.\
\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473940839874*^9, 3.5473941187331657`*^9}}]
}, {3}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D PQN", "Subsection",
 CellChangeTimes->{{3.547394423389923*^9, 3.5473944252311497`*^9}}],

Cell[CellGroupData[{

Cell["Sum-normalize", "Subsubsection",
 CellChangeTimes->{{3.547401955719198*^9, 3.547401957963032*^9}}],

Cell["\<\
The PQN with 3D spectra starts out similar to 2D PQN. Figure 13 shows a group \
of spectra normalized to a constant sum of 1. I only show the first quadrant \
because of my earlier assumption that all points are positive.\
\>", "Text",
 CellChangeTimes->{{3.547395775886613*^9, 3.547395877526016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1.2", ",", "1.3"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", "8", "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.4"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", "8", "}"}]}], "]"}]}], "]"}], "/", "2"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473945285194893`*^9, 3.5473948433459167`*^9}, {
  3.547394949185137*^9, 3.547394958418416*^9}, {3.547396148016735*^9, 
  3.547396148150931*^9}, {3.547396332991932*^9, 3.547396335781905*^9}, {
  3.5473964703163843`*^9, 3.54739647472621*^9}, {3.547396505240793*^9, 
  3.547396519924708*^9}, {3.547396882736618*^9, 3.5473968928435097`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"orig3D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.7887122746455992`", ",", "1.370162229032098`", ",", 
       "0.6331315511805435`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.7458987631156281`", ",", "0.7715290755810482`", ",", 
       "0.6148123738797091`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.657133266164412`", ",", "0.9221468105687936`", ",", 
       "0.6040697246875196`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5857304644159957`", ",", "0.5419021027040107`", ",", 
       "0.6173275066394556`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6919142797105331`", ",", "1.4387362033967048`", ",", 
       "0.6247078566848845`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5457398713571942`", ",", "0.8830657889311706`", ",", 
       "0.6314481246718616`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6175342173424286`", ",", "0.7957609324327515`", ",", 
       "0.6258393391396256`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9921345376422709`", ",", "0.690496919850571`", ",", 
       "0.6062680422006831`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5768632417698818`", ",", "0.7497757265321776`", ",", 
       "0.19303894295071117`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5084130070212706`", ",", "0.6455535679017173`", ",", 
       "0.17770724565742288`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.552620580638311`", ",", "1.0787269445880796`", ",", 
       "0.17767927573922487`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8527000484773908`", ",", "0.7900375918166862`", ",", 
       "0.1618452370779209`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8558169686389362`", ",", "0.8381051726099`", ",", 
       "0.19646170205328767`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9128626837404124`", ",", "1.2855838089650504`", ",", 
       "0.1525320368241421`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5595750105400437`", ",", "1.4879212199688876`", ",", 
       "0.19946889532440698`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6276434675023799`", ",", "1.3262524986373982`", ",", 
       "0.1958156408376076`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547396860077684*^9, 3.547396892843906*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNorm3D", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", "orig3D"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547396082040235*^9, 3.547396106215727*^9}, 
   3.5473968928441067`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thirteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Point", "[", "orig3D", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
           "&"}], ",", "orig3D"}], "]"}], "]"}], ",", "Red", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "Magenta", ",", 
       RowBox[{"Point", "[", "sumNorm3D", "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9}],

Cell[BoxData[
 RowBox[{"thirteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "thirteenthDiagram", ",", 
    "\"\<Figure 13: Sum-normalizing points in 3D.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547396690052643*^9, 3.54739673912817*^9}, 
   3.54739689284453*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    InsetBox[
     Graphics3DBox[{
       RGBColor[0, 0, 1], 
       PointSize[Medium], 
       Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAA0s8xhiE96T9lhL46L+z1P6BbTBmd
QuQ/0as2FWfe5z8wFHG+XbDoP8ip3/+KrOM/JkbpVzwH5T8cHjAHOoLtP/8r
AQiKVOM/xACe0E2+4j9e6hcUQ1fhP4MBfp0lweM/lL9faikk5j+Sj9JAEAX3
P7aBwFSb/eM/1EZzdrN24T9KoHUvE0LsP/XBkrLSNOQ/qbF0HtfC4z/UdYeh
33bpP0/1xDjgBuQ/9foM7pC/7z/m5hf/jBjmP4mUuzyMZuM/YFG15ql14j98
ShmqKf7nP4ryaQWAtcg/V47AWutE4D8Yh770X6jkP/cwLmwcv8Y/uQQeWxGv
4T/tHUUvd0LxP0YMPcsxvsY/mkGwnFFJ6z8Q027q/EfpPzGrIUBYt8Q/mVB1
RNpi6z9++V7wwdHqP34gnjSoJck/cOyMzSs27T8gWvxTwJH0PylA4HYrhsM/
/LQ92gno4T8Ypyx7hs73P95o/l4yiMk/eBDPwKcV5D+wLD6KVDj1P+StuKZ8
EMk/CqnDlw==
        "]], 
       Line3DBox[{{{0, 0, 0}, {0.7887122746455992, 1.370162229032098, 
          0.6331315511805435}}, {{0, 0, 0}, {0.7458987631156281, 
          0.7715290755810482, 0.6148123738797091}}, {{0, 0, 0}, {
          0.657133266164412, 0.9221468105687936, 0.6040697246875196}}, {{0, 0,
           0}, {0.5857304644159957, 0.5419021027040107, 
          0.6173275066394556}}, {{0, 0, 0}, {0.6919142797105331, 
          1.4387362033967048`, 0.6247078566848845}}, {{0, 0, 0}, {
          0.5457398713571942, 0.8830657889311706, 0.6314481246718616}}, {{0, 
          0, 0}, {0.6175342173424286, 0.7957609324327515, 
          0.6258393391396256}}, {{0, 0, 0}, {0.9921345376422709, 
          0.690496919850571, 0.6062680422006831}}, {{0, 0, 0}, {
          0.5768632417698818, 0.7497757265321776, 0.19303894295071117`}}, {{0,
           0, 0}, {0.5084130070212706, 0.6455535679017173, 
          0.17770724565742288`}}, {{0, 0, 0}, {0.552620580638311, 
          1.0787269445880796`, 0.17767927573922487`}}, {{0, 0, 0}, {
          0.8527000484773908, 0.7900375918166862, 0.1618452370779209}}, {{0, 
          0, 0}, {0.8558169686389362, 0.8381051726099, 
          0.19646170205328767`}}, {{0, 0, 0}, {0.9128626837404124, 
          1.2855838089650504`, 0.1525320368241421}}, {{0, 0, 0}, {
          0.5595750105400437, 1.4879212199688876`, 0.19946889532440698`}}, {{
          0, 0, 0}, {0.6276434675023799, 1.3262524986373982`, 
          0.1958156408376076}}}], {
        RGBColor[1, 0, 0], 
        Opacity[0.85], 
        Polygon3DBox[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}}], {
         RGBColor[1, 0, 1], 
         Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAW0rsqE4U0j9MlYqKXGjfP7NAEpmp
Bs0/ngx1dXBj1j8tEIuJYSjXPzfj/wAudNI/KJbvzCtD0z+zyDug2QfbPyah
1JL6tNE/nU6WV5171T/szWiHGODTP3bjACFKpNY/HcTBaEgS0D+HUb+Wh7Xg
P6kxf9NQBc0/VbTupvPz0D9W/Gwygm7bP1VPpCaKndM/RcHVosBh0z+lCZ/j
w/nYPxU1i3l7pNM/s30GUbm92z/y15chmE7TP1qqYY2u89A/SG124EtL2D/l
88aIgZPfP6g9hS1lQsA/LBqzFypv2D/gd6KbcgbfP+fbVJnGFME/SVd21vmM
0z9mfQWu6BTjP5y3+jXTJLk/1/dIJsE93j+opEvb1QTcPwqOrfmj9bY/O4H7
nmL53D81iTlv4F/cPzrWK8fzmro/WjnXfsDZ2D9H/T8KoH/hP1Ywo7L9m7A/
yYHtpWjgzz97xpc9rDDlP5PIZsfMubY/P7M3qZOv0j98PvckAr7jPyU/ZzOg
Ubc/QEvILA==
          "]]}}}, AspectRatio -> 0.6826228964509987, Axes -> 
      True, AxesLabel -> {
        FormBox["x", TraditionalForm], 
        FormBox["y", TraditionalForm], 
        FormBox["z", TraditionalForm]}, Background -> None, ImageMargins -> 
      0., ImageSize -> {360., 403.67588722577744`}, 
      ViewPoint -> {2.7028583306915155`, -2.001748577592822, 
       0.37089011353309126`}, 
      ViewVertical -> {0.6120637778795446, -0.2831708283594404, 
       1.2890940854588477`}], {0., 63.789883046659725`}, 
     ImageScaled[{0., 0.}], {360., 404.}, ContentSelectable -> True], 
    AspectRatio -> 0.8157663534049373, Background -> None, ContentSelectable -> 
    True, ImageMargins -> 0., ImagePadding -> 0., 
    ImageSize -> {360., 293.67588722577744`}, 
    PlotRange -> {{0., 360.}, {57.04576549830023, 350.9574461156155}}, 
    PlotRangePadding -> None],"\"Figure 13: Sum-normalizing points in 3D.\""},
  
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5473967412573*^9, 3.547396892844736*^9}]
}, {6}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Choose the reference", "Subsubsection",
 CellChangeTimes->{{3.547401961196087*^9, 3.547401965083189*^9}}],

Cell["\<\
After sum-normalizing, you choose a reference spectrum. Note that, unlike the \
2D case, the reference spectrum is not necessarily sum-normalized. Figure 14 \
shows one such case.\
\>", "Text",
 CellChangeTimes->{{3.547396919795761*^9, 3.5473969456337442`*^9}, {
  3.5473981260477457`*^9, 3.547398147665278*^9}, {3.547398184655978*^9, 
  3.547398200809556*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"refPt3D", "=", 
   RowBox[{"Median", "/@", 
    RowBox[{"Transpose", "[", "sumNorm3D", "]"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54739704948209*^9, 3.547397093422785*^9}, 
   3.547398357701996*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "Magenta", ",", 
       RowBox[{"Point", "[", "sumNorm3D", "]"}], ",", "Green", ",", 
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", "refPt3D", "]"}], ",", 
       RowBox[{"Opacity", "[", "1", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9, {3.547396996128675*^9, 3.547397011004944*^9}, {
   3.547397101720193*^9, 3.547397109851194*^9}, {3.547397214672595*^9, 
   3.547397243994307*^9}, {3.547397285255617*^9, 3.547397311333056*^9}, {
   3.547397415816349*^9, 3.547397524495929*^9}, {3.547397557249049*^9, 
   3.547397634329254*^9}, {3.547397695337129*^9, 3.54739777423074*^9}, {
   3.547397901273827*^9, 3.5473979954100533`*^9}, {3.547398085123536*^9, 
   3.547398102047306*^9}, 3.547398287600065*^9}],

Cell[BoxData[
 RowBox[{"fourteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fourteenthDiagram", ",", 
    "\"\<Figure 14: A reference spectrum that is not sum-normalized derived \
from sum-normalized spectra.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "->", "Times"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473982080684347`*^9, 3.5473982818753777`*^9}, {
  3.5473983341463118`*^9, 3.5473983577023983`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     RGBColor[1, 0, 0], 
     Opacity[0.85], 
     Polygon3DBox[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}}], {
      RGBColor[1, 0, 1], 
      Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAW0rsqE4U0j9MlYqKXGjfP7NAEpmp
Bs0/ngx1dXBj1j8tEIuJYSjXPzfj/wAudNI/KJbvzCtD0z+zyDug2QfbPyah
1JL6tNE/nU6WV5171T/szWiHGODTP3bjACFKpNY/HcTBaEgS0D+HUb+Wh7Xg
P6kxf9NQBc0/VbTupvPz0D9W/Gwygm7bP1VPpCaKndM/RcHVosBh0z+lCZ/j
w/nYPxU1i3l7pNM/s30GUbm92z/y15chmE7TP1qqYY2u89A/SG124EtL2D/l
88aIgZPfP6g9hS1lQsA/LBqzFypv2D/gd6KbcgbfP+fbVJnGFME/SVd21vmM
0z9mfQWu6BTjP5y3+jXTJLk/1/dIJsE93j+opEvb1QTcPwqOrfmj9bY/O4H7
nmL53D81iTlv4F/cPzrWK8fzmro/WjnXfsDZ2D9H/T8KoH/hP1Ywo7L9m7A/
yYHtpWjgzz97xpc9rDDlP5PIZsfMubY/P7M3qZOv0j98PvckAr7jPyU/ZzOg
Ubc/QEvILA==
       "]]}, {
      RGBColor[0, 1, 0], 
      PointSize[Large], 
      Point3DBox[{0.32057466267114804`, 0.4640601923965809, 
       0.1800856247610254}], {
       Opacity[1], 
       Line3DBox[{{0, 0.4640601923965809, 0.1800856247610254}, {
         1, 0.4640601923965809, 0.1800856247610254}}], 
       Line3DBox[{{0.32057466267114804`, 0, 0.1800856247610254}, {
         0.32057466267114804`, 1, 0.1800856247610254}}], 
       Line3DBox[{{0.32057466267114804`, 0.4640601923965809, 0}, {
         0.32057466267114804`, 0.4640601923965809, 1}}]}}}, Axes -> True, 
    AxesLabel -> {
      FormBox["x", TraditionalForm], 
      FormBox["y", TraditionalForm], 
      FormBox["z", TraditionalForm]}],
   "\"Figure 14: A reference spectrum that is not sum-normalized derived from \
sum-normalized points.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547397311862522*^9, 3.547397527342972*^9, {3.547397606876594*^9, 
   3.547397636587237*^9}, {3.547397728269095*^9, 3.547397775075294*^9}, 
   3.547397956831068*^9, 3.5473979962341137`*^9, 3.547398103037161*^9, 
   3.547398290771674*^9, 3.547398357702662*^9}]
}, {4}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Form the r-quotient plane and divide into median regions", \
"Subsubsection",
 CellChangeTimes->{{3.5474019807543917`*^9, 3.5474020051123257`*^9}}],

Cell[TextData[{
 "Now, we form the reciprocal quotient plane from the sum-normalized plane by \
dividing all points by the reference spectrum, R. We assume that none of the \
coordinates of R is 0. This forms the plane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", ",", "y", ",", "z"}], ")"}], "\[CenterDot]", "R"}], "=", 
    "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Since we are in the first quadrant, the section of the plane we are \
interested in is a triangle. If we draw lines cooresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ,",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "z"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "z"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we will divide the triangle into 6 regions. On each of these regions, the \
median is one of the coordinates of the plane. These lines all intersect at \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"y", "=", 
     RowBox[{"z", "=", 
      FractionBox["1", 
       RowBox[{
        SubscriptBox["R", "x"], "+", 
        SubscriptBox["R", "y"], "+", 
        SubscriptBox["R", "z"]}]]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where the reciprocal median quotient is ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     SubscriptBox["R", "x"], "+", 
     SubscriptBox["R", "y"], "+", 
     SubscriptBox["R", "z"]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Along each line, the median is the value of the two equal coordinates. \
So, on the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the median is ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " or equivalently, ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Each region is bounded by two lines. The median in that region is the \
variable that is common to its two bounding lines. So, the median of the \
region bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "z"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". If ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are the coordinates of a line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "==", "b"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the non-included coordinate. The lines run from the corner where ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is non-zero to the opposite edge where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{"b", "=", 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["R", "a"], "+", 
       SubscriptBox["R", "b"]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547398429192198*^9, 3.547398431425383*^9}, {
  3.547398461790782*^9, 3.5473984879253883`*^9}, {3.547399887002164*^9, 
  3.547399921462243*^9}, {3.547400003533226*^9, 3.54740010044049*^9}, {
  3.5474010654678164`*^9, 3.5474011394618387`*^9}, {3.547401221127473*^9, 
  3.547401255962309*^9}, {3.547401318779447*^9, 3.5474013565599947`*^9}, {
  3.5474014118501787`*^9, 3.547401511571314*^9}, {3.547401805871662*^9, 
  3.547401817221616*^9}, {3.547401847556612*^9, 3.5474019399803743`*^9}, {
  3.5474020355022593`*^9, 3.547402101266095*^9}, {3.547404353030405*^9, 
  3.547404565900749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0", "<", "rx", "<", "1"}], "&&", 
     RowBox[{"0", "<", "ry", "<", "1"}], "&&", 
     RowBox[{
      RowBox[{"t", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}]}], "\[Equal]", 
      RowBox[{"rx", "/", "ry"}]}], "&&", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{"t", "/", "rx"}]}], "&&", 
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], "/", "ry"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "t", ",", "rx", ",", "ry"}], "}"}], ",", 
    "Reals"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474022446392317`*^9, 3.547402309313661*^9}, {
   3.547402720531225*^9, 3.547402831337352*^9}, {3.547402868273469*^9, 
   3.5474028731079893`*^9}, {3.547402965985022*^9, 3.5474030675686827`*^9}, {
   3.547403143994239*^9, 3.547403228826315*^9}, {3.547403332166478*^9, 
   3.547403428704777*^9}, {3.547403692830295*^9, 3.547403721919084*^9}, {
   3.547403957062478*^9, 3.547403981580202*^9}, {3.5474040595568132`*^9, 
   3.547404081392223*^9}, 3.547404992246944*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", "y"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", ">", "1"}], "&&", 
      RowBox[{"0", "<", "t"}], "&&", 
      RowBox[{"t", "<", "1"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"t", "+", "x"}], ">", "1"}], "&&", 
      RowBox[{
       RowBox[{"2", " ", "x"}], ">", "1"}], "&&", 
      RowBox[{"t", "<", "x"}], "&&", 
      RowBox[{"x", "\[LessEqual]", "1"}]}], ")"}]}], ")"}], "&&", 
  RowBox[{"rx", "\[Equal]", 
   FractionBox["t", "x"]}], "&&", 
  RowBox[{
   RowBox[{"rx", "+", "ry"}], "\[Equal]", 
   FractionBox["rx", "t"]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547402749025425*^9, 3.547402834499711*^9}, 
   3.547402873763077*^9, 3.547402967383053*^9, 3.547403112810112*^9, {
   3.547403201056781*^9, 3.547403233183613*^9}, 3.547403417955184*^9, {
   3.547403688601891*^9, 3.547403722487492*^9}, 3.547403999763998*^9, 
   3.5474040856778927`*^9, 3.5474049922471533`*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}]}], "\[Equal]", 
    RowBox[{"rx", "/", "rz"}]}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474042864040213`*^9, 3.547404300294341*^9}, 
   3.547404992247208*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox["rx", 
     RowBox[{"rx", "+", "rz"}]]}], "}"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5474043009447937`*^9, 3.547404992247267*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["rx", 
   RowBox[{"rx", "+", "rz"}]], "/", "rx"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547404315116642*^9, 3.54740433696175*^9}, 
   3.547404992247321*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"rx", "+", "rz"}]]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547404347133869*^9, 3.547404992247373*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "\[Equal]", "z"}], "&&", 
    RowBox[{"x", "\[Equal]", "y"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", "rx"}], "+", 
      RowBox[{"y", " ", "ry"}], "+", 
      RowBox[{"z", " ", "rz"}]}], "\[Equal]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54739888936059*^9, 3.547398894699534*^9}, {
   3.547398926924963*^9, 3.547398929993906*^9}, {3.547398991117526*^9, 
   3.547399048079217*^9}, {3.547399307641958*^9, 3.547399308055952*^9}, {
   3.547399587198173*^9, 3.547399590404118*^9}, {3.547399811269721*^9, 
   3.547399811719173*^9}, {3.5473998432078943`*^9, 3.547399843546021*^9}, 
   3.547400713920554*^9, {3.547400937779107*^9, 3.547400965326005*^9}, {
   3.547401024597677*^9, 3.54740102638202*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rx", "+", "ry", "+", "rz"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{"x", "\[Equal]", 
   FractionBox["1", 
    RowBox[{"rx", "+", "ry", "+", "rz"}]]}], "&&", 
  RowBox[{"y", "\[Equal]", "x"}], "&&", 
  RowBox[{"z", "\[Equal]", "x"}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547400972634695*^9, 3.547401027432807*^9, 
  3.547401718610332*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "\[Equal]", "z"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", 
      RowBox[{"y", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "+", 
      RowBox[{"z", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "\[Equal]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54739888936059*^9, 3.547398894699534*^9}, {
   3.547398926924963*^9, 3.547398929993906*^9}, {3.547398991117526*^9, 
   3.547399048079217*^9}, {3.547399307641958*^9, 3.547399308055952*^9}, {
   3.547399587198173*^9, 3.547399590404118*^9}, {3.547399811269721*^9, 
   3.547399811719173*^9}, {3.5473998432078943`*^9, 3.547399843546021*^9}, 
   3.547400713920554*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "\[Equal]", 
   RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
    RowBox[{"0.4976740578487859`", " ", "x"}]}]}], "&&", 
  RowBox[{"y", "\[Equal]", 
   RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
    RowBox[{"0.4976740578487859`", " ", "x"}]}]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547398930731265*^9, 3.547399051052137*^9, 3.547399309272481*^9, 
   3.5473995943299417`*^9, {3.547399819334371*^9, 3.5473998443071833`*^9}, 
   3.5474007139210587`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
   RowBox[{"0.4976740578487859`", " ", "x"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547399153847061*^9, 3.547399158882936*^9}, {
   3.547399353293524*^9, 3.547399361816708*^9}, {3.547399598245482*^9, 
   3.547399606718861*^9}, {3.547399823456868*^9, 3.547399824865265*^9}, 
   3.547399857380827*^9, 3.5474007139213133`*^9}],

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473991606375*^9, 3.5473991827998447`*^9}, {
   3.5473992382432423`*^9, 3.547399239231241*^9}, {3.547399365717846*^9, 
   3.5473993659610662`*^9}, {3.547399430569178*^9, 3.5473994306423187`*^9}, {
   3.547399612012398*^9, 3.547399631629476*^9}, {3.547399861696869*^9, 
   3.547399872439776*^9}, {3.547400173017227*^9, 3.547400173260462*^9}, {
   3.547400216693941*^9, 3.547400216798695*^9}, 3.547400713921502*^9}],

Cell[BoxData["0.05942134679295874`"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547399163115535*^9, 3.547399183702611*^9}, 
   3.547399240550035*^9, 3.547399366663069*^9, 3.5473994314792624`*^9, {
   3.547399613580016*^9, 3.547399632135816*^9}, {3.5473998630215187`*^9, 
   3.5473998733351393`*^9}, 3.547400174260373*^9, 3.5474002181897697`*^9, 
   3.547400713921803*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fifteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Magenta", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"Opacity", "[", "1", "]"}], ",", "Yellow", ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "a", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "c"}], "}"}]}], "}"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "a"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "c", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "a", ",", "a"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9, {3.547396996128675*^9, 3.547397011004944*^9}, {
   3.547397101720193*^9, 3.547397109851194*^9}, {3.547397214672595*^9, 
   3.547397243994307*^9}, {3.547397285255617*^9, 3.547397311333056*^9}, {
   3.547397415816349*^9, 3.547397524495929*^9}, {3.547397557249049*^9, 
   3.547397634329254*^9}, {3.547397695337129*^9, 3.54739777423074*^9}, {
   3.547397901273827*^9, 3.5473979954100533`*^9}, {3.547398085123536*^9, 
   3.547398102047306*^9}, 3.547398287600065*^9, {3.547398528608972*^9, 
   3.547398587747058*^9}, {3.547398630149794*^9, 3.547398630693344*^9}, {
   3.547398821390777*^9, 3.547398865990122*^9}, {3.5473991122446327`*^9, 
   3.547399123776905*^9}, {3.547399175303514*^9, 3.547399194373231*^9}, {
   3.547399252536331*^9, 3.547399257712214*^9}, {3.547399387014571*^9, 
   3.547399420669814*^9}, {3.547399476859741*^9, 3.547399490353692*^9}, {
   3.547399625484057*^9, 3.5473996418248787`*^9}, {3.547400186695157*^9, 
   3.5474002284796753`*^9}, {3.5474003367249002`*^9, 3.5474003629661207`*^9}, 
   3.547400396272852*^9, {3.547404623990632*^9, 3.547404931485201*^9}}],

Cell[BoxData[
 RowBox[{"fifteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fifteenthDiagram", ",", 
    "\"\<Figure 15: The r-quotient plane derived from figure 14 split into \
sections of uniform median coordinate.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54740039823794*^9, 3.5474004036555557`*^9}, {
   3.547400592143489*^9, 3.547400665583235*^9}, 3.547400713922076*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[1, 0, 1], 
      Opacity[0.85], 
      Polygon3DBox[{{0, 0, 5.552914072553016}, {0, 2.1548928703313783`, 0}, {
        3.119398119825272, 0, 0}}]}, {
      RGBColor[1, 1, 0], 
      Opacity[1], 
      Line3DBox[{{1.2744781773856848`, 1.2744781773856848`, 0}, {
        0, 0, 5.552914072553016}}], 
      Line3DBox[{{1.9973623335073767`, 0, 1.9973623335073767`}, {
        0, 2.1548928703313783`, 0}}], 
      Line3DBox[{{0, 1.5524435203393163`, 1.5524435203393163`}, {
        3.119398119825272, 0, 0}}]}}, Axes -> True, AxesLabel -> {
      FormBox["x", TraditionalForm], 
      FormBox["y", TraditionalForm], 
      FormBox["z", TraditionalForm]}, ImageSize -> {284.52907390513, 432.}, 
    Lighting -> "Neutral", 
    ViewPoint -> {3.3074626801063007`, -0.6167005917620957, 
     0.3610692451931252}, 
    ViewVertical -> {0.8803184538731847, -0.21738926704463185`, 
     0.8650587406559501}],
   "\"Figure 15: The r-quotient plane derived from figure 14 split into \
sections of uniform median coordinate.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5474006679326773`*^9, 3.54740071392233*^9, 
  3.54740481496692*^9, 3.5474049355181637`*^9}]
}, {16}]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{745, 746},
WindowMargins->{{72, Automatic}, {0, Automatic}},
FrontEndVersion->"7.0 for Linux x86 (64-bit) (February 25, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 108, 1, 85, "Title"],
Cell[678, 25, 191, 2, 85, "Subtitle"],
Cell[872, 29, 99, 1, 32, "Subsubtitle"],
Cell[974, 32, 108, 1, 32, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1107, 37, 99, 1, 73, "Section"],
Cell[1209, 40, 719, 11, 143, "Text"],
Cell[1931, 53, 551, 9, 121, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2519, 67, 101, 1, 73, "Section"],
Cell[2623, 70, 295, 6, 55, "Text"],
Cell[2921, 78, 1028, 22, 121, "Text"],
Cell[3952, 102, 104, 1, 33, "Text"],
Cell[4059, 105, 510, 8, 99, "Text"],
Cell[CellGroupData[{
Cell[4594, 117, 667, 15, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[5264, 134, 823, 18, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[6090, 154, 1315, 32, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7408, 188, 2863, 58, 227, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10274, 248, 1705, 29, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[11982, 279, 5845, 122, 337, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]],
Cell[17839, 404, 503, 8, 77, "Text"],
Cell[18345, 414, 1007, 28, 107, "Input"],
Cell[CellGroupData[{
Cell[19377, 446, 1305, 37, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[20685, 485, 281, 8, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[20969, 495, 638, 15, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[21610, 512, 2227, 55, 469, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23886, 573, 121, 1, 73, "Section"],
Cell[24010, 576, 588, 10, 121, "Text"],
Cell[24601, 588, 891, 13, 165, "Text"],
Cell[25495, 603, 513, 8, 99, "Text"],
Cell[CellGroupData[{
Cell[26033, 615, 187, 2, 39, "Subsection"],
Cell[CellGroupData[{
Cell[26245, 621, 104, 1, 31, "Subsubsection"],
Cell[26352, 624, 322, 5, 77, "Text"],
Cell[CellGroupData[{
Cell[26699, 633, 1446, 34, 251, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[28148, 669, 398, 12, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[28549, 683, 1527, 42, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[30079, 727, 536, 14, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[30618, 743, 3373, 67, 288, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34037, 816, 111, 1, 31, "Subsubsection"],
Cell[34151, 819, 170, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[34346, 826, 334, 8, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[34683, 836, 569, 10, 34, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[35255, 848, 1419, 37, 155, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[36677, 887, 525, 13, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[37205, 902, 2253, 50, 393, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39504, 958, 118, 1, 31, "Subsubsection"],
Cell[39625, 961, 1556, 31, 212, "Text"],
Cell[CellGroupData[{
Cell[41206, 996, 1816, 45, 179, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[43025, 1043, 2109, 52, 227, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[45137, 1097, 1487, 36, 179, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[46627, 1135, 547, 14, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[47177, 1151, 38951, 922, 394, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, {5}]],
Cell[CellGroupData[{
Cell[86162, 2078, 1990, 48, 179, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[88155, 2128, 2033, 48, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[90191, 2178, 1622, 38, 155, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[91816, 2218, 638, 15, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[92457, 2235, 12063, 275, 394, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]],
Cell[104532, 2513, 1109, 16, 209, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105678, 2534, 120, 1, 31, "Subsubsection"],
Cell[105801, 2537, 2135, 60, 134, "Text"],
Cell[CellGroupData[{
Cell[107961, 2601, 1838, 50, 199, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[109802, 2653, 2401, 64, 319, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[112206, 2719, 400, 11, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[112609, 2732, 402, 11, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[113014, 2745, 778, 17, 83, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[113795, 2764, 457, 9, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[114255, 2775, 668, 15, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[114926, 2792, 9618, 173, 469, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {8}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124590, 2971, 164, 2, 31, "Subsubsection"],
Cell[124757, 2975, 1467, 40, 127, "Text"],
Cell[CellGroupData[{
Cell[126249, 3019, 789, 21, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[127041, 3042, 436, 12, 56, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[127480, 3056, 1473, 35, 147, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[128956, 3093, 17562, 296, 346, 10215, 173, "CachedBoxData", "BoxData", \
"Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[146521, 3391, 914, 24, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[147438, 3417, 542, 11, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[147983, 3430, 620, 14, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[148606, 3446, 12389, 217, 397, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {8}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161041, 3669, 118, 1, 31, "Subsubsection"],
Cell[161162, 3672, 2128, 65, 155, "Text"],
Cell[CellGroupData[{
Cell[163315, 3741, 1153, 30, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[164471, 3773, 1537, 39, 171, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[166011, 3814, 2004, 50, 228, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[168018, 3866, 656, 15, 83, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[168677, 3883, 609, 14, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[169289, 3899, 8054, 145, 332, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]],
Cell[CellGroupData[{
Cell[177377, 4049, 117, 1, 32, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[177519, 4054, 1069, 30, 118, "Input"],
Cell[178591, 4086, 400, 12, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179028, 4103, 361, 10, 48, "Input"],
Cell[179392, 4115, 206, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179635, 4126, 379, 11, 48, "Input"],
Cell[180017, 4139, 355, 11, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180409, 4155, 713, 23, 87, "Input"],
Cell[181125, 4180, 973, 32, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182135, 4217, 1010, 32, 92, "Input"],
Cell[183148, 4251, 265, 9, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183450, 4265, 121, 2, 32, "Input"],
Cell[183574, 4269, 156, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183767, 4278, 406, 12, 48, "Input"],
Cell[184176, 4292, 377, 12, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184590, 4309, 488, 15, 48, "Input"],
Cell[185081, 4326, 536, 18, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185654, 4349, 1330, 35, 175, "Input"],
Cell[186987, 4386, 15189, 255, 253, 9870, 166, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202213, 4646, 456, 13, 71, "Input"],
Cell[202672, 4661, 185, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202894, 4669, 376, 11, 71, "Input"],
Cell[203273, 4682, 113, 3, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203423, 4690, 741, 23, 79, "Input"],
Cell[204167, 4715, 9285, 160, 209, 3186, 58, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213489, 4880, 173, 4, 32, "Input"],
Cell[213665, 4886, 19664, 331, 156, 12886, 218, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233366, 5222, 1644, 39, 153, "Input"],
Cell[235013, 5263, 15389, 258, 341, 9880, 166, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[250417, 5524, 723, 11, 174, "Text"],
Cell[CellGroupData[{
Cell[251165, 5539, 1559, 41, 165, "Input"],
Cell[252727, 5582, 3478, 100, 347, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256242, 5687, 428, 13, 48, "Input"],
Cell[256673, 5702, 279, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256989, 5715, 633, 20, 77, "Input"],
Cell[257625, 5737, 362, 12, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258024, 5754, 813, 23, 99, "Input"],
Cell[258840, 5779, 563, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259440, 5800, 451, 15, 32, "Input"],
Cell[259894, 5817, 231, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260162, 5830, 728, 24, 99, "Input"],
Cell[260893, 5856, 350, 11, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261280, 5872, 169, 4, 32, "Input"],
Cell[261452, 5878, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261561, 5884, 181, 4, 32, "Input"],
Cell[261745, 5890, 112, 1, 32, "Output"]
}, Open  ]],
Cell[261872, 5894, 784, 24, 99, "Input"],
Cell[CellGroupData[{
Cell[262681, 5922, 2730, 74, 353, "Input"],
Cell[265414, 5998, 4985, 86, 341, "Output"]
}, Open  ]],
Cell[270414, 6087, 805, 25, 99, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[271256, 6117, 168, 3, 26, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[271449, 6124, 709, 15, 159, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[272161, 6141, 718, 17, 56, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[272882, 6160, 662, 19, 47, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[273559, 6182, 203, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[273787, 6191, 803, 20, 56, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[274593, 6213, 1490, 50, 128, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[276086, 6265, 793, 20, 56, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[276882, 6287, 398, 11, 48, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[277283, 6300, 2081, 62, 266, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[279367, 6364, 20947, 355, 263, 4021, 75, "CachedBoxData", "BoxData", \
"Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300384, 6727, 157, 2, 39, "Subsection"],
Cell[300544, 6731, 928, 20, 124, "Text"],
Cell[301475, 6753, 514, 14, 55, "Text"],
Cell[301992, 6769, 249, 5, 55, "Text"],
Cell[302244, 6776, 139, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[302408, 6781, 3826, 99, 371, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[306237, 6882, 539, 13, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[306779, 6897, 9309, 167, 332, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {3}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[316134, 7070, 96, 1, 39, "Subsection"],
Cell[CellGroupData[{
Cell[316255, 7075, 104, 1, 31, "Subsubsection"],
Cell[316362, 7078, 311, 5, 77, "Text"],
Cell[CellGroupData[{
Cell[316698, 7087, 1784, 43, 155, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[318485, 7132, 2517, 71, 515, InheritFromParent,
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[321005, 7205, 398, 12, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[321406, 7219, 1535, 39, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[322944, 7260, 534, 13, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[323481, 7275, 4889, 94, 331, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328416, 7375, 111, 1, 31, "Subsubsection"],
Cell[328530, 7378, 371, 7, 77, "Text"],
Cell[CellGroupData[{
Cell[328926, 7389, 293, 7, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[329222, 7398, 3445, 83, 299, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[332670, 7483, 615, 13, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[333288, 7498, 2824, 61, 468, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {4}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336158, 7565, 153, 2, 31, "Subsubsection"],
Cell[336314, 7569, 4145, 127, 318, "Text"],
Cell[CellGroupData[{
Cell[340484, 7700, 1213, 28, 83, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[341700, 7730, 1061, 28, 94, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[342764, 7760, 388, 11, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[343155, 7773, 274, 7, 43, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[343432, 7782, 242, 6, 54, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[343677, 7790, 190, 4, 46, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[343870, 7796, 926, 20, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[344799, 7818, 435, 11, 48, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[345237, 7831, 979, 24, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[346219, 7857, 569, 12, 34, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[346791, 7871, 498, 9, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[347292, 7882, 543, 8, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[347838, 7892, 414, 6, 34, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[348255, 7900, 5112, 123, 275, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[353370, 8025, 647, 14, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[354020, 8041, 2151, 47, 498, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {16}]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
