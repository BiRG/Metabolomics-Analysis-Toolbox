(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    879399,      18401]
NotebookOptionsPosition[    856982,      17788]
NotebookOutlinePosition[    857447,      17806]
CellTagsIndexPosition[    857404,      17803]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Visualizing Normalization", "Title",
 CellChangeTimes->{{3.547139824257725*^9, 3.547139830062993*^9}}],

Cell["A graphical presentation of NMR normalization methods.", "Subtitle",
 CellChangeTimes->{{3.547140124907233*^9, 3.547140128682735*^9}, {
  3.5471401699783297`*^9, 3.547140176641282*^9}}],

Cell["Eric Moyer", "Subsubtitle",
 CellChangeTimes->{{3.547139833729444*^9, 3.547139834949341*^9}}],

Cell["Started 27 May 2012", "Subsubtitle",
 CellChangeTimes->{{3.547139839967902*^9, 3.547139847471291*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.5471398550090647`*^9, 3.547139859094948*^9}}],

Cell["\<\
Normalization methods in NMR spectrography (and probably other spectrographic \
fields as well) are typically explained by the procedures that you go through \
to perform them and justified by arguments about the \"real concentration.\" \
Another way to look at normalization methods is to examine them as geometric \
operations on a vector space. This gives a different understanding of what is \
occurring, which can give the practitioner a deeper intuition about \
trade-offs he makes when he says, \"sum-normalize the data.\"\
\>", "Text",
 CellChangeTimes->{{3.547139862175673*^9, 3.547139961290236*^9}, {
  3.547140021256085*^9, 3.547140090613758*^9}, {3.5471503141743526`*^9, 
  3.547150319533565*^9}}],

Cell["\<\
I look at each spectrum generated as a point in a vector space, one variable \
in the vector for each value measured. I am mainly concerned with \
frequency-domain spectra, since it is on these that the normalization methods \
I present are typically used. The normalization methods do not solve extant \
problems on time-domain spectra, so they are not used there. However, my \
points are just as valid for time-domain spectra, since they too are vectors.\
\
\>", "Text",
 CellChangeTimes->{{3.5471402676850863`*^9, 3.547140474189971*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum Normalization", "Section",
 CellChangeTimes->{{3.54714020719221*^9, 3.547140209879217*^9}}],

Cell["\<\
Sum normalization takes each spectrum, divides it by its sum, and then \
multiplies it by a constant. After this operation, all spectra have the same \
sum.\
\>", "Text",
 CellChangeTimes->{{3.547140255131291*^9, 3.547140264629607*^9}, {
  3.547140534722814*^9, 3.547140621495376*^9}}],

Cell[TextData[{
 "If the spectra are interpreted as points in an n-dimensional vector space, \
this projects all points onto an n-1 dimensional subspace (hyperplane) along \
a line between the original point and the origin. In 3 dimensions, it \
projects points onto a the plane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "+", "y", "+", "z"}], "=", "s"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " . In 2 dimensions, all points are projected the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"s", "-", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The location of these figures is determined by the constant."
}], "Text",
 CellChangeTimes->{{3.547140681651354*^9, 3.5471406959475613`*^9}, {
   3.547140770921924*^9, 3.547140855582036*^9}, {3.547140892956802*^9, 
   3.547140993727613*^9}, {3.547141063390345*^9, 3.547141080699884*^9}, {
   3.547141114226123*^9, 3.547141132073366*^9}, 3.547150325936315*^9, {
   3.547304990758165*^9, 3.547305069804627*^9}}],

Cell["How can we see this?", "Text",
 CellChangeTimes->{{3.547141139476688*^9, 3.5471411457860193`*^9}}],

Cell["\<\
First, consider that multiplying a (non-zero) point by a constant moves it \
along a line connecting the point with the origin. Multiplying by a positive \
number less than 1 moves it closer to the origin. Multiplying by a number \
greater than 1 moves farther from the origin. And multiplying it by a \
negative number moves it away from the origin on the opposite side.\
\>", "Text",
 CellChangeTimes->{{3.547141147385028*^9, 3.547141175159586*^9}, {
  3.547145618896906*^9, 3.547145674137457*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xPlusYEq1TwoD", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", "-", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547141252885395*^9, 3.547141300559654*^9}, {
   3.547141537589252*^9, 3.5471416045080423`*^9}, {3.547142210245225*^9, 
   3.5471422209708843`*^9}, {3.5471433024178123`*^9, 3.547143453267515*^9}, 
   3.54714551168288*^9, {3.5473052214608*^9, 3.547305270898307*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"yEq2X", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Blue", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471415783926497`*^9, 3.547141591548118*^9}, {
   3.5471416246544447`*^9, 3.547141673527576*^9}, 3.5471418890719557`*^9, {
   3.547142204740473*^9, 3.5471422068217287`*^9}, {3.547142262492856*^9, 
   3.5471422658793793`*^9}, {3.547142389810174*^9, 3.547142390770712*^9}, {
   3.547144733799*^9, 3.547144739646644*^9}, 3.547145511683155*^9, {
   3.547305153157874*^9, 3.547305170513158*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptX3HalvesY3AndProjection", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", "/", "2"}], ",", "3"}], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"2", "/", "3"}]}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Medium"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", 
        RowBox[{"Darker", "[", "Magenta", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714168006174*^9, 3.547141719704781*^9}, {
   3.547141768927044*^9, 3.547141787089158*^9}, {3.54714202150038*^9, 
   3.5471420306007233`*^9}, {3.547142113270247*^9, 3.5471421266363688`*^9}, {
   3.5471421704905167`*^9, 3.54714217578865*^9}, {3.547142272496965*^9, 
   3.547142285318091*^9}, {3.54714234509508*^9, 3.54714236665021*^9}, {
   3.5471447451479273`*^9, 3.547144750372863*^9}, {3.5471448821963453`*^9, 
   3.547144900705575*^9}, 3.547145511683342*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"firstDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xPlusYEq1TwoD", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Constant sum surface\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Spectrum\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"3", "/", "2"}], ",", 
              RowBox[{"11", "/", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Darker", "[", "Blue", "]"}], "}"}]}]}], "]"}]}], "}"}],
         "]"}], ",", "yEq2X", ",", "ptX3HalvesY3AndProjection"}], "}"}], ",", 
     
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "300", "}"}]}], ",", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714178902284*^9, 3.5471418310216312`*^9}, {
   3.547141879108432*^9, 3.547141882302959*^9}, {3.547142036570444*^9, 
   3.547142070537751*^9}, {3.5471421834856787`*^9, 3.547142189015986*^9}, {
   3.547142300656996*^9, 3.5471423124001207`*^9}, {3.547142380518396*^9, 
   3.547142498330698*^9}, {3.5471426515745068`*^9, 3.547142657910717*^9}, {
   3.547142712617209*^9, 3.5471429125192623`*^9}, {3.5471430778815613`*^9, 
   3.547143110504135*^9}, {3.547143465248744*^9, 3.5471434837149267`*^9}, {
   3.5471436268941517`*^9, 3.547143648446703*^9}, 3.547143856228594*^9, {
   3.547143904330501*^9, 3.547143979443432*^9}, {3.547144014076792*^9, 
   3.547144109029076*^9}, {3.5471441448632727`*^9, 3.547144145375992*^9}, {
   3.5471442167831573`*^9, 3.5471442495488977`*^9}, {3.547144331187319*^9, 
   3.547144335358005*^9}, {3.547144367271785*^9, 3.5471445103343353`*^9}, {
   3.547144540485724*^9, 3.5471446496300507`*^9}, {3.547144686554137*^9, 
   3.547144720330497*^9}, {3.547144754121471*^9, 3.547144858472582*^9}, {
   3.5471449348656187`*^9, 3.547144947175726*^9}, {3.547145172647348*^9, 
   3.547145195816874*^9}, {3.547145248487441*^9, 3.547145317295732*^9}, 
   3.547145511683733*^9, {3.547149206811069*^9, 3.547149213441887*^9}, {
   3.5473053103536587`*^9, 3.547305379677505*^9}, {3.5473054176853523`*^9, 
   3.547305484881413*^9}}],

Cell[BoxData[
 RowBox[{"firstDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "firstDiagram", ",", 
    "\"\<Figure 1: Sum Normalization in Two Dimensions\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714178902284*^9, 3.5471418310216312`*^9}, {
   3.547141879108432*^9, 3.547141882302959*^9}, {3.547142036570444*^9, 
   3.547142070537751*^9}, {3.5471421834856787`*^9, 3.547142189015986*^9}, {
   3.547142300656996*^9, 3.5471423124001207`*^9}, {3.547142380518396*^9, 
   3.547142498330698*^9}, {3.5471426515745068`*^9, 3.547142657910717*^9}, {
   3.547142712617209*^9, 3.5471429125192623`*^9}, {3.5471430778815613`*^9, 
   3.547143110504135*^9}, {3.547143465248744*^9, 3.5471434837149267`*^9}, {
   3.5471436268941517`*^9, 3.547143648446703*^9}, 3.547143856228594*^9, {
   3.547143904330501*^9, 3.547143979443432*^9}, {3.547144014076792*^9, 
   3.547144109029076*^9}, {3.5471441448632727`*^9, 3.547144145375992*^9}, {
   3.5471442167831573`*^9, 3.5471442495488977`*^9}, {3.547144331187319*^9, 
   3.547144335358005*^9}, {3.547144367271785*^9, 3.5471445103343353`*^9}, {
   3.547144540485724*^9, 3.5471446496300507`*^9}, {3.547144686554137*^9, 
   3.547144720330497*^9}, {3.547144754121471*^9, 3.547144858472582*^9}, {
   3.5471449348656187`*^9, 3.547144947175726*^9}, {3.547145172647348*^9, 
   3.547145195816874*^9}, {3.547145248487441*^9, 3.547145317295732*^9}, 
   3.547145511683733*^9, {3.5471492177403812`*^9, 3.547149234357081*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[1, 0, 0], 
       LineBox[CompressedData["
1:eJwtlGs01HkcxlHbRe3kslNrUIipWbrJ0NnkKytqEOsSdpVOuZSUtGkLbVHE
LjVrZSttplW6Tyk6aeWrTFYyJzG143LGpWnWaMx/YhhmxvzWntOL5zzvnhef
c56P/Y6U0HgTIyOjoKn838+32fcQQuGOu1yKEALMMXbgoXEKLXUM5lo9gbxC
To1CRaHA72rMoXECgbU//NbRRyFTUvNCoSLQZtXo/6CBQvncd+UdfQR6RUn3
Ek5RuD+JHfWggYCeU5UlpFH4k1NnfcIpAm4e/o6ltkq8ULq4SEgj4I3mPX9a
KJDXk5fy7WwDrOBduxT61SB+2RoWzKJPQvHlirySgAFsDgnzfemkh5JQzoCf
rwwDWE4HFzvoID2mJrAsVorr+DEVr1ZoQUcXMuNC+9Hwc4KlK2sChqlNzk82
9+KE5srZbUvG4fcNjrszu7oxwXwTo8ddAydMDQmRTWK8nI0ddNcxYGft25et
FWEQr7SU5zUK7Wsqm9/Aa2Rvvn1gNFgNEWXpjtN3NeOHsDMnjYJGgLuyvlHf
+QwtZojPxX4/DBlGq45tjqzGWWYj/x6M+AjWp2+aWdLP4pqbPoHh4SrgS40v
z04ph+o+Kn7eCyUEz5n5aHC8BkoWkuv99Qo4v/y8Z16RAL6r6lBt7RqEBVYX
/eTNLfB4Ioq/QTgAEu+j7Zn72uDX2PUlT5tkkNxA17q5vgXOwtHs9zIp1Mvi
2F/4dwKvIOh9Wnc/BEfZJpbPl4A4LDWQr+6FIwJjhxx5L9B+1P816iKBZcta
GYGqfqi4GtucuKgTDJ7ttD0iKUzPje5nRb4F1z9WFdr2yeDi84vvBevaQNXN
7FsrHQDvgrgMs5QWaGkIWXlfMAitqlovjyEBzNG9mV0rVMD1JSGVi4pqILHj
jMS2Sgnc3SYLHOquQEXAfkHaRhUcl1vYpNoW4cvQxm3MgI9wzyVeEX+/Co/d
eTiW7TkM43uqqxdIn2LcPVEYy2cE7E5cvcQxb0bxjEJ+hrsatlu7PVZ2tKK5
0Ew9jTkKvm7ftM47J8LMtc8Mb1hjoBqapYu8Jsa0yc9nhttoQDTqYROS2o28
xFMi68Xj4P2KdsPDrxe561sKrJwmpvbPWa3m9CMt5ZbPFFKwkWzJyXWWYp3v
oycPGTrIzN+fsZctw8m9se5baHrQdtUl37YZQOOZbeedJ/VgQruyOlIrR/eN
B55xjAyQzJWePGukQG337QH6sAHUNdGvnaVD6JvcxA0aM0CemGtfqhjCQt27
NTlaAzA0f6eajg6hHcM6X20y9Qs3dwv5Z0r0j8xntVsSOM23CKtYosTi1/FJ
XDaBpeUvRXZ7lLi8caHC9AiBmIJ1YvqwEg9HfF3sc5SA6ubBpTlaJT6VRnim
ZxHIfnHrsNqEwvBphQXyfALXZzCs2i0pzPDWuTRdIDB2fCyay6aw6fE/e3Nq
CXDT7naZHqHQgjNCf1JPwLFY5pyeRWFMB61OLSDw6L5tpjyfQkqzgRYnJCCh
frFpukDhfHYV30dCwCVp19acWgq3C15tSe8nUJ9XdkctoPBG2AdDpYxA6LW3
kzuFFHoecAi2pwgclvpe8pFQmGvspYkaITB3WqayUkZhKze6jKshwLN/4GVP
UciwS/Nv0k15xHvwNFdD4c5P3mr85LH/AH2ko8c=
        "]]}}, {
      InsetBox[
      "\"Constant sum surface\"", {0.6, 0.5}, {-1, 0}, BaseStyle -> {
         RGBColor[1, 0, 0]}], 
      InsetBox["\"Spectrum\"", 
       NCache[{
         Rational[3, 2], 
         Rational[11, 4]}, {1.5, 2.75}], {-1, 0}, BaseStyle -> {
         RGBColor[0, 0, 
          Rational[2, 3]]}]}, {{}, {}, {
       RGBColor[0, 0, 
        NCache[
         Rational[2, 3], 0.6666666666666666]], 
       LineBox[CompressedData["
1:eJw9xX1MFGQcB/Dj9XEsMze6lQrzBYhwDldpUpPvT206LcJ0AoKhvIpEQKx8
gTDFzsruGC+1RSTIH0wZTCdOmJooqXCNxDkoxuxATlDvUDnujnsEgqv2e3Z/
fPZZkpq3LcNbo9HE/Of/n7+fe3Jr3p5oPj/6ePpr4XfCosF/iNvPhrMNnpNh
u7BBn+M5FyVax6Jdng+jq3PLyHbPpcg7tf/3WM81aNfrr8R4Pgs//wJhyT6n
vobNX6XoLsa1qjvReijDVH+3Td2N/sRPIgsO3FD3YP4mQ2Y7dar78FJvRvPb
SV3qe1i2OKdBl3pHPYg1pk+71lXcVQ+hferIB73VPeoHyLpmNLaV/KkeQVXa
6QUv7+lTP8KKhCHXbEa/2oIBR2w3bb6nHoV98NWV2h0m9VOUNRbujY8fVI8h
bN6cmIPV99U2tOQfaSytHVKPoze0UnxUYVbbEXKsJ/zjqgdqB6K2Dr5VWz2s
dsKUr4s26EfUE2iO2jn3VvlDtQvauM7+M7pHagmYNeW/ff5Y/RxV2qy5YQct
6kmU1Oz7ZlW2VT2Fk90/dZTmj6qnUZxbaQsqeKL+B6Mp4a/sTH2qnsH3M1bf
gcxn6llcfrJp7MXEMbUbf4WuMb8TYlNrKOv1tMjKeht4DbXHJRWtCx4H70Vv
JlgbAuvGwXtRzrGNfWsX2sF707eZc6a8Ku3gvelqUIrbGugA70OXZo/7RJQ6
wPtQ94UNVsN8J3hfurU4s0Nf4QTvS1+37qgbCpgA70e7lv6dnGSYAO9H0y2R
C5cLF3h/+tLH8sePh13g/UkbEpUSqpHgBR3IjXMGHJLgBS1anW4MK5LgBV2f
+eyX9cUSvKAAg+G9wqMSvKCaxps/WL6T4AV1PH5jlfFnCV5QYNq8/bpfJXhB
lyKCttS1SfCCku0RwVevS/CCzhzd2OG8KcELevdUsTb9tgQvKNU02rJ+QIIX
JOonTyTfl+AFNeWI3YVmCV6Qa3qpaH4owQs6sSAxfsmYBC8o0rx3+dpxCV5Q
b8MX7gSHBC8oOKr8dJmU4AXd0NQWNU1K8IKyjE2xxmkJXtALZZeXDc9I8ILO
xxul2y3BC/oXbzRR4Q==
        "]]}}, 
     GraphicsComplexBox[{{1.5, 3.}, {1.5, 3.}, {0.3333333333333333, 
      0.6666666666666666}, {0.3333333333333333, 0.6666666666666666}, {1.5, 
      3.}, {1.5, 3.}, {0.3333333333333333, 0.6666666666666666}, {
      0.3333333333333333, 0.6666666666666666}}, {{
        RGBColor[0, 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        InsetBox[
         StyleBox[
         "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> Medium], 
         5], 
        InsetBox[
         StyleBox[
         "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> Medium], 
         6]}, {
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        InsetBox[
         StyleBox[
         "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> Medium], 
         7], 
        InsetBox[
         StyleBox[
         "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> Medium], 
         8]}, {}}]}, AspectRatio -> Automatic, Axes -> True, 
    AxesOrigin -> {0, 0}, ImageSize -> {300}, PlotRange -> All, 
    PlotRangeClipping -> False, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],"\"Figure 1: Sum Normalization in Two Dimensions\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547145309986032*^9, 3.5471453180521*^9}, 
   3.547145511683803*^9, 3.547149238662257*^9, 3.547305277521377*^9, {
   3.54730531496458*^9, 3.547305357110805*^9}, 3.547305486309402*^9}]
}, {6}]],

Cell["\<\
The point at which the line through the origin intersects with the surface of \
points whose sum equals the target sum of the sum-normalization is the \
normalized point. Figures 1 and 2 show sum-normalization in two and three \
dimensions with a target sum of 1.\
\>", "Text",
 CellChangeTimes->{{3.547145562244855*^9, 3.547145593306345*^9}, {
  3.5471456864467897`*^9, 3.5471457210290194`*^9}, {3.547149581268351*^9, 
  3.547149600562848*^9}, {3.547149683045044*^9, 3.5471496867804728`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumEq1ThreeD", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", "Red", ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.547305653534075*^9, 3.547305800606991*^9}, {
  3.547305830727653*^9, 3.547305837778078*^9}, {3.547305898689085*^9, 
  3.547305964609899*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yEq2XThreeD", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", "Blue", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "2"}], ",", "0", ",", "3"}], "}"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "2"}], ",", "0", ",", "3"}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Origin\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.2"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "3"}], ",", "0", ",", 
         RowBox[{"2", "/", "3"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.5471495704037113`*^9, {3.54730596745403*^9, 3.5473060663645973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"secondDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"sumEq1ThreeD", ",", "yEq2XThreeD"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547149570403741*^9}],

Cell[BoxData[
 RowBox[{"secondDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "secondDiagram", ",", 
    "\"\<Figure 2: Sum Normalization in Three Dimensions\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547148102046866*^9, 3.547148119923295*^9}, {
   3.547148385478323*^9, 3.5471484105255127`*^9}, {3.547149333549288*^9, 
   3.547149402974711*^9}, 3.547149570403777*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[1, 0, 0], 
      Opacity[0.85], 
      Polygon3DBox[{{-1, -1, 3}, {1, -1, 1}, {1, 1, -1}, {-1, 1, 1}}]}, {
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      Line3DBox[
       NCache[{{0, 0, 0}, {
          Rational[3, 2], 0, 3}}, {{0, 0, 0}, {1.5, 0, 3}}]], {
       PointSize[Large], 
       Point3DBox[
        NCache[{
          Rational[3, 2], 0, 3}, {1.5, 0, 3}]], 
       Text3DBox["\"Origin\"", {0, 0, 0}, {-1.2, 0}], {
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        Point3DBox[
         NCache[{
           Rational[1, 3], 0, 
           Rational[2, 3]}, {0.3333333333333333, 0, 0.6666666666666666}]]}}}},
     Axes -> True, ImageSize -> {300.2629681393381, 432.}, 
    ViewPoint -> {2.8449534536648784`, -1.810962179339618, 
     0.2768678953612902}, 
    ViewVertical -> {0.7011121767154426, -0.5713974341174561, 
     0.8522683193990057}],
   "\"Figure 2: Sum Normalization in Three Dimensions\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547149407009749*^9, 3.547149570403864*^9, {3.547305818619281*^9, 
   3.547305841858737*^9}, 3.5473060692827873`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probabilistic Quotient Normalization", "Section",
 CellChangeTimes->{{3.547150113963293*^9, 3.547150123581194*^9}}],

Cell["\<\
Probabilistic Quotient Normalization (PQN) (Dieterle 2006) is a method that \
is more resistant to large fluctuations in parts of the spectrum due to \
factors other than dilution (such as treatments). Unlike sum-normalization, \
which normalizes each spectrum independently, PQN is designed to normalize \
several related spectra simultaneously, using their commonality to improve \
its estimates.\
\>", "Text",
 CellChangeTimes->{{3.547151802331935*^9, 3.547151867460561*^9}, {
  3.547151898339778*^9, 3.5471519206995068`*^9}, {3.547152260891184*^9, 
  3.547152261621705*^9}}],

Cell["\<\
PQN starts with sum-normalization. Next, the spectra are binned to take care \
of small peak-shifts. Then a reference spectrum is created. The original \
paper mentions several methods of creating reference spectra. However, for \
simplicity, we will choose the method that takes the median spectrum of all \
the spectra being analyzed. Then, for each spectrum to be normalized, the \
reference spectrum is divided by it and the median of the quotients is \
selected as the normalization factor. Finally the spectra are multiplied by \
their respective normalization factors.\
\>", "Text",
 CellChangeTimes->{{3.547151910238988*^9, 3.547152058749381*^9}, {
   3.547152106312064*^9, 3.547152258965447*^9}, 3.547152308258853*^9, {
   3.5471528738397007`*^9, 3.5471529206481743`*^9}, {3.5471529893927917`*^9, 
   3.547153010479535*^9}, {3.547153047624489*^9, 3.5471531343946333`*^9}}],

Cell["\<\
For the following discussion, we will assume that the initial spectra have no \
negative values. Negative values result from noise or special acquisition \
methods like dephasing the water signal and should be removed during \
preprocessing. Though PQN is well-defined with negative values, their \
inclusion unnecessarily complicates the explanation.\
\>", "Text",
 CellChangeTimes->{{3.547153163841505*^9, 3.547153301245123*^9}, {
   3.547153356493964*^9, 3.547153405823414*^9}, 3.547296335988079*^9}],

Cell[CellGroupData[{

Cell["2D PQN (the canonical way)", "Subsection",
 CellChangeTimes->{{3.547153710904858*^9, 3.5471537155820103`*^9}, {
   3.54729612429014*^9, 3.547296132204031*^9}, 3.547296338247633*^9}],

Cell[CellGroupData[{

Cell["Sum Normalize", "Subsubsection",
 CellChangeTimes->{{3.547221736512328*^9, 3.547221739656698*^9}}],

Cell["\<\
The first step of PQN we've seen before, we sum-normalize. In the diagrams, I \
sum-normalize to 1, since it is easy, but everything works out the same, just \
scaled a bit differently if you sum-normalize to a different constant.\
\>", "Text",
 CellChangeTimes->{{3.5471614958910217`*^9, 3.547161555374159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"orig2D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2.172454345958343`", ",", "1.7744919345405104`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.675301724350803`", ",", "1.359406145521423`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.87830990460933`", ",", "1.4709889319173473`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.8813454193984884`", ",", "1.073276896492814`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.3606473361385762`", ",", "1.7882842580601983`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.26005835257858`", ",", "1.7655977040112563`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.398151988227432`", ",", "2.097238014713233`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.0861624358478528`", ",", "0.9274842729247682`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.255768229218814`", ",", "1.8706253682049265`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.6917625635090703`", ",", "1.2898265639379862`"}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547159479445242*^9, 3.5471594971325607`*^9}, {
   3.547159608984823*^9, 3.547159612130081*^9}, 3.547160204004696*^9, 
   3.5471609689527607`*^9, 3.547161262639394*^9, {3.54729856994198*^9, 
   3.547298571324485*^9}, 3.5472990518051023`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNorm2D", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", "orig2D"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547160301710615*^9, 3.5471603283489027`*^9}, 
   3.547161262642583*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thirdDiagram", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"Darker", "[", "Blue", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "orig2D"}], "]"}], 
       ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          ",", "orig2D"}], "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5471598662264*^9, 3.547160104879672*^9}, {
   3.547160335177816*^9, 3.547160346330387*^9}, {3.547161024190194*^9, 
   3.5471610625535383`*^9}, {3.547161144522626*^9, 3.547161153551978*^9}, 
   3.547161262642654*^9}],

Cell[BoxData[
 RowBox[{"thirdDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "thirdDiagram", ",", 
    "\"\<Figure 3: First step of 2D PQN: Sum-Normalize\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161155778019*^9, 3.547161226824782*^9}, 
   3.547161262642714*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{2.172454345958343, 1.7744919345405104`}], 
      PointBox[{2.675301724350803, 1.359406145521423}], 
      PointBox[{2.87830990460933, 1.4709889319173473`}], 
      PointBox[{2.8813454193984884`, 1.073276896492814}], 
      PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
      PointBox[{2.26005835257858, 1.7655977040112563`}], 
      PointBox[{1.398151988227432, 2.097238014713233}], 
      PointBox[{3.0861624358478528`, 0.9274842729247682}], 
      PointBox[{2.255768229218814, 1.8706253682049265`}], 
      PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
      LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
      LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
      LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
      LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
      LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
      LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
      LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
      LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
      LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
      LineBox[{{0, 0}, {2.6917625635090703`, 1.2898265639379862`}}]}, {
      RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}}, Axes -> True],
   "\"Figure 3: First step of 2D PQN: Sum-Normalize\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161234422071*^9, 3.547161262642786*^9}, 
   3.547298576671081*^9, 3.547299054955244*^9}]
}, {5}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reference Spectrum", "Subsubsection",
 CellChangeTimes->{{3.5472217577756367`*^9, 3.547221761264093*^9}}],

Cell["\<\
Next, you generate a reference spectrum by taking the median of each variable.\
\>", "Text",
 CellChangeTimes->{{3.547161561218967*^9, 3.5471615916008368`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refPt2D", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Median", ",", 
    RowBox[{"Transpose", "[", "sumNorm2D", "]"}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547161686979788*^9, 3.547161745407681*^9}, 
   3.5471623243637466`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6153821371488181`", ",", "0.38461786285118194`"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161731438332*^9, 3.547161746942959*^9}, 
   3.547162324364176*^9, 3.547223110129066*^9, 3.547227411129094*^9, 
   3.547231697124165*^9, 3.5472914091316833`*^9, {3.547291776552536*^9, 
   3.547291805599752*^9}, 3.547292195681592*^9, 3.5472922762440023`*^9, 
   3.547298596172872*^9, 3.5472990620470123`*^9, 3.547305156248396*^9, 
   3.54737647859179*^9, 3.5473765994427156`*^9, 3.547457208644656*^9, 
   3.547457472129826*^9, 3.547501262149023*^9, 3.547567139828453*^9, 
   3.547574407898823*^9, 3.547729118358169*^9, 3.547734214150495*^9, 
   3.54774680984578*^9, 3.547759155684211*^9, 3.54780310210612*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourthDiagram", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "Green", ",", 
       
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", "refPt2D", "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<Reference spectrum\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.025", ",", "0"}], "}"}], "+", "refPt2D"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547161614449*^9, 3.5471616561965446`*^9}, {
   3.547161755130888*^9, 3.547161789570849*^9}, {3.5471620647540607`*^9, 
   3.547162251470367*^9}, 3.547162324364464*^9}],

Cell[BoxData[
 RowBox[{"fourthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fourthDiagram", ",", 
    "\"\<Figure 4: Second step of 2D PQN: Create reference spectrum\>\"", ",",
     "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547162273031047*^9, 3.547162324364779*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}, {
      RGBColor[0, 1, 0], 
      PointSize[Large], 
      PointBox[{0.6153821371488181, 0.38461786285118194`}], 
      InsetBox[
      "\"Reference spectrum\"", {0.6403821371488181, 
       0.38461786285118194`}, {-1, 0}]}}, Axes -> True],
   "\"Figure 4: Second step of 2D PQN: Create reference spectrum\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471623055433273`*^9, 3.547162324365074*^9}, 
   3.54729859818176*^9, 3.54729906369809*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reciprocal Quotient Spectra", "Subsubsection",
 CellChangeTimes->{{3.547221774607359*^9, 3.547221783056197*^9}}],

Cell[TextData[{
 "In the next step, I make a change to the procedure that makes it easier to \
understand. Rather than dividing the reference spectrum by each of the \
individual spectra to get the quotient spectra, I divide each spectrum by the \
reference spectrum. This leaves me with quotient spectra that have the \
reciprocals of the proper coordinates. Because all of the individual \
coordinates are positive, this just reverses their ranks. The median element \
will still be the same. So, I can just divide by the median rather than \
multiplying to get the same final normalization. In the case of an even \
number of points, you can't get the reciprocal of the average by taking the \
average of the reciprocals. Thus, if the center two reciprocal quotients are ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the reciprocal quotient median is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    FractionBox[
     RowBox[{"2", "a", " ", "b"}], 
     RowBox[{"a", "+", "b"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5471639391715307`*^9, 3.547164040357667*^9}, {
  3.547164080635233*^9, 3.547164236886691*^9}, {3.547164676990178*^9, 
  3.5471646964190683`*^9}, {3.5473061384359293`*^9, 3.5473061472666807`*^9}, {
  3.5473063772566338`*^9, 3.547306470025505*^9}, {3.5473066700767527`*^9, 
  3.547306713955553*^9}, {3.547306764930867*^9, 3.547306768743227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"standardQuotientTransformPlot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", "t"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "u"}], "}"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"u", "/", "1.1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.025", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547164733906971*^9, 3.5471647595590563`*^9}, {
   3.547164830970419*^9, 3.547164931665399*^9}, {3.547164968136445*^9, 
   3.547165011121571*^9}, {3.547165162027791*^9, 3.547165257955388*^9}, {
   3.54716529804185*^9, 3.5471653016882668`*^9}, {3.547165332686492*^9, 
   3.547165336708681*^9}, 3.547165377464015*^9, {3.547165411249199*^9, 
   3.547165431912196*^9}, 3.547165501607873*^9, 3.547168240044064*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardQuotientArrows", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "Small", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "#", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "-", "#"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", "#"}], ",", 
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "#"}], ")"}]}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{".9", 
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "#"}], "]"}]}]}], 
               "}"}]}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.15"}], ",", 
            RowBox[{"-", "0.06"}], ",", "0.06", ",", "0.15"}], "}"}]}]}], 
        "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.5471661047819223`*^9, 3.547166187435761*^9}, {
   3.547166227353311*^9, 3.547166284736493*^9}, {3.5471663217221737`*^9, 
   3.5471664171426573`*^9}, 3.5471664761436243`*^9, {3.547166545333894*^9, 
   3.547166572827833*^9}, {3.5471666272346687`*^9, 3.547166821096075*^9}, {
   3.547166858818624*^9, 3.5471668888344603`*^9}, 3.547168240045233*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fifthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "standardQuotientTransformPlot", ",", "standardQuotientArrows", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Sum-normalized spectra\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Quotient spectra using standard method\>\"", ",", 
           RowBox[{"{", 
            RowBox[{".9", ",", "2.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Colors give correspondence (note reversal)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.9", ",", "2.36"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], " ", "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547165506400021*^9, 3.5471659055469217`*^9}, {
   3.5471664801811*^9, 3.547166485239188*^9}, {3.5471669557029667`*^9, 
   3.547166967367653*^9}, 3.547168240051927*^9, {3.547299337017605*^9, 
   3.5472993576971493`*^9}}],

Cell[BoxData[
 RowBox[{"fifthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fifthDiagram", ",", 
    "\"\<Figure 5: Standard method of creating quotient spectra\>\"", ",", 
    "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547166970768332*^9, 3.5471670255156927`*^9}, 
   3.547168240056696*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kx83eJuE/wcQdN6j
      "], {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> Automatic]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[CompressedData["
1:eJwt1WW0lVUUBdAHCJIS0t3d3V2iotIgDUp3tyDdJR0qmHQjjXQoSjcKKN3d
zjOGP+bYe63zXQbv3XPvS9e8U42OkSIiIjJGjoiobr4QJvGZXNCsZ942O5j/
On/PvCC3MYeYTc3HZifzR+fFzENyK7Or2dC8b2akhv2q2c4cYzY3n5pfeF0G
+y/heRrY75rv8KH9kjmcPzxXQT5l709j+0MzN7XtN8zxfOS5l+ZkCnFFrub8
L/uX/CQXl/+wdyMTNeVr5lgG///72GBvRFyqy5fNEfzpvKJ82j6APHyse2VO
oTBX5Z8p4bk/5e5kZoguk25j+P8Tj8O6Sroz9oHk5RPda3MqRbgmL6Kk5w7L
PcgSfh5dZt0mexPic0RXgzf2ryjKdXkxpTx7RO5JVobqsug2h/eSBBzV1SRC
P00uxg1xCcPIqt+ia8a7HNPVIpJ+ulycm/JShpNNvzW83yTkuK52+Of1M+QS
3JKXMYLs+m26FiTihK4OUfQz5ZLclpczkhz67bqWJOakri5v6WfJpbgjr2AU
OfW/hjtOEk7p6hFVP1suzV15JaOpTzRnc/RluCevYgwNeNvZXH1Z7surGcun
RHc2T1+OB/IaxtGQGM7m68vzUF7LeBoR09nX+go8ktcxgcbEcvaNviKP5fVM
pAmxnX2rr8QT+Rcm0ZQ4zhboK/NU3sBkmvGOs4X6KjyTNzKF5sR19p2+Ks/l
TUylBS35jM9pRWva0JZ2tCee13/vte/xQt7MV3QgvrMf9NV4KW9hGh1JEL5T
9O/zSt7KdDrxrrOf9B/wWt7GDDqT0NnP4buDN/J2ZtKFRM4Whc9zpHBh3QNj
Fl1J7Gxx+P4gEjt0s+lGEmdLwuecyOzUzSGXfof8OUk5retOUv3S8DkmCrt0
c8mt3ym3IhlndD1Ipl8m1+AtduvmkUe/S25Ncs7qepJcvzx8bxGVPbr55NXv
ltuQgnO6XqTQr5BrEY29uq/Jp98jtyUl53W9SalfKdfmbfbpviG/fq/cjlRc
0PUhlX6VXIfo7Nd9SwH9Prk9qflL15fU+tVyXWJwQFdad9Tei2ws0BXU7bd3
IA1/6/qRRr9GrkdMDurK6I7Ze5OdhbpCugP28EcuLRd1/UmrXyvXJxa/6crq
jtv7kIPvdIV1B+2dSBfuhvyPOZJLzivLZ+2DyMcAXTrdOnsDYof7K/9tDuV3
5+XkE/a+5OR7XRHdb/bOpA/3LPy9NUdx2XkV+Zz9C/KH37N805zAQOfp5fX2
T8PPZL9jxgmfD/tFcxiHPFdePmnvRyP7AzNXuBf26+Y4WtifmT94vqj993C/
zS7h3zfvmRnC3bZfCXfHHG02M5+EnyH8jry2qnk+3F1zsNnEfBTeC7NAeO/N
W+FumBPNluZzs4s5yOv/A4h6EDs=
         "], VertexColors -> Automatic]}}, 
      VertexColors -> {
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168], 
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090753084431745], 
        Hue[0.008922109451530515], 
        Hue[0.02751680794121024], 
        Hue[0.04622099992694738], 
        Hue[0.06410704162395528], 
        Hue[0.08256639870941393], 
        Hue[0.10113524929092998`], 
        Hue[0.11981359336850345`], 
        Hue[0.13906525283452767`], 
        Hue[0.1574987620118227], 
        Hue[0.1760417646851751], 
        Hue[0.19469426085458494`], 
        Hue[0.21252860673526558`], 
        Hue[0.23093626800439693`], 
        Hue[0.24945342276958568`], 
        Hue[0.26808007103083187`], 
        Hue[0.2872800346805288], 
        Hue[0.3056618480414965], 
        Hue[0.32415315489852164`], 
        Hue[0.3427539552516042], 
        Hue[0.3614642491007441], 
        Hue[0.3807478583383348], 
        Hue[0.5661552581179933], 
        Hue[0.5847880082426421], 
        Hue[0.6026026080785619], 
        Hue[0.6209905233029324], 
        Hue[0.6394879320233602], 
        Hue[0.6580948342398455], 
        Hue[0.6768112299523882], 
        Hue[0.6947094753762018], 
        Hue[0.713181036188466], 
        Hue[0.7317620904967876], 
        Hue[0.7504526383011668], 
        Hue[0.7697165014939965], 
        Hue[0.7881622143980972], 
        Hue[0.8067174207982551], 
        Hue[0.8253821206944706], 
        Hue[0.8432286703019568], 
        Hue[0.8616485352978938], 
        Hue[0.8801778937898881], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.02268051342213563], 
        Hue[0.04170519845315341], 
        Hue[0.059679822249245285`], 
        Hue[0.07776393954139459], 
        Hue[0.09665328316819129], 
        Hue[0.11495638745245541`], 
        Hue[0.1342966290175636], 
        Hue[0.15305063124013926`], 
        Hue[0.17121839412018233`], 
        Hue[0.19019138333487282`], 
        Hue[0.2081143113146374], 
        Hue[0.22614673279045938`], 
        Hue[0.2449843806009288], 
        Hue[0.26323578906886563`], 
        Hue[0.28252433481764655`], 
        Hue[0.3012266412238949], 
        Hue[0.31934270828761063`], 
        Hue[0.33826400168597387`], 
        Hue[0.3565990557418044], 
        Hue[0.3759712470784791], 
        Hue[0.5613368240641906], 
        Hue[0.5802900672341202], 
        Hue[0.5981932491691239], 
        Hue[0.6162059246001851], 
        Hue[0.6350238263658935], 
        Hue[0.6532554887890696], 
        Hue[0.6722923775468929], 
        Hue[0.6902792050697903], 
        Hue[0.7083755260887452], 
        Hue[0.7272770734423476], 
        Hue[0.7455923814534173], 
        Hue[0.764944826745331], 
        Hue[0.7837110326947122], 
        Hue[0.8018909993015609], 
        Hue[0.8208761922430571], 
        Hue[0.8388113239496272], 
        Hue[0.8568559491522548], 
        Hue[0.8757058006895299], 
        Hue[0.8941142872656807], 
        Hue[0.013383164177295771`], 
        Hue[0.03235310246028484], 
        Hue[0.05073680140074134], 
        Hue[0.06853426099866528], 
        Hue[0.08736885787743326], 
        Hue[0.10561721541366868`], 
        Hue[0.1246707992845515], 
        Hue[0.14383387665149172`], 
        Hue[0.1619468927835061], 
        Hue[0.18086513525016787`], 
        Hue[0.6991397456826131], 
        Hue[0.7179865462881867], 
        Hue[0.7362471075512278], 
        Hue[0.7553128951489163], 
        Hue[0.7744881762426619], 
        Hue[0.792613396101482], 
        Hue[0.8115438422949494], 
        Hue[0.8298880491458841], 
        Hue[0.8476460166542864], 
        Hue[0.8664411214435327], 
        Hue[0.8846499868902463], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.020262366162598335`], 
        Hue[0.03944729771625642], 
        Hue[0.057466212561890294`], 
        Hue[0.07536270995738494], 
        Hue[0.09441230010682193], 
        Hue[0.1125277844944314], 
        Hue[0.13191231710908158`], 
        Hue[0.15082656585429752`], 
        Hue[0.16880670883768595`], 
        Hue[0.18793994457501673`], 
        Hue[0.2059071636043233], 
        Hue[0.22375196518349064`], 
        Hue[0.24274985951660033`], 
        Hue[0.2608136480878825], 
        Hue[0.28014648488620547`], 
        Hue[0.2990090378150941], 
        Hue[0.31693748498215524`], 
        Hue[0.3360190249031587], 
        Hue[0.3541664590623346], 
        Hue[0.3735829414485513], 
        Hue[0.5589276070372893], 
        Hue[0.5780410967298593], 
        Hue[0.595988569714405], 
        Hue[0.6138136252488114], 
        Hue[0.6327917735371602], 
        Hue[0.6508358160636816], 
        Hue[0.6700329513441452], 
        Hue[0.6880640699165846], 
        Hue[0.705972771038885], 
        Hue[0.7250345649151275], 
        Hue[0.7431622530295426], 
        Hue[0.7625589893709983], 
        Hue[0.7814854418430197], 
        Hue[0.7994777885532137], 
        Hue[0.8186232280173502], 
        Hue[0.8366026507734625], 
        Hue[0.8544596560794353], 
        Hue[0.8734697541393507], 
        Hue[0.8916181836281426], 
        Hue[0.011152636814413143`], 
        Hue[0.02993495520074754], 
        Hue[0.04847890066384435], 
        Hue[0.06632065131131028], 
        Hue[0.0849676282934236], 
        Hue[0.10337623235229934`], 
        Hue[0.12224219632652747`], 
        Hue[0.1414495647430097], 
        Hue[0.15972282739766439`], 
        Hue[0.17845344996767148`], 
        Hue[0.6969246105294074], 
        Hue[0.7155837912383263], 
        Hue[0.7340045990240077], 
        Hue[0.7528827667250415], 
        Hue[0.7721023388683292], 
        Hue[0.7903878052497895], 
        Hue[0.8091306315466021], 
        Hue[0.8276350849201775], 
        Hue[0.8454373434781216], 
        Hue[0.8640448283707133], 
        Hue[0.8824139403400673], 
        Hue[0.9016025981782949], 
        Hue[0.0066915820886478865`], 
        Hue[0.02509866068167294], 
        Hue[0.0439630991900504], 
        Hue[0.06189343193660028], 
        Hue[0.08016516912540425], 
        Hue[0.823129156468764], 
        Hue[0.841019997125792], 
        Hue[0.8592522422250743], 
        Hue[0.877941847239709], 
        Hue[0.8966103909032188], 
        Hue[0.015613691540178401`], 
        Hue[0.03477124971982214], 
        Hue[0.05299470213763833], 
        Hue[0.8688374145163521], 
        Hue[0.8868860334404255], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.019053292532829683`], 
        Hue[0.03831834734780793], 
        Hue[0.05635940771821281], 
        Hue[0.07416209516538008], 
        Hue[0.09329180857613727], 
        Hue[0.11131348301541939`], 
        Hue[0.13072016115484056`], 
        Hue[0.14971453316137667`], 
        Hue[0.16760086619643774`], 
        Hue[0.18681422519508867`], 
        Hue[0.20480358974916626`], 
        Hue[0.22255458138000622`], 
        Hue[0.24163259897443617`], 
        Hue[0.259602577597391], 
        Hue[0.2789575599204848], 
        Hue[0.29790023611069366`], 
        Hue[0.3157348733294275], 
        Hue[0.33489653651175116`], 
        Hue[0.3529501607225997], 
        Hue[0.3723887886335874], 
        Hue[0.5577229985238387], 
        Hue[0.5769166114777288], 
        Hue[0.5948862299870454], 
        Hue[0.6126174755731246], 
        Hue[0.6316757471227935], 
        Hue[0.6496259797009876], 
        Hue[0.6689032382427713], 
        Hue[0.6869565023399818], 
        Hue[0.7047713935139547], 
        Hue[0.7239133106515175], 
        Hue[0.7419471888176051], 
        Hue[0.7613660706838319], 
        Hue[0.7803726464171736], 
        Hue[0.7982711831790403], 
        Hue[0.817496745904497], 
        Hue[0.8354983141853802], 
        Hue[0.8532615095430257], 
        Hue[0.8723517308642611], 
        Hue[0.8903701318093737], 
        Hue[0.01003737313297183], 
        Hue[0.028725881570978894`], 
        Hue[0.04734995029539586], 
        Hue[0.06521384646763277], 
        Hue[0.08376701350141877], 
        Hue[0.10225574082161466`], 
        Hue[0.12102789484751547`], 
        Hue[0.1402574087887687], 
        Hue[0.15861079470474357`], 
        Hue[0.17724760732642328`], 
        Hue[0.6958170429528046], 
        Hue[0.7143824137133962], 
        Hue[0.7328833447603977], 
        Hue[0.7516677025131041], 
        Hue[0.7709094201811629], 
        Hue[0.7892750098239434], 
        Hue[0.8079240261724286], 
        Hue[0.826508602807324], 
        Hue[0.8443330068900392], 
        Hue[0.8628466818343036], 
        Hue[0.8812959170649777], 
        Hue[0.9003545463595258], 
        Hue[0.0055763184072065725`], 
        Hue[0.023889587051904283`], 
        Hue[0.04283414882160191], 
        Hue[0.0607866270929228], 
        Hue[0.07896455433339943], 
        Hue[0.8220026743559105], 
        Hue[0.8399156605377096], 
        Hue[0.8580540956886646], 
        Hue[0.8768238239646196], 
        Hue[0.8953623390844497], 
        Hue[0.014498427858737086`], 
        Hue[0.03356217609005349], 
        Hue[0.05186575176918984], 
        Hue[0.8676392679799424], 
        Hue[0.8857680101653359], 
        Hue[0.905346753634602], 
        Hue[0.0033457910443239433`], 
        Hue[0.021471439792366983`], 
        Hue[0.8745877774144403], 
        Hue[0.8928662354469117], 
        Hue[0.012267900495854456`], 
        Hue[0.031144028830516195`], 
        Hue[0.865242974907123], 
        Hue[0.8835319636151567], 
        Hue[0.902850649997064], 
        Hue[0.007806845770089202], 
        Hue[0.026307734311441587`], 
        Hue[0.8978584427219878], 
        Hue[0.016728955221619716`], 
        Hue[0.8880040567155151], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.018448755717945357`], 
        Hue[0.03775387216358369], 
        Hue[0.055806005296374056`], 
        Hue[0.07356178776937766], 
        Hue[0.09273156281079495], 
        Hue[0.1107063322759134], 
        Hue[0.13012408317772006`], 
        Hue[0.14915851681491624`], 
        Hue[0.16699794487581365`], 
        Hue[0.18625136550512464`], 
        Hue[0.20425180282158775`], 
        Hue[0.22195588947826406`], 
        Hue[0.241073968703354], 
        Hue[0.2589970423521452], 
        Hue[0.2783630974376246], 
        Hue[0.29734583525849345`], 
        Hue[0.3151335675030636], 
        Hue[0.3343352923160473], 
        Hue[0.35234201155273226`], 
        Hue[0.3717917122261054], 
        Hue[0.5571206942671133], 
        Hue[0.5763543688516635], 
        Hue[0.5943350601233657], 
        Hue[0.6120194007352812], 
        Hue[0.6311177339156102], 
        Hue[0.6490210615196406], 
        Hue[0.6683383816920845], 
        Hue[0.6864027185516804], 
        Hue[0.7041707047514897], 
        Hue[0.7233526835197126], 
        Hue[0.7413396567116365], 
        Hue[0.7607696113402487], 
        Hue[0.7798162487042506], 
        Hue[0.7976678804919536], 
        Hue[0.81693350484807], 
        Hue[0.834946145891339], 
        Hue[0.8526624362748207], 
        Hue[0.8717927192267163], 
        Hue[0.8897461058999891], 
        Hue[0.009479741292251173], 
        Hue[0.02812134475609456], 
        Hue[0.04678547511117162], 
        Hue[0.06466044404579403], 
        Hue[0.08316670610541635], 
        Hue[0.10169549505627232`], 
        Hue[0.12042074410800947`], 
        Hue[0.1396613308116482], 
        Hue[0.1580547783582831], 
        Hue[0.1766446860057992], 
        Hue[0.6952632591645032], 
        Hue[0.713781724950931], 
        Hue[0.7323227176285926], 
        Hue[0.7510601704071355], 
        Hue[0.7703129608375797], 
        Hue[0.7887186121110202], 
        Hue[0.8073207234853419], 
        Hue[0.8259453617508973], 
        Hue[0.843780838595998], 
        Hue[0.8622476085660987], 
        Hue[0.880736905427433], 
        Hue[0.8997305204501415], 
        Hue[0.005018686566485915], 
        Hue[0.023285050237019957`], 
        Hue[0.04226967363737765], 
        Hue[0.06023322467108404], 
        Hue[0.07836424693739702], 
        Hue[0.8214394332994838], 
        Hue[0.8393634922436684], 
        Hue[0.8574550224204597], 
        Hue[0.8762648123270746], 
        Hue[0.8947383131750654], 
        Hue[0.013940796018016429`], 
        Hue[0.03295763927516917], 
        Hue[0.05130127658496558], 
        Hue[0.8670401947117375], 
        Hue[0.8852089985277911], 
        Hue[0.9047227277252176], 
        Hue[0.0027881592036032854`], 
        Hue[0.020866902977482657`], 
        Hue[0.8740287657768955], 
        Hue[0.8922422095375272], 
        Hue[0.0117102686551338], 
        Hue[0.03053949201563187], 
        Hue[0.8646439016389181], 
        Hue[0.8829729519776119], 
        Hue[0.9022266240876795], 
        Hue[0.007249213929368543], 
        Hue[0.025703197496557258`], 
        Hue[0.8972344168126034], 
        Hue[0.016171323380899053`], 
        Hue[0.8874450450779704], 
        Hue[0.9072188313627556], 
        Hue[0.001672895522161972], 
        Hue[0.8909941577187581], 
        Hue[0.010595004973692486`], 
        Hue[0.9009785722689103], 
        Hue[0.006133950247927229], 
        Hue[0.8959863649938342], 
        Hue[0.015056059699457747`], 
        Hue[0.9059707795439865], 
        Hue[0.0039034228850446002`], 
        Hue[0.9034746759064485], 
        Hue[0.008364477610809858], 
        Hue[0.8984824686313723], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.018146487310503195`], 
        Hue[0.03747163457147156], 
        Hue[0.05552930408545469], 
        Hue[0.07326163407137645], 
        Hue[0.09245143992812377], 
        Hue[0.1104027569061604], 
        Hue[0.12982604418915977`], 
        Hue[0.14888050864168603`], 
        Hue[0.1666964842155016], 
        Hue[0.18596993566014267`], 
        Hue[0.20397590935779847`], 
        Hue[0.22165654352739297`], 
        Hue[0.24079465356781293`], 
        Hue[0.2586942747295224], 
        Hue[0.27806586619619444`], 
        Hue[0.2970686348323934], 
        Hue[0.31483291458988166`], 
        Hue[0.33405467021819546`], 
        Hue[0.3520379369677985], 
        Hue[0.3714931740223644], 
        Hue[0.5568195421387506], 
        Hue[0.5760732475386309], 
        Hue[0.5940594751915258], 
        Hue[0.6117203633163595], 
        Hue[0.6308387273120186], 
        Hue[0.6487186024289671], 
        Hue[0.6680559534167411], 
        Hue[0.6861258266575297], 
        Hue[0.7038703603702571], 
        Hue[0.7230723699538101], 
        Hue[0.7410358906586522], 
        Hue[0.7604713816684571], 
        Hue[0.779538049847789], 
        Hue[0.7973662291484102], 
        Hue[0.8166518843198568], 
        Hue[0.8346700617443183], 
        Hue[0.8523628996407183], 
        Hue[0.8715132134079439], 
        Hue[0.889434092945297], 
        Hue[0.009200925371890845], 
        Hue[0.0278190763486524], 
        Hue[0.04650323751905949], 
        Hue[0.06438374283487465], 
        Hue[0.08286655240741514], 
        Hue[0.10141537217360115`], 
        Hue[0.12011716873825648`], 
        Hue[0.13936329182308793`], 
        Hue[0.15777677018505287`], 
        Hue[0.17634322534548716`], 
        Hue[0.6949863672703525], 
        Hue[0.7134813805696986], 
        Hue[0.73204240406269], 
        Hue[0.7507564043541511], 
        Hue[0.7700147311657881], 
        Hue[0.7884404132545587], 
        Hue[0.8070190721417985], 
        Hue[0.8256637412226839], 
        Hue[0.8435047544489774], 
        Hue[0.8619480719319962], 
        Hue[0.8804573996086605], 
        Hue[0.8994185074954492], 
        Hue[0.004739870646125586], 
        Hue[0.022982781829577796`], 
        Hue[0.04198743604526554], 
        Hue[0.059956523460164654`], 
        Hue[0.07806409323939581], 
        Hue[0.8211578127712705], 
        Hue[0.8390874080966478], 
        Hue[0.8571554857863573], 
        Hue[0.8759853065083023], 
        Hue[0.894426300220373], 
        Hue[0.013661980097656101`], 
        Hue[0.03265537086772701], 
        Hue[0.05101903899285347], 
        Hue[0.8667406580776351], 
        Hue[0.8849294927090188], 
        Hue[0.9044107147705253], 
        Hue[0.002509343283242957], 
        Hue[0.020564634570040496`], 
        Hue[0.8737492599581231], 
        Hue[0.8919301965828349], 
        Hue[0.011431452734773473`], 
        Hue[0.0302372236081897], 
        Hue[0.8643443650048157], 
        Hue[0.8826934461588395], 
        Hue[0.9019146111329872], 
        Hue[0.006970398009008215], 
        Hue[0.0254009290891151], 
        Hue[0.896922403857911], 
        Hue[0.01589250746053873], 
        Hue[0.8871655392591979], 
        Hue[0.9069068184080633], 
        Hue[0.0013940796018016431`], 
        Hue[0.8906821447640658], 
        Hue[0.010316189053332158`], 
        Hue[0.9006665593142182], 
        Hue[0.005855134327566901], 
        Hue[0.895674352039142], 
        Hue[0.014777243779097417`], 
        Hue[0.9056587665892943], 
        Hue[0.0036246069646842715`], 
        Hue[0.9031626629517563], 
        Hue[0.008085661690449528], 
        Hue[0.8981704556766802], 
        Hue[0.9081548702268324], 
        Hue[0.000836447761080986], 
        Hue[0.9000425334048336], 
        Hue[0.005297502486846243], 
        Hue[0.9050347406799097], 
        Hue[0.0030669751239636145`], 
        Hue[0.9025386370423717], 
        Hue[0.0075280298497288735`], 
        Hue[0.9075308443174479], 
        Hue[0.0019517114425223006`], 
        Hue[0.9062827924986788], 
        Hue[0.004182238805404929], 
        Hue[0.9037866888611407], 
        Hue[0.9087788961362168]}], {
      Thickness[Small], {
       Hue[0.46538213714881804`], 
       ArrowBox[{{0.46538213714881804`, 0.534617862851182}, {
        1.3223157659616696`, 0.71942576104728}}, {0, 0.13500000000000004`}]}, {
       Hue[0.5553821371488181], 
       ArrowBox[{{0.5553821371488181, 0.4446178628511819}, {
        1.1080337230650301`, 0.8650526552954024}}, {
        0, 0.05399999999999995}]}, {
       Hue[0.675382137148818], 
       ArrowBox[{{0.675382137148818, 0.324617862851182}, {0.9111614052256475, 
        1.1848327121403865`}}, {0, 0.05399999999999995}]}, {
       Hue[0.7653821371488181], 
       ArrowBox[{{0.7653821371488181, 0.2346178628511819}, {0.804019465937922,
         1.6393375089907156`}}, {0, 0.13500000000000004`}]}}, {
      InsetBox["\"Sum-normalized spectra\"", {1, 0.2}, {-1, 0}], 
      InsetBox[
      "\"Quotient spectra using standard method\"", {0.9, 2.5}, {-1, 0}], 
      InsetBox[
      "\"Colors give correspondence (note reversal)\"", {0.9, 2.36}, {-1, 
       0}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{0, 3}, {0, 3}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 5: Standard method of creating quotient spectra\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.54716703508914*^9, 3.547168240063203*^9, 3.547298625085485*^9, 
   3.5472990757226887`*^9, {3.547299344836932*^9, 3.547299359459889*^9}}]
}, {5}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"linearQuotientTransformPlot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "/", 
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}], "/", 
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "u"}], "}"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"u", "/", "1.1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.025", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547164733906971*^9, 3.5471647595590563`*^9}, {
   3.547164830970419*^9, 3.547164931665399*^9}, {3.547164968136445*^9, 
   3.547165011121571*^9}, {3.547165162027791*^9, 3.547165257955388*^9}, {
   3.54716529804185*^9, 3.5471653016882668`*^9}, {3.547165332686492*^9, 
   3.547165336708681*^9}, 3.547165377464015*^9, {3.547165411249199*^9, 
   3.547165431912196*^9}, 3.547165501607873*^9, {3.547167655012796*^9, 
   3.547167686323903*^9}, 3.5471681200291777`*^9, 3.547168210626031*^9, {
   3.5472987358262873`*^9, 3.547298748471684*^9}, {3.547299106231627*^9, 
   3.547299107923362*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"linearQuotientArrows", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "Small", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "#", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "-", "#"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "/", 
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "#"}], ")"}], "/", 
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
              "0.1"}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".25"}], ",", 
            RowBox[{"-", "0.15"}], ",", 
            RowBox[{"-", "0.06"}], ",", "0.06", ",", "0.15", ",", "0.25"}], 
           "}"}]}]}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471661047819223`*^9, 3.547166187435761*^9}, {
   3.547166227353311*^9, 3.547166284736493*^9}, {3.5471663217221737`*^9, 
   3.5471664171426573`*^9}, 3.5471664761436243`*^9, {3.547166545333894*^9, 
   3.547166572827833*^9}, {3.5471666272346687`*^9, 3.547166821096075*^9}, {
   3.547166858818624*^9, 3.5471668888344603`*^9}, {3.54716771067766*^9, 
   3.5471677114266977`*^9}, {3.547167768530044*^9, 3.547167780388905*^9}, {
   3.547167872105948*^9, 3.547167914542306*^9}, 3.5471682106262693`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sixthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "linearQuotientTransformPlot", ",", "linearQuotientArrows", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Sum-normalized\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1.1", ",", "0.1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Reciprocal Quotient spectra\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2.29"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Colors give correspondence\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2.15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], " ", "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547165506400021*^9, 3.5471659055469217`*^9}, {
   3.5471664801811*^9, 3.547166485239188*^9}, {3.5471669557029667`*^9, 
   3.547166967367653*^9}, {3.5471678066025743`*^9, 3.547167848549383*^9}, {
   3.547167938251989*^9, 3.547168075882759*^9}, 3.547168140445486*^9, 
   3.547168210626327*^9, {3.547168692324882*^9, 3.547168721306837*^9}, {
   3.5472994011803427`*^9, 3.547299514655484*^9}}],

Cell[BoxData[
 RowBox[{"sixthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "sixthDiagram", ",", 
    "\"\<Figure 6: Easy-to-visualize method of creating reciprocal quotient \
spectra\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547166970768332*^9, 3.5471670255156927`*^9}, {
  3.547168147163466*^9, 3.5471682106263857`*^9}, {3.547168724991063*^9, 
  3.547168727242344*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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

      "], {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> Automatic]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84, 85,
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 149, 143, 
         138, 134, 131, 129, 150, 144, 139, 135, 132, 151, 145, 140, 136, 152,
          146, 141, 153, 147, 154, 127}, VertexColors -> Automatic]}}, 
      VertexColors -> {
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168], 
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168]}], {
      Thickness[Small], {
       Hue[0.36538213714881806`], 
       ArrowBox[{{0.36538213714881806`, 0.6346178628511819}, {
        0.593748363970561, 1.6499958118084888`}}, 0.1]}, {
       Hue[0.46538213714881804`], 
       ArrowBox[{{0.46538213714881804`, 0.534617862851182}, {
        0.7562490183823365, 1.3899974870850933`}}, 0.1]}, {
       Hue[0.5553821371488181], 
       ArrowBox[{{0.5553821371488181, 0.4446178628511819}, {
        0.9024996073529348, 1.155998994834037}}, 0.1]}, {
       Hue[0.675382137148818], 
       ArrowBox[{{0.675382137148818, 0.324617862851182}, {1.0975003926470652`,
         0.8440010051659628}}, 0.1]}, {
       Hue[0.7653821371488181], 
       ArrowBox[{{0.7653821371488181, 0.2346178628511819}, {
        1.2437509816176635`, 0.6100025129149067}}, 0.1]}, {
       Hue[0.8653821371488181], 
       ArrowBox[{{0.8653821371488181, 0.13461786285118194`}, {
        1.406251636029439, 0.3500041881915112}}, 0.1]}}, {
      InsetBox["\"Sum-normalized\"", {1.1, 0.1}, {-1, 0}], 
      InsetBox["\"Reciprocal Quotient spectra\"", {0.4, 2.29}, {-1, 0}], 
      InsetBox["\"Colors give correspondence\"", {0.4, 2.15}, {-1, 0}]}}, 
    Axes -> True, AxesOrigin -> {0, 0}, PlotRange -> {{0, 3}, {0, 3}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 6: Easy-to-visualize method of creating reciprocal quotient \
spectra\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547168175514007*^9, 3.547168210626486*^9}, 
   3.5472986628808126`*^9, 3.547298751672412*^9, {3.547299092964314*^9, 
   3.547299113037181*^9}, {3.54729940971076*^9, 3.547299516037085*^9}}]
}, {5}]],

Cell["\<\
The standard method involves three non-linear transformations of the spectral \
space, one to create the quotient spectra and then another to extract their \
medians, and a third to multiply the corresponding spectra by their medians. \
My method involves only two non-linear transformations - extracting the \
medians and dividing by them. The creation of the reciprocal quotient  \
(r-quotient) spectra is a linear transformation. Further, my method of \
creating the quotients does not flip the axes. This makes my method much \
easier to visualize. You can compare the two methods of creating the quotient \
spectra by looking at figures 5 and 6 (these diagrams are created using the \
reference spectrum from figure 4).\
\>", "Text",
 CellChangeTimes->{{3.547167112202626*^9, 3.54716722675627*^9}, {
  3.547167261266342*^9, 3.547167262677088*^9}, {3.547167294770259*^9, 
  3.547167415948337*^9}, {3.547167549225038*^9, 3.5471676289273252`*^9}, {
  3.547167725828884*^9, 3.547167747732733*^9}, {3.5471686721793756`*^9, 
  3.5471686753793077`*^9}, {3.5471996367262573`*^9, 3.547199645578714*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Median Reciprocal Quotients", "Subsubsection",
 CellChangeTimes->{{3.547221831853545*^9, 3.5472218401872797`*^9}}],

Cell[TextData[{
 "After generating the r-quotient spectra, the next step is to take the \
median of the r-quotients, that is, the median of all of the coordinates of \
each spectrum. The r-quotient spectra lie on the line between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "r"], ",", "0"}], ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{"1", "-", "r"}]]}], ")"}], TraditionalForm]]],
 ". This line is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      FractionBox["r", 
       RowBox[{"r", "-", "1"}]], "x"}], "+", 
     FractionBox["1", 
      RowBox[{"1", "-", "r"}]]}]}], TraditionalForm]]],
 ". Applying the reciprocal median formula above to the points on the \
r-quotient  line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"q", ",", " ", 
     RowBox[{
      RowBox[{
       FractionBox["r", 
        RowBox[{"r", "-", "1"}]], "q"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "-", "r"}]]}]}], ")"}], TraditionalForm]]],
 " we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{"2", " ", "q", " ", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"r", " ", "q"}]}], ")"}], 
      RowBox[{"1", "+", "q", "-", 
       RowBox[{"2", " ", "r", " ", "q"}]}]]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.5471975748960457`*^9, 3.547197592175139*^9}, {
  3.547197643493672*^9, 3.5471978648037367`*^9}, {3.547197901058646*^9, 
  3.5471979532156067`*^9}, {3.54719800877719*^9, 3.547198081874114*^9}, {
  3.5471983358347816`*^9, 3.54719842826193*^9}, {3.5471985482233973`*^9, 
  3.5471985692296247`*^9}, {3.547199518378127*^9, 3.5471995293994617`*^9}, {
  3.54719960252917*^9, 3.547199606380126*^9}, {3.547308750971302*^9, 
  3.547308812020582*^9}, {3.54730884220995*^9, 3.547308869185907*^9}, {
  3.547308942288823*^9, 3.547309002137504*^9}, {3.5473095776827307`*^9, 
  3.547309581653508*^9}, {3.54730980486635*^9, 3.547309842903023*^9}, {
  3.547309924717206*^9, 3.547309924811638*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rMedianAndRQuotientCurve", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", "q"}], 
             RowBox[{"r", "-", "1"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "-", "r"}]]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"r", " ", "q"}], 
              RowBox[{"r", "-", "1"}]], "+", 
             FractionBox["1", 
              RowBox[{"1", "-", "r"}]]}]}], "}"}], "+", 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{"2", "q", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"r", " ", "q"}]}], ")"}]}], 
             RowBox[{"1", "+", "q", "-", 
              RowBox[{"2", "r", " ", "q"}]}]], ")"}], 
           "quotientLineUnitNormal"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", "0", ",", 
         RowBox[{"1", "/", "r"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, 
   3.547392013757592*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rqpt", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rqpt", "[", "q_", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"r", " ", "q"}], 
            RowBox[{"r", "-", "1"}]], "+", 
           FractionBox["1", 
            RowBox[{"1", "-", "r"}]]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", "q"}], 
             RowBox[{"r", "-", "1"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "-", "r"}]]}]}], "}"}], "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "q", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"r", " ", "q"}]}], ")"}]}], 
            RowBox[{"1", "+", "q", "-", 
             RowBox[{"2", "r", " ", "q"}]}]], ")"}], 
          "quotientLineUnitNormal"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rMedianRQuotientArrows", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"rqpt", "[", "#", "]"}], "]"}], "&"}], ",", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"refPt2D", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], 
            RowBox[{"{", 
             RowBox[{
             "0.125", ",", "0.25", ",", "0.375", ",", "0.5", ",", "0.625", 
              ",", "0.75", ",", "0.875"}], "}"}]}]}], "]"}]}], "}"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473107151456633`*^9, 3.547310843866932*^9}, {
   3.5473108783840733`*^9, 3.547311090649839*^9}, {3.547311249085258*^9, 
   3.547311265375798*^9}, {3.547311378310196*^9, 3.547311402621615*^9}, {
   3.547311617010564*^9, 3.547311674762067*^9}, {3.5473117696027517`*^9, 
   3.547311804197371*^9}, 3.547392013757699*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineLeftEndpoint", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "2", "]"}], "]"}]]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54722535705967*^9, 3.547225382853983*^9}, 
   3.547229709457631*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineRightEndpoint", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]], ",", "0"}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547225393229892*^9, 3.547225409952771*^9}, 
   3.547229709457706*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineUnitNormal", "=", 
   RowBox[{
    RowBox[{"Reverse", "[", 
     RowBox[{"Normalize", "[", 
      RowBox[{"quotientLineRightEndpoint", "-", "quotientLineLeftEndpoint"}], 
      "]"}], "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54722523255466*^9, 3.5472252805683603`*^9}, 
   3.547225647688549*^9, {3.547225684686095*^9, 3.547225698608755*^9}, {
   3.5472257366007853`*^9, 3.547225740035652*^9}, 3.547225908143572*^9, {
   3.547226535464799*^9, 3.5472265634310637`*^9}, {3.547226668644137*^9, 
   3.5472266708818398`*^9}, 3.5472274424443893`*^9, 3.54722970945776*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seventhDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"rMedianAndRQuotientCurve", ",", "rMedianRQuotientArrows"}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472265888683357`*^9, 3.547226651702548*^9}, {
   3.547227542977453*^9, 3.5472275549610777`*^9}, 3.547229709457896*^9, {
   3.547311694275868*^9, 3.5473117213341827`*^9}, 3.5473121153456373`*^9}],

Cell[BoxData[
 RowBox[{"seventhDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "seventhDiagram", ",", 
    "\"\<Figure 7: Median r-quotient as distance perpendicular to r-quotient \
line. \>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547227585016399*^9, 3.5472276112806387`*^9}, {
   3.5472295584134207`*^9, 3.547229589070476*^9}, 3.5472297094579487`*^9, {
   3.547311878858325*^9, 3.547311889008466*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJw11H0w1HkcB/Bl93IeunRJubrztEM6DS4x1Hn/ruk8dFZauiNHJrWlK+ch
FBFdW7sknQiTjfau7jh3CePaomQ9bXSRx6xn8hBtu8suG+pWM7/vzHe+85rP
5/Oez19f04M/Mw9rUigUhvouv+TZTXen1TbTiNsTDfwaXwLOflKZaRNpb2y+
lDNwVkQ6GDqzE/e315MOh0jIjSh7RDoJHiFN/fxS0lfgzvcSJOeQLoCryb4w
HKIRuu36idm0u/DX6XGSyqnEDaf36wvcBbh8PNnNnEsloswljKt3qzG0vupm
qCmVEBlrLFUb1sGzLDzwZYkmsXLAfqTLVoTuOteAETdNgmqw0vEF/yni6zPv
G3ZqEKFeYY/0KK3YsTqWFcjSINxPjiWaarfBuD3e1+IdhaB02EZ/6dKBz9jz
v9HTKIRNtq5WEaMLDv9kb7tlTiG+ow5/2sh8gf6d1ywjT70HUZSyT/yLGMkf
vb5Ny3mH4lLh1pD0PrDucYqu1y9BpvjPfbB+APFuBhG8kUVkyF799E41iOZj
jS11tEWM5ThoNCwN4UDi43K5/QL+CJyyS1k3ArOwooAUn7cw9zlacvGLUVh6
dV+wSFZBj+X15Oz2lwjQUZ7cwpvHFOOrm24+Y2jev2Nxf9UcLrD66zz8xpF0
vUErbVqJtLwZtmvUBELu7ey00lHCm9p6NSF+Epw6TasmBwW0URx0PvEVJllT
BlePzMImR1rLzp5C3KhQWHdhBvpmS6ce86bhyRxSLpbLESSKbJwTvIZXnmT6
RqsM/G/H2pdaJEiLo585IpeCLze1cel4g0888tPtzaTgBIVkVMZKETe+prk7
SYKNvUb2sQtSBH8elbxXPA3rXXvKc8/IUBlvHrrOZQpyZ6dzgo/liMko6yxN
mIThbq3YmFQ5KrhPPX8Qj0M6zhXYGs2A6dTg3rp2DJtuSM04vBnEiHYzfMNG
IXbpPOZmPAv9c8bn6c+GsSssnEIrnoXeTBvxRG8IuhWSykAbBdZz6Xryln5w
Lpk2lFcp0JIXzH/7jRhJjLY7UR5KcDTA4wm70GkR+uhZkxKEpV0hM7kdw5fL
Nlr5z6Gkari6dL4FnquGC4z75hC82bvNw68JdnHp1MSgeRDxxpKDg7V4GiUr
e/FK7QAx8fu/D1DPdkx9fkIFgpPWlvX131jjn/DjhnAVKEycyW8sRrC1cMuh
SLU3yuiFPsVYeO7VoohRofqOb0xl6F+wNWGtNUpS17s2GI1kFSL3fmb+gQy1
LYqCbCW3cPyNrGy6Qu0P+TwIahzZ2wRkXh5WXEv4PvGBCkkf8q6jYIe2alW1
2h/yctHBNXHZKiLzsuBC39N4WkzmpSF1LjO3pk/tkuX5VHQ/6TmmO0juw0VU
BGslb5ScZ+PPhwnM6tfkfAIUvwrNtaVqdy/3n8bOw9qKvXKyPxq9ulnZI0qy
/wSsBnqOWqvU3rRcP4yYUhPn6AW1ryzXA1HLZuk+XCLNwGr/4t4VlLcg/7H/
AQGLXkk=
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
A2jV4Wo=
        "]]}}, {
      RGBColor[0, 0, 1], 
      ArrowBox[{{0.20312581801471954`, 2.2749853413297108`}, {
       0.5193875525910301, 2.4726509950939377`}}], 
      ArrowBox[{{0.4062516360294391, 1.9499874354254663`}, {
       0.9764569820138291, 2.3063695081566395`}}], 
      ArrowBox[{{0.6093774540441587, 1.6249895295212218`}, {1.361010984280648,
        2.094765404697359}}], 
      ArrowBox[{{0.8125032720588782, 1.2999916236169775`}, {1.660499081949212,
        1.829994554182873}}], 
      ArrowBox[{{1.0156290900735978`, 0.9749937177127328}, {1.859297281321092,
        1.5022918583064075`}}], 
      ArrowBox[{{1.2187549080883173`, 0.6499958118084888}, {1.937705863213608,
        1.0993448636615066`}}], 
      ArrowBox[{{1.4218807261030368`, 0.32499790590424427`}, {
       1.8705276551839773`, 0.6054051725781671}}]}}, Axes -> True, 
    AxesOrigin -> {0, 0}, 
    PlotRange -> {{0., 1.9380744290643892`}, {0., 2.599983247233955}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   "\"Figure 7: Median r-quotient as distance perpendicular to r-quotient \
line. \""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547229593004534*^9, 3.547229709458009*^9, 3.547298779434237*^9, {
   3.547298813682805*^9, 3.5472988395567217`*^9}, 3.547299134825918*^9, {
   3.547299165215502*^9, 3.547299177646183*^9}, {3.547311882110387*^9, 
   3.547311889916273*^9}, 3.547312117467767*^9}]
}, {8}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Move Median R-Quotients", "Subsubsection",
 CellChangeTimes->{{3.547229882993054*^9, 3.547229891327001*^9}, {
  3.54723011455107*^9, 3.5472301264890823`*^9}}],

Cell[TextData[{
 "The median r-quotients in the previous step are displayed attached to their \
corresponding reciprocal quotient points. But they should be attached to the \
sum-normalized points. The next step matches the median quotients back to the \
original points. Substituting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    FractionBox["x", "r"]}], TraditionalForm]]],
 " into the median equation above yields ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
      RowBox[{"r", "+", "x", "-", 
       RowBox[{"2", " ", "r", " ", "x"}]}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}], 
       RowBox[{
        RowBox[{"r", "(", 
         RowBox[{"1", "-", "x"}], ")"}], "+", 
        RowBox[{"x", "(", 
         RowBox[{"1", "-", "r"}], ")"}]}]], "=", 
      FractionBox[
       RowBox[{"2", "x", " ", "y"}], 
       RowBox[{
        RowBox[{"x", "(", 
         RowBox[{"1", "-", "r"}], ")"}], "+", 
        RowBox[{"y", " ", "r"}]}]]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.547229949963725*^9, 3.547229954213456*^9}, {
  3.5472300908227367`*^9, 3.547230208811603*^9}, {3.547311990975381*^9, 
  3.547312063919002*^9}, {3.547312212416731*^9, 3.54731221500848*^9}, {
  3.54731234034552*^9, 3.54731247721067*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "==", 
       FractionBox[
        RowBox[{"2", "q", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"r", " ", "q"}]}], ")"}]}], 
        RowBox[{"1", "+", "q", "-", 
         RowBox[{"2", "r", " ", "q"}]}]]}], ",", 
      RowBox[{"q", "\[Equal]", 
       RowBox[{"x", "/", "r"}]}]}], "}"}], ",", 
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"{", "q", "}"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309894278715*^9, 3.547310015209132*^9}, {
   3.547310046007867*^9, 3.547310046420391*^9}, {3.5473120513383827`*^9, 
   3.547312055784575*^9}, 3.5473176358843613`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
     RowBox[{"r", "+", "x", "-", 
      RowBox[{"2", " ", "r", " ", "x"}]}]]}], "}"}], "}"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547312195394025*^9, 3.5473122062857943`*^9}, 
   3.547317635884602*^9}],

Cell[BoxData[
 RowBox[{"sumNormAppropriateMedianCurve", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "-", "x"}]}], "}"}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
         RowBox[{"r", "+", "x", "-", 
          RowBox[{"2", " ", "r", " ", "x"}]}]], 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, {
   3.547312129012969*^9, 3.547312172914791*^9}, {3.547312523893662*^9, 
   3.547312570117124*^9}, {3.547312647770303*^9, 3.5473126690748377`*^9}, {
   3.547313177569745*^9, 3.547313183875668*^9}, 3.547317635884653*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
q3KM5ss9tvC//7P/7z/u/wdmnmMi
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.3548887814431656`}, {0., 1.2521278254959864`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547312572154689*^9, 3.547312669802268*^9, {3.547313184667417*^9, 
   3.547313213924827*^9}, 3.547317635884718*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXHmYVdWRf4RG3FCJDsZolIZW0KDgCoZdjUsUzWSBEYkzmImDThhxmS9O
Jp/Jxx+oEyMqa3CLaAy4EHADNxaBbuiGptllp9ma7ga6Hw303jXnd27Ve6eb
e++pB+H7+EP8utv7Xv2qzlJVp06dOnfQ8CdG/Grk8Cce+uXwjrc9NnzUiId+
+XjHWx95zHzUulUi0WqE+bmzYwL/T4mE/LL/HsIvfsjg//vZP2dTzfa36ZGh
o+iZF5+hUUMfobeLawK+VQX0QK/hVFDVQCXTB1KH87Lpsi5dqIv5yblyCOUl
KdFJzSN4bKoupk8mPkyd2+fQqDdX08HGzHhUb5lKox54kp6b+BKN/s8H6Y+5
FdRImfCop7JPn6Khw/+Xnp/wAj31q1/QHz4vp/oUj7Oo4UA+zZw0knJMG0dO
mkn5BxqOakeInM7cBD88ejgvC2amr/1zDlFjGc0cdBXdv7CSmsx/lQvvp+6D
PqAy02VqqKSiz4uo0nBvOrSK/vTAH6mwqslKajhSQkcaKNuyOV3L5luWvDVR
5Xwa0HEAza+UMVG2pLaE3vlRT/rdmiO2FXXbJ1Cvq39H66q5JUo2B4toZLfr
afy2OmYziXp2+y9aeZg6h7QwaPVpaXhdpIiECh89ns2np62Z0aU0tEtveqek
0ZI1lkyn3l3vo/wqSmSxqPryufTcH16lwmQji4/HpSahahn9+8VtrJV/y/5u
TYkzetDE7XZUEh3VvAzNwSU0pOsAmr0v6E5T2SzqnX0bfWW6n50Jn+QiurNT
H5pVJnxmUp9Od9KiZPjQZil4h+FOCRm7ri2G3pAP7NifvqwIbIsOfEn9s2+y
8DaWJosaK3Lp6ft+TVM3VRs9oGwFNOgp5DdQ+fzJNAPuI92yTmoWoFlAt5x/
If18YgGVHSqlxWNupAuuepY21TqDruHTUEYf3Hs59X0ml0oNn9xn+lLXIbOo
tMEz6DG8w3Btw0ctQuWnp6ZympnKYXYqZdoOr3qSut/wNG2sOVq9wnCtLY2Z
tYb9tHDyNNq8Z14L/xOPT43UoRU0oltPemHKo9TvwjOoXfbtNDq30q4Pmnak
+DRVUdGL91H/Ib8xa8RY+u29/WjI84V2rdKoeRjvMNypIePVcriNv5w1qHva
mX31C+p+d+DMWrOu1u/9mJ4du4ySZraa9s2mfjl3wSKzFSyyUnOeT1PGjqNr
L2mu5jHQ9GAlafGD19Hg2fsw0NRUs5fWbq1qPugaPslc+nFOb5pRyoNXOoP6
5NxDi13fUjHv6EGP4R2GaxM/ajz+5wXIdIhlnrqwmtYWT6PHhj1ql/5Hhz1G
04pruTWnmIVjLU0eMZhGPj2exv7PEBo8OpcqG3lAw6HirUwzqGr576nHRQPR
0M4KaY0VefTiyMdpzPjxNObhu+n+CZupmmKltXZ0fNWkh+n+/36WJkyeSM8+
MYz+Y1wRmQWPbS7LBDJ5NHW0Gc4ut2OpaBPDtnMcJHJYYgbb/v7JyfF9u+Aj
8+8+/GoVjTrtOD47/Rt+x8WPP6PGxib5/Lhk/KPbF6yv36jNSczvqwXbTrr2
faM2Jz2/iRPyqLa24aRqX4zaXHUCP9u9O0nvTF8VSvf96CYdCj6j119bRhUV
1fZpqJ+8qqqWXnm5wEd+mMln/n0tbdt6wD7d6ydvaGikcS/l+siPMHnu4mJa
umSHffqXaPJqJgdnSMDTED/51q37adbMtUeRW+oaJnr1lQI6dKjWPg2O5ink
Bw4coalvFPrIa5n8b28X0d4Sm8dL/NxPXl1dT5MnLfGR1zH5nDkbaN26Uvv0
Mz+5WeXppRcX+8jrmXxF4W5aMH+rffppNHkDk08Yn0f19cHkxASJQr59ewX9
fcZaH3kjk0NlZZr+2U/uTlMMeROTv/3XIiorC0zkx37yI0fqaMqflx5FnqY2
RB99tJ62bQss555onkIOvZ40cYmKvBVj5s/bQqtXldinu5WYJtMJOF8NRvJq
y5fvpkWLttunQR5Ma8ZABhQOT3cpMRs3llud1mAkV/jnyUuxkNinO5UYeNwZ
769RYdow5rVX0wr4IyUGWvjWmytUGEkE/fWtFbRvX+BP73AwaUgqZXS4LuXJ
7/Bwb8uYGTPW0I5im91K3K7E1NWlNdOHkfTM559vSnmm25QYaMv4cbkqjGxc
luTtSC0gt3owHC7QOOMCRTN/qMSsW1tKX5g+aTBnMAYOEWOHp1uUGHjFWbPW
uZjACI/vxKl1lNwzWa5rRTcHchPtA8LjO07xi961K2nV0hV9KvcsMgUedlJg
ra5NSpAMKRw11lU83dScf3S2NyIdHtmZdixsz56D9O67q8OERSc6w3LAkZLO
YmLELfAAeBrYXFJ0ds+T/vQKxRo5fdpKV2ignseU4YsUdzaLc33ugEBcpAUJ
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
75PkZbG+7xOt/h+qBSvq\
\>"]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNormPointsPlot", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472315073400793`*^9, 3.54723153098685*^9}, {
   3.547291708384388*^9, 3.54729171230812*^9}, 3.547291849024194*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ninthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"sumNormAppropriateMedianCurve", ",", "sumNormPointsPlot", ",", 
     RowBox[{"Options", "[", "sumNormPointsPlot", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547231558731024*^9, 3.547231583003787*^9}, {
   3.5472316750222387`*^9, 3.547231693053355*^9}, 3.5472915105811043`*^9, 
   3.547291715461149*^9, {3.547291836013537*^9, 3.5472918490243273`*^9}, 
   3.5473127374537373`*^9}],

Cell[BoxData[
 RowBox[{"ninthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "ninthDiagram", ",", 
    "\"\<Figure 9: Sum-normalized points with their r-quotient scaling \
factors above them.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472915137778053`*^9, 3.5472915576132193`*^9}, {
   3.5472916477569313`*^9, 3.54729168424542*^9}, 3.547291849024382*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
q3KM5ss9tvC//7P/7z/u/wdmnmMi
        "]]}}, {
      RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{0.5504139634968043, 0.44958603650319584`}], 
       PointBox[{0.6630719771133087, 0.3369280228866914}], 
       PointBox[{0.661787109323564, 0.33821289067643595`}], 
       PointBox[{0.7286019218118642, 0.2713980781881357}], 
       PointBox[{0.5689771649740721, 0.43102283502592786`}], 
       PointBox[{0.5614136729040614, 0.4385863270959386}], 
       PointBox[{0.39999885193102036`, 0.6000011480689795}], 
       PointBox[{0.768917311307553, 0.23108268869244708`}], 
       PointBox[{0.5466682166788871, 0.4533317833211128}], 
       PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
       RGBColor[1, 0, 0], 
       LineBox[{{1, 0}, {0, 1}}]}}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{0., 1.3548887814431656`}, {0., 1.2521278254959864`}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   "\"Figure 9: Sum-normalized points with their r-quotient scaling factors \
above them.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547291679984372*^9, 3.547291684882041*^9}, {
   3.547291840344864*^9, 3.547291849024444*^9}, 3.547298867032872*^9, 
   3.5472991888671083`*^9, 3.547312760647628*^9, {3.547313195612541*^9, 
   3.547313222429434*^9}}]
}, {8}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scale Sum-Normalized Points", "Subsubsection",
 CellChangeTimes->{{3.547233327719347*^9, 3.547233358998193*^9}}],

Cell[TextData[{
 "The final step is to divide each spectrum by its corresponding reciprocal \
quotient. This results in the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], TraditionalForm]]],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     FractionBox["r", "2"], ",", "\[Infinity]"}], ")"}], TraditionalForm]]],
 ". (Note that there is a ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " asymptote as well at",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{"1", "-", "r"}], "2"]}], TraditionalForm]]],
 "). Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["R", "x"], ",", 
     SubscriptBox["R", "y"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " be the coordinates of the reference point, this curve is the hyperbola ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", " ", "y"}], " ", "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["R", "x"], "2"], 
     FractionBox[
      SubscriptBox["R", "y"], "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with the origin translated to  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SubscriptBox["R", "x"], "2"], ",", 
     FractionBox[
      SubscriptBox["R", "y"], "2"]}], ")"}], TraditionalForm]]],
 " . The scaled spectra are the intersections of this curve with the lines \
connecting the original points and the origin."
}], "Text",
 CellChangeTimes->{{3.547233409357737*^9, 3.547233426602599*^9}, {
  3.547315611672408*^9, 3.547315612461529*^9}, {3.547318993409947*^9, 
  3.547319046408938*^9}, {3.547319077019785*^9, 3.547319227198279*^9}, {
  3.547319318108941*^9, 3.547319363116486*^9}, {3.5473194196952868`*^9, 
  3.547319539922263*^9}, {3.547319598973487*^9, 3.547319603472768*^9}, {
  3.54738919905938*^9, 3.547389334182631*^9}, {3.547389373949347*^9, 
  3.547389447121338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"originToPoints2D", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"Darker", "[", "Blue", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "orig2D"}], "]"}], 
       ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          ",", "orig2D"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5471598662264*^9, 3.547160104879672*^9}, {
   3.547160335177816*^9, 3.547160346330387*^9}, {3.547161024190194*^9, 
   3.5471610625535383`*^9}, {3.547161144522626*^9, 3.547161153551978*^9}, 
   3.547161262642654*^9, {3.547389660441325*^9, 3.5473897177279663`*^9}, 
   3.547389958138364*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalScalingPlot2D", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"r", "/", "2"}], "+", "0.0001"}], ",", "3"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2.5"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547315820284547*^9, 3.547315876113661*^9}, {
   3.547318520522623*^9, 3.5473185542564173`*^9}, {3.547318928248506*^9, 
   3.547318929567464*^9}, {3.547389501205985*^9, 3.547389516535078*^9}, {
   3.547389566921217*^9, 3.547389571153699*^9}, {3.547389684798848*^9, 
   3.547389685310708*^9}, {3.5473897799475117`*^9, 3.5473899477272882`*^9}, 
   3.5473906862822933`*^9, {3.547393836328681*^9, 3.547393836810052*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"scaledPoints2DPlot", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", 
       RowBox[{"Darker", "[", "Orange", "]"}], "]"}], ",", 
      RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", "=", 
           RowBox[{"refPt2D", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"t", "/", 
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
                  RowBox[{"r", "+", "t", "-", 
                   RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "t"}], ")"}], "/", 
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
                  RowBox[{"r", "+", "t", "-", 
                   RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Transpose", "[", "sumNorm2D", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5473899959131107`*^9, 3.5473901949805107`*^9}, {
   3.547390262558668*^9, 3.547390265503881*^9}, {3.547390645420309*^9, 
   3.5473906467773438`*^9}, 3.547390686282486*^9, {3.547391000532838*^9, 
   3.5473910721539288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tenthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "originToPoints2D", ",", "finalScalingPlot2D", ",", 
       "scaledPoints2DPlot"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547389728093873*^9, 3.547389745129978*^9}, {
   3.547389850426289*^9, 3.5473898559374733`*^9}, {3.547390169591282*^9, 
   3.547390173098926*^9}, {3.5473904123664722`*^9, 3.547390415950437*^9}, 
   3.547390492850726*^9, {3.547390650560094*^9, 3.547390686282548*^9}}],

Cell[BoxData[
 RowBox[{"tenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "tenthDiagram", ",", 
    "\"\<Figure 10: Final scaling of points based on generated median \
quotients.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547390487639607*^9, 3.547390555068609*^9}, {
   3.5473906090178833`*^9, 3.5473906133056307`*^9}, 3.547390686282605*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{2.172454345958343, 1.7744919345405104`}], 
       PointBox[{2.675301724350803, 1.359406145521423}], 
       PointBox[{2.87830990460933, 1.4709889319173473`}], 
       PointBox[{2.8813454193984884`, 1.073276896492814}], 
       PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
       PointBox[{2.26005835257858, 1.7655977040112563`}], 
       PointBox[{1.398151988227432, 2.097238014713233}], 
       PointBox[{3.0861624358478528`, 0.9274842729247682}], 
       PointBox[{2.255768229218814, 1.8706253682049265`}], 
       PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
       LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
       LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
       LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
       LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
       LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
       LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
       LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
       LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
       LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
       LineBox[{{0, 0}, {2.6917625635090703`, 
         1.2898265639379862`}}]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       LineBox[CompressedData["
1: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
/NGTjP8D83/w7Q==
        "]]}}, {
      RGBColor[
       NCache[
        Rational[4, 9], 0.4444444444444444], 0.22222222222222227`, 0], 
      PointSize[Medium], 
      PointBox[{{0.5431288103358621, 0.4436354186915789}, {0.6861536917911115,
        0.34865657839748754`}, {0.6839853356873696, 0.3495575152552775}, {
       0.8239683316769922, 0.30692126250356366`}, {0.5615509147589944, 
       0.4253971550894395}, {0.5538566621048238, 0.43268265611279816`}, {
       0.4358964095706468, 0.6538477421096109}, {0.9475904367568392, 
       0.2847793159093485}, {0.5395944657367983, 0.4474657826437218}, {
       0.7090240824172893, 0.3397469406742102}}]}}, AspectRatio -> Automatic, 
    Axes -> True],
   "\"Figure 10: Final scaling of points based on generated median quotients.\
\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547390615687723*^9, 3.547390686282668*^9, {3.54739100979552*^9, 
   3.5473910778087*^9}, 3.5473938530772943`*^9}]
}, {6}]],

Cell[CellGroupData[{

Cell["Work deriving equations", "Subsubsubsection",
 CellChangeTimes->{{3.547391875653401*^9, 3.547391881671582*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Equal]", 
       RowBox[{"t", "/", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
          RowBox[{"r", "+", "t", "-", 
           RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], ",", 
      RowBox[{"y", "\[Equal]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}], "/", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
          RowBox[{"r", "+", "t", "-", 
           RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}]}], "}"}], ",", 
    RowBox[{"{", "y", "}"}], ",", 
    RowBox[{"{", "t", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547315678490505*^9, 3.547315792141757*^9}, {
  3.5473159260094624`*^9, 3.547315934524352*^9}, {3.547316025974309*^9, 
  3.547316030952437*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547315775541061*^9, 3.547315792772892*^9}, 
   3.5473159377713633`*^9, 3.547316031415708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"t", "/", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316619099985*^9, 3.547316623312673*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"r", "+", "t", "-", 
   RowBox[{"2", " ", "r", " ", "t"}]}], 
  RowBox[{"2", "-", 
   RowBox[{"2", " ", "t"}]}]]], "Output",
 CellChangeTimes->{3.5473166239681273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]]}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316374848133*^9, 3.547316392164747*^9}, 
   3.5473166388419333`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox[
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "r"}], "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547316392990789*^9, 3.547316641798195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "t"}], ")"}], "/", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
      RowBox[{"r", "+", "t", "-", 
       RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     FractionBox[
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.54731641143988*^9, 3.5473164195544043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", 
       FractionBox[
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.5473164210602627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", 
       FractionBox[
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316426950857*^9, 3.547316443999943*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
   RowBox[{"r", "-", 
    RowBox[{"2", " ", "x"}]}]], "\[Equal]", "y"}]], "Output",
 CellChangeTimes->{3.54731645414047*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refPt2D", "/", "2"}]], "Input",
 CellChangeTimes->{{3.547317840890967*^9, 3.547317843609322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.30769106857440903`", ",", "0.19230893142559097`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.547317844104817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"1", "-", "t"}]}], "}"}], "/", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547318031714019*^9, 3.547318034654467*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}], 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "t"}]}]], ",", 
   FractionBox[
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}], 
    RowBox[{"2", " ", "t"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.547318036058297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]], ",", 
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", " ", "t"}]]}], "}"}], "/.", 
  RowBox[{"t", "\[Rule]", 
   SubscriptBox["x", "sn"]}]}]], "Input",
 CellChangeTimes->{{3.5473922441569366`*^9, 3.54739225075502*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"r", "+", 
     SubscriptBox["x", "sn"], "-", 
     RowBox[{"2", " ", "r", " ", 
      SubscriptBox["x", "sn"]}]}], 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", 
      SubscriptBox["x", "sn"]}]}]], ",", 
   FractionBox[
    RowBox[{"r", "+", 
     SubscriptBox["x", "sn"], "-", 
     RowBox[{"2", " ", "r", " ", 
      SubscriptBox["x", "sn"]}]}], 
    RowBox[{"2", " ", 
     SubscriptBox["x", "sn"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.547392253477168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bar", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"r", "+", "t", "-", 
          RowBox[{"2", " ", "r", " ", "t"}]}], 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "t"}]}]], ",", 
        FractionBox[
         RowBox[{"r", "+", "t", "-", 
          RowBox[{"2", " ", "r", " ", "t"}]}], 
         RowBox[{"2", " ", "t"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.547318045301791*^9, 3.547318070672861*^9}, {
  3.5473181761201572`*^9, 3.547318193913475*^9}, {3.547318506974475*^9, 
  3.547318507346719*^9}, {3.547318559605433*^9, 3.547318588031644*^9}, {
  3.547318733277388*^9, 3.547318750404436*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwVV3c41e8bPvZeZe+9ySxJPS/ZkkLILlmlZKRQSkKhEJIyItJUSYlUyPge
+zifcw4hK3vvGb/z++u9nut9nuu97+f5XJ/nvqXOBtp60+JwuDYaHO7/Z1T1
AU8WAhF+HSbfci4+goZZce24TiIkH0il3K45jMKjjc+tU+O7Rgr5n8YNkNKw
N+04RgS74iDb7dOHkHqrPdsAiQgCmwoWhgX6yHxwWL+LTASp3ZXXg0sHUXAh
Iye+iwgp+GSN6x/00KTf24813USwtaQxPSqsh4xv81+v/E3N/0Dfs5VwAEX+
c4l920uECMH20+dv7kenEy3qivqIkKSYKnOcdj+SaJBQzvtDhON2Pgw3EnTR
s4rX5x8OEGHVSY05+JUOEvocZJI0SIRM9aMPnoMO+jdkYhY3RARdGC1Z6dZG
oxH61RF/iRCSzl7FIayNko9cPHBlhAiTH27n+P7UQn/HCKTAUSK8SLHQY/HT
QkE/Tt31HieCX5JIcUitJrJ1jc/2nCCC7CFzzukQTaRSw9XlMknlfyS3k1VR
Ey0MWNTbThNhz7XZR18yNZCajG+40TwRjiVYcavL7EMSybb4IwtEKJppL6V5
rY7muPrRoUUikIdEHgXqqKO0ElyxzjIRqhKNXSLs1FBDVsAJpXUi0OrmP/P9
ooJGCT5/5DeIoGiR85HfQQU5K1qny24SYTo1Z8J+XRlpz9Bdk9wmwqVgxC1k
rIzqiqUlhXEYuA8miB9ZVUS7D+JmBWkw6HnwfqG7WBHNu0iPCNBisLV2uM7R
RRHd+6VgxU+PgZzeysPPjQrIX//KFi8zBjL2xmkWZfJI9s1zdj4WDPz1bSaP
hMijw/ccTPlYMeAw1BLP15ZHY6yXtfnZMeAkG6nc+CqHZg1urQhxY2CIczD3
Iciiuvs8Sxo8GGhzPnGgeSSLWi/mSJrvwYDQcHd2zEUWZXuT2a7yYuAhG29+
cUoGzU8oylIEMfCukMDMBGXQjWOTBXNCGNwVl/+jPCqNXtSw2DKLYOD3yVeL
67M0UlpLN9QXw0A6IMvj+ylpdIXZwPeZFAakYybnp/KlkLuL9flKaQxs4+YF
91yVQoZOUrmYDAZZ4cWB9NZSyG326GMWeQycjp5q192SRNZkMuWKMgZHb+v4
6HtKIoqHa7KjNgZ4sE0vTBVHeriUwlAdDD6ya85PnBBHanW2U6m6GGQbJigd
4hFHgkEVHK0HMJh6GfN8LF0MKYSEFZsYYHC5YKa+ulgU7cg+sDx3GIPqxyYZ
3y6JopN/syVijmDQsr+WMX2/KMoiEz1qEAbMRs+n8f+JIMNMfn1kgkFfem5+
w6ow+ltw6pKnKQbQuICU64QR4JexW2YYzOwxPWX2UBgJG989WGtBxduypZir
IYzsma6eMTuOwTexsiyHK0JIsFREz8URA9UfRfn0ooIoLuKv2QUnDH7uYyxh
XRVAFgdt70SexsAlWfp8bIcA+pFhHpPtgkHe5ODzjjgBFHKN9GTAA4NoDov3
cev86ISRlH6QH7W/p4Xif8/yId4IP6E7/hisGn01smznQwuHGeUzz1P7sVMb
secDHxqwCW78HoCBl1x33otgPnThs5kqRxC1P/pmmuVbvKgioSW+LByDpB81
qa6ivOi6cqNhUwS1371dX7/Q8KLB3FalgUgq35Lt5FNje9GtHpU77FEYdD8q
03L7tBd9tA308r2NgTBXVfG143tRpoEqWS4RgxwjNcqelD3oNJfQn/psDE4e
/6CNDvGgcx7p/T05GLCPsrhPKPCguaGvnIu5GDycsM+v4uVBhonKq+L51O9x
/MHJ/lludNZjejKiCAP6KOIsYxE36jQkXzlUQn1P/fTPYEFu1Geq7Wj/njrf
AlOW20zcqMJyzufiBwx2LkmV+c5wIWOTUp5npRj4cJf83nzNhdIzX2QwlWNQ
VmQVo6/EhRzx/mf6f1LxOKl+v6rJiZ7fllLfqsZAQRsFJu7lRBIdC0oCtRgw
frC62rXCgfbwsr23qcOAH6PbEvnGgZZS/Odr/8NAWVY15IA5B2qoV3MuJWAQ
kSqRbxDAjtws3MU+D2OQy8q200phRTm/lq/M/cVA1+lO8fJ3VuTGUMmkPIpB
EJ2hiVUhK/Kx56LkjWOgFp1uFRfEim4/fCr/YAYD+X22gXKcrOjeGC7zyhoG
N6tFjXNsWNDmyzOql9lIkOC/N+jyPBNST4zCf2QnwYkczuayHiYkPfJf/hIH
CQYWErJFGpnQ3TMK9Ne4ScCxFnrCJpcJxYeRU2P4SPD469agyXEmRGj06y+S
oObn5YNyGSOyzf1XLqBDggMZKe2kDAakmb46aKlLguEYxqG1WAa0rmtlGLWf
BIJSiUc1whgQhyw8G9EjQbxmht6wAwPqN+8a+HKYBH067ePHhBgQpZA33MuM
BH9uf55gLqBHn+L6/UacSWAv9kKQqZYOGR/NOy3hSsUjOaGaX0aHfhtFR592
I0FjLv/DY8V06IPaaFibBwkygx/hyUl0KLa2eaPyHAnyt+85fXaiQ7jjlIDc
SyRQuRfsdnOJFtXSJwUm3ybBw9y0xnAdWpToEmw0FUOCCwL5/zgUaZHGI3Mn
s1gSJPFOWJaK0KLj3HuscXdJ8DH6a4kyHS1iUdZzu3KfBDRPCkwonTTIX25I
MeAxCbw0zv1juEKDQi/WryWVkOAw+3zk5i8c8hEpOb7wngRVwsw/nStwaHN2
d/LURyqfvBvfG0twSH2/xrJEGQnoh8+kNmbh0DXLf5blFSQoCN+Wdr2MQ1ZD
2qJLddR5BigyNUjgULUcx5+8HhJIbvQKSnDuwtZIpCdjHwlervIf2Lu9A5+Y
bBUv/iGBheNtfpHJHSgXjb17aJAENyy+ZXo37IDbrsH9nlESlAznKA/d3IHb
XDUVioskYH/Z/8J99R/8nVHYt85MhoFD3E+ezG9Dg69qnC8rGdi3lkVbB7aB
uUdVjsJGhj6Dsg4uwjZYnwk7VM5JpuLI863/uA2viqOaI3jJoG6j+3I2ZBsI
fnxJXJJkSHuuWiW7tQUshAL5ywfIMOPGTbjNuwXWMU8c2vXIUPiOJyGKaQsk
yh80quuT4dcP8nLs5iawdJUFzBqQ4fX338/KBzbh4Ohi/WUjMuyIqOYXvtsE
53iZumhrMohckuJ6bLEJf2kVLpO8yDCUO2lx694GiLsqDht4k4E56loN6cYG
6JBDswp9yCB15o6cbvAGzBD0O0L9ySBU9eQWj8sGTK3d9xMMJEMxK7M8qG3A
g2ncqYAIMoQeYEnyIq5D8dreQrNUMnhtpP68Kb8OOnaGZeSHZFhZNhMTElkH
o+d+/D7pZFCoTQ+r4lqHGGAlxGaSodytZExyYw2U4jyk8TlkWOtbdfZoWYPN
rCIrj9dkWFbsiysOXYOjDr4Xm36RgXuN1oynZRUKT2fMetWTocFe2rWzZhXC
ojbr/jWQ4W/yz8Wn5aug8hIL0moiQ/hFvQjz56tQZlXWltdBBrmik20Mkatw
nKbwbUIfGe6r8Bcyq67CztqH8vw16jx2TEWm0laguoxeRnmDDFmLL8+aJq7A
gcvpPaWbZNCYLmF+eXsFyEq/dOr/kcHoXqp9VNAKxD74c2+GjgIzUs5KYTYr
oMWmRTzGTYFxohwpiX0FGFPsY02VKKDXvZurmLgMH5pzc1VcKZDqs6zR9HgJ
3nDeWv7pRgGC1g2xD6lLwO3i+sTegwKGlOqqJwlLkMvlTY46S4Fg1n5c1PUl
yFg6uYfiR4G+4izx655LkCiWWvLoCgUmDKuqbJWW4K+Wk7RdMgWI5UjA6sci
fNYePNfwiwILcyWn45YXgIWWOz+tngJez+UOLM8sgCKp2uhMIwVqPyQH+owt
AMNH9fJ/TRTAHV7rd/y9APuSJ3wPdVJAZNvL7FL1AtyzvMnYNECBJBQW631/
AQ72uivq7lCAiebajTPKC2DBFPHJUr8LQskuGd8D52Hk2LEqHoMuUDNXPxZz
fh5O/dOS6z7cBfPCkbtW3vPgFlQu4G/YBSt3rU+OOs/DD/3l2/fNu0Di+Jbz
EdN52Hkge3/coQsyG3a7wsXmocXumOV4SBfEYA/MRbLnQEnc3YvvfReQz7iL
2l+ahSojwyqxj12w404bcOXcLHzJC0+W/9QFxK4XgdnOs2D97VHRwfIumKPs
v7llOgu7a5Dh/bMLlOUy9/+TmIWnzTdeYu1dcF2ogsBKnAENK2+Me6ELHtxP
U1c/PAOHlUX3s+l2QwATR1G+5DSkmY2eVzrQDc1T1Qk6gtOw/oeqJw92w/Cv
ryPNXNOQ//g+V/zhblAds59h2p2C7NbrODbTbnjCqT1Y1jcFirdsHFUcu2Es
Wcax/+kUdHKzyrSHd4OwXdweD5Ep0Emt7XhX3Q1qFRk+p+UnYXH+zkhDbTdk
9YlUBUpMgm4Sw5WBum7gzq01vic4CT8nJ+j58N0gqZA2Ws86CR+//JmOIXSD
hNhTde+5CTBv+kQbPtQNnx3KJw5WTMCv5vmQGvrfkMIReETNZgJuhnqJkyx/
A14slqU5ZhzA9LCHwuRv+DLYOvprdhQkrqfl593tAfnvAq3vno7ARTe3LF7U
C/y7LgfPnfgLAVNM/M40fcB2xCY9XnkYrF9feldW2wen2k9sP9cYAvZa7yKd
wj/w5mvX+Rq9QZC+i485G98PpDshG/bnBsBW4jd386EBiLoVQ/vKrB8utIXs
FcEPwF/LD2En6/sgj7Nr/Z3TIBSdZHzNfLUX6m+Cym/aIYi8UxRtKd9D9XmS
4V2VQ3Bjp091dLEbbhoHq8xcHQZyBO5p92gX8IiSveRd/oLwrmtXKpkCmUxe
tdlmI8BwiiItMk6Glm+JupetRiBp9JNnyl8yNMbo2JnYjADfTFww4yAZUmLP
Plx2GIFX9mPcK91keHl46oivD7WeJkKjt5kMCVc/WeTGjgCb2tNKwnsy6Mb7
SrvUj8DbtbO7jtfIsFmYr21nOQpfKb09NdS9kVDL2Lp2fBQe7hbwSlH3TKxu
2Ndcu1F4m2WpFU1PhtK5gKQl11GQY58WNv5Hgv7CidMVgaPAdsroMTZLgsKt
MOHyjFE4ySWwKdFJAkWuDfa7w6OwoZEg5J5FAuOTnzem48Zg+LSZkY8yCVg9
KY6/E8eALQ77ul+BWs95VKkphRofsR5hkiXBk9eWah+fjIE+O6fHWzES4Pbi
Z7JLxuCjvGr7P6ouaivkWp4mj8GxEuWLtVSdRVs5/ui60jisr8ngCPUYIHXW
xRbyODTMO5BXvag6/+CL0P7ecZiJuiNR6knVeVN0V1aGxiHwQZzaJTcMdFz5
t1TmxmEhf/HRuAMGnQ3dQb+YJoC29XfmKNU3bKRn/cw9OAHXOsh8TBpUHyV6
2Urs2QRoenkpdlF9psxYdN7mtUlQmX5h8PYxEW6ePSGafHMS/I5szjdlUGM3
B1+FuElQ9y40mnxIBEc+kyteaZOgMKr9Xfk+1beqqLSxlExCjPsvlk/RRBg1
HgvY83cSpo2YSAPniXAhnnFTxW4KhsoTet4fJkKDhUKi3ZFpeHpxSZ5npBM0
b273E0ymodXlio/XUCeYXDLA21tPA1Hli+aX/k5owHX6+7lOw/xn/Hm3353w
sPOYc2PENASIp54tbe+E3Z7sGt+v08C8P+9oWGUnqDOF7bE9MANOUfLF51I6
wZX8J7jHeBa+TfYxEA93AuMZXZOzx2chefBUJdehTvj9/uLsnOMs2EgYMlnr
dcLt/ziHJS7MgmPwW3+8VicUCOjJE1NnwUP1mhVeoRMixfbX3B+YBf/n+51G
eDpBTOM7a2LMHEybKJjcHyXA5R/OvVv358BbRfF17zCBqqu240Ifz8EEc3a+
6iABYtPaEm68mwPXJSmzth4CZCzwmM9R5qC7LdlXkEAAWkdKh6rAPIxfiSI1
fiNAu8xybMPleRim2ZR7mEoAUsN/rjJh85DcqrxfMpkA2R1Lcnci56ENNqtL
kghgatn47GTcPMjwjpi0xhOgLly+TDR7HnxD/zFzRxGAk6bQ5Op/87D6bcf+
7XkCdDk6S3jILsDoZVMOMCZAaWWp3lHqHiqrT1HtNSSAwGpgn4rGAnDu7q0N
BwKsCWv9YTVYAM2lQzZf9Kl8d07Y4uwX4Guq/ayOJgFsrEJbWu8sgLzbhJS5
OAHKrsbvFZlcALG5kyH16x3g6rS5IL+wAF3MN/VgtQMSC/RoDq4vQK/zw5iK
pQ5QUCN3BjIugrtd/ev3s9T8PZvKSjKL4M2K6RX87YC6bF6ZTrdFsDx0d9+z
jg44XpnIbdC1CH733c/vvOyAJ0WxTBIDi3D0LG3O3RcdQDxua8cyvgjB6+En
9hZ2wH8yl/Ysry1CTYDpQeW8Dugk7LOVEVwCeQFGTveMDvhazaC7eHoJvHiG
8vuiO+ClKHvts+ElqFF0OnfIpQPmbw6pOk8vgV1oXcaAUwc8an7OJrqyBEId
X4/EOXQA+1l9hwrGZaDNfbPaebIDeFbNolyUl2F2tnszyLwDFlfVPC1CliFJ
MEG3QbcDMAk1NhWqzrna9fBWA3cHPNOU+8HOvwKp37Q8Ijg7wD2et2BdYgVW
NOg/qrN3wJvHygZz2ivgcr/s3WOmDkg+8zrytOsKEAT3c/3dbgf/8LI3Gu9X
IO2aPQrtaofOiyXe3m6r4BNRvH44pR2kZmW4pn1Xwf9ONy9XUjvY3vqdcCN4
FYixpxcH4tupe5rLoCZ+FWr0gufjbrbDyQHns62lq2BEb7vUc6kdXl/9LMzM
tgY7mPfoK+t24LXv3b5Xtwafo24JY2ztcDTNQe5BxxoMQ+R2FVM7JChdiM7r
XQP9fLesF3TtkGyEV5lcXgO8AQ/d9a02MOJrKJei6l7Juz9T9k21Qcuwd71a
4jrsE+jwr2hqA7Fw3iRvzw1QuML/zSGhDYTD5Kb9AzeAQX/0GC6uDcJZLsZE
R23AW4Yjn15Ht0EQ+8jUZPYGBLenbtOEtwGb48XG17834A6/bGSlbxssMuax
0DhvQvUXziVbkzbo/SHFpum/BTcq4lUkadqAfONN/1TEFmgkTXQPb7dC3aVh
159JWyC+6XHq5XorODgZS378sAVywgWl2vOtEKbBn1a/sQWWTrI4+/5WYFxd
8RxK2YYbre/LKr+3AoFbJjMZ+we6ww3L4pGtUGleY+c9/g/OJI7JGl1tBbbo
ECPH7X8g5JBF4xPSCkkOY8UpsjsgXL318/2FVlDJ4XbwDNsBpZPtVlaurXDo
Zvr7NxK7EM1161rB4VYoK/EKDDTBIePyV3PtuFZwuioq4HEShyRNclyY/7VA
1DFm9zNuOOQ58OSS4UYL/ISea7lXcEjTkene54UWYLDMatl9gUMrGrMJRUMt
oER2Eb/LQYP07l3IKaxrAeFVH2nhKRr0S2GUKHavBZKVXKRDN2iQ8+Lq+Rux
LVC40BYyykSLjhhF5vRFt0DDa0F6PjladN3TCMuLaIGAG9cpzzxp0YuVu3dU
AlrAgHVYtKSXFg2w8bV52LTAeauhfW+naVHnrjor3qoFfFj3DDRs06I5Htt+
LfMW6Mt3trYTo/ryr8L2zIYtYL3UxEnwoENpswlelVrU2IEh59UkHZL0K1/X
52+Bp/Q78o+36RCDePqnd3ta4AvDwNuXnPRI21KUQYqrBWQ8P2pqatOjgJNZ
F1iYW2Alzkpg6gY9Ch7RMBrcaAadW9XaHsIMiNJrv/K2rxmCJUMeJAUzorqF
kaBPRc3wpZpJ7kEiI9rgCBGYyW+GpsEioaZCRlTLseCnkNsMD17NnlqmMKIm
C2au3EfNIHD3v2glQyaUCc/PpsU3w/dfekn9EsxotLBqN8e/GeYmWFXnDZiR
3bPN40PezVB94tGGhTMz+iZsZ6ZwthleGRyP6MtgRqayz7Q+OTeDjJUx+Tk3
C/JVbJjttGqGy99JB6v5WNGDNFuypjq1vlCYYekAK3q+YFtwS7kZpOdMTWKc
WZGzTTFvh3wzbEuDZu0zVlScmD11WaIZbF47zY9osqGPS3NuldzNUL82GWDi
x47olGXVA5aagK1lz7ZAKjvKuLlkWT/XBLSec3fOVbIjthYPNonpJlAQd1AM
5eRA4U+8wrC/TaDkwi/zrooDbd7znzclN0Gy3NCHj9pcKDtWxcayogl0fOeN
5s5wIb7tWq+pz01UvZ8yUZnCheqUYujvlzaBimBFO+M8F7qrtDJBeNMEpo8l
7v9x5katOaPobG4T/PgjpCSpwYN6Up1pcmKaYERYys/tGA9iVsr4z/RWE7xb
DHq+6ceDnC/1CC1cbwLZ+I421+c86McRBmezsCZ4EVp3YEN0D+peVLDe9GuC
o4nTaQ/k9qI3NdmD4cebYOLdBBfRfC+KDNo6qGrVBDxZXa9zAvYiziw74X6z
Jih+w+RJ+LwX/dO9GGxq2ASL6WE0HDa8KMio9LqIThMkDeYK9Ybxoqs0Fjyd
GtT32mLkj+XxokB+TPWeGpV/Y1eO+CIvYr1msr4u3wS/H1a9xz3jQ9sU1r4/
Qk0w+/XGSctWPtTyraIoi5/Kv6nV13GLD9Vecl6239sEOf8BZ8dpfkSqnZdu
ZW8C16dcTJ2SAmh3bK7m1y4eGun2lkf2CqLMBpsp/AgequvY2ikSQkheNbxI
dQgPs7cL+t+cE0L6Xez0KX/w8EnJSmt2UQjxdv1650TBg/PxhvOuMiLo4ctX
JQv/4aGVsvtpJUQE2TO5x5+ux0OSqjw5skEEVY1J0NXW4OHAvWqazCBRZDwv
PpxeiYf4kdS8A0NiaK3lBDJ6i4eFzSiRM8biaCu8XPX9Szwojh89Iv1KHD38
1lkpWoQH392zkZQICfTnReS3jRw88DFWWDOMS6D3zZ/U/J/gweLqnK6EqiSS
iFxB3Y/wEOJUZ6eaL4mG+aYsviXjQap0pBv9kUQlyxagloSH73X3hWTEpKj/
P2ZS3l08FGQ+4S56JoXiGzYG4qLx0IuleB2skUbfPHjCXEPwEFpwkMWGSwb1
hrX4EwPxUHrxEQ2tpwwqyMrYtgzAQxDzB9ZmFllk6fd655A3HtiC+FpVvWQR
T0DBxc9n8BARJf/l109ZZKxCE7nPHQ8JjzI9zWPk0LDqsctyjnjYe3gl9smk
HPI3GHHMt8ODXimf6dQpeXQh/0if2Ak8PCh1d7x5UAGZvkiqFrTAw1B15kfL
UgUUH68unmmCh0pei//kNBSRkuGUIL8RHqwbu1Q9DJSQnwf3CN8hPDAOO1yP
aFZCAuHyXx4dwAOdSKy51BllJEIqlRHUwUONGU5mKV8FWbgmEEXV8MA09uOV
6nFVBO9j+J4pUe+5DR7z0KkhtXSbJRl5POTOWd/Lu6eOLuCqotUk8FDLbBLb
7boPPZFi0/okgocldyvxJTENZMeccOOgIB4ESsJSRtI00JYs97lqXjysaF6w
JXNrItxq6IgZDx7UpYSv+2doImbmFJoODjx8C9jAHKW1UPmK3lcnVir+zqea
wV+1UIOvGcsQIx4O1SrdLHLSRnR8acsX6PDwPxDY2ps=
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5473180726619987`*^9, {3.547318178151081*^9, 3.54731819481457*^9}, 
   3.547318508421997*^9, {3.5473185742356052`*^9, 3.5473185889656067`*^9}, {
   3.547318736091078*^9, 3.547318750975293*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]], ",", 
    RowBox[{"t", "\[Rule]", "0"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"X", " ", "asymptote"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547318847881042*^9, 3.5473189326004963`*^9}, {
  3.547319257475436*^9, 3.5473192865271997`*^9}}],

Cell[BoxData[
 FractionBox["r", "2"]], "Output",
 CellChangeTimes->{{3.547318862988669*^9, 3.547318871474601*^9}, {
   3.547318915669297*^9, 3.547318933207136*^9}, 3.54731925937846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", " ", "t"}]], ",", 
    RowBox[{"t", "\[Rule]", "1"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Y", " ", "asymptote"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547319263010157*^9, 3.547319294297826*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "r"}], "2"]], "Output",
 CellChangeTimes->{3.547319271049531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
       RowBox[{"r", "-", 
        RowBox[{"2", " ", "x"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"r", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547315820284547*^9, 3.547315876113661*^9}, {
  3.547318520522623*^9, 3.5473185542564173`*^9}, {3.547318928248506*^9, 
  3.547318929567464*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.3, 0.4},
  PlotRange->{{0.30769106857440903`, 1}, {0.27777907217978276`, 
    1.2401813281366454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.547315843337575*^9, 3.547315877133327*^9, {3.5473185277626143`*^9, 
   3.547318555022922*^9}, 3.54731895330225*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
F4c2yAXX1aoepD9+Ex7cVsPeRmfrGeSdbJQ9f7HSLbap2Le3jFsytYeOkHve
M2dkMMooxr29tkqkHfPAp9qntXANZm8sRbv/wuZGjycDP4sZheRK1RuVyRgd
8y+yF6PD0XPuIObEjcb7p/WIrq1gEX4ydjVKOvy8oe7rQG9w0O3gDYPVgG0r
ScLcqXNksDhn6lwklbSpAUIDnWjM/g8Mv3IcTQ5yQIwNNOpScXf//rg6Nhax
sddi9OwciL6JdoH66jKxZNbTeDUhAa/OnIhpywsg9s4Xqnpyb8g8CjdFHPUf
bDoot91iW631cVAfYbRTezFWjRyIgYNZMvF/cDSuuPZ55JmjPwQvRv3BFTMx
7dn5WL4yEfOfmYonluVCxGyqf0LwYpWtTVuAmXNfRcKKRXjx8ZlIPNTEIFjZ
jxTRfSbWvyz6L/ZuLgZRDmodIvpVyiLzBpwnV6/aI1dLsbOUW1yxd9VS7PHl
qj88nha5EWdEtWrlHomLDdE2e3KJMszNMbM93A2TZGaGaQYa/twej1eG2dPb
PsmXqzt3/syDtLR0bLcnF6iGKhVbbm7wSXIbXlbm0XbaY68pg9x+M4XGBYUo
UwwNDa3pOtlHFxY/k/RA2FZfryDPev4dy9mzUfLZ+ndypPMxQ8ZhGvk3VPZv
Xse/Z7n/d2+bZ7oLR8mIgwl1Mb3Jz8+daw+q9/9iHf/Wy/y/5N7XB3k2NMgz
/SBEz+czIElcnikXG4+nVQWg56c32LNg7LdQBT1xEonCwrMynuIkLfbVF/91
S/+calju8pnAXp6Qic8/O86ktnbEHntWVaaurkUesDHUyc+vzrcnnlYEDyd4
4MKjBkGfsCfmKILHHuxvHnp5vb5Ce+K3qjKMLRjAsDI8EBHvtSI/TCblfqPU
M3DaseMkli5J5z6n1F69TkRIlcuWZvBERCuzF39SifNsgMr37C7Vyu3Fn1Dl
4SzHgjMaE2WrsCceUwSPWhj2sUlFv1XaE4+qIjHYWrliN48FtWp78UeU+Oky
DxbFp2F/zmntrL34v6ry8ESMESFzBG1t3lp74lfKAM+f4hem8fhQq7cXf1gZ
oLMybmRKSjSRx56Y6leDJYvTmbDSGrt7whQl9NWXBfIcUJRfa7LXOVmJi+VH
RtrZ+8q0c/biv1TiTIrSa3gU1GIvPkmJ85Tzww8PSd9ttRf/hRKnF3NW2bmj
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"foo", ",", "bar"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.547318594206092*^9, 3.54731860527495*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.3, 0.4},
  PlotRange->{{0.30769106857440903`, 1}, {0.27777907217978276`, 
    1.2401813281366454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.547318605838408*^9, 3.5473189624160147`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
bsA4pO0iyxJJ9QLRDkl7T4EbOAFZ2w6p7kmLB4oen74CzaCJSCd5FWnxPGli
JiNKbuigGTwZutDNfApZIE34M8JYXCmkfz4L0VBdWyRNTGdOqNd8Dt3gSSjn
UlQl0uJ+TLww3oBbH3gj87MjqjJp8Y9Zecz1DVD7LoF64nw0VhrLpYmpzED2
0bNIGDgRd68kqCqlxacwA3y8JkwMATd7Dd+CVdLEZNGDG4m0jYuvJqiMrYNh
kti0YdvATZgNc129qkZa50QmXldYCm7IFKRFHVfVSYt/xMRzT5yDlkRCZVY+
e3HpUNyLiWtDw6H3DqGv9hqkxcczcX4ZoB4bBMOnUSqTtPg4Jl5fUgGuvydy
Tl1WNUmLezLxMm0KtH1HoTQpU2WWFh/LxO8SVxMGfoS68mqVRVp8DBNPjjyC
+HHBfFOqrNLio5k4t/EgkmcIr/zQui1HMiH16r1Im7PSJiSzRheZW8t2ImPh
ehsjs/zwYEz8om3ICAu3Me2kGXexbEsikRIWYWPaSzMjGJO4bDsMS7famA7S
zIdivX52DLf9l9gYmalgOGNyLtxCsoevjXlQmhnGmFKyAOZHE2uTWXj4kMAI
1ffbXi3e78DuUGa3prgC+v5j6VEE+kTYw1CpnhQEf9v7LYemhzDT/Atq7t0x
qE3NEh7+gZl+iHkm+TZByQsXOcsa9+n0tXdzA7WyLL13reQNAJWhC8q/M3s6
Mijejjhks/eIQ08dbJIq2Wt25OlgZjn7shp6r9k2y4+2tCy9Iadkr9ORZdHn
mnIjdO95EvlG4aGwMcqYX7W9Jmcu3t0flVqDzVFmzlGf+4Ax3NrPkbkhysY8
Ls0MYkwxGcX1Hn425glpZiBj+EDX9Rtj62MyZ51EhpsSioKLv9jsyDDvM+bu
5VvQf7zQxjwpzQxgjNlsgXbAeFjqG4SHT9kxdDZ4j0n+ErwRBSd+tGl/Slq7
yBQYcpFkX1t/dM7cGjIVpoIiRUx/xhg+/w7py+xmgz9JM/0Y01TXAI7kt/wa
gj75D+eMnoyu9y7etNmRYd5lTHV2Hj2U1cw87ZxJGB2A6qw8Rcw7jLl304Ck
KfNtzDPOmYShpK5LKxQxbzMm4+wNpAQuszH/acfQiOnLJDVkKWSpqXUs2Uq7
yKSdvIi0hRttzJ+dM9xAL1hNTYqYvzEm83A0DPb5w1+cM4kDST9pNCli3mIM
ycZhmLbYxnRyzmiGkVYpLlPEvMmYotR7SPIMsDHPOmdukrVFjSFDEfMGY+qN
9UgePsXGPGfH0Nb/K5NMWBiBkuiLjiUltOsGeTXfc8aIdtIO/4CU1TttTGfn
DPdf3i1bUoZ5nTEVqTn0ZF4z08U5o5m6CJXJGYqY1xjDb+5zg71tjJtzJv3g
aaSSdXprRnn2KH0azNGsK9rVkkjlT3S2tutK9ih9Lsmh6T7MNF19jbEL+K7M
tPLsUeZ4jJzl5EWbcfenWEnLCrJHmcMZtuyRbUSR9fHk5jLIeCqXPcqcAnDk
aW9muSotF5qP7Qavbi0tK8geZd44y1nm3/8VC6dkWliWyx6VvP2Us8kHc4t6
ZjZlNi7p4XUuYIWNed45o532CSoMmS4xmhF+Lcsmw7BNTXpSmT823Mx0d86o
g9agVJ3sEqMdMa1l2ewZOiW8xCT53R7NpBCb5AvS2l9mDP8e/c6Zay4xXOva
kmHEsvFJOn8AvZnp4ZzJ/JIMuzu+donRjpsFk7HWJYY/Fd3CHxnmRcaUJ2ci
yc+u7/Z0zvDn1osvxbnGDPcBnbMUML0Yw4vrh/nYmF52DI2YnkzyHhlnDUu3
OJaU0K4jSXpVSrZrTOu+L8OIZeMTCP7MejPzonMm5+R5JK/b5xKjnRyK6twC
lxh16z4pw/QQ/eG3P0f625iXnDM5311G0uoolxjN9DD6DSKHDG39F0TPh3/c
0gsl2of7KmZEO/xMo5+1ysa87JzRL9+BvDNXXWL474hY7Bcqihj/lv7IMN0Z
01TfSM+aNjOvOGdyv71Izz20ZoQZ81ef5m8nY1LnvwyVmXltTIrH837tQXJH
k7xok1WLIptKzjXL2dII04lrtpydyaWpoXjIrq64HFqfUJuFV5V7I33cs6U3
zzNdGV98i9R930jbcvHAn5wtft1kzC9pY0tgXDp85igARTPqka0aiJlx1E9E
Rts6t5BhujGGX6toP5prY3o7Z7IPRyN1+xGXGO2M5fTsoUvMiFbjpSLGT5qh
I7gbk+RfJLP8UJCU+bqjGNRFvyRCN2etSwz/LccsMre6wnAkE6svr3aJaVNb
vzMj1hufIWo8Z9mY15wzd3682nIuVsAkfhKJe5fiXWL47+rxb49dYloPhfYM
jZguouQoGclW2kXGVFNPz+41M687Z+6du4akFTtcYpKXf4Y7Z6+7xPBR1lhd
6xKjcW+VvSlgtK3XCEoYF+x0ZkxFdgH0votszF+dM/x3rVMjvnTM0NZ/jknq
F25G4XWtS9r5VVuLTSgljMf0lp4rYLjWtfU72xHroJqsXdT+y23MG86Z7K9+
gCHyiEtM4pItyLumbcOIm4bOMz4zCk4MwtN/6ooePYWT6t1f9cINib0d0a5m
QjBMdY1t7CpK+0gRrDV6bPULh8Yo7NuZ6wpQZ5a3mdB6VJGxKX7trankMras
2g9NlcXhSWBR960xsxTrFk4C8F9aicMG79k4nF7Pn6q3ZXadGKQWtjYVKX2I
3avVL0Gfv21AWoPjyniWyZlq6qCdMMem+81Wuu0yOSG1egBNhWewKTKB/54n
rKXnMKC7O79RKmeG/+0KiUu2tjEjm8Q9QJo3GXsCJiB4w05ELvXChNVxqLTI
WkqJOER6wI9tLDmKfpHhc6XK21muMcJrPJcYbpS/y4xu5HSXmSTPmYoZMcjo
ryFZs8bGvGXH0HH5L6JkVpbwy0IcSUppv3IFuHTJNebQISA9vQ2juu9/AB4G
jLU=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"medianScaledSumNorm", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], "/", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
        RowBox[{"r", "+", "t", "-", 
         RowBox[{"2", " ", "r", " ", "t"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, {
   3.547312129012969*^9, 3.547312172914791*^9}, {3.547312523893662*^9, 
   3.547312570117124*^9}, {3.547312647770303*^9, 3.5473126690748377`*^9}, {
   3.54731291394738*^9, 3.5473129688112698`*^9}, {3.5473130411268387`*^9, 
   3.5473130569356813`*^9}, {3.547316839707315*^9, 3.547316853000552*^9}, {
   3.547317119329213*^9, 3.54731713437667*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVl3k41N8Xx8e+b9n3fV+yVUidS3ZJIWSJSFRKUgqlJGQLRVIhIuVbKpSU
yhKasc2Yz8xQdtll3ym/+f11n/vc55zzPuc+957XkfcLcQpgxOFw7Qw43P/X
6No9vhwkMtTvo970KNmPhjhxHbhOMqTvyaDdqtuHImIsTq7R94nmqgUV46ZI
fTiAcRwjg0tJqNPWsb1Ip82Fa4BCBtENVVuzQhNkPThs0kUlg9z2cungojG6
WMTKi++i+8On6V57a4Qmgl69q+smwxE7BqsDEkbI4pbItU8/yaDwlvnXZtIe
FPXXM+5VDxmixDqOnbmxG3kk234v7iVDilqG4iHG3Ui2SVYjv48Mjs6nWK4n
7UL51aVn7g2QYcVdm/3iS0Mk+T7UMmWQDDk6B+4+A0P0b8jSOn6IDLthtGy5
2wCNRZrURv4mQ1gmdw2PhAFK339uz+URMky+vZUb+E0f/R4jUUJGyfA83daI
I0gfhX49eidgnAxBKZIlYfV66IhXwhPfCTIo77XhnQ7TQxp1fF2ek/T89+d1
cqrpofkB20anaTIIXp158CFbF2krBkaYz5HhYJI9v47iTiSb5oTfP0+G4j8d
5QylOmiWrx/tXSADdUjyQYihDsosw5UYLpGhJtnCM9JZGzXmBB9WXyMD466C
p4EfNNEo6VSfyjoZ1Gxz34m4aiJPNYdMpQ0yTGfkTrisaSDDP0xX5bbIcOEi
4he30EDfSxTkJHAYHB9Mktm/ooZwafEzYgwY9Nx9M99doobmPRVGRBkx2Fzd
993NUw0lNqjaizBjoGS0fO99syo6Y3J5U4gdA0UXi/u2lSpI+b9n3MIcGJw2
cZzcH6aCTBNdrYQ5MeAx05cpMFBBY5wXDES4MeClmmte/6iMZk1vLovzY2CO
c7U5RVJCDakCi7oCGBjwPnJleKCE2s7lytnswIDYdGdmzFMJ5QZQua4IYeCj
lGBzbkoRzUyoKdHEMDhZLYtZiymiawcnC2fFMbgjo9KnMaqAntdxOLFLYhBU
EajP914Bqa9mmplIY6AQnOPz5agCusRuGvhUHgPKQcszUwXy6Linw5lPChg4
xc+J7bgij5C7fB6miMHDiJIQZgd55D1z4CGHCgbuB4527NqUQw5UKu2yBgYH
bhmeMvGVQzQfrzQ3AwwI4JRZlCGDjHDpRZcMMSjn1pubOCyDdL47TWXswuCJ
WZL6XgEZJBZazdO2B4OpF7HPxjKlkUpYeImlKQYhhX8aa0uk0JbSXbuT+zD4
9tAy6/N5KXT49xPZ2P10/7vrWTN3S6EcKtmnDmHAbv5sGv9DEplli5ggSwz6
MvMKmlYk0Ejh0fO+VhhA8zzS+C6BAL+E3bTG4M8Oq6PW9ySQpMUd43pbDFpb
N9XydCWQC9uVE9aHMPgsXZnjelkciZVLGnm6YaD5tbiAWUoMxUf+tj7rTtez
k7WMc0UU2Rg73Y46hoFnmsKZOKIo+pJlE/vEE4O8ycFnxHhRFHaV8mjAB4Nb
PLZv4tdEkKO5vEloEL2+x8QTfs4II8HIIPHbpzFYMf9obtchjBb2sapkn8Fg
+l995I63wmjQ8WLzl2AM/JS7859fFEZn3ltr8YRicMHEWq9qUwhVJ7UmVEZg
kPy1LsNLSghd12g2I0TS693T9fEDgxAaymtTH4jCYKZsK+3omCC68UvzNnc0
Bt0PKvW9KwRRuVOIf+AtDCT5akquHhJE2aZaVOVk+v2Ya9N2pO9Ax/jE+xqf
YHDk0FsDtFcA+ftk9v/KxYBrlOP4hKoAmh36yLuQh8G9CZeCGiEBZJassSJT
gEHA+N0j/TP86ITP9GRkMQbM0eQZ1mJ+1GlGvby3DAMJnWPfLorxoz4rAzeX
NxjUFlpx3GLjR9V2s6fOvcXg33n5ysA/fMjCslzgaTkGgfxlPzdK+dD97OdZ
bFUYVBTbx5qo8yE3/OkT/d/oety1vlzR40XPbsnrbNZioGqAQpIFeZEscV5d
tB4Dtrf2V7qWeRC/ENcbx+8YCGFMm5KfedBC+um5+h8YqClphe2x4UHNjdoe
5SQMIjNkC0yDudFx2+PS74cxyOfk+tdG40RPGpYuz/7GYJf77ZKlL5zIm+UT
m8YoBheZzCztizhRoAsfLX8cA+2YTPv4UE50895jlbt/MFDe6RSizMuJEsdw
2ZdXMYiulbLIdeRAGy9OaF3gokDSacHQC3NsSCc5Gv+OmwKHc3lbKn+xIYWR
HwWLPBQYnE96ItnMhu6cUGW+yk8BntVLhx3z2FBCODUjVpgCDz9uDloeYkOk
5qD+YlkKDOQXgEYlK3LO+1slakiBPVnpHZQsFqSXuTJot4sCw7GsQ6txLGh9
l71Z9G4KiMknH9ANZ0G8SvB0xIgCCXpZRsOuLGjApmvgwz4K9Bh2jB8UZ0Hd
RUIR/tYU6Lv1foK9kBlVxPcHjXhQ4Kj0czG2eiZ04ED+MVkvCmTLTWgVVDKh
n+YxMce8KdCUJ3LvYAkTeqs9Gt7uQ9d78QGemsKE4upb1j+dpMDTrUT39+5M
CHeIFpx3ngKaiRe9bywyojrmlJC0WxS4l3e/OcKQESV7XjSfiqXAWdGCvzxq
jEjvgY27dRwFUoUm7MolGdEh/h0OuDsUeBfzsUyDiRFxaBh5X06lAMOjQkta
JwMKUh5SC35IAT/dk39ZLjOgsHONqyllFDDlnovaaMChAMmyQ/NvKFAjwf7N
oxqHNma2J4++o+vNv/6luQyHdHbrLslWUoB5+ERGcw4OXbX7a1dVTYHCiC0F
rws4dHDIQGrxO/0+g9XYmmRxqE6Zpy//FwUU1nvEZHm3YWskype1lwIvV0T2
CG79gwo2J7VzfRSwdbslIjn5Dz5Kxd3ZO0iB67afswOa/oH3tmnqr1EKvBnO
1Ri68Q9u8dVVqy1QgPtF//PjK39h5I/qzjV2Kgzu5X/0aG4LGgO14gM5qcC1
uSTVNrAF7L+0lGlcVOgzrSTykbbA4UT43ipeKmyO5Ac2vtuC0pLolkghKux0
3PViJmwLSEHCKXxyVLj3TKtGaXMT2EmFKhf2UGHam590S2gTDsU+cu0wokLR
a4GkaLZNkK+626xjQoXvX6lLcRsbwNZVGTxjSoUXX34+rRrYAKPRhcYL5lT4
K6lVUPR6A7wSFL/HOFBB6rw830PbDRhhVL1A8afCUN6k7c3EdZD1Uhs2DaAC
R/TVOsr1dTCkXsopOkUF+RO3lXddXIc/JBPipdNUkKh5dFPAcx2mVlODxELo
8TjZVUB7HdKmcUeDI6lweQ9Hij95DUpWBYusM6jgt57x7YbKGhg6m1VS71Fh
eclaWlxyDcyfBYmcyqSCan1meA3fGsQCJykumwofvMvG5NZXQT3eRwGfS4XV
3hUPn9ZV2MgptvcppcKSWm98yaVVsHANPEdooILAKqO1QOsKFB/LmvFvpEKz
i4JXZ90KXIne+P63iQrDad8WHletgNYLLFSfQIXIc0aRNs9WoNK+sj2fSAXl
4iPtLFErcIih6FVSLxVSNEWK2LVWYHv1bVXBKhXu/7OSnLq/DHWVzIoa61TI
WXjhZ5W8DHsuZP4q36CC7nQZ+4tby0BVbzBs/EsF88QMl+jQZYi725f4h4kG
f+Q91MMdl0GPS598kJ8GY2RlSgr3MrCmu8RZqdPAuHs7Ty15Cd615OVpetHg
3qklXcLDRSjlvbn0zZsGJP3r0m8zFoHf0+uRiw8NzGi1NY+SFiGPL4Aa7UeD
MM5+XPS1RchaPLKDFkSD3pIcmWu+i5AsnVH24DINJs1qapzUF2FY313BOY0G
5Cokav91ASoNBk82NdBgfrbsWPzSPHAw8hfcb6SB/zPlPUt/5kGNUmt+opkG
9W/TQk6NzQPLO52qvwQa4Pat9rv9nIedaROBeztpILnlb32+dh4S7W6wEgZo
kILC4wJS58G457jarn80YGW4ev2ExjzYskVW2Jl0wSWqZ9aXkDkYPXiwRsC0
C7RtdA7GnpmDo3/1lbv3dcGcRNS2fcAceIZWiZ4264KlOw5HRj3m4IvJ0q1U
my6QObTpsd9qDrbuKqWOu3bBg6btrgjpOSA4H7QbD+uCWOyujeSTWVCTOe4v
/KYLqCeOS7mcn4Eac7Ma6Xdd8O84Y/DlkzPwIT8iTaWiCzq7noc88ZgBh88P
io2r6PFpu29sWs0Abg2yAr51gZZy9u6/sjPwuOX6C6yjC66JV5M4yX9gp30A
xj/fBXdT7+vo7PsDphpSu7l2dcNZNp7iArlpuG89ekZ9TzcQpmqTDMWmYa2P
zpPG3fC74eNIC980FDxM5UvY1w1aYy5/2Lan4EnbNRyXVTc84jUYrOydAtWb
jm6abt0wmqbo1v94Csj8nIodEd0g4Ry/w0dyCgwz6omva7tBuzrr1DGVSVic
uz3SVN8Nj3sla0JkJ2FXCsvlge/dwJ9Xb5EoNgm1kxPMwvhukFO9P9rIOQnv
PvRNx5K6QVb6sU7A7ATYECoYI4a64b1r1YRx9QQ0tMyF1TH/hHSekP3ajhMQ
fclfhmL3E35Ix3G0xI4DWO3zUZ38CR8G20YbZkZB9tr9gvw7v0D1i2jb68cj
cM7bO0cI9YDwtqfxycO/IXiKTcSDoRe49jtmJmgMg0Pp+deV9b3g2nF465nu
EHDXBxQbFvXBq49dZ+qMBkHhDj7WL6EfKLfD1l1ODoCT7E/+lr0DcO1mLONL
634Ibg8TlMQPwIjd2/Ajjb2Qz9u19tp9EIqPsJayX+mBxhug+ZNxCKJuF8fY
qfyCNLxcRNenIbj+r1drdKEbblhc1PxzZRgokbjH3aNdICBF9Vfx/A0S215d
GVQaZLP51z+xHgHWozQFyXEqtH5O3nXBfgRSRyt803/T/5lYQ2dLxxEQ/hN/
kXWQCulxfveWXEfgpcsY/3I3FV7um9ofeIpuzxCp29NChaQrFbZ5cSPApf34
E+kNFQwTAhU8G0fg1arftttVKmwUFRg4241CNa3nVx29byTWs7atHhqFjO1C
IXl6n7m9K/xjnvMo/Jdjpx/DTIWK2eCURa9RUOGelrD4S+eOoolj1SGjwH3U
/CE2Q4GizXCJqqxROMwnuiHbSQE1vnXuO8OjsK6bJH48hwIWR96vT8ePwfAx
a/NTGhTg9KW5/UweA6547ONuVbo97wF1QvoYcO93GGFTokBOqZ32u0djYMzN
6/NKmgI4QfyfJ2Vj8E5Fq+MvnYtai/iWpqljYF+mca6ezlmMn8YfXFMfh7VV
RRypEQMzHc6FVuo4NM+5Ulf86Zxv/PxSf884zETfli33xSB3iuny8tA4hNyN
1z7vTec8L5FNzdlxWChYeDDuigGpqTu0gW0CGNp+Zo/S54aNzJxvecYTEEGk
CrPp0ucoqQv20k8nQM/fX62LPmfKj8Xkb1ydBI3p56avHpLhpt9hqbQbkxC0
f2OOkEWGaG/XQNX4SdAKKDKfvEcGd2HLy/73J0Ft1OCLRip9btXUbOcom4Tb
xxs4KmLI8NtiLHjH70mYNmejDJwhw9kE1g1N5ykYqkr69WYfGRptVZOd90/D
o3OLKgIjnaB7Y6ufZDkNrZ6XT/kPdYLleVO8i8M0dGp+0PvQ3wlNuM7TQV7T
MPcef8b7Zyfc6zzo0Rw5DcEyGX7lHZ2A63lSF/hxGth35x8I/9QJ2mzhO5z2
/AG3aJWSk+md4EXtu/jLYgY+T/aykPd1AsuJXZZ+h2YgbfDoJ769ndDz5tzM
rNsMHJY1Y3Mw6oRbP3iHZc/OgNvFV6fx+p1QKGqkQs6YAV+tq/Z41U6Ikt5d
lzowA6ef7XYfEegEGd0vnMmxszBtqWqZOkqC0K8ePZupsxCgqVbaM0wC+fWt
+EsPZ2GS/UmB1iAJbt9vT7r+eha8FuWt23+RIGtewGaWNgvd7WmBYiQSMLjR
iFqiczB2OZrS/JkEHYpLcU0X5mCYYUP5XgYJqE0/vBTD5yCjTWO3XBoJnhAX
lW9HzUEHbNSWpZDA2q756ZH4OVASGrFsSyBBQ4RKpdSTOTh16S87fzQJeBmK
LK/8mIPVz/9cXp0hQZebh6yP0jyMXrDiAQsSlH8qNzpA70OVjelaPWYkEFkJ
6dXUnQfebcH6CCDBmoR+H6fpPOgv7nX8YELP999hJ5zLPHzMcJkx1CPBYftL
rW2350HZe0LeRoYE768kCEpOzoPM7JGwxjUieLlvzKvMz0MX+w0jWCFCcqER
g/HaPPR43IutXiSCqja1M4R1AbydG0vfzBDBe8eGhrriAgRwYkaFv4nw/YmQ
Yqf3AtjuvbPzKZEIBz8l85t2LUBg6vEz/14QIac4jk12YAEO+DHm3nlOBPIh
J2eO8QUIW4s4LFhEhB+K53csrS5AXbCVsUY+ETpJO50UxRZBWZSV93gWEapq
WXYtHFsEP4Ghgt4YIryU4q5/OrwIdWruJ/d6EmH+xpCWx/QiOF/6njXgToTs
lmdcUsuLIE78uD/elQg8fiau1axLwJj330rnESIIrFhHe2oswcxM90aoDREW
VrR9bcOWIEUsaVfTLiJgstpcmnTOudJ172YTPxEK9ZS/cossw73P+j6RvEQ4
niBUuCa7DEu6zO90uInw30MN01mDZfBIrXz9kI0Id0+URh3zWgai2G6+31sd
cCai8j/dN8uQddUFXerqAPK5soAA7xUIiixZ25feAfIzinzTgStw5na3EF9K
Bzjf/Jl0/eIKUOOOLQwkdND7NJ9pXcIK1BpdnIu/0QFHBjz82spX4ACz0+Kv
8x1QeuW9BDvXKvzDAkZfOnSAkEvPVuL3VXgffVMC4+qAA/ddle8SV+E3RG3V
sHVAkvrZmPyeVTAp8M55ztQBaeZ4zcmlVcCbCjBd22yHA8JNVfJ07lW48y19
51Q7tAwHNGonr4GOKPF0NaEdpCKEUgJ810H5sshn16R2kAhXnj4dsg4sJqMH
cfHtEMFxLjYmeh3+Y9lfURrTDhe4R6Ymn6xDaEfGFkNEO3C7nWsu/bkOcSJK
UZ8C22GeNZ+DwWMDvn3gXXSybIdfX+W59E5vwrXqBE05hnbouv5f/1TkJuin
THQPb7VBw/lhr28pmyCz4XP0xVobuLhbyL17uwmKEoXlBnNtEK4rcr9xfRPs
3ZVwLv1twLKy7DuUvgXX2t5UfvrSBiR+xew07C/sHm5akolqgxqbOueA8b/g
lzymZH6lDThiwszdtv6CqGsOw6mwNkh1HStJV/oHkrWb396cbQPNXH5X3/B/
oHGkw97eqw1MbmS++U92G2L4bl4t3NcGFWX+ISGWOHSg6uVsB64N3K5Iifoc
wSFZy1xP9r+tEH2Q/fgJbxw6MfDovNl6K9TCr6t5l3FI340t8f18K7DY5bRu
P8ehZd2ZpOKhVlCnesrc4WFAxolnc4u+t4LEyikFiSkGVK86SpZObIW76p4K
l9YZkPvCypnrca1QNN8eNsrGiMA8Krc3phUaS8WYhZUZUZSvOZYf2QrB16/R
nvoyouLlO7c1g1thH+ewVFkPIxrgEm73cWyFs/ZDO19NMyLytg4n3r6V/s53
DDRtMaJZAad+fZtW6C3wcHCWZkLvPkq4sJu1gsMigZfkw4TuzyT5f9JvhUOu
LLkvJ5mQfFDVmolIKzxm/qfycIsJMctkVrze0QpVLAOvXvAyI0M7KRZ5vlZQ
9H2np2fAjIKP5JzlYG+FlXh70anrzChsRNd8cL0FDG/WGvhIsCBqj8vyq94W
CJULu5tykRU1zI+EVhS3wIdaNuW7yaxonSdM9E9BCxAGi8UJRayonmc+SDWv
BVJfzhxdorEivC07X96DFhC98yNG3YwNZcMzv/sJLfC1wSilX5YdjRXVbOee
boHZCU6tOVN25Px049BQQAvUHX6wbuvBjj5LOFur+rXAS9NDkb1Z7MhK6al+
hUcLKNpbUJ/xc6BAtaaZTvsWCPlCMa4V5kR37ztR9XRaoL5IgmVxDyd6Nu9U
eFOjBeRnrSxjPTjRMccSIaJKC2wpgF79U070PPnJ1AXZFnAsdZ8b0eNC7xZn
vT/xt0DT6mSwZRA3YtFQ0gleJABP644t0QxulHVj0a5xlgAMvrO3T37iRpyt
Plyy0wRQlnFVu8TLg64+8g/HfhNA3VNE8XUND9pIPD1nRSVAuvLQ23cGfCg3
TtPRrpoABoFz5rMn+JDQVr3/1HsCnffTJz6l86EG9Vjm1HICaIhVd7DO8aEE
9eUJ0n8EsHoom9rnwY/ackeRXx4BvvaJq8vpCqCfGR4MubEEGJWQD/I+KIDY
1bN+WN0kwOuF0GcbQQLI4/wv8flrBFBKILZ7PRNAX/ezeFiHE+D5pe971qV2
oO4FVYeNIAIcSJ6+f1dZEJXWPRmMOESAidcTfGQbQRQVummsZU8AgZyu0txg
QcST4yzRb02Akv/YfEnvBdHWrnMXrcwIsJAZzsDjKIRCzcuvSRoSIGUwT7wn
XAhdYbAV6NSlx2uPVTmYL4TOi2BaidoEMGzuypVZEEKcVy3X1lQI8PNezRvc
U2G0RePs7RMnwOzH60fs2oRR6+fq4hwRev6EtkC3TWFUd95jyUWQALk/gJd4
TARR6+cU2rgJ4PGYj61TThRtjc3WNWzjoZlJsCqqRww9bHKcwo/goe47VwdN
VhypakUUaw3hYeZWYf9/J8WRSRc3c3ofHirU7fVnFsTRjq6G1+40PBw71HTG
S1ES3Xvxsmz+Bx5aaNsVy2GSyJnteMKxRjwka6lQo5okUc2YLFN9HR6MEmsZ
skOlkMWczHDmJzzEj2Tk7xmSRiuth5H5KzzMbURLnrCQQRsRVVpvXuBBbfzA
foWXMuje585PUsV4CNz2i6JFyqLe51Gf13PxIMxa7cAyLovKWiq0Tz/Cg+2V
2V2yWnJIPmoZdT/AQ5j7d2etAjn0W3jK9nMaHhTKR7pRnxx6s2QL2il4+PI9
VVxRWh7JW7JT8u/g4Vn2I/7ip/LoTtP6QHwMHnqwdH/jOgX02Ucg3CuM7q/Q
mMORTxH1hLeeJofgofzcAwZGX0VUmJO1ZReMh1D2t5wtHErIPqj0394APHCH
Crdp+SuhHcGF596fwENktMqHhm9KyEKTIWrncTwkPsj2tYlVRoNaBy8ou+FB
cN9y3KNJZXTGdMStwJler3Jhq6mjKuhswf5e6cN4uFt+3O2GsSqyfp5SK2aL
h6Ha7Hd25aooIUFHJtsSD9VCtj+UddWQmtmUmIg5Hhyau7R8TNXRaR/+EeG9
eGAZdr0W2aKORCJUPjzYgwcmyTgb+RMaSJJSrihmiId6a5ziYoEmsvVKIktp
44Ft7OtLrUNaCL2JFX6qTj/nN30owKSNdDIdFxVV8JA/65CYn6iDgnE1Mdqy
eGhgt4zr9tqJcuS59Csk8bBw3F5mUVoXObMnXTcWw4NYWXj6yH1dtKnEf7JW
CA8remedqPx6iGHl0oi1AB505CWunc7SQxzs6QxEHjzUBK9jbgr6qGrZ6KM7
J11/52O9ix/1UWOgNccQKx721qvfKHY3QIzC95fOMuHhfzk716Y=
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 3}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547312945334552*^9, 3.547312969483954*^9}, 
   3.54731305782784*^9, {3.547316849368409*^9, 3.54731685411171*^9}, {
   3.5473171299875193`*^9, 3.547317134964613*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnHtwVcUdxy+5CUi1llbH1j4UFAgBMdqHWt+002qtyB/tiMXHTKTOgC0D
orXaPzodrVVHi6Oi+EDFqBC0IkZ8Isg7kpAI4REgvMIjgYS8CAl53fy639/Z
vfee7HnsOTeJaYdk7knuOfvZ329/+9vd3+6ec8bn3Dflrmk5902dnDP0upk5
M6ZMnXzv0F9PnylORQdEIgOmiM9dQyP4nyIRdeCfqTjILwH+P43/nE6t++bT
9Ekz6LGnH6MZk6bT/IpWK9+mIrrzshwqaiKnNFmMf8sAj1H92kfolhun0COz
n6WH786hR1bUUqegs6QKnXWFtHjONBr+7eE0bc5iKqzrDKKCP+6uQqbMg8S3
qoXj6Kwzh9HIzEzKFJ/hYydSQaOvGrIYQwzzcNVllLJG7Qp6+JYJ9Kd/PUOP
T7+F7l1USe3+1kizqvVUpUysmhaPv5DuWN1AXeK3YfUdlD0+n6pj0LOBNi7d
SA3trmkyg2TT2UYV8/5KT25qEimI2vc9T5dm309bWmg0ZxMlalhB1w69llY0
UMRSdLCJFtK0Pry7+MgoWb1dx0vp33c+QSVNXewZnS1V1NJpZIlIlmkeBno0
FkylGx4soSZgB+fR5WOn0aZmMz0GJFfwIOEO62lS5hX0dlWM1YlVLaQrRt1K
hU3KRN5pMg3SDJTm76rOpyvPu4FWN1LEqUrTDfJyqspTHPJX6TpqltOT/3iF
ShpjRvmPduCc8h+jztUsoavO/y2taTSzV3fzi2KMG3oNLau3+hqqW0bXDPtF
kod6p8k0SBPlNAOpvTKfZuUVU/Xxo1Q4axyNvCmPKjscG1e6QbZONZFhIiqd
YvXr6NFb/0y55Sfg4yYFHeOMGpVNlKarhcrnTaCLbxeNoNNIoEs7WRiv0zxR
p7c5thOnNN3biVMaqzAZ1L7nNfrjm/m0YPYTNOvVT2lXc1fc37zai1Oe7rXk
LOcCmb659AHKvuRR2tlqVj4nzqs8o+W1jpqVtGDuHHry/sn0l9zt1NxlJq97
9YgB5v3x2Ykeb9XtlH2T1eOlGaTJNEgTlUWMVeVTztM7SEQokbHKvPVf6NXi
kVeWA5fhkP8Y6d8dhz+kx5/aQI3C57uOfkxXD78RXY5J0bK8s3AqlZLa1bSF
cuduoAZhf3R0V4+YQGvNpMr6OU1Wc1tFHs287R6ONO65bSblVbRJOzlfy/Ll
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
/t/vHcED/gsQCrCz\
\>"]]
}, Open  ]],

Cell["\<\
Find all equations that match what we know so far about the eventual \
function: its asymptotes are the two axis-parallel lines through refPt/2 (the \
two limit expressions) and it is a hyperbola (the long equation and \
inequality). Looks like I was wrong and it is not a hyperbola. The conditions \
only hold if x and y are constant functions of r. (Later, it is obvious it is \
a hyperbola, I don't know where I went wrong here.)\
\>", "Text",
 CellChangeTimes->{{3.547378763237494*^9, 3.547378859176252*^9}, {
  3.5473788966649513`*^9, 3.547378897790078*^9}, {3.5473789316005487`*^9, 
  3.547378953858738*^9}, {3.547379326733573*^9, 3.5473793725500727`*^9}, {
  3.547390757884078*^9, 3.5473907743895397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"b", " ", "x", " ", "y"}], "+", 
      RowBox[{"c", " ", 
       RowBox[{"y", "^", "2"}]}], "+", 
      RowBox[{"d", " ", "x"}], "+", 
      RowBox[{"e", " ", "y"}], "+", "f"}], "==", "0"}], "&&", 
    RowBox[{
     RowBox[{"b", "^", "2"}], ">", 
     RowBox[{"4", "a", " ", "c"}]}], " ", "&&", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"y", ",", 
       RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "&&", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"x", ",", 
       RowBox[{"y", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", 
     RowBox[{"r", "/", "2"}]}], "&&", 
    RowBox[{"0", "<", "r", "<", "1"}], "&&", 
    RowBox[{"x", ">=", 
     RowBox[{"r", "/", "2"}]}], "&&", 
    RowBox[{"y", ">=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}]}], ",", 
   RowBox[{"{", "y", "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.5473780940045357`*^9, 3.547378186235491*^9}, {
  3.547378336104927*^9, 3.547378340014043*^9}, {3.54737851071954*^9, 
  3.547378570311448*^9}, {3.547378675033185*^9, 3.547378700148028*^9}, {
  3.547378909688429*^9, 3.5473789187386923`*^9}, {3.547379030260063*^9, 
  3.547379043291792*^9}, {3.547379095495343*^9, 3.5473790984698067`*^9}, {
  3.547379146433846*^9, 3.547379148370112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "<", "0"}], "&&", 
      RowBox[{"0", "<", "x", "<", 
       FractionBox["1", "2"]}], "&&", 
      RowBox[{"f", "<", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "c"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"2", " ", "c", " ", "e"}], "-", 
          RowBox[{"2", " ", "b", " ", "c", " ", "x"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "x"}], "-", 
          RowBox[{"4", " ", "c", " ", "d", " ", "x"}], "+", 
          RowBox[{"4", " ", "c", " ", "e", " ", "x"}], "-", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"4", " ", "b", " ", "c", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "\[Equal]", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "<", "0"}], "&&", 
          RowBox[{"0", "<", "x", "<", 
           FractionBox["1", "2"]}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", ">", "0"}], "&&", 
          RowBox[{"0", "<", "x", "<", 
           FractionBox["1", "2"]}]}], ")"}]}], ")"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", ">", "0"}], "&&", 
      RowBox[{"0", "<", "x", "<", 
       FractionBox["1", "2"]}], "&&", 
      RowBox[{"f", ">", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "c"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"2", " ", "c", " ", "e"}], "-", 
          RowBox[{"2", " ", "b", " ", "c", " ", "x"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "x"}], "-", 
          RowBox[{"4", " ", "c", " ", "d", " ", "x"}], "+", 
          RowBox[{"4", " ", "c", " ", "e", " ", "x"}], "-", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"4", " ", "b", " ", "c", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]}], ")"}]}], ")"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   RowBox[{"2", " ", "x"}]}], "&&", 
  RowBox[{"a", "\[Equal]", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["x", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "f"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", "c", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}], "2"]}], "-", 
      RowBox[{"d", " ", "x"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}], " ", "x"}]}], ")"}]}]}], "&&", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{"1", "-", "r"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.547378709801333*^9, 3.547379045087605*^9, 
  3.547379099321327*^9, 3.547379149209437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"y", "==", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], ",", 
   RowBox[{"{", "r", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547379704125637*^9, 3.5473797165338783`*^9}, {
  3.547379989778921*^9, 3.547379990827318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"r", "\[Rule]", 
    FractionBox[
     RowBox[{"x", "-", 
      RowBox[{"2", " ", "x", " ", "y"}]}], 
     RowBox[{"x", "-", "y"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547379718144853*^9, 3.547379991575755*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"y", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "r"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"r", "/", "2"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"r", "/", "2"}]}], ")"}]}]}], ")"}]}]}]}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"2", "b"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547380925763398*^9, 3.547380982299218*^9}, {
  3.547381059067523*^9, 3.547381067209166*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "b"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"b", "+", "x"}], ")"}]}], 
   RowBox[{"2", " ", "x"}]], "+", "y"}]], "Output",
 CellChangeTimes->{{3.547380964874194*^9, 3.547380983164584*^9}, 
   3.547381070749242*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"r", "/", "2"}]}], ")"}], "/", "2"}], "x"}]}], "\[Equal]", 
      "0"}], "&&", 
     RowBox[{"0", "<", "r", "<", "1"}], "&&", 
     RowBox[{"z", "\[Equal]", 
      RowBox[{"Limit", "[", 
       RowBox[{"y", ",", 
        RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}]}]}], ",", 
    RowBox[{"{", "z", "}"}], ",", "Reals"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.54738124915397*^9, 3.54738135994096*^9}, {
  3.5473813985625563`*^9, 3.547381421214219*^9}, {3.547381513113594*^9, 
  3.547381542469658*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "r", "<", "1"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{"r", "+", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
    RowBox[{"4", " ", "y"}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{"y", "\[Equal]", "z"}]}]], "Output",
 CellChangeTimes->{
  3.547381239322997*^9, {3.5473812967438583`*^9, 3.547381341162168*^9}, {
   3.547381387357424*^9, 3.5473814263207912`*^9}, 3.547381545043584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"r", "/", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "x"}], ")"}]}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5473820818472843`*^9, 3.547382104572688*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r"}], 
   RowBox[{"4", " ", "x"}]]}]], "Output",
 CellChangeTimes->{3.5473821051118298`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"r", "/", "2"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "r"}], ")"}], "/", "2"}], ")"}]}]}], "\[Equal]", 
     "0"}], ",", 
    RowBox[{"{", "y", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547384127349904*^9, 3.547384236864567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547384178017151*^9, 3.547384237437482*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.547385657851766*^9, 3.5473856812108603`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.5473856820221024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{
   RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.547385754146994*^9, 3.547385756814584*^9}}],

Cell[BoxData["0.3440108736849544`"], "Output",
 CellChangeTimes->{{3.547385746725821*^9, 3.547385757798616*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"foc", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"foc", ",", "foc"}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.547385801326215*^9, 3.54738580538375*^9}, {
  3.5473858383885*^9, 3.547385870688696*^9}, {3.547390792715378*^9, 
  3.547390793456942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"untrFoc", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
         RowBox[{"r", "-", 
          RowBox[{"2", " ", "x"}]}]], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"r", "/", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Orange", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"untrFoc", ",", "untrFoc"}], "}"}], "+", 
           RowBox[{"refPt2D", "/", "2"}]}], "]"}], ",", "Green", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "}"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "/", "2"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "/", "2"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.547381677454176*^9, 3.547381687307905*^9}, {
  3.5473854202701597`*^9, 3.5473856250268507`*^9}, {3.5473856686931877`*^9, 
  3.547385722158538*^9}, {3.547385760662657*^9, 3.547385763482342*^9}, {
  3.547385824970233*^9, 3.5473858269201307`*^9}, {3.547385878165723*^9, 
  3.54738603264205*^9}, {3.547386090374501*^9, 3.547386131887589*^9}, {
  3.547386204803734*^9, 3.547386230136971*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
AN3cColUKsWMYmDpQRn/L3XDf10=
      "]]}}, 
   {RGBColor[1, 0.5, 0], PointSize[Large], 
    PointBox[{0.6517019422593635, 0.5363198051105453}], 
    {RGBColor[0, 1, 0], 
     LineBox[{{0, 0.19230893142559097`}, {2, 0.19230893142559097`}}], 
     LineBox[{{0.30769106857440903`, 0}, {0.30769106857440903`, 2}}]}}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547385444850819*^9, 3.547385507280954*^9}, 
   3.5473857228035507`*^9, 3.547385764903829*^9, 3.547385827441921*^9, 
   3.547385894565304*^9, {3.547386024186795*^9, 3.5473860336449947`*^9}, {
   3.547386124480647*^9, 3.547386132419715*^9}, 3.547386231064177*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rQuotientForX2D", "[", 
   RowBox[{"x_", ",", "refPt_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xQuot", "=", 
       RowBox[{"x", "/", 
        RowBox[{"refPt", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
      RowBox[{"yQuot", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"refPt", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"xQuot", "+", "yQuot"}], ")"}], "/", "2"}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.547233545119871*^9, 3.5472336990874767`*^9}, {
  3.5472343664689827`*^9, 3.5472343837966957`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
A digression on the form of the reciprocal median quotient curve\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.547314941286628*^9, 3.5473149661960907`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "There were two interesting characteristics of the median quotients. First, \
the median quotient is 1for exactly two spectra for any given reference \
spectrum. First, the reference spectrum is given a quotient of 1. Second \
(unless the reference spectrum has a 0) is the spectrum with all equal \
heights (normalized ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    FractionBox["1", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") is also always unchanged for two dimensional spectra."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547314974114048*^9, 3.54731519065355*^9}, {
  3.5473152756170177`*^9, 3.547315296318137*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
       RowBox[{"r", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], "\[Equal]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], ",", 
    RowBox[{"{", "x", "}"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547314667412683*^9, 3.547314707941905*^9}, {
   3.547314822227365*^9, 3.547314826179538*^9}, 3.54731529631826*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", "x"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "<", "r", "<", 
       FractionBox["1", "2"]}], "||", 
      RowBox[{
       FractionBox["1", "2"], "<", "r", "<", "1"}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "x"}], "\[Equal]", "1"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "r"}], "&&", 
    RowBox[{"r", "\[LessEqual]", "1"}]}], ")"}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{3.547314678122054*^9, 3.547314710944695*^9, 
  3.547314827512681*^9, 3.547315296318329*^9}]
}, Closed]],

Cell["\<\
Second, the maximum reciprocal quotient is located along a lovely s-shaped \
curve.\
\>", "Text",
 CellChangeTimes->{{3.5473153035153503`*^9, 3.5473153501547337`*^9}, 
   3.547315513195568*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
        RowBox[{"r", "+", "x", "-", 
         RowBox[{"2", " ", "r", " ", "x"}]}]], ",", "x"}], "]"}], "\[Equal]", 
     "0"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473134553390923`*^9, 3.5473135116716967`*^9}, {
   3.547313550070256*^9, 3.547313567331184*^9}, {3.547313723145562*^9, 
   3.54731377379069*^9}, 3.5473144172239857`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", "r", "<", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"x", "\[Equal]", 
     FractionBox["1", "2"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "<", "r", "<", "1"}], "&&", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "-", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}]}], ")"}]}]], "Output",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547313473182349*^9, 3.5473135129545527`*^9}, 
   3.547313568154154*^9, {3.54731374520894*^9, 3.5473137744640703`*^9}, 
   3.547314417224423*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
       RowBox[{"r", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], ",", "x"}], "]"}], "\[Equal]", 
    "0"}], "&&", 
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
   RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], "]"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473134553390923`*^9, 3.5473135116716967`*^9}, {
   3.547313550070256*^9, 3.547313567331184*^9}, {3.547313723145562*^9, 
   3.54731377379069*^9}, {3.547313887680892*^9, 3.547313888463971*^9}, 
   3.547315453199176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "x", "<", "1"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "x"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"]}]}]]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5473138890281563`*^9, 3.5473154531996326`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"0", "<", "r", "<", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"r", "\[Equal]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{
      FractionBox["1", "2"], "<", "r", "<", "1"}], ",", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "-", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<X Coordinate of Reference Point\>\"", ",", " ", 
      "\"\<X Coordinate of Maximum Reciprocal Quotient Median\>\""}], "}"}]}],
    ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Location of Maximum Reciprocal Quotient Median\>\""}]}], 
  "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473139389639597`*^9, 3.5473139415316668`*^9}, {
  3.547314024774284*^9, 3.547314285272215*^9}, {3.547314319485633*^9, 
  3.547314320381287*^9}, {3.5473143528458157`*^9, 3.547314417224608*^9}, {
  3.5473145050018063`*^9, 3.547314510507934*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->{True, True, False, False},
  FrameLabel->{
    FormBox["\"X Coordinate of Reference Point\"", TraditionalForm], 
    FormBox[
    "\"X Coordinate of Maximum Reciprocal Quotient Median\"", 
     TraditionalForm]},
  PlotLabel->FormBox[
   "\"Location of Maximum Reciprocal Quotient Median\"", TraditionalForm],
  PlotRange->{{0, 1}, {0., 0.9998571632610126}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.54731408138936*^9, {3.547314259729109*^9, 3.5473142861676483`*^9}, 
   3.547314322668672*^9, {3.547314393437736*^9, 3.547314417224821*^9}, 
   3.547314511252987*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/gOLuSmkf3W67tJqav1WV9Z6rgcu9bbfPevid8+Vou7/qTb+X8STFor/P3z/
j+Kx4asp/lPiXWw5FWS10e/8v+E71qMXxX9KvQVU68X/FT0r/bZJrRvi01vR
Tin3AGI75XXSnon+7N1709rYG+qdKqlt62C8sOnvcNuOdlK0XUpDzlHb6wJC
VduWJp779oqDGYe//lTvpwMdjX+2XHO7jlafHNUpCW1//nHlP6sjMU6Q13BM
O5wgbBthOWFHIe5vnYAwQWRfcYD8x8YwdeTyDFmYCbXq48MZu3DbYGKCI5jd
+ihsn/oOatcULcAStVBZ+jInCkuPH8f6EW+gjsd7mLrlEq7snIvB/X0we+Np
3LgTLPqSHTWx9Z8IFBQU2zXB9xnEjEdbvkDDOpXxrOeX8L9MkUyo7wDy6JE7
SErUa1Kd+wDbQs5j86zBGL7oXyTkZuDqpkl416MuOo8IwKG9c3A92zHVl0Li
EB2d6oj17zbojtknklAEWFlviMa+ub3RuO7bzlgfczcNISGP7FvgYnMVP55M
og2PVWxMSDr5I65ysSlrUXTCMysrHwcPRNnhqYkuR9y86art8L/uvM6Wzdfc
rrPpb/fbKQlthw/fRlparl0daXjYwcVZPwx9uylefKYsnnq6Cuq91gfTt0bB
YEY9B9A3byYhPDzBDprLHCnooKl489Pp2HzxHtLzjTDmp+Hu+b8w5f1W+Hyb
FJCgJhG8idzcIuzadcO+CSYRxifYN2IFbuRaJMKcG4HFXwTgvsYc5IeCdstR
R1vknOuYt/WhMBFtVFTsH4KsacwTV5EF5Tf9QLyt8itG/P4ZVinWQN6+/Try
84s1kfXX8MPY40g1WZGNSTg0+mfczHWMTMMYEfHEHpnNbWMitnevjw5DVuBS
ptEyt4uSzmPt96+jcd/TyDCrzm3eQl5ekaj3lC3wczhjTjzik7NRICzlakLH
XWJ2y14HCcfipRCDA3/Bp81eQMVyFfFC8174RYwqUOcAx93w+2UYjSZt3Pxo
/Pb1PByKzkChsRAZ0Ycw7+slFPkn0zwc7eLFh+L00EQTVNmM/fEo5nSIEvCj
pgRwXBp9pm00qVwiUHnwdhryi/ORdvugQOVSK5UKXM799esUXH1Nnau9mtcQ
uVqjRW/MDxRXJYe4NOIZGXl2uGoai9d5cD9DXM6c0eLqCFdkuGtWh9j2sb2b
I6yB+/df4dDrC7Vx3RxrjnvvXrotH1TodWesn2G4AWsv2fLhVXX+ujrWHHeH
oJ1sxlqJa85A6NIjSLAwwozM62sRrXeMm5qaiz27b2jgCjouNxKTWz4PCk+3
HA5VtUQCUGiKHXYlGS/MZhkv2ilpzsWtgLH4+TILBhOeaSFzEKExdhw3OOgR
rl1N0MAVaDZcxfetO2PNgyLrIZe5mLXhmGaTyQz/NSF22GpzqjKrQ5u++Phs
a522in5SSMnJOfi0xYt4pmx5PF+/K0ZuFgMKVPvJcUmr/77+sjZu7k3MG7MW
F+NyUGQsQHrUHkz2/laM6rBqTeYuEbcnNjNJ8tRaDApTNqIOx0A839Vfh++S
i0hjwmTS38GOebvxuEidYN5ESoqB77Zsm5A2xzCE00GjoG8lOSpT7S2HcsSj
XYgHBoOMcsnRa5nLzmSd4yQl6bFta4QdjtrYPs/q0IYlJ6fAWkc6DLBYwWS3
JJ05g4QC2YGqQE9O9G481LALODbNZ2Z12mBLC5IYoz7x9Y+xMyERB72roow4
91yagVVYC7RC0Ay3tNDSnnM5d3bggQalHIdWRraK2eBYJLE4GWc334WB13Qy
Ijy469TJGNyITLTitpDjkvaJwJimlfCUG9qHY5PmWbE8iGa0CjbNygI82LIY
R+MKLNonPfQXXNfQPtUY7r2YNBzYf8tKc3MFzXk3sWhyGMVL6zxVcKqzcrRH
oQljwWmmoC/7Ij73nosgPgtJO4b+LNJXmY1OaUJr1Fw6nLbCQiNWrQgiHqrT
ZkrH6QkdUePpMmB5S3xcmCYtdWSJGnkvMPLI+Dt2NNrKOmkGWxa1rMgAEj3x
0zOcZDcjKMqrtF+DlSNVSsrE0r50NOeSW1EjJMDqSeRjQD6M5csuWsegiWIM
KOxwZhd0mh+F+OM+aPLc82j23T4kFfMxcP8YXI3pL7Jyt24m4/Ch29ZON1bQ
Y7iOmT/swX1DEk79uB3RmXfxZ5+BCM6W0VPyc2A10moy0mjNefgw00paIwVp
2WEYtyQUaYnnsCIkHcW50dj961mkGvlUKtHpqCOSyI7wWxZImlOdpOIEbPus
HiqUYbNHVwYVG49GhIYmfonh0prBdmnSj1LYoVWjG1NwbsZKTTu1FitH+9Fj
x2RTqKGcPgoKisLyE4miXaqmxWqzcuQBstHgDSQcvj7mxfyFCe83RKWnZBq8
TDlU7/orYgrUaazD6tK6b6MhPRU8zArDxO2PUMRrCjzdP3gkLuc4xi0qMmGl
oN0sY6PELUxFSKyeBYzTnyJkCPzKN6vj1mW4mZn54j5I2OlKP3pIuGr2BVu5
RLtx1cpg6yyvr6BFsC/id45Gl5cro1y5SqjZ4mP8eDRJ07fDvsPt2ym2plg9
Ba6gdefM2IPAfyYiNDkLD4PXw6fbOFwzqOMyr4HoyyCvlwX3FQVuzhVMmn8G
4QJumLhKZyNk7DiEaYxJfYZ7+tQ9nDl9z4r7sgLXlIXg6Z1Rs/aHCMwqxJOD
K7BgWyyFDajiejDcA4J82rjR6srGRKzCpFvkFvlILSXraI8er0M2Bu1y7txO
cVqngawOzWBhEZN+rK1dp6GsDlmikdcTpR9raddpxOrQzjnimszrVFPBUTd3
+o1lfLoSFm/FfVGB6+ZOvwnDpR2ujX+6hgLXzZ0+442ooY4fl2m6F+zpdWen
34zhXgx8gO3brltxq6vz19WdfnOGS+ssyYdFi1RT4ObcxOKjT2R8cGxrt2C4
cXFZoj1s0XqSoWzxQpoNuLV6IF6r+xzKlykjNOeaud2SwdPCRAue8K/0YxUG
z7aX2eGY/GsoxFhnpd52su9vxZqg/TD1QLDApR+fZ01UkAoWxsLvzbYYJlgc
5qJM3IjPE7OPXXUBtGblaOkmIT93Nlb6Udo/2mzveJ2GKjhtWbnz5+6LOJYN
iGRqyFRPO1aSnFG0COTmFkklK8lKKtBfZXWys/NFZggLiPTjM9p12rM65IIl
2/Vy6GPpx4radTrIekFOUYs4OoiK6cjqPH4siVpqikH6sTwbKOZKz47ELyGp
FrOXBZGZinMRe8gXEdmqvu7XGTjtTciffCkkTvqxHANnTgaKeKyqszgZnMnv
Gwz2pLAVpcMFSz9Z8BbfjOuvwKdpFdTu0B/T159CjN5kTeLJR+yBHxCuIb4s
3gGPHmVi6ZJAJPARY3F9lvDyojRc37cEI99vhCpVG+P9Eb9id3iKOE3MxQYU
a5gfXRg+mTXUA8Gsk3601UXZt49i1fieaFGtMmp3HIAZGwORXqwO2Y1BXr2a
IO4DBWHTSd57S7qQyXAPJ1YMxUe9R2PpfinTQg3Km0GR64mMI2Hp0BklKOuJ
rBE5d45j3Xxf+C7YiFMxou1VXwXtTYZ24kSMeA5eVGTUFdkOlDEbEftWY9GC
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
TwRaDEhLOUaw+K1KtISuzP8Chubv9A==\
\>"]]
}, {6}]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2D PQN (the easy way)", "Subsection",
 CellChangeTimes->{{3.547291959347453*^9, 3.54729196525014*^9}, {
  3.547292023656331*^9, 3.547292027483858*^9}}],

Cell[TextData[{
 "Because 2D is such a special case (the median is the same as the mean and \
the reference spectrum can be specified by one variable), the entire \
normalization procedure can be viewed in three simple steps. First, sum \
normalize to half of the sum you would otherwise choose and choose the \
reference spectrum. This makes the reference spectrum ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " equal to ",
 Cell[BoxData[
  FormBox[
   FractionBox["r", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in the original procedure."
}], "Text",
 CellChangeTimes->{{3.5472919726738443`*^9, 3.547291974123293*^9}, {
  3.547292030206709*^9, 3.54729210372537*^9}, {3.54729223810205*^9, 
  3.547292243356351*^9}, {3.547292327120686*^9, 3.5472923282844353`*^9}, {
  3.547390844732553*^9, 3.5473909132786694`*^9}, {3.547394307350122*^9, 
  3.5473943078458548`*^9}}],

Cell[TextData[{
 "Second, call the coordinates of our new refrence point R, we can then \
construct the hyperbola ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", " ", "y"}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["R", "x"], " ", 
     SubscriptBox["R", "y"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " on the coordinates system with R as the origin."
}], "Text",
 CellChangeTimes->{{3.547392516942787*^9, 3.5473925685766373`*^9}, {
  3.547394314619931*^9, 3.547394315755945*^9}}],

Cell["\<\
Finally, intersect the lines to our original spectra with this hyperbola to \
get the final, scaled spectra.\
\>", "Text",
 CellChangeTimes->{{3.547392576621792*^9, 3.5473926076755323`*^9}, {
  3.547394323588785*^9, 3.547394338885096*^9}}],

Cell["This whole procedure can be represented in one diagram.", "Text",
 CellChangeTimes->{{3.5473926149582777`*^9, 3.547392625248283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"twelfthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "originToPoints2D", ",", "finalScalingPlot2D", ",", 
       "scaledPoints2DPlot", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<sum=0.5\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.15"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "Magenta", ",", 
          RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"#", "/", 
               RowBox[{"Total", "[", 
                RowBox[{"2", "#"}], "]"}]}], "]"}], "&"}], ",", "orig2D"}], 
           "]"}], ",", "Green", ",", 
          RowBox[{"Point", "[", 
           RowBox[{"refPt2D", "/", "2"}], "]"}], ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}], "}"}]}], "}"}],
            "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", "0"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", "2.5"}], 
              "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Reference point\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"2.0", ",", "0.2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", "Orange", 
          ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Hyperbola from\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "2.1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<reference point\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "1.98"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547392764664187*^9, 3.547393102077201*^9}, {
   3.547393188943568*^9, 3.54739321167036*^9}, {3.547393286812169*^9, 
   3.5473938136999493`*^9}, {3.547393871707777*^9, 3.547393871821124*^9}, 
   3.547393998020854*^9, 3.547394118732957*^9}],

Cell[BoxData[
 RowBox[{"twelfthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "twelfthDiagram", ",", 
    "\"\<Figure 12: Probabilistic quotient normalization process in one \
diagram.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547394004300308*^9, 3.5473941187330923`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{2.172454345958343, 1.7744919345405104`}], 
       PointBox[{2.675301724350803, 1.359406145521423}], 
       PointBox[{2.87830990460933, 1.4709889319173473`}], 
       PointBox[{2.8813454193984884`, 1.073276896492814}], 
       PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
       PointBox[{2.26005835257858, 1.7655977040112563`}], 
       PointBox[{1.398151988227432, 2.097238014713233}], 
       PointBox[{3.0861624358478528`, 0.9274842729247682}], 
       PointBox[{2.255768229218814, 1.8706253682049265`}], 
       PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
       LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
       LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
       LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
       LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
       LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
       LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
       LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
       LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
       LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
       LineBox[{{0, 0}, {2.6917625635090703`, 
         1.2898265639379862`}}]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       LineBox[CompressedData["
1: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
/NGTjP8D83/w7Q==
        "]]}}, {
      RGBColor[
       NCache[
        Rational[4, 9], 0.4444444444444444], 0.22222222222222227`, 0], 
      PointSize[Medium], 
      PointBox[{{0.5431288103358621, 0.4436354186915789}, {0.6861536917911115,
        0.34865657839748754`}, {0.6839853356873696, 0.3495575152552775}, {
       0.8239683316769922, 0.30692126250356366`}, {0.5615509147589944, 
       0.4253971550894395}, {0.5538566621048238, 0.43268265611279816`}, {
       0.4358964095706468, 0.6538477421096109}, {0.9475904367568392, 
       0.2847793159093485}, {0.5395944657367983, 0.4474657826437218}, {
       0.7090240824172893, 0.3397469406742102}}]}, {{
       RGBColor[1, 0, 0], 
       LineBox[{{0.5, 0}, {0, 0.5}}], 
       InsetBox["\"sum=0.5\"", {0.5, 0.15}, {-1, 1}]}, {
       RGBColor[1, 0, 1], 
       PointSize[Medium], {
        PointBox[{0.27520698174840214`, 0.22479301825159792`}], 
        PointBox[{0.33153598855665434`, 0.1684640114433457}], 
        PointBox[{0.330893554661782, 0.16910644533821798`}], 
        PointBox[{0.3643009609059321, 0.13569903909406786`}], 
        PointBox[{0.28448858248703607`, 0.21551141751296393`}], 
        PointBox[{0.2807068364520307, 0.2192931635479693}], 
        PointBox[{0.19999942596551018`, 0.30000057403448976`}], 
        PointBox[{0.3844586556537765, 0.11554134434622354`}], 
        PointBox[{0.27333410833944355`, 0.2266658916605564}], 
        PointBox[{0.33802615957450555`, 0.1619738404254944}]}, {
        RGBColor[0, 1, 0], 
        PointBox[{0.30769106857440903`, 0.19230893142559097`}], {
         Dashing[{Small, Small}], 
         LineBox[{{0, 0.19230893142559097`}, {3, 0.19230893142559097`}}], 
         LineBox[{{0.30769106857440903`, 0}, {0.30769106857440903`, 2.5}}], 
         InsetBox["\"Reference point\"", {2., 0.2}, {-1, 1}], {
          RGBColor[1, 0.5, 0], 
          InsetBox["\"Hyperbola from\"", {0.4, 2.1}, {-1, 1}], 
          InsetBox["\"reference point\"", {0.4, 1.98}, {-1, 1}]}}}}}}, 
    AspectRatio -> Automatic, Axes -> True],
   "\"Figure 12: Probabilistic quotient normalization process in one diagram.\
\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473940839874*^9, 3.5473941187331657`*^9}}]
}, {3}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D PQN", "Subsection",
 CellChangeTimes->{{3.547394423389923*^9, 3.5473944252311497`*^9}}],

Cell[CellGroupData[{

Cell["Sum-normalize", "Subsubsection",
 CellChangeTimes->{{3.547401955719198*^9, 3.547401957963032*^9}}],

Cell["\<\
The PQN with 3D spectra starts out similar to 2D PQN. Figure 13 shows a group \
of spectra normalized to a constant sum of 1. I only show the first quadrant \
because of my earlier assumption that all points are positive. As before, my \
discussion will use a constant sum of 1 for ease of presentation.\
\>", "Text",
 CellChangeTimes->{{3.547395775886613*^9, 3.547395877526016*^9}, {
  3.547462662275279*^9, 3.547462679004223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1.2", ",", "1.3"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", "8", "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.4"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", "8", "}"}]}], "]"}]}], "]"}], "/", "2"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473945285194893`*^9, 3.5473948433459167`*^9}, {
  3.547394949185137*^9, 3.547394958418416*^9}, {3.547396148016735*^9, 
  3.547396148150931*^9}, {3.547396332991932*^9, 3.547396335781905*^9}, {
  3.5473964703163843`*^9, 3.54739647472621*^9}, {3.547396505240793*^9, 
  3.547396519924708*^9}, {3.547396882736618*^9, 3.5473968928435097`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"orig3D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.7887122746455992`", ",", "1.370162229032098`", ",", 
       "0.6331315511805435`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.7458987631156281`", ",", "0.7715290755810482`", ",", 
       "0.6148123738797091`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.657133266164412`", ",", "0.9221468105687936`", ",", 
       "0.6040697246875196`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5857304644159957`", ",", "0.5419021027040107`", ",", 
       "0.6173275066394556`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6919142797105331`", ",", "1.4387362033967048`", ",", 
       "0.6247078566848845`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5457398713571942`", ",", "0.8830657889311706`", ",", 
       "0.6314481246718616`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6175342173424286`", ",", "0.7957609324327515`", ",", 
       "0.6258393391396256`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9921345376422709`", ",", "0.690496919850571`", ",", 
       "0.6062680422006831`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5768632417698818`", ",", "0.7497757265321776`", ",", 
       "0.19303894295071117`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5084130070212706`", ",", "0.6455535679017173`", ",", 
       "0.17770724565742288`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.552620580638311`", ",", "1.0787269445880796`", ",", 
       "0.17767927573922487`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8527000484773908`", ",", "0.7900375918166862`", ",", 
       "0.1618452370779209`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8558169686389362`", ",", "0.8381051726099`", ",", 
       "0.19646170205328767`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9128626837404124`", ",", "1.2855838089650504`", ",", 
       "0.1525320368241421`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5595750105400437`", ",", "1.4879212199688876`", ",", 
       "0.19946889532440698`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6276434675023799`", ",", "1.3262524986373982`", ",", 
       "0.1958156408376076`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547396860077684*^9, 3.547396892843906*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNorm3D", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", "orig3D"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547396082040235*^9, 3.547396106215727*^9}, 
   3.5473968928441067`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thirteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Point", "[", "orig3D", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
           "&"}], ",", "orig3D"}], "]"}], "]"}], ",", "Red", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "Magenta", ",", 
       RowBox[{"Point", "[", "sumNorm3D", "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9}],

Cell[BoxData[
 RowBox[{"thirteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "thirteenthDiagram", ",", 
    "\"\<Figure 13: Sum-normalizing points in 3D.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547396690052643*^9, 3.54739673912817*^9}, 
   3.54739689284453*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    InsetBox[
     Graphics3DBox[{
       RGBColor[0, 0, 1], 
       PointSize[Medium], 
       Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAA0s8xhiE96T9lhL46L+z1P6BbTBmd
QuQ/0as2FWfe5z8wFHG+XbDoP8ip3/+KrOM/JkbpVzwH5T8cHjAHOoLtP/8r
AQiKVOM/xACe0E2+4j9e6hcUQ1fhP4MBfp0lweM/lL9faikk5j+Sj9JAEAX3
P7aBwFSb/eM/1EZzdrN24T9KoHUvE0LsP/XBkrLSNOQ/qbF0HtfC4z/UdYeh
33bpP0/1xDjgBuQ/9foM7pC/7z/m5hf/jBjmP4mUuzyMZuM/YFG15ql14j98
ShmqKf7nP4ryaQWAtcg/V47AWutE4D8Yh770X6jkP/cwLmwcv8Y/uQQeWxGv
4T/tHUUvd0LxP0YMPcsxvsY/mkGwnFFJ6z8Q027q/EfpPzGrIUBYt8Q/mVB1
RNpi6z9++V7wwdHqP34gnjSoJck/cOyMzSs27T8gWvxTwJH0PylA4HYrhsM/
/LQ92gno4T8Ypyx7hs73P95o/l4yiMk/eBDPwKcV5D+wLD6KVDj1P+StuKZ8
EMk/CqnDlw==
        "]], 
       Line3DBox[{{{0, 0, 0}, {0.7887122746455992, 1.370162229032098, 
          0.6331315511805435}}, {{0, 0, 0}, {0.7458987631156281, 
          0.7715290755810482, 0.6148123738797091}}, {{0, 0, 0}, {
          0.657133266164412, 0.9221468105687936, 0.6040697246875196}}, {{0, 0,
           0}, {0.5857304644159957, 0.5419021027040107, 
          0.6173275066394556}}, {{0, 0, 0}, {0.6919142797105331, 
          1.4387362033967048`, 0.6247078566848845}}, {{0, 0, 0}, {
          0.5457398713571942, 0.8830657889311706, 0.6314481246718616}}, {{0, 
          0, 0}, {0.6175342173424286, 0.7957609324327515, 
          0.6258393391396256}}, {{0, 0, 0}, {0.9921345376422709, 
          0.690496919850571, 0.6062680422006831}}, {{0, 0, 0}, {
          0.5768632417698818, 0.7497757265321776, 0.19303894295071117`}}, {{0,
           0, 0}, {0.5084130070212706, 0.6455535679017173, 
          0.17770724565742288`}}, {{0, 0, 0}, {0.552620580638311, 
          1.0787269445880796`, 0.17767927573922487`}}, {{0, 0, 0}, {
          0.8527000484773908, 0.7900375918166862, 0.1618452370779209}}, {{0, 
          0, 0}, {0.8558169686389362, 0.8381051726099, 
          0.19646170205328767`}}, {{0, 0, 0}, {0.9128626837404124, 
          1.2855838089650504`, 0.1525320368241421}}, {{0, 0, 0}, {
          0.5595750105400437, 1.4879212199688876`, 0.19946889532440698`}}, {{
          0, 0, 0}, {0.6276434675023799, 1.3262524986373982`, 
          0.1958156408376076}}}], {
        RGBColor[1, 0, 0], 
        Opacity[0.85], 
        Polygon3DBox[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}}], {
         RGBColor[1, 0, 1], 
         Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAW0rsqE4U0j9MlYqKXGjfP7NAEpmp
Bs0/ngx1dXBj1j8tEIuJYSjXPzfj/wAudNI/KJbvzCtD0z+zyDug2QfbPyah
1JL6tNE/nU6WV5171T/szWiHGODTP3bjACFKpNY/HcTBaEgS0D+HUb+Wh7Xg
P6kxf9NQBc0/VbTupvPz0D9W/Gwygm7bP1VPpCaKndM/RcHVosBh0z+lCZ/j
w/nYPxU1i3l7pNM/s30GUbm92z/y15chmE7TP1qqYY2u89A/SG124EtL2D/l
88aIgZPfP6g9hS1lQsA/LBqzFypv2D/gd6KbcgbfP+fbVJnGFME/SVd21vmM
0z9mfQWu6BTjP5y3+jXTJLk/1/dIJsE93j+opEvb1QTcPwqOrfmj9bY/O4H7
nmL53D81iTlv4F/cPzrWK8fzmro/WjnXfsDZ2D9H/T8KoH/hP1Ywo7L9m7A/
yYHtpWjgzz97xpc9rDDlP5PIZsfMubY/P7M3qZOv0j98PvckAr7jPyU/ZzOg
Ubc/QEvILA==
          "]]}}}, AspectRatio -> 0.6826228964509987, Axes -> 
      True, AxesLabel -> {
        FormBox["x", TraditionalForm], 
        FormBox["y", TraditionalForm], 
        FormBox["z", TraditionalForm]}, Background -> None, ImageMargins -> 
      0., ImageSize -> {360., 403.67588722577744`}, 
      ViewPoint -> {2.7028583306915155`, -2.001748577592822, 
       0.37089011353309126`}, 
      ViewVertical -> {0.6120637778795446, -0.2831708283594404, 
       1.2890940854588477`}], {0., 63.789883046659725`}, 
     ImageScaled[{0., 0.}], {360., 404.}, ContentSelectable -> True], 
    AspectRatio -> 0.8157663534049373, Background -> None, ContentSelectable -> 
    True, ImageMargins -> 0., ImagePadding -> 0., 
    ImageSize -> {360., 293.67588722577744`}, 
    PlotRange -> {{0., 360.}, {57.04576549830023, 350.9574461156155}}, 
    PlotRangePadding -> None],"\"Figure 13: Sum-normalizing points in 3D.\""},
  
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5473967412573*^9, 3.547396892844736*^9}]
}, {6}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Choose the reference", "Subsubsection",
 CellChangeTimes->{{3.547401961196087*^9, 3.547401965083189*^9}}],

Cell["\<\
After sum-normalizing, you choose a reference spectrum. Note that, unlike the \
2D case, the reference spectrum is not necessarily sum-normalized. Figure 14 \
shows one such case.\
\>", "Text",
 CellChangeTimes->{{3.547396919795761*^9, 3.5473969456337442`*^9}, {
  3.5473981260477457`*^9, 3.547398147665278*^9}, {3.547398184655978*^9, 
  3.547398200809556*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"refPt3D", "=", 
   RowBox[{"Median", "/@", 
    RowBox[{"Transpose", "[", "sumNorm3D", "]"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54739704948209*^9, 3.547397093422785*^9}, 
   3.547398357701996*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "Magenta", ",", 
       RowBox[{"Point", "[", "sumNorm3D", "]"}], ",", "Green", ",", 
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", "refPt3D", "]"}], ",", 
       RowBox[{"Opacity", "[", "1", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9, {3.547396996128675*^9, 3.547397011004944*^9}, {
   3.547397101720193*^9, 3.547397109851194*^9}, {3.547397214672595*^9, 
   3.547397243994307*^9}, {3.547397285255617*^9, 3.547397311333056*^9}, {
   3.547397415816349*^9, 3.547397524495929*^9}, {3.547397557249049*^9, 
   3.547397634329254*^9}, {3.547397695337129*^9, 3.54739777423074*^9}, {
   3.547397901273827*^9, 3.5473979954100533`*^9}, {3.547398085123536*^9, 
   3.547398102047306*^9}, 3.547398287600065*^9}],

Cell[BoxData[
 RowBox[{"fourteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fourteenthDiagram", ",", 
    "\"\<Figure 14: A reference spectrum that is not sum-normalized derived \
from sum-normalized spectra.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "->", "Times"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473982080684347`*^9, 3.5473982818753777`*^9}, {
  3.5473983341463118`*^9, 3.5473983577023983`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     RGBColor[1, 0, 0], 
     Opacity[0.85], 
     Polygon3DBox[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}}], {
      RGBColor[1, 0, 1], 
      Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAW0rsqE4U0j9MlYqKXGjfP7NAEpmp
Bs0/ngx1dXBj1j8tEIuJYSjXPzfj/wAudNI/KJbvzCtD0z+zyDug2QfbPyah
1JL6tNE/nU6WV5171T/szWiHGODTP3bjACFKpNY/HcTBaEgS0D+HUb+Wh7Xg
P6kxf9NQBc0/VbTupvPz0D9W/Gwygm7bP1VPpCaKndM/RcHVosBh0z+lCZ/j
w/nYPxU1i3l7pNM/s30GUbm92z/y15chmE7TP1qqYY2u89A/SG124EtL2D/l
88aIgZPfP6g9hS1lQsA/LBqzFypv2D/gd6KbcgbfP+fbVJnGFME/SVd21vmM
0z9mfQWu6BTjP5y3+jXTJLk/1/dIJsE93j+opEvb1QTcPwqOrfmj9bY/O4H7
nmL53D81iTlv4F/cPzrWK8fzmro/WjnXfsDZ2D9H/T8KoH/hP1Ywo7L9m7A/
yYHtpWjgzz97xpc9rDDlP5PIZsfMubY/P7M3qZOv0j98PvckAr7jPyU/ZzOg
Ubc/QEvILA==
       "]]}, {
      RGBColor[0, 1, 0], 
      PointSize[Large], 
      Point3DBox[{0.32057466267114804`, 0.4640601923965809, 
       0.1800856247610254}], {
       Opacity[1], 
       Line3DBox[{{0, 0.4640601923965809, 0.1800856247610254}, {
         1, 0.4640601923965809, 0.1800856247610254}}], 
       Line3DBox[{{0.32057466267114804`, 0, 0.1800856247610254}, {
         0.32057466267114804`, 1, 0.1800856247610254}}], 
       Line3DBox[{{0.32057466267114804`, 0.4640601923965809, 0}, {
         0.32057466267114804`, 0.4640601923965809, 1}}]}}}, Axes -> True, 
    AxesLabel -> {
      FormBox["x", TraditionalForm], 
      FormBox["y", TraditionalForm], 
      FormBox["z", TraditionalForm]}],
   "\"Figure 14: A reference spectrum that is not sum-normalized derived from \
sum-normalized points.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547397311862522*^9, 3.547397527342972*^9, {3.547397606876594*^9, 
   3.547397636587237*^9}, {3.547397728269095*^9, 3.547397775075294*^9}, 
   3.547397956831068*^9, 3.5473979962341137`*^9, 3.547398103037161*^9, 
   3.547398290771674*^9, 3.547398357702662*^9}]
}, {4}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Form the r-quotient plane and divide into median regions", \
"Subsubsection",
 CellChangeTimes->{{3.5474019807543917`*^9, 3.5474020051123257`*^9}}],

Cell[TextData[{
 "Now, we form the reciprocal quotient plane from the sum-normalized plane by \
dividing all points by the reference spectrum, R. We assume that none of the \
coordinates of R is 0. This forms the plane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", ",", "y", ",", "z"}], ")"}], "\[CenterDot]", "R"}], "=", 
    "1"}], TraditionalForm]]],
 ". Since we are in the first quadrant, the section of the plane we are \
interested in is a triangle. If we draw lines cooresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]]],
 " ,",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "z"}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "z"}], TraditionalForm]]],
 ", we will divide the triangle into 6 regions. If ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " are the coordinates of a line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "b"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 " is the non-included coordinate. The lines run from the corner where ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 " is non-zero to the opposite edge where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{"b", "=", 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["R", "a"], "+", 
       SubscriptBox["R", "b"]}]]}]}], TraditionalForm]]],
 ". So, the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "z"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " runs from the corner ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      SubscriptBox["R", "x"]], ",", "0", ",", "0"}], ")"}], TraditionalForm]],
  
  FormatType->"TraditionalForm"],
 " to the point on the opposite edge ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["R", "y"], "+", 
       SubscriptBox["R", "z"]}]], ",", 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["R", "y"], "+", 
       SubscriptBox["R", "z"]}]]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547398429192198*^9, 3.547398431425383*^9}, {
   3.547398461790782*^9, 3.5473984879253883`*^9}, {3.547399887002164*^9, 
   3.547399921462243*^9}, {3.547400003533226*^9, 3.54740010044049*^9}, {
   3.5474010654678164`*^9, 3.5474011394618387`*^9}, {3.547401221127473*^9, 
   3.547401255962309*^9}, {3.547401318779447*^9, 3.5474013565599947`*^9}, {
   3.5474014118501787`*^9, 3.547401511571314*^9}, {3.547401805871662*^9, 
   3.547401817221616*^9}, {3.547401847556612*^9, 3.5474019399803743`*^9}, {
   3.5474020355022593`*^9, 3.547402101266095*^9}, {3.547404353030405*^9, 
   3.547404565900749*^9}, 3.5474563489872093`*^9, {3.547456426168315*^9, 
   3.547456524467649*^9}, {3.547456568028935*^9, 3.547456631482058*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0", "<", "rx", "<", "1"}], "&&", 
     RowBox[{"0", "<", "ry", "<", "1"}], "&&", 
     RowBox[{
      RowBox[{"t", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}]}], "\[Equal]", 
      RowBox[{"rx", "/", "ry"}]}], "&&", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{"t", "/", "rx"}]}], "&&", 
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], "/", "ry"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "t", ",", "rx", ",", "ry"}], "}"}], ",", 
    "Reals"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474022446392317`*^9, 3.547402309313661*^9}, {
   3.547402720531225*^9, 3.547402831337352*^9}, {3.547402868273469*^9, 
   3.5474028731079893`*^9}, {3.547402965985022*^9, 3.5474030675686827`*^9}, {
   3.547403143994239*^9, 3.547403228826315*^9}, {3.547403332166478*^9, 
   3.547403428704777*^9}, {3.547403692830295*^9, 3.547403721919084*^9}, {
   3.547403957062478*^9, 3.547403981580202*^9}, {3.5474040595568132`*^9, 
   3.547404081392223*^9}, 3.547404992246944*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", "y"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", ">", "1"}], "&&", 
      RowBox[{"0", "<", "t"}], "&&", 
      RowBox[{"t", "<", "1"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"t", "+", "x"}], ">", "1"}], "&&", 
      RowBox[{
       RowBox[{"2", " ", "x"}], ">", "1"}], "&&", 
      RowBox[{"t", "<", "x"}], "&&", 
      RowBox[{"x", "\[LessEqual]", "1"}]}], ")"}]}], ")"}], "&&", 
  RowBox[{"rx", "\[Equal]", 
   FractionBox["t", "x"]}], "&&", 
  RowBox[{
   RowBox[{"rx", "+", "ry"}], "\[Equal]", 
   FractionBox["rx", "t"]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547402749025425*^9, 3.547402834499711*^9}, 
   3.547402873763077*^9, 3.547402967383053*^9, 3.547403112810112*^9, {
   3.547403201056781*^9, 3.547403233183613*^9}, 3.547403417955184*^9, {
   3.547403688601891*^9, 3.547403722487492*^9}, 3.547403999763998*^9, 
   3.5474040856778927`*^9, 3.5474049922471533`*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}]}], "\[Equal]", 
    RowBox[{"rx", "/", "rz"}]}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474042864040213`*^9, 3.547404300294341*^9}, 
   3.547404992247208*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox["rx", 
     RowBox[{"rx", "+", "rz"}]]}], "}"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5474043009447937`*^9, 3.547404992247267*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["rx", 
   RowBox[{"rx", "+", "rz"}]], "/", "rx"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547404315116642*^9, 3.54740433696175*^9}, 
   3.547404992247321*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"rx", "+", "rz"}]]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547404347133869*^9, 3.547404992247373*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "\[Equal]", "z"}], "&&", 
    RowBox[{"x", "\[Equal]", "y"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", "rx"}], "+", 
      RowBox[{"y", " ", "ry"}], "+", 
      RowBox[{"z", " ", "rz"}]}], "\[Equal]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54739888936059*^9, 3.547398894699534*^9}, {
   3.547398926924963*^9, 3.547398929993906*^9}, {3.547398991117526*^9, 
   3.547399048079217*^9}, {3.547399307641958*^9, 3.547399308055952*^9}, {
   3.547399587198173*^9, 3.547399590404118*^9}, {3.547399811269721*^9, 
   3.547399811719173*^9}, {3.5473998432078943`*^9, 3.547399843546021*^9}, 
   3.547400713920554*^9, {3.547400937779107*^9, 3.547400965326005*^9}, {
   3.547401024597677*^9, 3.54740102638202*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rx", "+", "ry", "+", "rz"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{"x", "\[Equal]", 
   FractionBox["1", 
    RowBox[{"rx", "+", "ry", "+", "rz"}]]}], "&&", 
  RowBox[{"y", "\[Equal]", "x"}], "&&", 
  RowBox[{"z", "\[Equal]", "x"}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547400972634695*^9, 3.547401027432807*^9, 
  3.547401718610332*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "\[Equal]", "z"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", 
      RowBox[{"y", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "+", 
      RowBox[{"z", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "\[Equal]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54739888936059*^9, 3.547398894699534*^9}, {
   3.547398926924963*^9, 3.547398929993906*^9}, {3.547398991117526*^9, 
   3.547399048079217*^9}, {3.547399307641958*^9, 3.547399308055952*^9}, {
   3.547399587198173*^9, 3.547399590404118*^9}, {3.547399811269721*^9, 
   3.547399811719173*^9}, {3.5473998432078943`*^9, 3.547399843546021*^9}, 
   3.547400713920554*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "\[Equal]", 
   RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
    RowBox[{"0.4976740578487859`", " ", "x"}]}]}], "&&", 
  RowBox[{"y", "\[Equal]", 
   RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
    RowBox[{"0.4976740578487859`", " ", "x"}]}]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547398930731265*^9, 3.547399051052137*^9, 3.547399309272481*^9, 
   3.5473995943299417`*^9, {3.547399819334371*^9, 3.5473998443071833`*^9}, 
   3.5474007139210587`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
   RowBox[{"0.4976740578487859`", " ", "x"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547399153847061*^9, 3.547399158882936*^9}, {
   3.547399353293524*^9, 3.547399361816708*^9}, {3.547399598245482*^9, 
   3.547399606718861*^9}, {3.547399823456868*^9, 3.547399824865265*^9}, 
   3.547399857380827*^9, 3.5474007139213133`*^9}],

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473991606375*^9, 3.5473991827998447`*^9}, {
   3.5473992382432423`*^9, 3.547399239231241*^9}, {3.547399365717846*^9, 
   3.5473993659610662`*^9}, {3.547399430569178*^9, 3.5473994306423187`*^9}, {
   3.547399612012398*^9, 3.547399631629476*^9}, {3.547399861696869*^9, 
   3.547399872439776*^9}, {3.547400173017227*^9, 3.547400173260462*^9}, {
   3.547400216693941*^9, 3.547400216798695*^9}, 3.547400713921502*^9}],

Cell[BoxData["0.05942134679295874`"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547399163115535*^9, 3.547399183702611*^9}, 
   3.547399240550035*^9, 3.547399366663069*^9, 3.5473994314792624`*^9, {
   3.547399613580016*^9, 3.547399632135816*^9}, {3.5473998630215187`*^9, 
   3.5473998733351393`*^9}, 3.547400174260373*^9, 3.5474002181897697`*^9, 
   3.547400713921803*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fifteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Magenta", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"Opacity", "[", "1", "]"}], ",", "Yellow", ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "a", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "c"}], "}"}]}], "}"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "a"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "c", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "a", ",", "a"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9, {3.547396996128675*^9, 3.547397011004944*^9}, {
   3.547397101720193*^9, 3.547397109851194*^9}, {3.547397214672595*^9, 
   3.547397243994307*^9}, {3.547397285255617*^9, 3.547397311333056*^9}, {
   3.547397415816349*^9, 3.547397524495929*^9}, {3.547397557249049*^9, 
   3.547397634329254*^9}, {3.547397695337129*^9, 3.54739777423074*^9}, {
   3.547397901273827*^9, 3.5473979954100533`*^9}, {3.547398085123536*^9, 
   3.547398102047306*^9}, 3.547398287600065*^9, {3.547398528608972*^9, 
   3.547398587747058*^9}, {3.547398630149794*^9, 3.547398630693344*^9}, {
   3.547398821390777*^9, 3.547398865990122*^9}, {3.5473991122446327`*^9, 
   3.547399123776905*^9}, {3.547399175303514*^9, 3.547399194373231*^9}, {
   3.547399252536331*^9, 3.547399257712214*^9}, {3.547399387014571*^9, 
   3.547399420669814*^9}, {3.547399476859741*^9, 3.547399490353692*^9}, {
   3.547399625484057*^9, 3.5473996418248787`*^9}, {3.547400186695157*^9, 
   3.5474002284796753`*^9}, {3.5474003367249002`*^9, 3.5474003629661207`*^9}, 
   3.547400396272852*^9, {3.547404623990632*^9, 3.547404931485201*^9}}],

Cell[BoxData[
 RowBox[{"fifteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fifteenthDiagram", ",", 
    "\"\<Figure 15: The r-quotient plane derived from figure 14 split into \
sections of uniform median coordinate.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54740039823794*^9, 3.5474004036555557`*^9}, {
   3.547400592143489*^9, 3.547400665583235*^9}, 3.547400713922076*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[1, 0, 1], 
      Opacity[0.85], 
      Polygon3DBox[{{0, 0, 5.552914072553016}, {0, 2.1548928703313783`, 0}, {
        3.119398119825272, 0, 0}}]}, {
      RGBColor[1, 1, 0], 
      Opacity[1], 
      Line3DBox[{{1.2744781773856848`, 1.2744781773856848`, 0}, {
        0, 0, 5.552914072553016}}], 
      Line3DBox[{{1.9973623335073767`, 0, 1.9973623335073767`}, {
        0, 2.1548928703313783`, 0}}], 
      Line3DBox[{{0, 1.5524435203393163`, 1.5524435203393163`}, {
        3.119398119825272, 0, 0}}]}}, Axes -> True, AxesLabel -> {
      FormBox["x", TraditionalForm], 
      FormBox["y", TraditionalForm], 
      FormBox["z", TraditionalForm]}, ImageSize -> {284.52907390513, 432.}, 
    Lighting -> "Neutral", 
    ViewPoint -> {3.3324561829704984`, 0.5851418342734758, 
     0.048423365896728514`}, 
    ViewVertical -> {0.9968228332156396, 0.4164413937090176, 
     0.8125961665075787}],
   "\"Figure 15: The r-quotient plane derived from figure 14 split into \
sections of uniform median coordinate.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5474006679326773`*^9, 3.54740071392233*^9, 
  3.54740481496692*^9, 3.5474049355181637`*^9}]
}, {16}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate the medians on each region", "Subsubsection",
 CellChangeTimes->{{3.5474563195435467`*^9, 3.5474563254259987`*^9}}],

Cell[TextData[{
 " On each of the six regions, the median is one of the coordinates of the \
plane. These lines all intersect at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"y", "=", 
     RowBox[{"z", "=", 
      FractionBox["1", 
       RowBox[{
        SubscriptBox["R", "x"], "+", 
        SubscriptBox["R", "y"], "+", 
        SubscriptBox["R", "z"]}]]}]}]}], TraditionalForm]]],
 ", where the reciprocal median quotient is ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     SubscriptBox["R", "x"], "+", 
     SubscriptBox["R", "y"], "+", 
     SubscriptBox["R", "z"]}]], TraditionalForm]]],
 ". Along each line, the median is the value of the two equal coordinates. \
So, on the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]]],
 ", the median is ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " or equivalently, ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 ". Each region is bounded by two lines. The median in that region is the \
variable that is common to its two bounding lines. So, the median of the \
region bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "z"}], TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.5474563614919786`*^9, 3.547456368363654*^9}, 
   3.547456421621703*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rQuotientPlaneNormal", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}]}], 
       ",", 
       RowBox[{"b", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"1", "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], "}"}], ",", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "\[Cross]", 
       RowBox[{"(", 
        RowBox[{"c", "-", "a"}], ")"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54745709612403*^9, 3.547457130361415*^9}, {
   3.5474571612064342`*^9, 3.547457216157958*^9}, {3.547457248251457*^9, 
   3.5474573293804607`*^9}, {3.5474573626231403`*^9, 3.5474574372300797`*^9}, 
   3.547457497069278*^9, {3.547460578794383*^9, 3.547460586131555*^9}, 
   3.547462239175186*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"medianSegEndpoints", "=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Endpoints", " ", "of", " ", "the", " ", "line", " ", "segments", " ", 
       "on", " ", "the", " ", "edges", " ", "of", " ", "the", " ", 
       "triangle"}], " ", "-", " ", 
      RowBox[{"going", " ", "in", " ", "order", " ", "x"}]}], ",", " ", "y", 
     ",", " ", "z"}], "*)"}], 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"ry", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "rx"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"rx", "+", "ry"}], ")"}]}], ",", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"rx", "+", "ry"}], ")"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"1", "/", "ry"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"ry", "+", "rz"}], ")"}]}], ",", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"ry", "+", "rz"}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"1", "/", "rz"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"rx", "+", "rz"}], ")"}]}], ",", "0", ",", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"rx", "+", "rz"}], ")"}]}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547457522237172*^9, 3.54745752584693*^9}, {
   3.547457624296301*^9, 3.547457631353133*^9}, {3.547457694478889*^9, 
   3.547457828053924*^9}, {3.5474578782298193`*^9, 3.547457993514452*^9}, {
   3.547458034644821*^9, 3.547458138718566*^9}, {3.547458291799842*^9, 
   3.547458292402843*^9}, 3.54746223917533*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"medianSegIntersect", "=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", "=", 
        RowBox[{"1", "/", 
         RowBox[{"Total", "[", "refPt3D", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "s", ",", "s"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Intersection", " ", "of", " ", "all", " ", "of", " ", "the", " ", 
     "median", " ", "line"}], "-", 
    RowBox[{"segment", " ", "points"}]}], "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547458143288746*^9, 3.547458196668271*^9}, {
   3.5474583167214727`*^9, 3.5474583392378187`*^9}, 3.547462239175455*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjacentEndpointPairs", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"medianSegEndpoints", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"medianSegEndpoints", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Length", "[", "medianSegEndpoints", "]"}]}], "]"}], "+",
            "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "medianSegEndpoints", "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5474584003174887`*^9, 3.547458423025959*^9}, {
   3.547458480825182*^9, 3.54745861311499*^9}, 3.547462239175592*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"medianPolysRQuotientCoords", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"triangles", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"#", ",", "medianSegIntersect"}], "]"}], "&"}], ",", 
         "adjacentEndpointPairs"}], "]"}]}], "}"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "+", 
         RowBox[{
          RowBox[{"Median", "[", "#", "]"}], " ", "rQuotientPlaneNormal"}]}], 
        "&"}], ",", "triangles", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5474586182392597`*^9, 3.547458627193906*^9}, {
   3.5474586734372377`*^9, 3.547458736295867*^9}, {3.5474594158622293`*^9, 
   3.547459513534576*^9}, 3.547462239175699*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"medianPolysRQuotient", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.85", "]"}], ",", "White", ",", 
      RowBox[{"Polygon", "[", "medianPolysRQuotientCoords", "]"}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54745873794584*^9, 3.547458776451435*^9}, {
   3.547459574402307*^9, 3.547459582217009*^9}, {3.547459630237527*^9, 
   3.5474596572981863`*^9}, {3.547459690264241*^9, 3.5474597796777143`*^9}, {
   3.547459891890286*^9, 3.54745989797101*^9}, 3.547462239175808*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"medianPolysSolidEdges", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"ry", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", "1", "]"}], ",", "Gray", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "rx"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "ry"}], ",", "0"}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"rx", "+", "ry"}], ")"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"rx", "+", "ry"}], ")"}]}], ",", "0"}], "}"}], "+", 
            RowBox[{"rQuotientPlaneNormal", "/", 
             RowBox[{"(", 
              RowBox[{"ry", "+", "rx"}], ")"}]}]}]}], "}"}], "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "rx"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"1", "/", "rz"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"rx", "+", "rz"}], ")"}]}], ",", "0", ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"rx", "+", "rz"}], ")"}]}]}], "}"}], "+", 
            RowBox[{"rQuotientPlaneNormal", "/", 
             RowBox[{"(", 
              RowBox[{"rx", "+", "rz"}], ")"}]}]}]}], "}"}], "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "ry"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"1", "/", "rz"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"ry", "+", "rz"}], ")"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"ry", "+", "rz"}], ")"}]}]}], "}"}], "+", 
            RowBox[{"rQuotientPlaneNormal", "/", 
             RowBox[{"(", 
              RowBox[{"ry", "+", "rz"}], ")"}]}]}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547460742954934*^9, 3.5474607489791737`*^9}, {
   3.54746079456397*^9, 3.547461036215425*^9}, {3.5474611091752787`*^9, 
   3.5474611809086123`*^9}, {3.547461364897728*^9, 3.547461374595563*^9}, {
   3.5474614083685617`*^9, 3.5474614266698647`*^9}, {3.5474615782443123`*^9, 
   3.5474617155273037`*^9}, 3.5474622391759157`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sixteenthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"medianPolysRQuotient", ",", "medianPolysSolidEdges", ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Magenta", ",", 
        RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], "/", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], "/", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], "/", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], "]"}],
      ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547459793006568*^9, 3.547459809626554*^9}, {
  3.547459858143579*^9, 3.547459872662092*^9}, {3.5474617193859863`*^9, 
  3.547461723648959*^9}, {3.547461961530694*^9, 3.547461981179443*^9}, {
  3.54746222591221*^9, 3.547462239176025*^9}}],

Cell[BoxData[
 RowBox[{"sixteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "sixteenthDiagram", ",", 
    "\"\<Figure 16: Surface created when medians are added above the \
rQuotient plane.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474620619215927`*^9, 3.547462156956575*^9}, 
   3.547462239176134*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      GrayLevel[1], 
      Opacity[0.85], 
      Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2JmKL5yOY6h/QuHAwMaWPO+O2Jf3n97IX4Gljf6TA7s
xm0LjM/fsF8w4+iBpRN+2s+LWcI0fepf+/WMa3MMF361x6UeZt7s5cqVFraM
cHtwmYNL/fFjnwIfPn1l/z1kbWGSOpuDvJl+R4kRgwMuc3CpR/enZImPtL6Z
GE5zcKlv61m0J3chh4ONSfusYJ6f9tef78g9c40Fpzm41OMKf1zmAABTkaDb

       "]]}, {
      GrayLevel[0.5], 
      Opacity[1], 
      Polygon3DBox[{{3.119398119825272, 0, 0}, {0, 2.1548928703313783`, 0}, {
        1.9645369967320034`, 2.2733993828313794`, 0.3876465861911104}}], 
      Polygon3DBox[{{3.119398119825272, 0, 0}, {0, 0, 5.552914072553016}, {
        3.078822587690925, 1.5655094181304454`, 2.6048821041158408`}}], 
      Polygon3DBox[{{0, 2.1548928703313783`, 0}, {0, 0, 5.552914072553016}, {
        0.8405615425637841, 2.769230735876245, 2.0246363295944003`}}]}, {
      RGBColor[1, 0, 1], 
      Opacity[0.85], 
      Polygon3DBox[{{0, 0, 5.552914072553016}, {0, 2.1548928703313783`, 0}, {
        3.119398119825272, 0, 0}}]}}, Axes -> True, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, 
    ImageSize -> {290.6549057299735, 432.}, 
    ViewPoint -> {3.3006100369470484`, 0.6018158398663649, 
     0.4402170815522125}, 
    ViewVertical -> {0.829695958580011, 0.2537246576862518, 
     0.875643013203206}],
   "\"Figure 16: Surface created when medians are added above the rQuotient \
plane.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547462158475149*^9, 3.547462239176248*^9}]
}, {10}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Move medians back to sum-normalized plane", "Subsubsection",
 CellChangeTimes->{{3.5474623868702497`*^9, 3.5474623933332157`*^9}}],

Cell[TextData[{
 "The medians can be transferred to constant-sum plane directly by noting \
that it can be divided by the three lines ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["y", 
     SubscriptBox["R", "y"]]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", 
     SubscriptBox["R", "y"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " which are the back-projections of the three lines dividing the r-quotient \
plane.. Now the median r-quotient of a region bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["a", 
     SubscriptBox["R", "a"]], "=", 
    FractionBox["b", 
     SubscriptBox["R", "b"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["b", 
     SubscriptBox["R", "b"]], "=", 
    FractionBox["c", 
     SubscriptBox["R", "c"]]}], TraditionalForm]]],
 " is not ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " but ",
 Cell[BoxData[
  FormBox[
   FractionBox["b", 
    SubscriptBox["R", "b"]], TraditionalForm]]],
 ". So, the median r-quotient on the region bounded by",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["y", 
     SubscriptBox["R", "y"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", 
     SubscriptBox["R", "y"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox[
   FractionBox["y", 
    SubscriptBox["R", "y"]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.547462406317164*^9, 3.5474626143338614`*^9}, {
  3.547467437299841*^9, 3.547467531599517*^9}, {3.547467585353977*^9, 
  3.5474675961885357`*^9}, {3.547500644679102*^9, 3.5475006607599773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNNormal", "=", 
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5474629553960953`*^9, 3.547462956869939*^9}, {
   3.547463010169767*^9, 3.547463019404705*^9}, 3.547465344443569*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "/", "rx"}], "\[Equal]", 
      RowBox[{"y", "/", "ry"}]}], ",", 
     RowBox[{
      RowBox[{"x", "/", "rx"}], "\[Equal]", 
      RowBox[{"z", "/", "rz"}]}], ",", 
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547501215426663*^9, 3.547501256369709*^9}, 
   3.547570753515045*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "\[Rule]", 
     FractionBox["ry", 
      RowBox[{"rx", "+", "ry", "+", "rz"}]]}], ",", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["rx", 
      RowBox[{"rx", "+", "ry", "+", "rz"}]]}], ",", 
    RowBox[{"z", "\[Rule]", 
     FractionBox["rz", 
      RowBox[{"rx", "+", "ry", "+", "rz"}]]}]}], "}"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547501263083213*^9, 3.547570753515167*^9}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rx", "=", 
      RowBox[{"refPt3D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"ry", "=", 
      RowBox[{"refPt3D", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{"rz", "=", 
      RowBox[{"refPt3D", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ",", 
     RowBox[{"s", "=", 
      RowBox[{"Total", "[", "refPt3D", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sumNMiddle", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "/", "s"}], ",", 
       RowBox[{"ry", "/", "s"}], ",", 
       RowBox[{"rz", "/", "s"}]}], "}"}]}], ";", 
    RowBox[{"sumNSurfMiddle", "=", 
     RowBox[{"sumNMiddle", "+", 
      RowBox[{"sumNNormal", "/", 
       RowBox[{"Total", "[", "refPt3D", "]"}]}]}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5474632268864117`*^9, 3.5474632374359493`*^9}, {
   3.547463333833845*^9, 3.547463366568524*^9}, 3.5474653444436607`*^9, 
   3.54750073876254*^9, {3.5475012866673517`*^9, 3.547501314401442*^9}, {
   3.5475014261284657`*^9, 3.547501488101673*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNPlusMedianSides", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"ry", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rx", ",", "ry", ",", "0"}], "}"}], "+", 
               "sumNNormal"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"rx", "+", "ry"}], ")"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "ry", ",", "rz"}], "}"}], "+", 
               "sumNNormal"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"ry", "+", "rz"}], ")"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rx", ",", "0", ",", "rz"}], "}"}], "+", 
               "sumNNormal"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"rx", "+", "rz"}], ")"}]}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", "}"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474628080612097`*^9, 3.547462947340509*^9}, {
   3.5474630238036737`*^9, 3.547463204419733*^9}, {3.547463266998879*^9, 
   3.547463270414316*^9}, 3.547465344443721*^9, {3.547467786960164*^9, 
   3.547467809977744*^9}, {3.547570475670538*^9, 3.547570569794156*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNPlusMedianSurf", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"ry", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"midXY", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"rx", ",", "ry", ",", "0"}], "}"}], "+", "sumNNormal"}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"rx", "+", "ry"}], ")"}]}]}], ",", 
         RowBox[{"midYZ", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "ry", ",", "rz"}], "}"}], "+", "sumNNormal"}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"ry", "+", "rz"}], ")"}]}]}], ",", 
         RowBox[{"midXZ", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"rx", ",", "0", ",", "rz"}], "}"}], "+", "sumNNormal"}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"rx", "+", "rz"}], ")"}]}]}], ",", 
         RowBox[{"midXYZ", "=", "sumNSurfMiddle"}]}], "}"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Polygon", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "midXZ", ",", 
              "midXYZ"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"midXZ", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "midXYZ"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "midYZ", ",", 
              "midXYZ"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"midYZ", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "midXYZ"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "midXY", ",", 
              "midXYZ"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"midXY", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "midXYZ"}], 
             "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547463247665201*^9, 3.5474633083475924`*^9}, {
   3.5474634020002203`*^9, 3.547463475312277*^9}, {3.547463508613072*^9, 
   3.5474635097728767`*^9}, {3.547463638096429*^9, 3.547463808338163*^9}, 
   3.5474653444437847`*^9, {3.547570589106851*^9, 3.547570620236835*^9}, {
   3.5475707082847757`*^9, 3.547570708855482*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seventeenthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"sumNPlusMedianSurf", ",", "sumNPlusMedianSides", ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547464630642338*^9, 3.54746465420157*^9}, {
   3.547464714390873*^9, 3.5474647297927303`*^9}, {3.54746487951115*^9, 
   3.547464886659315*^9}, 3.5474653444438457`*^9}],

Cell[BoxData[
 RowBox[{"seventeenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "seventeenthDiagram", ",", 
    "\"\<Figure 17: Median r-quotients as height above constant-sum \
plane\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547464889314927*^9, 3.5474649670089493`*^9}, {
   3.547464997033128*^9, 3.547465058626433*^9}, {3.5474652751490183`*^9, 
   3.547465290644621*^9}, 3.547465344443903*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     Polygon3DBox[{{{1, 0, 0}, {1.7934814372158874`, 1.1531776809197032`, 
        1.5128739246235188`}, {0.9307617601527054, 1.079494509923813, 
        0.7851350829466193}}, {{1.7934814372158874`, 1.1531776809197032`, 
        1.5128739246235188`}, {0, 0, 1}, {0.9307617601527054, 
        1.079494509923813, 0.7851350829466193}}, {{0, 0, 1}, {
        0.8963036843695946, 1.616730923103083, 1.1758764456361062`}, {
        0.9307617601527054, 1.079494509923813, 0.7851350829466193}}, {{
        0.8963036843695946, 1.616730923103083, 1.1758764456361062`}, {0, 1, 
        0}, {0.9307617601527054, 1.079494509923813, 0.7851350829466193}}, {{0,
         1, 0}, {1.1443857305870841`, 1.3272549069927735`, 
        0.7358203187899288}, {0.9307617601527054, 1.079494509923813, 
        0.7851350829466193}}, {{1.1443857305870841`, 1.3272549069927735`, 
        0.7358203187899288}, {1, 0, 0}, {0.9307617601527054, 
        1.079494509923813, 0.7851350829466193}}}], 
     Polygon3DBox[{{{1, 0, 0}, {0, 1, 0}, {1.1443857305870841`, 
        1.3272549069927735`, 0.7358203187899288}}, {{0, 0, 1}, {0, 1, 0}, {
        0.8963036843695946, 1.616730923103083, 1.1758764456361062`}}, {{1, 0, 
        0}, {0, 0, 1}, {1.7934814372158874`, 1.1531776809197032`, 
        1.5128739246235188`}}}]}, Axes -> True, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, 
    ImageSize -> {360., 358.7379381722212}, 
    ViewPoint -> {3.336783015504459, 0.4767339994765199, 
     0.29766390641810536`}, 
    ViewVertical -> {0.5079826952060453, 0.11756091234282688`, 
     1.0133757227442954`}],
   "\"Figure 17: Median r-quotients as height above constant-sum plane\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474650534119997`*^9, 3.547465061940052*^9}, 
   3.547465298682115*^9, 3.547465344443973*^9, 3.547570638934869*^9, 
   3.547570712435145*^9}]
}, {9}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Divide normalized spectra by median r-quotients", "Subsubsection",
 CellChangeTimes->{{3.547465511618018*^9, 3.547465528846369*^9}, {
  3.547465595751505*^9, 3.54746559678344*^9}, {3.547465771394411*^9, 
  3.547465776814672*^9}}],

Cell[TextData[{
 "The points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "z"}], ")"}], TraditionalForm]]],
 " in the regions bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["y", 
     SubscriptBox["R", "y"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", 
     SubscriptBox["R", "y"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " will become ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "y"], 
      FractionBox["x", "y"]}], ",", 
     SubscriptBox["R", "y"], ",", 
     RowBox[{
      SubscriptBox["R", "y"], 
      FractionBox["z", "y"]}]}], ")"}], TraditionalForm]]],
 ". In the regions bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["y", 
     SubscriptBox["R", "y"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " the points will become ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["R", "x"], ",", 
     RowBox[{
      SubscriptBox["R", "x"], 
      FractionBox["y", "x"]}], ",", 
     RowBox[{
      SubscriptBox["R", "x"], 
      FractionBox["z", "x"]}]}], ")"}], TraditionalForm]]],
 ". In the regions bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", 
     SubscriptBox["R", "y"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " the points will become ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "z"], 
      FractionBox["x", "z"]}], ",", 
     RowBox[{
      SubscriptBox["R", "z"], 
      FractionBox["y", "z"]}], ",", 
     SubscriptBox["R", "z"]}], ")"}], TraditionalForm]]],
 ". Notice that each region is transformed to lie on a plane. Taking the \
region where ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " is the common coordinate as an example, the plane is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SubscriptBox["R", "y"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.547465642468349*^9, 3.5474656440274467`*^9}, 
   3.547465799746467*^9, {3.54746588402993*^9, 3.547465964194687*^9}, {
   3.547466037222611*^9, 3.547466080895075*^9}, {3.5474661270587893`*^9, 
   3.547466168499254*^9}, {3.5474665208361588`*^9, 3.547466521201844*^9}, {
   3.5474665886800756`*^9, 3.547466638129446*^9}, {3.547466680007847*^9, 
   3.547466706792795*^9}, {3.547466744489109*^9, 3.5474668468208103`*^9}, {
   3.5474668860315533`*^9, 3.547466933952529*^9}, {3.547466985384506*^9, 
   3.54746704156711*^9}, {3.5474670821832857`*^9, 3.547467111582809*^9}, {
   3.547571194419582*^9, 3.547571258806808*^9}, {3.547574662294868*^9, 
   3.547574663586651*^9}, {3.547575360992095*^9, 3.5475753692479486`*^9}, {
   3.547575403980142*^9, 3.547575424851717*^9}, {3.547575467276338*^9, 
   3.5475755418131037`*^9}}],

Cell[TextData[{
 "Not all of the points of the plane are used. In particular, we can divide \
the regions bounded by the lines above into two halves. Both have the median \
quotient on the same axis. But in one, the reciprocal quotients come in the \
reverse order from the other.  We can name the coordinates ",
 Cell[BoxData[
  FormBox["l", TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]]],
 " for low, median and high, and the respective coordinates of the reference \
spectrum as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "l"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "m"], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "h"], TraditionalForm]]],
 " so that at the following relation holds on a region we are interested in: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["l", 
     SubscriptBox["R", "l"]], "\[LessEqual]", 
    FractionBox["m", 
     SubscriptBox["R", "m"]], "\[LessEqual]", 
    FractionBox["h", 
     SubscriptBox["R", "h"]]}], TraditionalForm]]],
 ". If ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "l"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "h"], TraditionalForm]]],
 " are the transformed coordinates, the normalization is a bijection between \
the constant-sum surface and the \"rectangular\" sub-plane: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", 
    SubscriptBox["t", "l"], "\[LessEqual]", 
    SubscriptBox["R", "l"]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", 
    SubscriptBox["R", "h"], "\[LessEqual]", 
    SubscriptBox["t", "h"]}], TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    SubscriptBox["R", "m"]}], TraditionalForm]]],
 ". When we put the two sub-regions that map to the same plane together, we \
get an L shape with the corner removed."
}], "Text",
 CellChangeTimes->{{3.54775761007073*^9, 3.5477578099401007`*^9}, {
  3.547757886961093*^9, 3.5477579393340893`*^9}, {3.547758084839808*^9, 
  3.547758296549719*^9}, {3.547758358148449*^9, 3.5477583631092443`*^9}, {
  3.547758431699441*^9, 3.547758464360141*^9}, {3.5477585054625807`*^9, 
  3.547758523477161*^9}, {3.547758640058427*^9, 3.547758841754122*^9}, {
  3.5477589673018723`*^9, 3.547759021270151*^9}, {3.547770225926732*^9, 
  3.54777026373072*^9}, {3.547807174699051*^9, 3.547807207833658*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eighteenthDiagram", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"RegionPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0", "<", "tx", "<=", "rx"}], "&&", 
          RowBox[{"0", "<", "rz", "<=", "tz"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0", "<", "tz", "<=", "rz"}], "&&", 
          RowBox[{"0", "<", "rx", "<=", "tx"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"tx", ",", 
         RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"tz", ",", 
         RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", "2"}], "}"}]}], "}"}]}], 
       ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "4"}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
       ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<z\>\""}], "}"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547769873489689*^9, 3.5477699243056993`*^9}, {
   3.547769967482602*^9, 3.547770031323163*^9}, 3.547770282160858*^9, {
   3.5477703189295263`*^9, 3.547770361802397*^9}}],

Cell[BoxData[
 RowBox[{"eighteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "eighteenthDiagram", ",", 
    "\"\<Figure 18: the portion of the plane y=\!\(\*SubscriptBox[\(R\), \
\(y\)]\) in the bijection with the regions bounded by  \!\(\*FormBox[
RowBox[{FractionBox[\"x\", SubscriptBox[\"R\", \"x\"]], \"=\", \
FractionBox[\"y\", SubscriptBox[\"R\", \"y\"]]}],
TraditionalForm]\) and \!\(\*FormBox[
RowBox[{FractionBox[\"y\", SubscriptBox[\"R\", \"y\"]], \"=\", \
FractionBox[\"z\", SubscriptBox[\"R\", \"z\"]]}],
TraditionalForm]\)\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "->", "Times"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54777003360723*^9, 3.5477701089178133`*^9}, {
   3.547770149309658*^9, 3.547770182306085*^9}, 3.547770282161126*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
b8UhTBzCxCFMHKLvzNv/AJ/DQxM=
     "], {{{
        RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnHX8F8X2xnd3Zr4IAoKABQjYLXZjYmF3C7aiAqIgogIidiEqYmN3X7v1
6rUbFVuv18bu+p03z/P96R/zOudzdnZ2d3bmnOfEfvrsMWSrg5uqqj5uqaoU
NMePw+uq2jXaJ9G2j/ZFyL8IukO0L4N/PejWHA/+raDbRPs0+FeCbhXt4+D/
G3S7aJ8H/3XQHaPNCP7mGH9LWvw+O+i/Q3ZmtBXi96VBR0f7Pvidon0V/O9B
d4n2TfA/B9052tfBvxd022ifBf9dtCuijeJaMeZX0VaMYz8G/SHaysF/F/Tb
aCsFPyzoDdF3bLSjgv9X0OOijQz+lqDjuW7wv0VbNfr/FfTPaKsFX2KScrQ1
gh8csmsYI1oTsjra6iE/MeT3h+yUaKcH/zCUcYO/O+iJ0WaJvm2i9Yv+v4T8
52irBH9+0Cfj+NnRNorfj1Y6v2P07RBtrZD1DNoj2hPRd2q0Z+P4udFuCP7V
oBdFuyr4F4OeH61z9O0Ube04d51oV3m++gd/W6VnXjf46yo9T6/oO2+0p2KM
PkF7R3s2+PmDzhftheDXi/43VZrHBUO2QLSXQ75w0IWiTWPOKr23LaNtGP0f
rDQvGwf/RKV3v2j0XSTaG9F/yaBLRHs3+MWDLhbtreCXDrpUtA+CHxDnPl1p
juYI2cV+3g1Cfm+l+V0m5H2jfRT9Nwn585XmaLmQLRvtk5BvGvKXK83RrCFr
F23NkG0W7bVK87hQ8P2Drhxt4eD34Drcc/D78H6iLRn8wUE3jbZI8HvxrNGW
CP7AoJtEWyz4/XjuaIsHf0DQAdGWCn5o0M2iXRz85UEvi9Y3+EODbhFt6eAP
Cbo5zxX8CM/n8rX6HhHt+eCfi7ZstLbxbANr3Wf74PeodT+zBb9XrXvuFvx+
te5hruAPqHWf3YM/sNazzBv8wbXurU/wQ2vdw+zB71PrWRYI/pBa97lY8CPY
/6ytoG8EXT/akcGPtj45OtpRte5v4eh/aK1nGRt0TK17PSbauFr3OjXaqGi7
RTs22vha1z4h2vG17vuUaCfXutezok2qdR8nsQ9rPc+Z0SbWut5p0U6t9Tyj
/X5r5qHW/XaMdgc6Idpy0Y4L+YRa83Ur+oF1Gu37SnqOeb49ft8WrS/6ppJe
ZM7PiHNOrzVH60e7s5Ku+bGSvuRd/FRJhzGfP1fSl7yX+2Kse6OtHu2XSjqY
d/QAuiXamtF+raSPeV/3oFvQIdEeivZgtHWiPYL+idY/2mPRHo22YbTfK+lX
3ukflXQq7/G3Snqa9/44+pk9F+2uaHeiV6MdGW10I92xeuyb1aL9xD6NtlS0
QSFfO+ha0Q4Kfr2g60YbEvwKQZePtjf7Cn0cbd/glw26TLQ9g+8XdI1og5nf
oOtHGxb8C+jioLv7Ptk7baO95L0zkHmMvhtFGx785JCfE20kc4QuiHZY8Kuh
16PtH/wzcfzKaEd4LQzyemAfc4/YRPY994Wd/MHHkt8d+7r4naITsmX7W85e
5znCvM7UE8zBLJXWzx4eEz3BPLWp9K4PNP+rz5nFa+MAj8NzD/Ozc819fV3e
KbqiXbRvYuDEXqqkS3juWaPNnaQzRvm9H2r5AcxHozlGb6Nn2puONM/EcF5n
2Fq/sX3YX8acjfUU40/17ydjvP+wXrhuLdop2jxJ94GtB3w0HmdGo3GPrvSe
v62kTw4Nea5lr0stHhvN8zWWd0d3BO0a7fno/1yj30cEbXH/l7CJ0SYE/2rQ
V6KdwP2gf4LOzntpdI1jg+9Rq+8cvI9a44ATxkafWcwz38M95+wB+h0ffM9a
Y8/Fe6rVH7v/a6PfJwX/ZvDTo50W/OtBX4t2cvCnBG1fCz/MW0s2D+8p+HaW
/9Ho96nB90a/0Tdah1rngjd61Rq7R7Qzo39Hy1m89Dsj2HdC/naj82er1Qc8
dm7IOpl/P/j3op0VfJ9atDfroFYfsMpFcXx28/8N/sNok1mvSf3O4bJJ15gU
/Hy1js8X7fLo27UWhmkbfboEPyX4j0P+v2jnBT9/LbpApeOzu3+3WueCc66N
vnOYP67RXDHnnwX/abQLOb8WXSjaFyH7vBF+wF6xbtH/c9YaB/mCQS8Jugjy
JB7McX4tG8w5yyet6UuD3yzoptG6RmufdH8XeD9c5j0Cvdz85XF8Oesv9tYV
3l+zJd0H15rCszK30bozZrTpIV8x6ApJ++bAaNdWwm8HBf9mpd9D0buNsN3K
0XelJN1wWKN9BX7jOPuQcw8JemMl+Qj3A+eh79lLYMVVY4xVkvbK4dFurSQf
Hvxblc4fxbqqdIxnusrP9UzIn26038Y12kvYROzMMsYDE4J/N+g90U4I/vhG
2O6YRudgR/uBwZP205ho74TsjmjHNjoPHLgWmC5pr5wW7dRGGPRS9EMlTLgO
uDhpT3CcvQdGPZk1H/SBaCc1osi5F9YW409qtK8eDv6MoI9U4qc02j/g27Ma
9QPHrxfXWDdpH5zXqB84+Jygj1fqv34c65+0by4I+VOVsO4VjfYJ9zwx6PuV
rndJ8Bc3wsQXsu8qnbNhnL9B0n7iOPuTcS4L+t9Kzz85+A8qXfvKRtd43veM
vFe0q4N/qRJO/rLRngEbX9dovyHfJK4xIGnNXhOyjyqdc32jfuDsG4NOq3Qu
9nq61z9jgrcXjXYT+71SP2SvW/4se7b+G1O+4X3KmnrT62qE11u3Sv4Xe7+7
1w/vsbvnimef32uJNTZ3pXfBvPWptE6Y256eE55lQT8L97ZwJRwKfsPmHum1
N2clDAsmDFG1dSMszm/w7CdaYtW2jXA5vzcOwUbWE9s3wuiMC94EE4IfdmyE
ufkNngUHgg3AsOA0MMDOjTA92HH3RjgeXLhrI3zPOWBkZGCJQY3wPefv2wiL
46ft2QjrgwvBrVDsGtgZfAhOAF/TFzywdyMfgGNd4hlmj7ZF/N6skT+A/UYP
fud3vUcl3ANm/tg8cwWeAleBmT8xz1yBbcBV4GT0J+OgIz+1nPlnXn7yXPH8
4CQw0gHmwdLgKXAV+Hk/9wdvf2E58wnOAm+BpfEtPvc4X1rOvDFfv3nOZ8Ym
PD/Mx5+ek0MsB1ePsBydBs4Cb4GxnzOOBdswZ/AdKvnb4BlwyFBfCxyOnw/W
AjsNNs+ah9aW46/XxlFf+1q8r6HWyV0qxT0YHx6fPhk7EfcAU7F3oOAfcBS+
fjF2wucH/4CFjjLPmn/W59IfWRv3IRYA5gH/QNuaH285+444QVvbaOIHbYyp
pnn/gnm43+Q5ebyWL3cYGLGRvsd2EDsA84BzwC9gDLDQEsYbYBiOd3CfxYx/
wEKn+1z2O/EozkfvEYMA2/SuFHcAb8xXyZ7M63ubajn65Hz3R4csZcwDFkLW
2eO85fG5N87r4jH7GvOAZ5Y1ZgDDEMMB26B/oMjBP2ATsAEYhljGHObBCnMa
t4AL5vbawE729Px/5DEZBxve3e8OXDCP5xl/roffI9gG3xh9i53s5Tm8wddF
H2LTevu5sO/E3sDw6Lb5fS38Y+Ij7HHs0nx+dvxpYivoBGzIAn6WzWvFX4i9
4IsTc0EP4MsSE2F/4e8ST2GP45sSZ2Ff4zcTf2G/4wcTZ2Ef4TcTr2GP4wcT
Z2E/gq2InbAfiUWBq8HYM7FdLd2D70AcEb/gEubY+A9fg5jiuEr+DnFM/Br8
C+J5+AJge+KIYH4wLXEm8C2YD+w3sJIvQHwRPA8mJ44IPgd7E2sEM4OriReC
pcEIfbyuwLfEBcGZl1SK87EWwKHE+8Bf4DDifeA0cAOxxYcrYTVieeA9MA5x
OnAOe4uYBfsLPEV8DcwDViB+92/f+xa+f/AEsTbwCfiDOB14AxxArA2ccEGt
98o7xcYTawMPbG6bQUx4m0a2kzjydo3sJbHmnRrZQmK+uzSyecSXd2tk54hT
D2xk/4hT79HIzhF33qGRfSVOvVcjO0d8eb9G9o/4MoaIOBNxqqNMEe9eS75Y
8Ps0snnEoI+0nGchdrC7+4C5iaWCpYkTDfQ4V9eKfw1CD3EPteJdN9aKee1d
K36EDBXfqZGMONh1tWJknEP8hRgYtq8L91/rN3Ei4mHYrHaNrsO1b6kVO6Mf
sSHiWNjKOYLfv9bv22vFufhNzItrYn/RwewFdN3cIR9c6xrEnoirYTfvqRVr
O6hWvIk4HLayV/BDav2+v1acjt/EoYi9YUN7NDqPseYLflitY8SniJlhWx+t
FUcbHm3BRpRjxKSI52HjHqoV1+P8RRrZB47dWStWyH3jW+Bj7FqJPm7+yVpx
w5G14oFH+p3uZn5Xv+dRlp9X633zrutG66Y1XzLa75ocCmtolUo5EXDhqpVw
BffTr9J7HuN3PdBrjnMHeZ20yo72OMSmRvsexng9MOae5vfwGjrGa4Y2zu9x
nOWrVcKurIfVK+Vuxpvf1/J9vCYmeJ3wvo/3unrdYzLO/l4zrX3h16iU9zne
z/iejyEf7Gc/wNcY7zVMjglcu2YlbMm7WK/SujjJa2OI18/B7nuS+59s+VqV
8lMnmz/YPOuQ3BNYee1KmJa1tE4l2WmWD3Uf1uQwy4d6nZ3udfi9ec4d7nEO
8Tqb6HXI3DBHYFjyVpP8LMQg8d3Bh6zNM33eSD/vCLdJ7jPC/bFHI31+e9sp
YgG7Vbom46xbSXaO5dDJ5hnjXI9zlXnkB3oe27j/FF9vlkbrm7V9aa0Yx1Tb
QOwdcQv8sEstf8O/p1pPEq9nr1xWK59Bf8bAXv7/GJbfUEuv7en74v6W9XnE
RLCN19bSm4NMr6m1F472b/ixHoe9AL3e/M21dOvepjfVWre31dKJresdnvUP
vdX8HbV0Imv8GJ/PucdZznq+u5Z+GWx6V601f4J/w99XSz8e5PP+5XNPsnxN
6897zaNjsJHs8Qdr6c0hpg/UWtusTfTd2taNj3lNPmL5MK/NRy1H9rD7/6cW
hm5dg497/fDOiYOj107x9bgWx59wn6dr6crWNQu/nvXnU+b/7euyP8jVTvS5
5IPw4Vkv+Dr4P8TwX6wVb97dcnj8IGLRHDu80jogXoD/+HItfqDHeN7nIuPY
dOtGdC7+5bSgr3o9vGJ+K9PX/sG/4j5v1Nq/vGvWItdg75APImexbSW6gnn6
v1kLn7xfS9/xfieY/8z6Fj37qfXt27VwyNuWs97g37X8PY8FzkGPok/xRb8J
+l0tPIPso1r45wP357of+RhrD9mHHucdX49r/c/n9nP/jz3OZ9yj1yG6Ab38
hfUzcvAVOhU9i0+M7HPLZ8pq1wdE+8r8t7Xue233/8Tjo2vRyzP8XF+7z9fu
P7NWwGOxDn+opX9Zz1/6emtZnyPHF2+Jd1Ia6QT6/1QL4/0a7Revwx9rHWOc
ny3f2fRn95loHh8a+W/ug43HWGPn0dPod/z+P8yvZ53P711M/zL/p3/TZzeP
g45NjTAEY0+vtZ5Ye9j97Gs1jfQy/Xm+7GeEb+Nzs58dHuxH3GnxSnsAHt8K
m0TcCf+LazYek+PtjFNnNc+50Fmbv/Eq5y5hO/iD5xZZB2PWjubpA+1ojEtM
q5MxJfuBWBY+GvuBY/h04FjkSwXf2f2XrEQ7GwdzvIux75yN8OvSPrercXBX
92Ecjndzn27uv5/3Er8HuM+cxsHgW2JlfSute3j8x3kaHUMOncc4GOxKnG2Z
SvsBflPTHsbHc/lcME9Py+kPNib+tmwl2su4eYZ/46v2tpw+nNfTWBlZb2Nr
MDPxuuU8V7N53tgPyPGR52/Ujz7gZ+J1y5tfyHia4/TDdiBb0H3YA/THRwZX
EydcodK6hyeuRYyPWN9WviZjgZ04zjngnEXNr+Bx+I0NWrzRuSv6OlwXTPW6
9wJ6leP0G+H+SzSyQazXJb22B1XKO7O1yNHDb23Z0ubJLeNfNZYv6f6s3b7e
F+Tx6beN9Ty+UPK5y1rOOl7O63ZPH2PMvX0O/ZfwPfNc4CruHfxGrhv/DdxL
rJ74fp9KuWLy0eBt8vjw21fKuXPOdj53ZfP7+vfMXHMtv26Ax1jN51I/QA59
h0pzuqHfI7J+lsPjN4LtB/v3zNhpLfkmHnMV3xv5fHw/cCPre02veXL7+H7g
beoT6Lej+69tnpoE+u1Uaa2v43WObD3LWTf9vW7J4XPPYO+DPBbXpZ6BeoCd
K+XA4duabmA5fH/Lh3ssxhni63Gf1EIg36VSbGAH7x3W6wCvbWrViEuwxqkd
QD6reeoJ8B8P82/k+JSbWL6Yz2UNgDOIaaCPqX0jRr5SpeObt/ZpdGwl95n5
u1ZcfUvfA7qacdDP7A1iI+h1cl7EVYmpgiF4nk+ta4mZoA/pSzwF/QwmQP6Z
dfD2fnZkO7k/mIAYC/qS+Apxlr62Idt6HPQofdCx0F3Mgwk4p1WP7upzme+N
PefgA2I1rboTHt0IHWie+A1xHHQgNpjYy9fWkYMsJ5ZDTAf9hk3id6v+29Ny
dAvnotOocQBfgi2xzcR/0Gcc38d90F3I0VdgUs4BlyLbz3LwKeNwnNwrcfnW
mDw8cXjysAda/qZ/wyODb83XHuz+xLrhic8P9rmtx4dYDh1qnlztMPPE+JFf
53GQj630e4jHQcY5xPqGm+dc8BbzOcPjDLecfod6HCi5YHIE5HxHNn/nCw41
T/6NPBz5YtphvhZ96E8eAcr5xCHJF5BTntPPwnVbc8eH/2PMUf+4LnxrvvkI
j8l1RrgP+2Mb7xGOj/b40CPNkzs4yjz3AE/eAcoxYp5jzNPnHf9u5RnnNo+D
nFgpOY2x3oPkp8d5HGTjLIceY771GNclD4mc827zvfJ82JCRth/gHmwH2In8
+LEeh7w4Oem7Tcl3drdOoF9rLpyc9Ym+1gSfi+x493+v0rmMR+77JMvJW5O/
fth9Trac4yeaP9H9iRvPrLloFD+HP+4f/Tm3NY9+ivuQcyfn2tOyU80/6GP0
nVnP0ihf836l/hxHdobvDflEn0tOnnvu5XNPsfxhH2MczqP/I5VrXtx/osfs
6ec+y3Jkp1v+QSU5c0Penfz6zJrdRrl8YuM0agDO9Phnm+c4eXfi6JPdv5fH
nGyenBHn9jFPbolcErUCU5q/x57iPtDzzIMpzjdPThs55yG7wPeJ/EL3Ge+1
xBohJ0WdAPks8uTky1trbS/yPfCsl7gPsovNU1Mx1TzjwJPPIh9wuXmuz3XJ
D3Ccczh+mfnW6172jzHhn/O8ne35IX/FmAt67CvMU7twhcekbuEqy8nhX/MP
nrz+85Zd3fydX6N/a94N+Yseh37kMcj/UwdAPQO5L+ofyH/R79rm7xqk6yyH
Xm/+Zf+mL7UQN1jOOPDk7KAce9XXusl9kMGTMwELgEvAA5uZ39JYmFzaBj7v
Rp9Lbg15Kx4GH9OXXBw5OTAt+BceDAy93fJb3L8VPyOnL/iXnNxGnu8rPYfk
6JC3xknucF/ycuTnwK7k68jbgVHRZ8jRaWBM5K25vLvcH9k97r+qefqCPcnn
gT//5WtxXXAr+T+wKzlAeLAu9L7mb9wLT9+VfC3uBR3OfkBPkidk/FYc+4Cv
SS6RnCJ4FfqQ+XXNg2vBnuQpwbHkKuHBpRzjHHAvskcsB+eSjwSfQ8GmYCTy
k4+a38hy+q7vc7kOmJR8Bnj1ft8n94xTgp+Pjw8mfdx9xweeXLCoFmPmdxKu
HyNfDH91pbzxCuap8SJPTI6YGjpq6Mk58y3Fyq4lI29M/vj6SjlqctjkIskV
kzN+qFI/+pBfhq7s/hxfx304bzmf23pP5K/5DqOfa70q12uRg6aui3w8+Sm+
z1jLtV7U4pG3JmdNrp4+91X6FmRV162R06bPpZVy4DzjzZXoquY5by2fm1y7
RY6bnCq51Ssr0c3Mc5war8cq5cPXNZ8tT67tosbrP5Xyt/3Nt7G8xTlzcucv
VMqVU8v1TKVvFDZ0TVd71w6RW+f3zJx6pfMZs3el4xt7nA7mOY9vQajZol5r
gPlXKtXq8Dzki8nDD7C8m5+R49TtUuNLTvw/4YDe5jlsHYvcPfUGvK+7Kr2L
LXze1ErndjTdwjy1ABv4Gamhpf6A2gNqEOBvr1RPSh0Gz8g3JtTKkk+nNhae
NYDdoQ92CuwxzXuZ/Dl5dOpWqWOFn+QxyamTT+cbkw/NT/YxrsU3Ke+5P9+V
UI86xdec5utSz0jdAzUP4H/qdahT4jsd6p+pB6AugPoAaqBpyFnbfGvztM+F
UgPEHhnj3/DUUzA+MuqaqblhP4Kr4cdWwvycix9BnSz3ydrArlHzca5lH1lO
zS/1KKxn8Ak8uGiij83ruaIOhrXE9zjIqUl4Jt773d6/1JvM5vfON0x8D8A7
pN5kDa8B9i38XF6HHb0mGe8dj0ntAzUQ1CtTEw1PLQRrtoP7t74/7oc6CN4d
7wqMxH2Cr6ibYEyeA+xHbRA4s3Vc9AbfHE33+Kyv1b3GqNGgVuNk933D/XnX
r3u91dZXlfUgOut8zy3rg/l9MvTr6KwczqPBj8zKFz0U/GFZ+aXHgx+VlSN6
JvijsnI4v8UYw4tqSn4PfkRR3cnHQf/M8of+F/zvWb7an9HnyKJ7vz/o8Kwc
10fB/5rld54a9JysvOCrIR+flc/hudhL0/ys1L4wV9TF800XNVzUaNGHZ/8l
6EFFa5m6rYUs5zzmlPn8NejQojX7fNAxWXmhl4Ifl5WDmuZx2Zv/DfnPWXGU
D4P/KStm8wkBpyJ/692g32XFqKYHPyMr5leCTiyqd3kn6LdZsbQc9LSimpi3
g36TFTN7M/ivsuJ2pwb/cda6uif4YVk5wz/ivkYV1e68FfTrrNgewbZjitbX
X9FnTNGarUM+oUjHfBq0KfKxZgRtX4RnPwuai/ynL4O2K8LgnwdtKfJdvgg6
S5Ef8EHQH7PiWynoyUU1Q9TI8V6oKWpCfkLRPng/6A9Z8a33gv8++3sSn0N/
6vio56N+iVo++PGVYlHUIBLfuKRSjTu17nxbB08dEbk5+oA5qf+dK6luHjvS
2TZiE9sV+O9sS7Aj4FViWK3X6eJxeGedPD51i9QvogPRYfDoMWgvy9GpfPM4
yvaou20utXPsO3Qy9mQe25Qetjn0xz4hH+0+m/sYfXpazvPwzBdZ73Jd7qW1
32jrbPpzL/BPWrczT3N43qb7/shXUvdHLSA2Bbq0eWwL/AfWwdQjonvRHTwP
urqT7TPzQw3OIt5fvLf5/R7Zn7xfYgh814Kcd4vuYj+yp6kr7Ov54Xrcx9nW
o9g29Cb1ldSDjqtkT+DH+jm6+lmQ9XEfbBD8s7YP1Fmie6m1hMdWQpc0D3bo
5vfFs2JLzrD+h2cOqMdczPKT2DdZeOAYX6+rKfV23MN7cbxjVi3aK0HbZdWr
vRi0bVat24dBZ8uqRXst6KxZdWz/C9opq16tS9DpSXVpzwU/S1Y93KdBO2fV
rn0RdPaserXv0UVF8b++Ibs8K+b5dtAOWXV1cwa9Liuuu0lL6Lms3P4tRboY
PbxJ0OVblF/cMviVWpQvnB58+6w6vHmCzpHl3/UJOjUr7rp40Muy4rQLBb00
K37bI+glWbGvl7A/tmv7xthbZdVovBb3cH1RvcVmIbs2K565dcjeTMLFu6Cr
kmz4NsG/leQT7IRuS8Jls6Ebi/zU7YK+neQH1EV6EB34W5atwk79kWXDsF9/
Zel3dPsO0CQMnop0JXqyTZFORB+WIl2Jnlwzzr0qK/a7QtArsmLLqwa9Mitu
vFHQa7JiuesFvTorDvx00DZZ9XlnBm3JwvJti/QyOnkDxmhR/rgD9qIoZnBm
kb1Bb81apN/R7Rdl2Vrs7Dq8kxbl6TuH7OCkuq29Q75XVn5t36D7ZOXdBgc9
ICvGt2fQPbLyevsH3S8rRzYo6MDs+roie4mt3DVku2TlLncPultWXnLboNtk
5W37R9+bimqIdg7ZTll50jWLbC12tlvQIUnfVSxcZCOxj4sV2T9s35JFdhQb
2rfI1mJnVy+yVdip5YrsNDZ6xSI7hA3qEvPxTVGtxo7B/5xUN9qlyJZjx1cp
smHYrx3jHnfIyvluH3S7rDzyunH83KSa+tfBFEl+2avgpiSc+Sb4IsmXRH+8
mKRD3g/+uSQ/C5v/ivHk4jHmCUnfGeATH5vkF58Qffq1KL++SMiPS/pG4bOQ
v2Yb9w4YKsm/Wyr6nJT0bcEywZ+S9P3BGsGflfRNwKrBn5lU179W8OckfROw
UvBnJH1/sECM2aNFNSUrB79Ii2osegU/d4tqVpaP/qclfdOwBnu9RfUWSwU/
X4tqPpYLfsEW1XYsGnyvFtWXfBn8G0Xf1ezGnCf5xwN5j0n+Ojijne0F+Ans
jT+O39nO84mPjx+5QCX7gv+Jr8TxWd0Hn7d4fsBJfxpvg5Oy7QI+cXYfrtPe
18Lnpj/vF7+4xXYTewrfu9L3QXw7RKyMOMYM+1BgiRnN33GDX43bwUltPA4x
N7A7uB0/lX6sH/zvNl4nPEtbzwOyWSwH9zLmXLbLf9gHZIzfPQ73/oefFxyP
zcKOkWvAPo+3vYbHzwXfU18+oVJ70XLiUdh47DuY/GVfFwzIb3DdCT42l+mr
loNf4U/weIwPZgAjvGgen4V6dJ4R+4tPg7+Dj1PZFvMsf/ldYN+JYczr95v8
HunfeN/hG9XmWUuMjz+KP/CV3xFxJOYfnxE8Xfta+DC/+X0Ri6I/MSgwJ++a
b8HAnl+Y3yHW9adJ3wk8Gmv7u6R42xPB/5BU83sAOD8pnjEenyLrmvug15Ni
D7eF7POkWOnDwX+bFOe7M/gvk+OawX+RFDfdD7uXFKc5rsgHYF2fWITLWWun
FGF35uDQIr+OtbAXOjwp9rMHejgpVjSyyN9jLQwr8qNm/ocJ2L6ovu3gIh8M
/+v0Ij+HPfpg0G+SYpZji/wT9twRRf4Ma+GoIl+ROQa7PWccdX+c+3VSrPTu
4GckxWuJ733jPuBD+Nm9rn72GuP9fO13hK/xk9ct98Q3CRf6XcOzr1/1uwRj
E+f71PLWfqwHcDRYHCyNX861wDDE7vg/F+JyyH6x/Mm45zuS7uH54O9L6vPv
4L9PiqHi+3xvDMn8/uD1D/3ePPFInvl6j/+Tn/HeGOerpLg1ccEffA/0/c79
V/J8MVfHF9kbdAU+whPWRYdwb0U1pr8FnZq0N38P/rKkmMOvwV+cpAM6xtqe
lpQ3+CXkFybpkNlC/kaS/vsj5FckxTZ+Cn5KUmzpr+CvSYqX/Bz8+Umxoz/B
fUmxEWzyt7bLR4fs+qxaSgpArkuKq7DuOrdo7S0cdKWsOsEFgl82q5ZwyeDX
zqr1A0d0LcISfUK+ZFZ94pMhH1SUa+sU8l+y/KS+wa+fVZfHGlyh+H9TQnZb
Ub0v+2PToj1yMO+6qMZ3aPB3F9X1LhbjrJ5VMzhH8GOTakRnDf7ZpPxX++Bf
SMpnjWbfF8XVwZ4bFuHPR4PftShn+mrw+xflfdhbKxftL9bCskXr4Uh0QFG9
xxHs6aJ4/p3Bb1uU3/8pCfeAeXjuC/3sh2Nvi2L1o9ABRXmEdtH3qaTc4utB
BxflfZ4Pfu+i3Fmb6PNwUr64Dv6GJB3bNvgnknKjswT/WFI+twPvMCnn9VLQ
fYtyainktyT5/Tn4u5LqBR4PuntRrrYJ+U1Je3S54Adk1VS2BP9AUr66BH9v
Us5/ruDnzaq97Rr8yi2qtcBn6tbiul7wW1Hd883BT8zyDZ+JMfYsyo0ewR4q
qns+EqxVVMd8NFiuqO6Z+fgga07A/jsm4X98ml2T/JoJwa/aonpHfIJdkvwC
fIidkvwI/IOdk3wE/IkdknyKSUkYbuZ/PAQ/T1FeDN9o4yL/iPt9N+uebwn6
r6TvkvGZ1i/ym/CZNirym44BfxbVTM/0t4p8rrOTcCGYcCzYtaj2mvf/edYa
OCT6zF2Uj7s9ae6YtwuCnp9dOx90+ySfFB9xuyQ/kXf+UdZ7x072K7KV2Mn1
imzlgnF84awaot7gyewavKBLZNUN4Y/OleWTsj8+ydojhwZ9sKjGHSy5SRGe
HAE+L6qP7x7vYf6sWtd5g18kqzYZHDqgCIt2D1nPrJqpG7L2M3t56eCXyapL
wg/eJskXxs/eLcnXxg/eNskX/jHo7C2q48Yn3jrJL8bnOyvL70PnjUnSe+sG
3z+rhmiVoKtl1ShtGnTzrFqh5YOumFXftGHQjbPqkvphh7PqaB6K8XYuqgkB
OyxRhB8+S8IrYJWjgl+zRd9iXJukr9HV1yfpX3Qv7/nWrHc9NMlPQ69enaTH
0eFc5+Wsa7Ff38jas3fiS2V9Y3Fr0j5nj1+eZG+wNbfjn2V9Y3Fjkh5Bh6D/
pmXpQNb77Vlr/uYkXYAeuDLJ9mB30OtvZen2HYN/Ias+5+IiXYYeuz/pGPIR
wfcsyudeWKSz0FfEPC4qinsQd7m6KPayfdBns+qC0KlPZenVHqyprBwxPnrH
Ij+9O3OflQsmZnNtUdymG2Nkfa84Mu5h3qJccNeQXVf0H0Dc1z1Z94Z9eCzL
Rhxb5O/hp4wr8jMfqqT7H8/S/4cU5UXAA8QYziqKM0wq0q3o1bOLdCV6En3/
UJbOJ+Z0TlHc6YwiPxMfc3KS34vPi215JMu+nJdk77H1NxStddY59uSBLJty
WBEeAqtMKbIZ2AtiY+cWxceImZ1XFDe7IAkrgBOIGdxcFDeYXKTr0fPM2X1Z
8za6yPfG37koCaOATw4vij2BzS5JwjTgmaOL/Hb8iEuTMBD4Z0gRhgO/nV9k
t7BZxJM2KIopgbW3KMLbYPkti/D8ZJ4l6xsksPzmRXj+DPRT0rdHYPnVivD8
iUm+On46OHfpIqx7evQ/Les7mNOTfHL88WFJ8TtidxOTfHj898OS1h9rDyy/
WRGeZ09PK9rXqwV/XFaN/xrBH5/1jQI+xKJFfsSEpPjCXtF/xeizRda3Aicn
xRGIIZya5PPj7x+atL5Z28TwbiyK4x2fFMsgjoEfs1CRLzNn0DmKvr/ZHduR
VV9K3PTSotjpFJ4769usq4pwJ5jznqS9x76bWoSlwFHEOC8pinN+En22KvqP
HLD22kV4mzjrBUWx1oOSYmH949yts2KRxCEnZdlLbCWx2CuL4rGXFWE1cBrx
xU5FMUb8vNmL9OeBRbln4vrEdy8vivFeU4SPwcZXFOEeMM//AQ0ermg=
           "]], 
          PolygonBox[CompressedData["
1:eJwlmHnAllMaxs/zPue8mjFjrJOlaFPaN6WdiBaSvlZt8kkS7XsiJKLsKdrt
RKGSSiqpUGlRQnaGGYydMpYxv2uuP+7vu3/PfZ7nfZb73Oe6T8XSYSVDCyGE
QVkIkf+d+DOwCHOwD8eaw6Vwf7gnfC7cAP4P/i/YGfAlcCnxC+GHUggPYtu4
1rnwacSrEv8c/wusNVwL/g7/e+zePISzGT+O8WOxN+HBcBVie+EWjK/O+K/g
r7Eh8DLij+EvxjrAlxIfyO/3hrtyfmv4MLgW519AvBH8O7H/Yo3hi+F+xHvA
XRh/BnwoXJPxs+Azuf4Y/NFYfcb3J96HeHfGD4OfJf4E/hJsG+NL4Qr4mxi/
Fx4EV4Z3wd10Pc4/gvNrwz3gNnBZuC7cHT4LPhquA5/D9evCP3H+Aexn4tdj
F+A3xHbjD+T6lfC3M/5sxg9g/ADO78WxBnBl+FP8z7BR8POMfwZ/OTYCXgUv
xX8aGwOvg1fgr8R2cP0BcEX8V/QN8R/i2HT8Ezl2LON7cf1O/F5n+DZijRkz
hPiV2B1wU3gY/lBsOuPvwOYy9gFsDrH7sOf0rPAE/CuUT1yvKTwJvhL+DW6m
/IBnY8v1rPA8/LnY83BbeCz+YMYfYHwTuI3G586l+vAs+B7sKbiN8k+c+9vW
g+/Cb8GxEfBw7Dz8Rzh2G/5JxKfh1+bYZfBA7Gj8stjDxM6Bi/ivMmYj/kdY
R+UmfGdwTrSC74ZHwnXhmbyLu7FH4TPhGcQa6h3Ag7Eb4RrwpfgDsCF6H9gD
+I0YfwPxavAlcGlwblTRPWfOkeH4g3gf3/I+GsON4Ftzf5tacFV4Su5zq8HX
4Xfhfi7Cn4g1IX577m9XW/kET899bzXht+Cjo39vO1YXvlk5T7wGXAu+Kfe7
qg5Xh6fmfpZT4L/Ar8M74H9ofioX4TnBc6YT/CQ8OzjHz4cXwzODc7IMvB3e
An+MzdT71XzEP0v5jn85z/8Dz3+a6hd8Z+5vWwe+Bb+exgTf85HKXdUg/KrE
D4ffgvfBn2F/hnfCW/E/wQ6D34Bfx/8U6ww/Dc8PrllPwMdEfwu9o6X4S1RD
go8NZexRjLk4+Defh38n/l5wjv6I34X7b13wnPoBLoFbFZwj38Od4eYFP8NP
cFe4TcFz7gDcDW5bcE5/p3uBmxScw6/xe39KfpaXsW+In0+8QcE59S3cCW5U
cA7+DPeAOxZcE7dy/iHJ7/4lbAH+fGw9fjuerxLj+zK+O+O7wNXgfnBPuCt8
Clwefg//feWLcg/uRbwbXBuuAH+E/zFWGT4efht/P3Yc3Bsu0fdVTYLLwm8Q
24eVh/vAXYmXaL5xv6dzf6OC5+Ai/IXJ996eeAn+MsYsgk+GX8ZPyXNZz/Q1
1+vI9eoW/M12ET80OXe1xrXFn8exyfjHc/5vjF8DL4Xfxfbh/y05l/bI4L8m
585ObBOcwx8G17R18B9c4/3gmrcK/jX6WsrxF+GM8R8E19BfiD3HscX472Dz
4dHc7wkc268ay9g5+JPwj+P+2sELtKbAJ6iew8Nz17Jj4cmaD5z/B8/bHD7I
9brDHQp+h4H4BsavDL7HGcTnYQsZ+6DWY9Uq4tOIlYenq7ZqfdV30BrM2Bfw
lwXnfHvii+Cp+OWkQeAt8Lrgd1LQt4LXBD/zNN0v1yvDsVaab/y/OdlXzXgA
//7k3O6QeW0YozkavEZobkzknN7Bc0RzbTx8YfCc01o0Xuth8JqkWjJSNSm4
pqi2DlOND66xQ+Hr9E50r7nXrqvgVcFrmLTU+dIgwZrqVLhdtFb5NfPcHsd5
PYPneCv4BuLjiR2iNRC+BS6DXyhYK/SGL8usGaQl+sKXZ9YUmrujuV634Dks
7XGhNFJmDTISvjVZmxymtRqeGn3trGCt1Bn+I7NmkjbqJs2UWSNJW/WQ5sus
sVrA06LvNWlOqlZEa0ddQ7l0Db+3NjinlAu3JGsX5cQwPW+ydkq5teV50e9G
GlO1bQLHewXXONWSqtFaSjWlPnxWtPY5mLmW1IzWUqop+zn3i9y1vZPeAfHD
i54bezJr0yaM/zKzRr2WsQeSY6rZx0ibKSfwd2t+EP8x2b8ouHaO4ljX4Boq
rVgvWttJM0o7N4PrB2toabU2cMNgzSbt2h4+NVjDKrdvStZeynFp69OluYM1
trRrI7hesIaVFisLNw7WZKrVkzivb3DNVi2uGK2FVZNVG8tFa13VSNXS46O1
nGqq5vpVnN8neM6fAp8arZX1jrSWjCHePXhNUW0cKQ0RXCOlza9k/OOZNfpS
eAnWAP9R7O/4/Rn/WmYNtVxrofIw+JzV0jZwc62HmbXq8GhfmnUlXEq8GfEn
pVGld6ThVTtVv+GJ0f4L0rjSvtKEmXuM+xk7MVlrqkY9CF+drDWlcR+Gr02u
fdKAS+AZybVLGuUZ+C64deY14yn4dviMzBpAWnukepTMmnsrPAl+EX8DthYe
IM0ZPGa+tGiyVlFNXgiPS9ayqon3SYslaz/V8LnwiGRtpzXnUXgK3CKz5tws
rapaq3vh2CZ4fLS/JnPvMjT63amH+R6+Jncu75R+4nvekdx7HaG6JG2kHCk4
59rjX8b5ozR31PNp7eBY+YJzvAP+5cTHSPsVHLsYHpJ5zLnwFfA4rf0FX/si
+IrMv9EWvgQeBleA28GXwiOkBQrWPmP5zR7BGmgP93o98a3EX8V2wdfCL+Nv
wTbCA7VWaC3N3OuMVg+XuedZL61NvGXwsRfhsdFjn8N2S5urRwu+5jZpR7h1
8De9LVoTSwvPwXbgD1bPp7Ud3qv5oJ4v+B73wW8mz4V+0mN6/9FjX8rcuzWE
/5m5hztZ2iO699Qx9cIt4W8y98T61tWK7q31zTV3TihaK2kOaa4cW7Q20pzR
XKlRdC+tOaNnqV10L65n0tyczfXnZ56jepZ6Rfeieia9i4ZF9/56J3q2xkX3
1npG5faJRWs75bjefZWie1F9A73rikVrO73zPvzWhuTeU2tYn9w5ptxSTeyV
OyeUC6qBV0XPcc3t9dh10d9c3/qVzLWkJeOLBdeUvrlzUrmoNXhKdM4oV7Zh
vaRHkntjrak9pd+Se2Otmd2lr5J7fa15/XLnsHJXNfdm4vdIAxGbgA3A3874
jZlzdiC8E96cec68wvn9k3tLaYaNqrXJWkmaYb3WumQtJA2yGe6X3HtrDV2p
tSZZy0mDLFftTdZu6hEX4z+uHNPaxLFH8B9O1prnKV+TNYDWftWsx5SLydq0
o2pIcg3Q3FeNuzq6hql26ZlWq/Yna11pohL4YO69iYf0fhj/EvHVmed0Kfxq
8rfSnB4XPcc0tzSmP7xF+iBzjVirmpOsTaXZBhF/PfnbqqbcCd8V3Ts/Qvz6
ZA0m7aUaqG9xVPRar28yC//q3HNNa8Bg+I3kb68aNDl6Dmru6Rv1zl1zVGu0
Rj8O30i8ZeYe9Fl4QbTWVg9forUJuz9zD92Z+EJ4UeY9D2m55lwvL1jTTYiu
yarFeuZ31ftF9yLaQ3gbf390LyUNvAt/d/TehzTzPvw3o/c+pIn34O+N3kuR
Jv8A/8No7fv/Hhn/k+i9OPWw6q3q6FjmHquc5lZ0r/YOVke9ZvRe3g+Z96La
Rmsr7UnVhJtG7wWqBmkv78zosdrTU69WJfpa6tkqwTWiezv9pnq1k/QMmXs2
9YLV4Q8y94QnwSdH94o6dpx6meheTuccCR9V9FolTTE1WUNKO+ob/Yuxn0fn
snr0L/H/HT0X1NPfG70npb0o1bh1+Ouj9zrUA2xQfkbvFUhz6lvehy3I/E03
Kr+j93LUQ9wYraGlnfWNu8IrkvcmpZm1N6M9Fu2taD9AuTIid61Qzkjb3x69
dkjj3xStqaWlVcM+hT+LnrvaM9mEvzl670oaba3qV/TejnqIrfjbovdC1BO+
hr8jeu9LPenb/PZXWrOCa8Tc6Dmsuasebovqa/TemTTkCq2V0Xs30rjL8JdH
7x1J862RtojeG9KavAp/dfRekDTinOgeUb2h3uFK1dPovSH1KOpVV+Sey+pZ
/weUpcHG
           "]]}]}, {}, {}, {}, {}}, {
       GrayLevel[0], 
       Opacity[0.4], 
       LineBox[CompressedData["
1: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
        "]]}}], 
    AspectRatio -> 1, Frame -> {True, True, True, True}, FrameLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, 
    Method -> {"TransparentPolygonMesh" -> True, "AxesInFront" -> True}, 
    PlotRange -> NCache[{{
        Rational[-1, 2], 2}, {
        Rational[-1, 2], 2}}, {{-0.5, 2}, {-0.5, 2}}], PlotRangeClipping -> 
    True, PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 18: the portion of the plane y=\\!\\(\\*SubscriptBox[\\(R\\), \
\\(y\\)]\\) in the bijection with the regions bounded by  \
\\!\\(\\*FormBox[\\n RowBox[{FractionBox[\\\"x\\\", SubscriptBox[\\\"R\\\", \
\\\"x\\\"]], \\\"=\\\", FractionBox[\\\"y\\\", SubscriptBox[\\\"R\\\", \
\\\"y\\\"]]}],\\n TraditionalForm]\\) and \\!\\(\\*FormBox[\\n \
RowBox[{FractionBox[\\\"y\\\", SubscriptBox[\\\"R\\\", \\\"y\\\"]], \
\\\"=\\\", FractionBox[\\\"z\\\", SubscriptBox[\\\"R\\\", \\\"z\\\"]]}],\\n \
TraditionalForm]\\)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547770183210298*^9, 3.547770282161384*^9, {3.547770334778137*^9, 
   3.547770364092128*^9}}]
}, {3}]],

Cell["\<\
After normalizing, the constant-sum surface looks like two (infinitely long) \
benches and an equally tall pillar that all meet at the reference spectrum's \
coordinates.\
\>", "Text",
 CellChangeTimes->{{3.547769771674757*^9, 3.5477698413419113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nineteenthDiagram", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sz", "=", "1"}], ",", 
       RowBox[{"unit", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"subplane", "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"l", ",", "m", ",", "h"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "The", " ", "arguments", " ", "to", " ", "subplane", " ", "are", 
              " ", "the", " ", "indices", " ", "of", " ", "the", " ", 
              "coordinate", " ", "which", " ", "should", " ", "be", " ", 
              "low"}], ",", " ", "medium", ",", " ", 
             RowBox[{"and", " ", "high"}], ",", " ", 
             RowBox[{"x", " ", "being", " ", "1"}], ",", " ", 
             RowBox[{"y", " ", "being", " ", "2"}], ",", " ", 
             RowBox[{
              RowBox[{
              "and", " ", "z", " ", "being", " ", "3.", " ", "So", " ", "the",
                " ", "subplane", " ", "where", " ", 
               RowBox[{"x", "/", "rx"}]}], " ", "<", " ", 
              RowBox[{"y", "/", "ry"}], " ", "<", " ", 
              RowBox[{
               RowBox[{"z", "/", "rz"}], " ", "would", " ", "be", " ", 
               RowBox[{
                RowBox[{"subplane", "[", 
                 RowBox[{"1", ",", "2", ",", "3"}], "]"}], ".", " ", "The"}], 
               " ", "planes", " ", "are", " ", "drawn", " ", "to", " ", 
               "extend", " ", "to", " ", "sz", " ", 
               RowBox[{"(", 
                RowBox[{"for", " ", "size"}], ")"}], " ", "on", " ", "any", 
               " ", "coordinate", " ", "which", " ", "would", " ", 
               "otherwise", " ", "be", " ", 
               RowBox[{"infinity", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ul", "=", 
                RowBox[{"unit", "[", 
                 RowBox[{"[", "l", "]"}], "]"}]}], ",", 
               RowBox[{"um", "=", 
                RowBox[{"unit", "[", 
                 RowBox[{"[", "m", "]"}], "]"}]}], ",", 
               RowBox[{"uh", "=", 
                RowBox[{"unit", "[", 
                 RowBox[{"[", "h", "]"}], "]"}]}], ",", 
               RowBox[{"rl", "=", 
                RowBox[{"refPt3D", "[", 
                 RowBox[{"[", "l", "]"}], "]"}]}], ",", 
               RowBox[{"rm", "=", 
                RowBox[{"refPt3D", "[", 
                 RowBox[{"[", "m", "]"}], "]"}]}], ",", 
               RowBox[{"rh", "=", 
                RowBox[{"refPt3D", "[", 
                 RowBox[{"[", "h", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"0", "ul"}], "  ", "+", 
                 RowBox[{"rm", " ", "um"}], "+", 
                 RowBox[{"rh", " ", "uh"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"rl", " ", "ul"}], "+", 
                 RowBox[{"rm", " ", "um"}], "+", 
                 RowBox[{"rh", " ", "uh"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"rl", " ", "ul"}], "+", 
                 RowBox[{"rm", " ", "um"}], "+", " ", 
                 RowBox[{"sz", " ", "uh"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"0", " ", "ul"}], "  ", "+", 
                 RowBox[{"rm", " ", "um"}], "+", " ", 
                 RowBox[{"sz", " ", "uh"}]}]}], "}"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"subplane", "[", 
            RowBox[{"2", ",", "1", ",", "3"}], "]"}], ",", 
           RowBox[{"subplane", "[", 
            RowBox[{"3", ",", "1", ",", "2"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"subplane", "[", 
            RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
           RowBox[{"subplane", "[", 
            RowBox[{"3", ",", "2", ",", "1"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"subplane", "[", 
            RowBox[{"1", ",", "3", ",", "2"}], "]"}], ",", 
           RowBox[{"subplane", "[", 
            RowBox[{"2", ",", "3", ",", "1"}], "]"}], ",", "Green", ",", 
           RowBox[{"Sphere", "[", 
            RowBox[{"refPt3D", ",", 
             RowBox[{"sz", "/", "40"}]}], "]"}], ",", 
           RowBox[{"Darker", "[", 
            RowBox[{"Darker", "[", "Green", "]"}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{"\"\<Reference spectrum\>\"", ",", "refPt3D", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.2"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
           "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547759116929841*^9, 3.5477591684461117`*^9}, {
   3.547759215738859*^9, 3.547759291428546*^9}, {3.5477593713369913`*^9, 
   3.547759431599859*^9}, {3.5477594777278967`*^9, 3.547759507399211*^9}, {
   3.54776775356702*^9, 3.54776775634363*^9}, {3.547767916204207*^9, 
   3.5477679163961477`*^9}, {3.547767978358672*^9, 3.5477684403898077`*^9}, {
   3.547768506008306*^9, 3.547768657498287*^9}, {3.547768786631839*^9, 
   3.547768799073225*^9}, {3.5477690064444036`*^9, 3.5477691443255863`*^9}, {
   3.547769266676303*^9, 3.547769518664839*^9}, {3.547769578705164*^9, 
   3.547769582907537*^9}, 3.5477697470637827`*^9}],

Cell[BoxData[
 RowBox[{"nineteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "nineteenthDiagram", ",", " ", 
    "\"\<Figure 19: The constant-sum surface after normalizing by median \
quotient\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547768923534387*^9, 3.54776895368699*^9}, {
   3.547769203810754*^9, 3.547769225178006*^9}, {3.547769631052779*^9, 
   3.54776969833151*^9}, 3.5477697470639267`*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     Polygon3DBox[{{0.32057466267114804`, 0, 0.1800856247610254}, {
       0.32057466267114804`, 0.4640601923965809, 0.1800856247610254}, {
       0.32057466267114804`, 0.4640601923965809, 1}, {
       0.32057466267114804`, 0, 1}}], 
     Polygon3DBox[{{0.32057466267114804`, 0.4640601923965809, 0}, {
       0.32057466267114804`, 0.4640601923965809, 0.1800856247610254}, {
       0.32057466267114804`, 1, 0.1800856247610254}, {
       0.32057466267114804`, 1, 0}}], 
     Polygon3DBox[{{0, 0.4640601923965809, 0.1800856247610254}, {
       0.32057466267114804`, 0.4640601923965809, 0.1800856247610254}, {
       0.32057466267114804`, 0.4640601923965809, 1}, {
       0, 0.4640601923965809, 1}}], 
     Polygon3DBox[{{0.32057466267114804`, 0.4640601923965809, 0}, {
       0.32057466267114804`, 0.4640601923965809, 0.1800856247610254}, {
       1, 0.4640601923965809, 0.1800856247610254}, {
       1, 0.4640601923965809, 0}}], 
     Polygon3DBox[{{0, 0.4640601923965809, 0.1800856247610254}, {
       0.32057466267114804`, 0.4640601923965809, 0.1800856247610254}, {
       0.32057466267114804`, 1, 0.1800856247610254}, {
       0, 1, 0.1800856247610254}}], 
     Polygon3DBox[{{0.32057466267114804`, 0, 0.1800856247610254}, {
       0.32057466267114804`, 0.4640601923965809, 0.1800856247610254}, {
       1, 0.4640601923965809, 0.1800856247610254}, {
       1, 0, 0.1800856247610254}}], {
      RGBColor[0, 1, 0], 
      SphereBox[{0.32057466267114804`, 0.4640601923965809, 
       0.1800856247610254}, 
       NCache[
        Rational[1, 40], 0.025]]}, {
      RGBColor[0, 
       NCache[
        Rational[4, 9], 0.4444444444444444], 0], 
      Text3DBox[
      "\"Reference spectrum\"", {0.32057466267114804`, 0.4640601923965809, 
       0.1800856247610254}, {-1.2, 0}]}}, Axes -> True, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, 
    ImageSize -> {360., 407.3637810058437}, 
    ViewPoint -> {2.8754161647599252`, 1.6770623694847404`, 
     0.6078187956089801}, 
    ViewVertical -> {0.37850637151481503`, 0.21752111731703974`, 
     0.8996763252658344}],
   "\"Figure 19: The constant-sum surface after normalizing by median \
quotient\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547769226630786*^9, 3.5477692831240263`*^9, 3.547769332568666*^9, {
   3.547769367034998*^9, 3.547769418516055*^9}, {3.547769469590366*^9, 
   3.547769522919026*^9}, 3.547769584480393*^9, 3.5477697023145514`*^9, 
   3.547769747064049*^9}]
}, {3}]],

Cell[CellGroupData[{

Cell["Proof of Bijection", "Subsubsubsection",
 CellChangeTimes->{{3.547759075265925*^9, 3.547759077903269*^9}}],

Cell["\<\
This bijection between the sub-regions and the rectangular sections of each \
plane was not obvious to me, so I include a proof.\
\>", "Text",
 CellChangeTimes->{{3.547803139116425*^9, 3.547803196259989*^9}}],

Cell[TextData[{
 "First, note that the lower bound of ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " comes because the transformed coordinates are the ratio of positive \
numbers. For example ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "x"], "=", 
    FractionBox["x", 
     SubscriptBox["R", "x"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", 
    SubscriptBox["R", "x"], "<", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "x", "<", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547803213892659*^9, 3.547803298326105*^9}, {
  3.547803347645656*^9, 3.547803420856968*^9}, {3.54780435780088*^9, 
  3.5478043921812057`*^9}}],

Cell[TextData[{
 "Next, consider the region of the constant-sum surface with the axes labeled \
",
 Cell[BoxData[
  FormBox["l", TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]]],
 " as above so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["l", 
     SubscriptBox["R", "l"]], "\[LessEqual]", 
    FractionBox["m", 
     SubscriptBox["R", "m"]], "\[LessEqual]", 
    FractionBox["h", 
     SubscriptBox["R", "h"]]}], TraditionalForm]]],
 ". We need to show that there are no transformed points from this region \
outside the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", 
    SubscriptBox["t", "l"], "\[LessEqual]", 
    RowBox[{
     SubscriptBox["R", "l"], "and", " ", "0"}], "<", 
    SubscriptBox["R", "h"], "\[LessEqual]", 
    SubscriptBox["t", "h"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.547803638670003*^9, 3.5478036749734077`*^9}, {
  3.547803706763245*^9, 3.547803981200739*^9}, {3.547807310808811*^9, 
  3.547807349379375*^9}, {3.547808587027934*^9, 3.5478085900346413`*^9}}],

Cell[TextData[{
 "The first step in showing that there are no points outside our region is ",
 " to show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "l"], "\[LessEqual]", 
    SubscriptBox["R", "l"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by contradiction.  Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "l"], ">", 
    SubscriptBox["R", "l"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". By definition, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "l"], "=", 
    RowBox[{"l", " ", 
     FractionBox[
      SubscriptBox["R", "m"], "m"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"l", " ", 
     FractionBox[
      SubscriptBox["R", "m"], "m"]}], ">", 
    SubscriptBox["R", "l"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". This means that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["l", 
     SubscriptBox["R", "l"]], ">", 
    FractionBox["m", 
     SubscriptBox["R", "m"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". But this contradicts our assumption that in this region, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["l", 
     SubscriptBox["R", "l"]], "\[LessEqual]", 
    FractionBox["m", 
     SubscriptBox["R", "m"]]}], TraditionalForm]]],
 ". Thus, all transformed points must lie in the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "l"], "\[LessEqual]", 
    SubscriptBox["R", "l"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547804187609536*^9, 3.5478043310193863`*^9}, {
   3.547806423679194*^9, 3.547806503515985*^9}, 3.547806559183743*^9, {
   3.54780671276964*^9, 3.547806743700746*^9}, 3.547808604617537*^9}],

Cell[TextData[{
 "We can show ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "h"], "\[LessEqual]", 
    SubscriptBox["t", "h"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by contradiction in a similar manner.  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "h"], ">", 
    SubscriptBox["t", "h"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "h"], ">", 
    RowBox[{"h", " ", 
     FractionBox[
      SubscriptBox["R", "m"], "m"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "and so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["m", 
     SubscriptBox["R", "m"]], ">", 
    FractionBox["h", 
     SubscriptBox["R", "h"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "which contradicts our assumption that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["m", 
     SubscriptBox["R", "m"]], "\[LessEqual]", 
    FractionBox["h", 
     SubscriptBox["R", "h"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547806563005307*^9, 3.5478065743139763`*^9}, {
  3.547806623458042*^9, 3.5478066505851603`*^9}, {3.547806778449171*^9, 
  3.547806784090179*^9}, {3.5478068159757757`*^9, 3.547806942468351*^9}, {
  3.547806981847136*^9, 3.547807058395862*^9}}],

Cell[TextData[{
 "The third step for the bijection is to show that for points inside this \
transformed region, each maps to a point on the constant-sum surface. By the \
definition of PQN, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "l"], "=", 
    RowBox[{"l", " ", 
     FractionBox[
      SubscriptBox["R", "m"], "m"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "h"], "=", 
    RowBox[{"h", " ", 
     FractionBox[
      SubscriptBox["R", "m"], "m"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". One can solve these for ",
 Cell[BoxData[
  FormBox["l", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", "=", 
    RowBox[{
     SubscriptBox["t", "l"], 
     FractionBox["m", 
      SubscriptBox["R", "m"]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "=", 
    RowBox[{
     SubscriptBox["t", "h"], 
     FractionBox["m", 
      SubscriptBox["R", "m"]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Then, using the identity for the constant sum surface (note that I am \
using the sum of one here for simplicity - things are the same, just more \
complicated for other sums), ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"l", "+", "m", "+", "h"}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we can get expressions for all three original variables in terms of their \
transformed versions (remembering that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "m"], "=", 
    SubscriptBox["R", "m"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "): ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"l", "=", 
     FractionBox[
      SubscriptBox["t", "l"], 
      RowBox[{
       SubscriptBox["R", "m"], "+", 
       SubscriptBox["t", "l"], "+", 
       SubscriptBox["t", "h"]}]]}], ",", 
    RowBox[{"m", "=", 
     FractionBox[
      SubscriptBox["R", "m"], 
      RowBox[{
       SubscriptBox["R", "m"], "+", 
       SubscriptBox["t", "l"], "+", 
       SubscriptBox["t", "h"]}]]}], ",", " ", 
    RowBox[{"h", "=", 
     FractionBox[
      SubscriptBox["t", "h"], 
      RowBox[{
       SubscriptBox["R", "m"], "+", 
       SubscriptBox["t", "l"], "+", 
       SubscriptBox["t", "h"]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547807371135193*^9, 3.547807426599114*^9}, {
  3.54780747486943*^9, 3.547807477481738*^9}, {3.547807520396463*^9, 
  3.547807525223184*^9}, {3.547807559640007*^9, 3.54780773181984*^9}, {
  3.547807766562091*^9, 3.5478078072609987`*^9}, {3.547807838074*^9, 
  3.547807882456439*^9}, {3.547807929969142*^9, 3.547808025036333*^9}, {
  3.5478080751150703`*^9, 3.5478082293215027`*^9}, {3.547808932476686*^9, 
  3.5478089370901127`*^9}, {3.5478098430170507`*^9, 3.547809843789384*^9}}],

Cell[TextData[{
 "These original points all lie in the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["l", 
     SubscriptBox["R", "l"]], "\[LessEqual]", 
    FractionBox["m", 
     SubscriptBox["R", "m"]], "\[LessEqual]", 
    FractionBox["h", 
     SubscriptBox["R", "h"]]}], TraditionalForm]]],
 ". Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", 
    SubscriptBox["t", "l"], "\[LessEqual]", 
    SubscriptBox["R", "l"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", 
    RowBox[{
     SubscriptBox["t", "l"], 
     FractionBox["m", 
      SubscriptBox["R", "m"]]}], "\[LessEqual]", 
    RowBox[{
     SubscriptBox["R", "l"], 
     FractionBox["m", 
      SubscriptBox["R", "m"]]}]}], TraditionalForm]]],
 ". Thus, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "l", "\[LessEqual]", 
    RowBox[{
     SubscriptBox["R", "l"], 
     FractionBox["m", 
      SubscriptBox["R", "m"]]}]}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", 
    FractionBox["l", 
     SubscriptBox["R", "l"]], "\[LessEqual]", 
    FractionBox["m", 
     SubscriptBox["R", "m"]]}], TraditionalForm]]],
 ". So the ",
 Cell[BoxData[
  FormBox["l", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " corresponding to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "l"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is in the right region. Similarly for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "h"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0", "<", 
     SubscriptBox["R", "h"], "\[LessEqual]", 
     SubscriptBox["t", "h"]}], "\[Implies]", 
    RowBox[{
     RowBox[{"0", "<", 
      RowBox[{
       SubscriptBox["R", "h"], 
       FractionBox["m", 
        SubscriptBox["R", "m"]]}], "\[LessEqual]", 
      RowBox[{
       SubscriptBox["t", "h"], 
       FractionBox["m", 
        SubscriptBox["R", "m"]]}]}], "\[Implies]", 
     RowBox[{
      RowBox[{"0", "<", 
       RowBox[{
        SubscriptBox["R", "h"], 
        FractionBox["m", 
         SubscriptBox["R", "m"]]}], "\[LessEqual]", "h"}], "\[Implies]", 
      RowBox[{"0", "<", 
       FractionBox["m", 
        SubscriptBox["R", "m"]], "\[LessEqual]", 
       FractionBox["h", 
        SubscriptBox["R", "h"]]}]}]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.5478083199330187`*^9, 3.547808407978963*^9}, {
  3.54780843993799*^9, 3.5478084842452173`*^9}, {3.5478087095813217`*^9, 
  3.5478088631778*^9}, {3.547809037701524*^9, 3.5478091278678923`*^9}, {
  3.547809727164978*^9, 3.5478098297755613`*^9}}],

Cell[TextData[{
 "The final step for the bijection is to show that no distinct points are \
transformed to the same point. Denote two points as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["l", "1"], ",", 
      SubscriptBox["m", "1"], ",", 
      SubscriptBox["h", "1"]}], ")"}], " ", "and", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["l", "2"], ",", 
      SubscriptBox["m", "2"], ",", " ", 
      SubscriptBox["h", "2"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["l", "1"], 
     FractionBox[
      SubscriptBox["R", "m"], 
      SubscriptBox["m", "1"]]}], "=", 
    RowBox[{
     SubscriptBox["t", "l"], "=", " ", 
     RowBox[{
      SubscriptBox["l", "2"], 
      FractionBox[
       SubscriptBox["R", "m"], 
       SubscriptBox["m", "2"]]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Then multiplying by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     SubscriptBox["R", "m"]], ",", " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["l", "1"], 
     SubscriptBox["m", "1"]], "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["t", "l"], 
      SubscriptBox["R", "m"]], "=", " ", 
     FractionBox[
      SubscriptBox["l", "2"], 
      SubscriptBox["m", "2"]]}]}], TraditionalForm]]],
 " and . Similarly ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["h", "1"], 
     SubscriptBox["m", "1"]], "=", 
    FractionBox[
     SubscriptBox["h", "2"], 
     SubscriptBox["m", "2"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Now, replacing the ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " coordinates because of the constant sum, we get:",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["l", "1"], 
     RowBox[{"1", "-", 
      SubscriptBox["h", "1"], "-", 
      SubscriptBox["l", "1"]}]], "=", " ", 
    FractionBox[
     SubscriptBox["l", "2"], 
     RowBox[{"1", "-", 
      SubscriptBox["h", "2"], "-", 
      SubscriptBox["l", "2"]}]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["h", "1"], 
     RowBox[{"1", "-", 
      SubscriptBox["h", "1"], "-", 
      SubscriptBox["l", "1"]}]], "=", " ", 
    FractionBox[
     SubscriptBox["h", "2"], 
     RowBox[{"1", "-", 
      SubscriptBox["h", "2"], "-", 
      SubscriptBox["l", "2"]}]]}], TraditionalForm]]],
 ". Solving the first equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["l", "1"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "1"], "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "2"], "-", "1"}], ")"}]], 
     SubscriptBox["l", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  Substituting this into the second equation, we get: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["h", "1"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "2"], "-", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "1"], "-", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["h", "2"], "-", 
        SubscriptBox["l", "2"]}], ")"}]}]], "=", 
    FractionBox[
     SubscriptBox["h", "2"], 
     RowBox[{"1", "-", 
      SubscriptBox["h", "2"], "-", 
      SubscriptBox["l", "2"]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " which simplifies to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["h", "2"], "-", 
      SubscriptBox["h", "1"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "1"], "-", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["h", "2"], "-", 
        SubscriptBox["l", "2"]}], ")"}]}]], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". This means that if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["h", "1"], "\[NotEqual]", 
     RowBox[{"1", " ", "and", " ", "m"}]}], "=", 
    RowBox[{
     RowBox[{"1", "-", 
      SubscriptBox["h", "2"], "-", 
      SubscriptBox["l", "2"]}], "\[NotEqual]", "0"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "1"], "=", 
    SubscriptBox["h", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". All of the coordinates are restricted to lie in the open interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "1"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so the first condition is true. Thus ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "1"], "=", 
    SubscriptBox["h", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Substituting this back into ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["l", "1"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "1"], "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "2"], "-", "1"}], ")"}]], 
     SubscriptBox["l", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["l", "1"], "=", 
    SubscriptBox["l", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Substituting these values back into the constant sum, we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "1"], "=", 
    SubscriptBox["m", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". This means that the two points are identical, so only identical points \
map to the same transformed point. Thus no distinct points map to the same \
transformed point."
}], "Text",
 CellChangeTimes->{{3.54780983569385*^9, 3.547809837966867*^9}, {
  3.547809877216919*^9, 3.5478098963578157`*^9}, {3.547810835960314*^9, 
  3.547810840114997*^9}, {3.54781187742807*^9, 3.547811887762824*^9}, {
  3.5478120032193403`*^9, 3.54781232956441*^9}, {3.547812383498967*^9, 
  3.547812459269223*^9}, {3.547812504371006*^9, 3.5478125768152113`*^9}, {
  3.547813449882758*^9, 3.5478134509928493`*^9}, {3.547816074973289*^9, 
  3.547816083843227*^9}, {3.5478161648891783`*^9, 3.547816165604632*^9}, {
  3.5478163916770973`*^9, 3.547816467500556*^9}, {3.547816597497518*^9, 
  3.547816610033849*^9}, {3.5478166869415607`*^9, 3.5478169658517447`*^9}, {
  3.547816997652546*^9, 3.54781701550047*^9}, {3.5478171355327253`*^9, 
  3.5478172378150387`*^9}, {3.547817274682768*^9, 3.547817325500659*^9}, {
  3.547817369497499*^9, 3.5478175711957273`*^9}}],

Cell[TextData[{
 "Thus there is a bijection between the half-region ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["l", 
     SubscriptBox["R", "l"]], "\[LessEqual]", 
    FractionBox["m", 
     SubscriptBox["R", "m"]], "\[LessEqual]", 
    FractionBox["h", 
     SubscriptBox["R", "h"]]}], TraditionalForm]]],
 " on the constant-sum plane and the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", 
    SubscriptBox["t", "l"], "\[LessEqual]", 
    RowBox[{
     SubscriptBox["R", "l"], "and", " ", "0"}], "<", 
    SubscriptBox["R", "h"], "\[LessEqual]", 
    SubscriptBox["t", "h"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.547817646915427*^9, 3.547817710976008*^9}}],

Cell["", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["l1", "m1"], "\[Equal]", 
      FractionBox["l2", "m2"]}], "&&", 
     RowBox[{
      FractionBox["h1", "m1"], "\[Equal]", 
      FractionBox["h2", "m2"]}], "&&", 
     RowBox[{
      RowBox[{"h1", "+", "m1", "+", "l1"}], "\[Equal]", "1"}], "&&", 
     RowBox[{"1", "==", 
      RowBox[{"h2", "+", "m2", "+", "l2"}]}], "&&", 
     RowBox[{"h1", ">", "0"}], "&&", 
     RowBox[{"h2", ">", "0"}], " ", "&&", 
     RowBox[{"m1", ">", "0"}], "&&", 
     RowBox[{"m2", ">", "0"}], "&&", 
     RowBox[{"l1", ">", "0"}], "&&", 
     RowBox[{"l2", ">", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "h1", ",", "h2", ",", "m1", ",", "m2"}], 
     "}"}], ",", "Reals"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5478099312010937`*^9, 3.547810083373864*^9}, {
  3.5478119343063*^9, 3.547811994072851*^9}, {3.547812793864277*^9, 
  3.547812911821561*^9}, {3.547812944093707*^9, 3.5478129486337557`*^9}, {
  3.5478130248143167`*^9, 3.547813055538097*^9}, {3.5478131026546497`*^9, 
  3.547813103093836*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "l1", "<", "1"}], "&&", 
  RowBox[{"l1", "\[Equal]", "l2"}], "&&", 
  RowBox[{"h1", ">", "0"}], "&&", 
  RowBox[{
   RowBox[{"h1", "+", "l1"}], "<", "1"}], "&&", 
  RowBox[{"h2", "\[Equal]", 
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h1"}], ")"}], " ", "l2"}], "l1"]}]}], "&&", 
  
  RowBox[{
   RowBox[{"h1", "+", "l1", "+", "m1"}], "\[Equal]", "1"}], "&&", 
  RowBox[{"m2", "\[Equal]", 
   FractionBox[
    RowBox[{"l2", " ", "m1"}], "l1"]}]}]], "Output",
 CellChangeTimes->{
  3.547810017460429*^9, {3.5478100571840363`*^9, 3.5478100840300817`*^9}, 
   3.547812848196076*^9, 3.5478129126486998`*^9, 3.5478129492611303`*^9, 
   3.5478130584152403`*^9, 3.54781310396622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"l1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "h1", "-", "l1"}], ")"}]}], "\[Equal]", 
     RowBox[{"l2", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "h2", "-", "l2"}], ")"}]}]}], ",", 
    RowBox[{"{", "l1", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547816215937049*^9, 3.547816336160446*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"l1", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h1"}], ")"}], " ", "l2"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h2"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547816317261075*^9, 3.547816336775058*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"h1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", "h1", "-", "l1"}], ")"}]}], "\[Equal]", 
   RowBox[{"h2", "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", "h2", "-", "l2"}], ")"}]}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"l1", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h1"}], ")"}], " ", "l2"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h2"}]]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.547816496785277*^9, 3.5478165293149557`*^9}, {
  3.547816630946177*^9, 3.5478166348754168`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["h1", 
   RowBox[{"1", "-", "h1", "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h1"}], ")"}], " ", "l2"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h2"}]]}]], "\[Equal]", 
  FractionBox["h2", 
   RowBox[{"1", "-", "h2", "-", "l2"}]]}]], "Output",
 CellChangeTimes->{{3.54781652169273*^9, 3.547816530784382*^9}, 
   3.547816635493589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox["h1", 
   RowBox[{"1", "-", "h1", "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h1"}], ")"}], " ", "l2"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h2"}]]}]], "]"}]], "Input",
 CellChangeTimes->{{3.547816640598476*^9, 3.547816655905794*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"h1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h2"}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h1"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h2", "+", "l2"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.547816656535184*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox["h1", 
    RowBox[{"1", "-", "h1", "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h1"}], ")"}], " ", "l2"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "h2"}]]}]], "\[Equal]", 
   FractionBox["h2", 
    RowBox[{"1", "-", "h2", "-", "l2"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547816865660166*^9, 3.547816868784031*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"h1", "-", "h2"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h1"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h2", "+", "l2"}], ")"}]}]], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.5478168695664177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"l1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "h1", "-", "l1"}], ")"}]}], "\[Equal]", 
    RowBox[{"l2", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "h2", "-", "l2"}], ")"}]}]}], "&&", 
   RowBox[{
    RowBox[{"h1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "h1", "-", "l1"}], ")"}]}], "\[Equal]", 
    RowBox[{"h2", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "h2", "-", "l2"}], ")"}]}]}], "&&", 
   RowBox[{"l1", ">", "0"}], "&&", 
   RowBox[{"l2", ">", "0"}], "&&", 
   RowBox[{"h1", ">", "0"}], "&&", 
   RowBox[{"h2", ">", "0"}], "&&", 
   RowBox[{
    RowBox[{"l1", "+", "h1"}], "<", "1"}], "&&", 
   RowBox[{
    RowBox[{"l2", "+", "h2"}], "<", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547813166437408*^9, 3.54781325599506*^9}, {
  3.547813305840879*^9, 3.547813324472266*^9}, {3.547813356539721*^9, 
  3.547813386918535*^9}, {3.547813419724894*^9, 3.547813429781968*^9}, {
  3.547816132730434*^9, 3.547816145840777*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "l1", "<", "1"}], "&&", 
  RowBox[{"0", "<", "h2", "<", 
   RowBox[{"1", "-", "l1"}]}], "&&", 
  RowBox[{"l2", "\[Equal]", "l1"}], "&&", 
  RowBox[{"h1", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "l1"}], "+", 
     RowBox[{"h2", " ", "l1"}], "+", "l2"}], "l2"]}]}]], "Output",
 CellChangeTimes->{
  3.5478132152344646`*^9, {3.547813248598453*^9, 3.54781325638696*^9}, 
   3.547813325228743*^9, {3.54781335912853*^9, 3.547813387558756*^9}, 
   3.5478134335057707`*^9, {3.547816134008524*^9, 3.547816146499763*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0", "<", "rm", "<", "1"}], "&&", 
     RowBox[{"Exists", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"l", ",", "h", ",", "m"}], "}"}], ",", 
       RowBox[{
        RowBox[{"l", ">", "0"}], "&&", 
        RowBox[{"h", ">", "0"}], " ", "&&", 
        RowBox[{"m", ">", "0"}], "&&", 
        RowBox[{"l", "\[Equal]", 
         RowBox[{"tl", "/", 
          RowBox[{"(", 
           RowBox[{"rm", "+", "tl", "+", "th"}], ")"}]}]}], "&&", 
        RowBox[{"m", "\[Equal]", 
         RowBox[{"rm", "/", 
          RowBox[{"(", 
           RowBox[{"rm", "+", "tl", "+", "th"}], ")"}]}]}], "&&", 
        RowBox[{"h", "\[Equal]", 
         RowBox[{"th", "/", 
          RowBox[{"(", 
           RowBox[{"rm", "+", "tl", "+", "th"}], ")"}]}]}]}]}], "]"}]}], ",", 
    
    RowBox[{"{", 
     RowBox[{"tl", ",", "th", ",", "rm"}], "}"}], ",", "Reals"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5478101262963457`*^9, 3.547810159263625*^9}, {
  3.547810289232617*^9, 3.547810496021864*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tl", ">", "0"}], "&&", 
  RowBox[{"th", ">", "0"}], "&&", 
  RowBox[{"0", "<", "rm", "<", "1"}]}]], "Output",
 CellChangeTimes->{
  3.547810159805735*^9, 3.547810301636365*^9, 3.547810353002967*^9, {
   3.547810397659602*^9, 3.547810428470922*^9}, 3.547810462437759*^9, 
   3.547810497336832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"Exists", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}], "&&", 
       RowBox[{"k", "==", 
        RowBox[{"x", "/", "z"}]}], "&&", 
       RowBox[{"0", "<", "x", "<", "1"}], "&&", 
       RowBox[{"0", "<", "y", "<", "1"}], "&&", 
       RowBox[{"0", "<", "z", "<", "1"}]}]}], "]"}], ",", 
    RowBox[{"{", "k", "}"}], ",", "Reals"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "what", " ", "k"}], ",", " ", 
    RowBox[{"that", " ", "is"}], ",", " ", 
    RowBox[{"transformed", " ", "x"}], ",", " ", 
    RowBox[{
    "can", " ", "we", " ", "find", " ", "an", " ", "x", " ", "that", " ", 
     "transforms", " ", "thereto"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547576119535462*^9, 3.547576153160089*^9}, {
  3.547576343421359*^9, 3.5475763856179857`*^9}, {3.547576433732204*^9, 
  3.547576486485551*^9}, {3.547576565651147*^9, 3.5475765947701073`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "z", "<", "1"}], "&&", 
  RowBox[{"0", "<", "y", "<", 
   RowBox[{"1", "-", "z"}]}], "&&", 
  RowBox[{"k", "\[Equal]", 
   FractionBox[
    RowBox[{"1", "-", "y", "-", "z"}], "z"]}]}]], "Output",
 CellChangeTimes->{{3.547576372808237*^9, 3.5475763882079763`*^9}, {
  3.547576457474654*^9, 3.547576487447524*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"tx", "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"ry", "/", "rx"}], ")"}], " ", 
       RowBox[{"x", "/", "y"}]}]}], "&&", 
     RowBox[{"ty", "\[Equal]", "1"}], "&&", 
     RowBox[{"tz", "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"ry", "/", "rz"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"z", "/", "y"}], ")"}]}]}], "&&", 
     RowBox[{"0", "<", "x"}], "&&", 
     RowBox[{"0", "<", "y"}], "&&", 
     RowBox[{"0", "<", "z"}], "&&", 
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}], "&&", 
     RowBox[{"0", "<", "rx", "<", "1"}], "&&", 
     RowBox[{"0", "<", "ry", "<", "1"}], "&&", 
     RowBox[{"0", "<", "rz", "<", "1"}], "&&", 
     RowBox[{
      RowBox[{"x", "/", "rx"}], "<", 
      RowBox[{"y", "/", "ry"}], "<", 
      RowBox[{"z", "/", "rz"}]}], "&&", 
     RowBox[{"tz", "<=", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"tx", ",", "ty", ",", "tz"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547728957491777*^9, 3.54772911327071*^9}, {
   3.5477291458759193`*^9, 3.5477291502240868`*^9}, {3.547729235512158*^9, 
   3.5477292819551697`*^9}, 3.547729627718837*^9, {3.547729712863606*^9, 
   3.547729746188396*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.547729119575173*^9, 3.54772915165825*^9, 3.547729252675044*^9, 
   3.547729282787725*^9, {3.547729720848741*^9, 3.547729747281199*^9}}]
}, Open  ]],

Cell[BoxData["Solve"], "Input",
 CellChangeTimes->{{3.5477296416388283`*^9, 3.547729642411476*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "y", "-", "z"}], ")"}], "/", "z"}], ",", 
     RowBox[{
      RowBox[{"0", "<", "z", "<", "1"}], "&&", 
      RowBox[{"0", "<", "y", "<", 
       RowBox[{"1", "-", "z"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.54757667546703*^9, 3.547576690390099*^9}, {
  3.5475767212071457`*^9, 3.547576760031488*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Maximize", "::", "\<\"natt\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The maximum is not attained \
at any point satisfying the given constraints. \\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Maximize\\\", ButtonNote -> \
\\\"Maximize::natt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5475767509795837`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Infinity]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", "Indeterminate"}], ",", 
     RowBox[{"z", "\[Rule]", "Indeterminate"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.547576751564891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"0", "<=", 
       RowBox[{"x", "+", "y"}], "<", "1"}], ",", 
      RowBox[{"x", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x", "-", "y"}], ")"}]}], ",", 
      RowBox[{"-", "1"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.547575680388238*^9, 3.547575680854023*^9}, {
  3.547575728569042*^9, 3.547575760209202*^9}, {3.547575791672575*^9, 
  3.547575933976645*^9}, {3.547576184902259*^9, 3.54757623501056*^9}, {
  3.547576270517241*^9, 3.547576277446876*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {
      FractionBox["1", "9"], 
      FractionBox["1", "8"], 
      FractionBox["1", "7"], 
      FractionBox["1", "6"], 
      FractionBox["1", "5"], 
      FractionBox["1", "4"], 
      FractionBox["1", "3"], 
      FractionBox["1", "2"], "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["1", "4"], 
      FractionBox["2", "7"], 
      FractionBox["1", "3"], 
      FractionBox["2", "5"], 
      FractionBox["1", "2"], 
      FractionBox["2", "3"], "1", "2", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["3", "7"], 
      FractionBox["1", "2"], 
      FractionBox["3", "5"], 
      FractionBox["3", "4"], "1", 
      FractionBox["3", "2"], "3", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["2", "3"], 
      FractionBox["4", "5"], "1", 
      FractionBox["4", "3"], "2", "4", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"1", 
      FractionBox["5", "4"], 
      FractionBox["5", "3"], 
      FractionBox["5", "2"], "5", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["3", "2"], "2", "3", "6", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["7", "3"], 
      FractionBox["7", "2"], "7", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"4", "8", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"9", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.547575815519432*^9, {3.547575862217886*^9, 3.547575934702219*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", "<=", 
      RowBox[{"x", "+", "y"}], "<", "1"}], ",", 
     RowBox[{"x", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x", "-", "y"}], ")"}]}], ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547575680388238*^9, 3.547575680854023*^9}, {
   3.547575728569042*^9, 3.547575760209202*^9}, {3.547575791672575*^9, 
   3.54757597312112*^9}, 3.547576012281764*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
3+T83fO3WWeldoG3E3kud7K7ZPFGjkOe25/gURY3kPn1Mr9b5hdjHxko9HBR
0ktUByryU+60fqGXUsW6LkjzH+t3hlgXeei9w74OE3Uyr4lfHl/C+wJPnDdu
h4M3bs9jXnI7FuuQ23voN7eLME5uP4AX8FRd8KPFJ8HrG5FHK0L+LN7DebGf
ulH8EO+ttMhT5yW/Eu95r9DPOWieY17MFnVf72n9YF7FiHp+d7LngZ9v07rJ
5VEepk3rTpYvtVkfNwNvmZ6/F/2l+UHC94akTR7c84luHoLPpGm1erT9TfM7
zjYYXGxowWTd/Ly0o0t51/P6uFDlIffd602I183PseMq3azj+lBn5ywZ3mRL
YLVYHb6uRXCOglX095/MaPJTkR7HH+rwFl0H3xrladfts+hHz7hJDbfP1PB+
mRmHEidF6OIP+36IKPr9TX3cIH7jrscbq1zVxQESTUutswfo53mhd+e+KWhN
U74vs9x0ssJ+wmeuv/xHUuus+f/jrVypO84S7u/as0qT90nK+y0Lc/cIukp4
sdvfFrbvfKxcqPvP3MxkbT4/rLe6xK7QLD1QvXf8lBRtPu8tfj95aZ94xX9B
M0vmKI3/XjsbtX0z6KGyrsWamrvDNHtyYEifFXkLxiodLs94O+OthtumRnke
MtmV0Y8neX++9ZDwXza+c5oy6aGCX81u717J0e6EgCu7yn3U7Jkp9Zp03/lN
hGJL6fFgSAON5//2Nny1a1CYktP91aX9QzWeb7RY/niQkqI0r1FlTZnd/xG+
u9by4+sSk5X58x6f/HPAds2OCt6Z8eZIulLL/eqfpwpvIHzy/MZ++YanKtN9
T189991xjbd+l1dvLpeitK7gus6/geZX9nq8MXjTrUSl3MOnZxa3v0l4zTUF
GyyKi1V+W7Ytx7upmr92ZVuWz/hXghLfclFmi1qa/3JhVj8nQ1CMUrjJXzct
vpq/c3V29SmfGsQp/W9P21nmsIY/n6AU79spWsEv8DO7MstsS4hRzj8bUCFn
Yw3fKHi4p3Srn1jU9bw2/7v0C93cv1K0kive++FPURpeIXRBwbeT7yrVZh2o
mVxCs7ssRwoUfH/htrJggFtbr85aXsP4fY3Qh2+vK/bP+6+/narlKQrVGFan
aEO9fp63+ENGlI/+PMv4ZVuNF3rqz7PArppTo+S7Rac1vV1z7abiswfIz2tY
d0ec/1LPYJ23fPgs15E0jf81j1r9u2mE3p+FXW69luQ6eV0k4R5+mwcW+UPv
DwbOHvzxSzsW+F+Ppk5dOThMlw8ybSuey99+Q6c3MJ4t9U8YI+ZouEc1z93l
SsnrWpOavfi1SCNNz0Bf79s7sXWJ2Zpd5HfNuXJd1/O6PNH73N3crpdLUnxn
jUsqP/yktu5s0Wt/z/FYaVze7vq0wBXCm0RfeRfwLE65tGfaqEs5NT2TWeFp
/iNZ/D9Ze7j5l/zXjpwTfaDGPeWnnwbM3VhFW+9BCfVmLYy4o/zc6s7ru4u1
+XbCzaXA5HWhirVFr24lcmk8TBHzOVipv/plvtkDtHzZ5P9eKrHtnypb/2t7
vn70fMLDrrQ5mbNiurJl09Nz16vvILx87/Ufz9VJVrbMHBi1M1DbBz/4WMIK
ZaYquR9889x37+Ev9EbOMZ/vPlGGl/f9Je3yacKT5wz6e71bohK/7Mji1DLn
CR/ht8792oEU5crtq4POPNXwhGj/mWMXJCslZ7bt9Xayxmfbsi6z9r6LVzot
2RvTObcW13qR6hvxanCScn6J972/c2p43cgD1dsoicq/sx7X2X9Zm/+95uWY
MKDEY2VH14qP6rhq+ucv5VPtZs/jlROVDw336qzp/8lH45LCguOUAX+Wf7dp
mTbP35QPP1NoY6xS7OSGM0MjvpjnE0avTpz0SGl8a+KiASW0fIQyo3CR1l1i
lPIdfwoY3FPzx6+Xah5TuvMDZUXiHO8NHTU909m2J0T5ZFcO/7rwWMRv2nwo
Zbw2MD4jQqm8NyzyYS9t/y1w0DBx9dZ7yijPnGur/K3hHTwX1dzbKVIZMWv1
zB7btPnjU2HEjRmHbylOxZtXnnBFW485xod1v/nyjrL9cb6Kruc1PLFw/osZ
y28p74e+GXolSlunsX1+fDyv+nUl36Um3WLba+uu/+9l6p2vE6oU6dqpxs2X
2vysmnKy3/J515QOMz83fJtLm5/IY96pmJz67LC2vzdu88f9U97pOvu2Ys4+
jfsG6+sfkN/8858SA853DCQc/sz+3Ws6nLqj7V93Y+feG104TRcnX1p2yLoV
6fp6CdjnkaH/Bj8qvYTkkd/N5ze08uia2j7btHfV4R99n0r9nZye3WfOfa/Z
LRcUzwslUvV1FzOr+9y4PC1VF6+G/zDrQqOKbwedIRz6K/LYWV//udo+EjV6
6O7dl+R1GoXqdCmTu7i2v+Rf+7lz7f/09RtdfSu4PfdK0e1TsLdHXmhjuHhT
W790fsCpS652WzR7IMXun7H69yRpvUfw7w/LWEtqerLOlo/T0nwSdf7I1c9R
/15O0teBIC6wbuLtG9+80deH5Ol3rlyb/tq+Nnpg2ZcV6jyW1o1MiXb617ZV
swN/sDzd7J0vQecHXeixumfdf/X1JIj75M+YO2nOTE2ezrf6znO+m6rZMxcm
xF+tEC+vPzHvfZ6+pp5m509IM9ePOaWvS+nkX86eu0ucbl9G3O2fT9f3Xiqk
yWN/r78uuP2zCZq9tKTOkPDB/8jrWLy6fDKcPqnZsfvD93+7faS+vuV8y+7N
3Fwe6eKZiHt+mDh+x6+rNXnIlS530zrGoOnDwNpDu9ZZ9kBaD/Nk6zXPChU0
fbgo4nzHVq2idHFC9z3fno/4LVoXb6Q8dKPlhXsu1dfPRJvHGjq31PTqoYMT
PnR/Ja+rOb7jw+93B2l69WC+xMiymyJ1cbz9uy48Tr6mr7fBPJhf3vnUztv6
Opym1r+7zZmp6edPo3+1OPYzWX3OkuL7bIU2avo50aN4qY8f9HU734w5VDGt
4h2dnYZ1Mm148fFv3PV22rLjLaI/ntb2hbov1v3w90Z5nU/n8PSZC+9p+8Kx
epHLlnkF6+p/oqYedA7+O0SHH45Zt7Z38g2dHQj9EtnN2bihoyZP5938HuWe
8kyzD13cYhYOLXhRV0dU+kWLh8/OXtbhUbN+P+Pjc1FnN0LPRid0n504SY8f
3WvrcyVKawd52FXHM7oMbq3tR7+X/Otf9+1JSqpyvuyJeUcIL7k9cH2Fs0nS
upphRxtPdGmu6fkN04reuTzvsTI50jM0YvlFwrtnnEwtf1tfVwN+N2cu6OjV
V9PPLTuGKG3Hxitv91kS3s3R9Dn0ZHp3W8vRnhqe/P2gqt9Ex+v0fOyHNhGO
+T1unfnYl/Yw5t9PjXulvWyq6eE/7cej87R7pNSqO/xjrwqaPYb1s2jW1py3
gjX82qgmO9r8/ECxnPrNs0Ihfb3x3QH/9fHx0fC6ay4dGfn9faVi75K1RyzQ
1wn3uBq9a+wIDY/YX9b5eXK44hUaa3n3Sl/f++p0jkrXDmj41rrPPf7aHqbc
nZjsNt9PW0fjvLuOu9JCXtehZKTVuflS0xtYvzPuuQ20e2vt7OlZ5OSzIbd0
6x375bcF3344V0dbF1PmzBp5sO41ZUNg7U8Zz/Tr8ejl24PXJWr4Gue8i2++
DNGt38XXJlYc7XlZF8+B3ZAREPHoyMokHR408aeWKwdr8uOqTtgQeSxZ2do4
ZP3UfzV771IZe+ztZvr6B6zDB4dWXyiWqMkXyexRrOOpZJ3d6NNoUtNWrfR1
CJjnPuebFn7zz1HNPt+eb8z7fxKV43tsJfLv+OJcVaz7jfo/6OsQwEvf8O3n
k/dpdh30UZVRQfdj3p7S9kHlt42tr+jrFjD/Q6f+knN08cuEFws6VfLi1ATl
xp53JfvO0+JadD7i3x9aBg0L0fbBB91G9YlM0NlvWC9HL9WLKpii2UWj3NOb
5UrUn88q+0+BuFrpsTq76K8Z+8ZH9YxVxrsfL3LsoD7v3DdoTcv8qzV5o+nm
gksfYnT2TKfhiWM2NIpRZp4Y2Pz2Cn0+t8SiZ+saftLkYQ8s9Th5+ceP2vo9
MGL3H88L6uvThoWHlx/RJkq5Mm/z7mWLNbviVN67Pl089Pdl4f9/Vi/4+4Su
mrzl8JkfizbU16GZpwyc5lX0ruLm5F1u3FnNTmjc0Olyke/u6eyK73r7J79s
GqmLr4KXWwciY/fe09sbUZ8anX1QV8PdTilBM5vc1dkz38R8KuSIRx1ds8Hp
v+qa3mjwZvyNCR31eUbombT+NS6XraPPP64uc6DUl3Eb2BsVnUo/n/pQkw9+
vzptUS99XvL4/JQfXta+qXRteNxv2DbNTsA8+69nz9DoaE1fYZ+Y9uec1mMa
aHpm9fpeES2GhOrsE6zDvlN9t/Vy0uLGx8/v2nmy5Fld/qvS78+q3ovR58Xe
n3sdV6CK/nsrw/ae/WP2+RSlXseK6+avWqTxX/eH+1/efwK8WxVlQOQ4fV4J
76nk9Db7h7fS55vejfwz8I9t+jrJaaPLj907R5tv33tnDEmadFoXJ4cecW1r
HPypgR7/nOdJ2xKzNTxwcL7ZVV88kuZxWlSr3rxID80vWOS7ukxyTn19COzt
Tsnn3h7fo9n/5yIKHlvhqa+vgJ0UFXGhanRxzV/+oen1VnMP6vODsu/ayM7l
ye6rlJ3Xk33nRXbOTnbPpOz8ney7J7Jzc7L7IWXn6WTfAZGdg5Pd6yg7Hyf7
LobsXJvsPkbZeTfZdyJk59Rk9yvKzq/JvpsgO3cmuy9Rdh5N9h0B2fky2f2H
snNnsnv1ZefIZPccys6Xye6Zl50Xk91nKDtHJrt3XXYuTHafoey8mOwectm5
MNk9h7LzYrJ7uWX1wLJ7EWXnxWT3VMvOi8nuV5SdI5Pd2/y1cU5ZHkEW55TF
RWV5xq+N68ryF7K4sSzOLMsvy+oBZH66LD8iizPL4tKyfOvXxoFleRlZnFkW
l5bl2WX1D7L4gyzvI4tLy+LYsrzz18alZfkmWdxbFieX1RvI6j1kcRVZPksW
J5fF1WX596+Nk8vyaLI4vCxuL6u7kNW9yOI/svydLG4vi/NL6w2+Mm4vyxvK
8gKyPIKszkRW/yOLd8nylbI8gizvIKuv+No8gixPKstTyPIasroaWb2TLL4n
y8/K8hqyPIisnuRr8xqyvLAsbyLLs8jqiGT1XbJ4piwfLcuzyPIysvqZr82z
yPLgsjyOLO8jq6eS1bnJ4reyPLss7yPLE8nqiL427yPL78vySrI8lKyuTFbX
J4tLy+oHZHkoWd5KVk/1tXkoWd2CLM8ly4vJ6utk9Y2yeLusLkKWF5Pl0WR1
ZV+b/5LVY8jya1+bp5PVI8nqtf6v8hGyuhRZXFFWbyaLW8rq0GTxSVm9liz+
KauLk+WPvjYfJKv/kcV7ZfV7sjizLA4sixvL6ty+Nl4ty8fJ8muyemZZndXX
xu1leQFZ3F4W55fVB8ryC7K6Vln+Qpb3lMWfZfXksjrnr40Py/I1sryMLI8j
qwf+2vyRLI8si9vL6vNldeNfG2+X5ctk9beyPJqsvlqWp5PV/cry8l+bB5HV
4cvyFLK6ZVleUlbPLMtXyurVZflQWX21rM5Blj+S1QnL8rOyemNZnldWH/5/
Vdchq9eV5all9e2yfLes7l2W75bVacvy7LI6/K+tn5GdA5LVRX9tXYGsPkFW
VyCrQ5DVt39tvcTX1inJzlXJ6s+/tg5EVk8iqw+RnYuRndeQna/52vzm1+ad
ZecaZHVrsjo3WT2b7ByErJ7tf6t/43Vu/1u9EK8Lkp0Xk9UXyc53yOoBZPUD
sjqB/y3/zvPssnNtsnx9rbr3j1YyB9I8X5DfecjuwD3KoS2FZ1c0H6d50uds
9aZ9Tp8iHPKjbn/svaBWkDK0pD3SbjtP8tGLL4b0GXtZedNvd6rRfJVw59wd
qlVeE0ryaCe8+bgZyRuDSR543QJNOlVrfktpcfuM4YgllNopW9tt+KT2EYRD
/vzyihN9991V5r2pMt9uu03yF9qE3sxviyKc7o//79xez9wxSmhJa1GDIZLk
r80rfTXunXaPA50v9t/X5/KoxyRPefzMlh8s38WTPPD/7A/8zdZkpW//X6qZ
rdHUTtMfV7c1BD1Rbp/1y9qXYzSe78+vbDA8VyZ0W1PO7B5L+B91Jv3hE/6K
cLTf4mqu2+7x75TSCTd/sdviSP6XxJ/qOe4NAA75tEe1kgIDM5Uz410CLb4J
JP/6UM/OXt0MpkF5Gj/NzHxM+MvGKyf4rHAx5V5tqW/dnET4gSWv7wS2z084
2t+X0vBowLEiNK8w35+GPs1T5/g+mj/Aqx7dnxhx+izNB+AeHU6Xbd0qhOYD
8N5TPI63anWH3jvwvGNuV9sZaKf3C/y2n7LYatTiv8BXd1328u68NOITeL3X
h5sbDJnEG5339furo+MeCYyX75sYL31PoFtKnqF+B2i8wMM/36nzcfN5Gi/w
+DytXxpm3KTxAj+78Zs3npe1eU51F/m7ZNrHP9TuDVfx7pfuhji+14lxAd+5
bWV6nQUuJowL+ML2o9b7+RUwfYgLyii0Rn9vP8YFu9F6+fvUK6MO0biAX/lr
+0eD4RKNC7jp7vTSFYPDaFzAPWwZKw2G+zQu4E8jYrsZDNr7ovPZ86vs97z8
msYFfPSGf0yGGQXpvfC6EYyL4xgX/IUeTiXyOBuO0LiA9x7rXcbJEEzjou8D
rw6deMRyh8YFfHJ+1xYVzQ9oXMCXWd6VGPlzAo0L+C+rt09w3P+McXH/BeuR
16tgvBzHeDmO8ZKfWLldbKWscWK8wLt+LjU79KW27oBPcflr3o95Y2lcwJ1t
XfPEN0qhcQFvsbdeXsf9HphvvB4G+ofjGC/HMV6OY7wcx3jh71a9c6Ln7sDT
NC66z6/o03UOfY5xAT96qPiPX+phXm+DcXEc4+I4xsVxjIvjGBfHMS74o2//
PZ85xO8cjQv4vJ1tS0XZ0mhcwOtNWbPJy+sd7Tu8zgfj5TjGy3GMl+MYL8cx
Xo5jvBzHeOEXLsnb5a1Tlp7BeIGvOfvHdMd9g5iHvL4I+y/HwQPHwQPHwQPH
wQPHwQPHwQPHwQPHwQP8PL/qLW6GfbFOgd853yfU8b0k2Ce8Dgr8cBz8cBz8
cBz8cBz8cBz8cBz8cBz8cBz8cBz8wG5PNe8q1MArnPgBblW/N4R1weu4YD9w
HHxyHHxyHHxyHHxyHHxyHHxyHHxyHHxyHHxyHHxyHHzCj5hYrcEhx/1F4JPX
p4FPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNP1IVNGfBk
RF6D5jfxejzwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHw
zHHwzOsPYedwHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxz
HPxzHPxzHPzjN6xSgLXv6d2aXZ2zkeJs2KBUObcoIXjkGZr/K4b0KDbBPlvZ
smXBUYPhCumZgpMd94LtUzJatp5foYIWBxh7pen6aNsWZcy78Il3PkSS37e6
cYMOo+0rlfSY3gVWl3xAfnp39zln2psHKlt2tPyji4fmXyAud2HYmHluLslk
71WrvKl2e+s+pa/XTcP1BZp/fbjC5oQR9q3KHOE3fVbAz+6E7a07WHcpPaf/
nhQSUpj8wdknYs8dsZxRXs+q6/Sl/4vflNuhr728NP83drHJvMx4WBnb+36t
5T9cJR6mLRp9zGo8qxzrMdc7TznN/62a28N7mfGU4h/q2e56yH3iofvzFu8N
hqOKT9XHH/c80fI6iAP1F35HKo3XdbBrhyOWs8pvwp/KoHHF5tviUtEcpPNz
m9Te5eFvv6K8Fvan5ud23dzyjdF8STl5tL992OdzNC78+u46OXF1yes0LvzO
7Tnec3WA5ue6hre6YbddVs6cSd00e4D2HSzE4Wb+UbH80/Rn1P+Z3m2nma1X
lfcrwq4kvs9B/uy+ei9qen57RTc/e854+a3BEKZ8M6fFoy/92avjplU9Yrmp
LDo94pv6Xhep3zEpRfP720OUX9elFKxoDqV+HynxarHdFqYsWJ2Uq8zle9R/
/NqEH6HFkZBPaSb8Iy2ek5Hj7F2LPUyZUism3/WOBcifTem+8LDRHKZbdx5/
rqwTuSlUN66iyUu+N1vDleTcuz44feHP/rep9x6j+Y5iFffsXaFx1ehbpZzB
cFup37nBQsOMWzSuMX8s3WE0RyghPn12GwyaP5vxXZ9SBkO4sv9VxzsT3sZR
/48P7/vCZtH8VvR/65lqNy32cF3/Q1O82pf3Dtf1P6xLrR5W431lWu0/wr70
T/u4frhssd9VTp9WHuwMvEb9rJ1S67zFfl/JXX9jhZMnHlE/j2/+4GW23lNq
CX8nifo5LvxjfoPBrgxxxMeCPMg/dV5yeYrddk+nD0vl7NfXaozU6cOBVa4k
2Sz3deNa0C1s0K9X7unGtfD4tZF22wOl0vGqrb70Q590DYmyWR4qK4X/ovmh
4wus+sFqfKDUb7JmkSEonfpfzxFmsz7U6fnT735ZaTQ/0On59gfr5DYYonXj
irB8mmC36f3rsksHOxsMD3XjanfSf+qBXg9049qytH5r6+ZHSoeGA59/6Yfe
ia7/MTPzkRK7++I2g0GLs+GX9/9UHae7NssjXf9zFByyxBis96PNT0LaWY16
PzptitMiY/AjXf//dJ99ber4R7r+52iT45YtLU5JEv7CRep/PWuOuUZzvHJg
6arWjnWK9cvPs2Bfrju+wRC7Te9Hh+cetsviq/cf8cvHO+BcgzJm9zjdeLet
XxNus+j96A51Q0uZ3fX+Y8yln37eeCZON94BH8L62r0fKzdu3Sm8+4t1tKTN
LQ+z9bHyYUytiz4+Oageg5+vgX1i/mHdd9bNCToeFldzeZWZqfejvU42amzd
rPcTJwWse56ZmaDjAb+ch5w/DRtot+n96B0J67ZZfPV+YrPfv024lEfDMd70
Dxv+s9iT1O/POpM/6HU3Vy+7t3beB/bDaeutq7Y0vR/NzweBn21Oliu2tEQd
P2kPbs0wmhN1/CwdmfuSLS1Jx0/kD5ZpRnOSjp8y1W97Wzcn6vjBL+cHv5yf
tbVfjHrSJUnHT8e9I2pZjXr/bumC8MeZ07XzSuTf/frdeotd7y97tv2vh91b
7y/zc0/gLaftOx+7d4qOtw7L/ivgyKNw3p4aI7ravfX+XQPnpvnN1hQdb78/
/O+8LU3vL589mXuK0az3lwd3anrWlpai4w2/nLfAQc1O2Cx6f+2pafMYY3Cq
jrcGZfPVsBpTdbxN/jgiPnO63i/m57nA26Bh+WIzp6fqeNvRduRqi13vF/9w
b/PDzOl6f22ZLd8qiz1Vx9u9ZSM7271TdbyVGxWRx2zV+8XnnfN3snvr/bWf
Vy2eXz9ea4fiDNdcrRZfvV/2y+y7zmb3dB3PuUoUaGe36f2yjq9HG8zuer/M
euvuUZslXcfz3b3NRhmD9X4xP9cGnoPK3vM3BqfreM79qVllqzFdx/OOhWOG
G4P1ftmzYfeMVqPeL/Nup0RnTk/X8Ty14pYVFrveLy535N79zOl6v+xwx74l
etbU+4/dQ1/VDrLMV1I3nq5imKHFt7dXb3wp2PK7ctnxPceiryk+fEhxWxBt
262UdnxXsdpL2reqbbz1ywnLGvU7nh9JX1dPz3F3pTFA2ew2rpxhiZMJ+OEp
+Ws4G7Znf19jnzPlNXb6ZlgbmkcrG++9rOC4xx7jquYZvNnFsESZ6PjeZZAr
yVe7E9F1mXG/ct3Rz/B8ZOcv+9X7VdRPq8n+xPsK7tp6h7/9uNJxWL04S+nn
lId9v2vXU4PhpDLS0b7pOY33Q9Oxw6Nsh5WJSefuBwZq9nlgg3vOToZDylzH
vfQd35P8L4+arTRbg5Tj4j7ht8TPpA6ByjLjMWWlY7wmjYcp68Z7trceVX6d
Nm6l3ZaLcPOA36dUNJ9WvnHwnJKHxvXT9zM3+T7Q6l4wbxudGbPUbD2nTD/c
fJpry0Ttu8JqHcRccZ95Ovm/q+Im/2c1XlO8HPefh6cQD1GTo+eYrZeUn06U
b2CY8YrwV5UL77QaLyupjvuTD76i8b56OvZXg+GC0mbQ0SYG03vip+PwbYes
xvPZ9/NvyCT5qAOTgu224OzvFAR9In7qvy102267qH7PNLc2T8qPb37EclE5
VLd3GUN/N8JL/znxudF8Jfs7NfvciZ9vRn5yCVp2UbfeV5cuHmc031B8r/6d
5bclkF9cZEUlu8UeqkSL++ETiZ99S/ZcsNuuKfdzhSz08npCfKLerLy4X/oF
yc+932uY1XhL6eaY/yWfEW8/dSxxwm67qVzoOnGc17L3hNs+VRxhNYYqVRw8
xGi8Xfg+NtFoDsn+jmrRnCbwVq1FrwybJSz7e6bVcpCfsvtKe1E/vkbMq8LE
T80X+8aarTdongAP3tHTardpdXfQk72OLh5sNd7JnifV4ogf/B6/seMXgyGF
/r75+fwrmyVcyS/ux35CPHjsf/XRZrmldN4y29vQ/xnxhnpFMd6sdQH5Vi3f
zbTbIpTKDry8Nt8eL6r61ma5o3yYGz/05ksDrd/Rg8/PtdvuKKPFOnUiHtyv
n/M0GO7oxjvL/e1Oozlcty8U+6bmdLvtrjJS3IueSONq3e/SZqP5rvKbw+92
fUb4fL8BBR35adHPLP2AcdH3CcX6yqBxGXat+NdotisNxfr6QOPa+PaSm8GQ
5Q/2929uMOWlcdW60X+j0Zzln4r5kJfGdaNBf2+z9a5uH9xce1BXqzFKUd7d
GLoz8C7Z7X1arcxrMEQpEeIe+Fjy6zcPyVxmND9UJoj7ye3kV96ad3WV0Ryt
/OCwe4NSabxOVwadttijlKUzx491fGcBeNubGZXN1gfKI7Fe3tK48Mv1bYp3
xgmLXcMpzuW/+nNmZoxyf/DQV444HvDxresvNpqz/HbxXe9b1P86HQ02i2+M
0rJK+T8ccTyMd0FEwFKjOUbpKOz2RE1+6I0IW9ojpb0DN2lxgLbvve7Z0mKU
v8U8f0nj6rvKMNxui1GstabcdcTxgDt73ihvtqrfGcmabxjXwnhDBbP7IyVI
PPcxjf/2zevD7N6aX4lxtfv217+N5jhlQslu6x1xLeB33jt7mq1xynIRh4mk
/i8y3Gxh3RyrjGs4N9nHJ47Gm/L30LJma9Z7Fd9NSNfkPf8dZPeOV06K7z4k
0ni37Hb2s3vHZX/3LUvfYlwnO958l5kZq1wU6zqfCXj/0LW7LXb1eyUmLW45
YX7DAY7zHRXE9yAuU/+3RjYsbrYmKKt2Hu/lZHhAeL09YdstWXq2jPh+rhYv
yjEw7EXm9ASlv+iPKz339F+/NbEa9fm7cCVXeub0RGX2f9PG7w68Qe27LMi1
2WJPVGrMzJHp4B/4koEbGliNScpqwafGw4BiG6YbgxN17Xu9ujPZGJysVBHj
iqR2BprC61iNKUqLen4dHN9HAJ5ebMQ5myVF/U7cW4prL92+KbfZPVX9bm8i
yQe92nTKZklVgkr/tfZt5hmaDx2vff+j3aa3e5/2Hr3c4puuwxvO8jv9g3W5
ss/i/sflTrtovh3ut37WcuN/Sp6ar5z9fdMIL+rh737Mskk5Lb53o+FUp/fk
2RmHvYx9B/Wl0VEr+x7f/ob2a8gnFY/83fueZu9B/m/35f/6+X0iew/4+l2D
yhvcNLsO+OJ/KlY2zND2d7Sf+UNbw5GFWj0V5J+2Mk/3y+VG7UD+jucvtrlz
85P986d91El/+4Esf7TtUHNXre4Odb81xHeUUkg/l3c3+RsM55QA8X0cbd9H
Hdd/k2s3fVE2kXhAHXKjxNanax1/TXxCvr65zslax18Qn5Bv4bnFafTaj9QO
5DstTm3o+G41+IT8qPYJv1njNfsQ+OmuEfsG3M1NPAD/88Ce0oYNml2E9htN
bB/g5+dKfPI6aqy7Cu2j9lqNF5UtDV9nOs4hAN/zs/tMs/WKkkt8j0mzB1AP
dvWbYkvzH9J4Rp3v1uKnC/1VSLN/gO+vHpGrzT+viGe0M3TLp6x9RKt7hHwZ
V6cKjW9o+ybkZ/1WseSD6DfEM+TL/topyrLTiewlyC/auvizxTeDeIa8ybPm
QC+vPMQb8G3CTylMPPM6fMjz8wLgmcvDLuX3KQFf1bxho65Hb+jsk6br4/+x
Gm8qY8V3rGKIf9StrRs7YHPxPknEP85TvEqusG/ChJfEG/Bpj9//43P4PfGP
dmKatLsQ1+gZ8Q/5dOEPavsd5F2FnvlM/EN+oMiL5SH+IT9F+E0uxCc/9wE+
+TkU8MnviUI7fdeebWW23tL5vwfqn9tnNN/WyX/oUf07szVC5+/jPE7y2yuP
A/O9IJ5RL/eylb/r6oA07Xtyqnxo1L+H7bZ3xDPwTsKvdCK9RPV+Qi9pfhPk
Owi/SbMDIf+z8L9cTOAZ8hkin1WE+OT3XIHPRe2Xpdksd3V4i9+XX7TY7+ns
yaRLFxuZrZHK4bLm0usTtTrG/+zvntoskcovwt54QPZGUsaAyXbbfeWosDc0
uwV1dw9mV63//Gwk7b84F7bgs/HN3LmavQ18dv8tK3xWPKP5CfxP4c++JXm0
v03oqxf0XqgdkQfU/AXg14T/lZfeC/VT+Heafqbvuf3wV6vChTU7FvIZwh9x
o/fCz7tBz/D7wcA/xyH/97rPP1qN0Tq7seS4fx7ZLNFK/xc3nlc0a/ZP7QrX
XBx5uJLCvtJw1AcO+y/ub0ddPd4jzh0eH9V1rMEQT+8L8pX/TGnmaoui9wX5
fbN2mvzXpBH/wPsKP/o1vS/g3YTfZ6D9Be2fEXbmB+KZn5cEz/xcJ3jm96Gh
HfzyOFtyfy+L3TtGJ7/wxZADFrvePked4YRD8bVbt9LmP84dlvOvfswRbwZv
kO/zXa9wRz05eIP8IZEP1fwL4P7CrzTQPASec78S77BnII/2Vwr/y4X0Kr+3
Dbw9WXVzj8U3TofXdZid0/V5n5KRQ+/Y0mKV0ssTigz10/LyOEd4VOiBeJpX
qD+sMvxzTacsPxj8QD6fyLc+p3Yg30r4p0k0T/h5aoyXn+/Guub3yGFcHEf7
/R/kaGbdrOWD0A6/Rw7yE7fl/NMY/FinD3HOzyz8zXTiAXWGD4TfGks8QH77
k9NXHfXbaJ/fU0f1hIeHu5utiTq8dOMml22WJN37wvm5jWP9j9b3CqP+AJ8i
/MrHxD/w0s9WTNpZ7SPJo65v2+93L31ZD8zvu0N/OA75M1f9Xc3uKbp1hHNY
Zf9c0b27zxvih993h37mupV3vDFYyxdAfmDvTV3stid6+fTIlRbfND3O7rtD
f8ruGN3ebkvX93O6a1Rmpt7PGsTutYM8xyGP8y9ruiXEBiXspHwbP18A/c/r
8LGueV035jmvf8a84vXANH9YHSz44fWHGJesvi6/Or54x3frTIXJjjUoL8o8
HLJNZ98ejVwSYx2zV7cPtjnUtmeU7ZRyzFFfM8OZ8Elq/ZJJfL84B9l7Y9X6
KN6+/zn/10U+n9Lhg3P3ezLe6axuv8ir1gu9cXzX2F177pqdD/o56sneJ86f
7eOjxdmeq/Out8hfaOeY6ql1Tbx9k7oOFor4v9bOIbX+h8t/UutkQkVct6jG
T+Vqg6zGcB1vI9V6G97OUbWOhcdvS55YfdDi+0hpXcmeb2fgK61uBHUuIs75
ltZjKfU5dhEnfEHyE0b8arJujlM8fKd3MJgM1P4dtW7BKuJmOUxoZ6Karx8v
7MMMaqeemt/ndWJn9mx4kjk9SVm2Y8+lbyvcovhJTpXv8mI/0vAyg0ZMNAan
KN49xh12zrJ3aJ2qedhVIi6k4b8Xb5bT7J6mXBDnAt4QflbNP/4s4jNvKV4R
qtbXie99++bU8lBztzw8YjmodBN+opZv2qCumykLRh0KKKn53f3UdVbFkRd4
XIDk26n1b3Rvg7re/c/uXWs1XleaGqo4+du1/MhKNU8RKL4zbqD2I9V6M34O
qNWQdt0NBj0epNatcX8q/R9zrSOW67r1Xqz11C4Gg+aHop1mjryC4ZZOLyHO
f07Elz5T/8eYXw+xGm8rJmE/56LxzsE+L/JiWvynslpvxv3Buisv9Lca9f4a
fm3bOrVy5KfwN+Lqa0U8R4tL49+fibyVZkfVPmD9w26LVP767XlVx3c5gbdU
4/8i71atCNknyaXqrDGao5Q8Ih7yktpd8Gft2marXfm8z2G/fSQcz/cR+SDN
H4H8eJG/KEzPfaK2z+dJ5uXsODzXA8V6BgdZ7Fq9FvA7ajyf7y99ptTrYDU+
1OHt1Hh+9ANHXiYXjfeW+u+uIr+jjWvzOD+j2T1GMR5MbO3IzwJHPFx8Tzk8
H40X8tzOP9ls6FC7d6xu/6qj1k3FivxCbmrfuVqD/RZf7d4b4LB7OV7qpffr
zOnxun0w9dC/N21p8crYf7sFO/JZZK/i/ITIjzwhu32RWr/E7dX2vjlDbJbH
uv10AM6rifyFln9p/+vw3nbvROVNzlobDYbXhJdW63ZOCz/6LelPl2nri5jd
E5WP4vyjG+VNzqh1KZWE36fF/7eX+S45c3qy0n1FqfuGGa4m4JPU+pbeIg9S
mPS2y/Y7F2yWZJ3d5emTJykzM1nH2/bGefOZ3fX2WOSEjbWtm1OUkCbbrI7v
X0PfdjgVcdqW9kQJ3RPeo4ePFp9/2im/iyMeze2oHaO2dLB7pyu25lcmZdmb
FB/j91pAX/F7NqCv+P0k0Cf8vhTg/D4W7L/8/hmsL34fDvmh7B4hzHN+3xHm
J7+fCvOK35cFnN/HRfssu3+M7Gd2Hxp4hp3cWuyn6VS39O6Z17k/7h7S8ZyR
vG1xRbNN2eDYB5YUJbxjq0IRRyxHlH5/rbseOFmTH3+p4EejWf++1o1pUdbf
ruF4Lj83jfcoe++6e07U99XDY8okszVE+XZKZnhAyUKEJ472jbDYb+na5/fG
4P2um7Nood12S6kv6hYKEd5bzY8/ioiZ6lOxCOGYV9FrPmTavi9MeK9n1bcZ
zZG69kuoeWfef913wNV5hXlYuL6xumGGO7XD5yfk+f1RmG+Yh7lrd+jkyL9g
/rQr6vwhc3qs8velkeMc9RvAtwaHzjYGxysDv0n12JmSi9rh95hhvrVTGu60
2OOVLiIfqtmZ/VOH3bBZEhS3vivXGgwftXpgdZ57PfjrsyOOiufye/Agv/Vl
zkZWY6LiK9rPTfjpDY197bZE5ZYjvjRD029YF6XEc/OTPsR9I2UXPkpxnBOH
XoJ/lC7OrecifOnqphOM5ieKUci7EF5GrXM7IvKAuWk+83tdgPP7ZzAPF3y3
NcpuO6usdayv8h6EV+gV497eelIpP3qWp6G85n/xPA5wft8O2nEp8KiQv/2q
Dp+bEdj0iOWyTh+OnlfE12DI8td3n6locCtKOPTt+T3ThlsPFSGcryO0z/Mj
kB9Xs3JbszVMN/8R5z8t/ER3kuf5AshDz1/Zk9p89gDNn5Lpeb4vYL0kBL4t
bjBEZNddBLkSHqbWt4yZ3OteQM/8hGOdthB2u6ZnZPsIvzeM7vcosqKu2arf
RxaqdSZ8H0E9SUWDc0TgcTfCsR8Vc/hr5QsQDj3wZ8lSp+a286D2+b1wZI85
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
pjaq7/WQ4hHAOc8cB58cB28cBz8cBw8cx3g5jvFuVuMkO4Zbfhnqd4PGCzzV
60XhdcfmNcN828zuacF4OY7xchzj5TjGy3GMl+MYL8cxXo5jvOPVOquaA/YH
dPfR7jEH3uHND9f35V3cDOtuPLtHBTxwHDxwHDxwHDxwHDxwHDxwHDxwHDxw
HDy0U+OQHS+XaLsmS1/RPewq/s+9U2euWZfRPAfu2q19Hsc5PuixdqyuFXqM
4+CT4+CT4+CT4+CT4+CT4+CT4+CT4+CT4+CT4+CzlFrvcUDE/+OJT+DR165u
77NkdTPsC6VYfQj45Dj45Dj45Dj45Dj45Dj45Dj45Dj45Dj45Dj45Dj45Dj4
TFW/h3xa7NevaZ9NZd/pBp8cB58cB58cB58cB58cB58cB58cB58cp3t1GQ4+
OQ4+OQ4+OQ4+T7uNfpCZqdULgU+Og0+Og0+Og0+Og0+Og0+Og0+Og0+Og0+O
g0+Og0+Og0+Og0+Ow5/Hb76S085WGX9AmarWYQMf1mSWrfqqi4pNrWMG7mT8
pXMpd7syWq1LBr70fW57QMk4pZZ67x7wtRuD78Y1SlFS1PvsgI8tZF9ltz1X
6qr3qQG/EdFmtt9jgwn3jgFv4ZbzSuKkPCbczwX83t8hRwICiphwLxVw2JO4
Dwg4eOil1mcgPvDh06FFfcfup7/x638jcOeD6ItUNwC836JOHa+HRFH+D/ie
ihXGXTsQT3lu4KNHehR6EP1SKaPe08TjErhXiONN1bp5xAGmnXy6or7xkjJH
zasB39BzQkv/rOe1VOvIgaev+RTu+F71CfUeQOC7p26+FRDwRrGq9zrxOEO6
eg8Rx6PUuhP410Wffe4xxO8S5XG53z1QPS/B8cl5I8cazal6v/XUFiezNV2H
4/vy3G/qkJh/pNGcrsP7Mr/poOo3bWX+zlDV3ymr6g3gJlFflKRcU/UG8OqO
utYsfT5H1RvAy4v8oIuppao3gGMe4m/8Nvro+H16pq+qN7g9f1Li15SS+C8T
JX5KhMQfwbka7l/Ul/gjZ1Q9wuWXSPwRJ3W9wW7/JmiRy9CseTJR1TPA434M
veZYRzgvATz0wrWJDv8R5x+AB8Q3X+jj42aqoeoZ4OcE/0VNSaqe4f5CHVXP
cHyRqmc4nqrqGY63V/UMx7er97tx3EXVPxxXVP0DO//ApBVmBz/t1PUPfEOe
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
OV/23XxooO2gES35a8G9xpQeWZlcYjwo56b0fGBO3y4zniLsFdufAvF3oX9T
P27aNumf+o2RfTd4U0lU+aH0Eo3jyfYK+2LmkeLvgl4tzFvgsSxwp8YnZfum
cUWJYx3IHH486Hl5xpcf2WzO899sJz1lncx20l/0gXmQ7KOZbxQ9wXh0b/Rv
P/yPfHpFH9jenpT1KvORck6SeaV8Z2E+TfSKeSPyJJE9h/+Webzs35njN/M0
+a7HvEzWjTxfxIofmHmq+J+Z2+QcKfMCOd/CHL9dzoHLPpHnqS7Z5zI/JvrK
PEL278zvEL8B8zXif2B+XvwnzKfKOGKeKOOI+bnZs/xzw4pd5tkA2UczbxB/
AvO94n9g/izO0/C9PMnnyvyqfPdxua8n45r5ARnXzAfIuGaeIOXCnvef67Yb
+K4E3p+/e4D6W3Q/7fgO1W5UifzBvR188MwE0U/Y5/780R0aJ1HPOTv8PI1G
nDwP7n3m2Ix1+/4y9sv+CHZvtSOvx1Xjuugb+Afb98wtL/vVGCX2B3yb5Cn+
VvoX9s3+wZV88/8esW/gNZJHOIvuT62X+1Mn5Psgnu8//9xmfEPngh6Sc0Hn
5fsI7OT2ngXrzpaVGQ1SH3BHPmLbZcNX5gXYw30Of2yl4XbPf/1ID4ofaYfM
U7BX1Y77X/XG/12XvibvwXjPdfiTfzOWSTuhD8kOf9QvGu+V5yN873aJXyFy
AO87NS+jzjyfTffXKuT+WqLoJ88vUaKHPF/Ei16xvcqWcln/sX5w+d4h8wX0
tlXy5uA+Jq+v+kR/IOfXJS8MvvdhvXFO4gKNtvg+EmURFwjjFONiq5l/p+zG
mV7yG/J819EvHUacPM/rTKv9zjHy190tcQN+FP2EPIMd+jli5jqZl53ynHq+
q+So336L8wYJdP7tfjn/NkLqj/7tnGLGaR80s1LK1e/4TwUXmuPa6vvp//Ub
WPk3EMcP+vDw9ZyKtFlHNH6vrntvmZw7/7YijQ8Mviozrqcm+GuNVww+LH5V
dkxUtcZVBveLPJzhm/295hnR+8X+iVsWdTRq3FLwaWMn9967oEXzrID/Mqwp
ybw/hjhy4EHd8ctrgu2a9wd859m0sbaGgdpe2O37SocNmHryqLYXPCXusxdK
Yz7X9oJvzku4dXHmGW0v+KfPP/Gej0+tthe8ILQ94kzWZa0/+GOx8Quj269p
PcHf2vu4+6X6IRp/HuNu1botqXMfKNb6gG9dNKumLfys1gfcY/mJ7tq1l7Rc
8ANL25/x8XHmuca4W+I/6O3fA77U94N7r5xYu6vpnHKMx/HDQ7eb+XwQZ4/t
IeQMvZ1cmf9sRnqhlgv+suSvxPvBfSRPJeQJfkLySyIeII8LyJM56sl2AJyf
R5xA5ogTyBztxbgOjHihOzTkC20veIjHiv0F+Re0veBZj1a/ZN7PQn+x/Yee
u8TnETkw1/jPxNFe5mgvc7SXOdqF+ajipjszxgdUa/15ntJ8oBxvR+rPHPVn
jvozRz2Zo56wh5NHPdkcFfm91pPXCagnc9SHOerDXOOE03oD5TLXeJjEUS5z
zTtmkc+R1wMaP5Y4ymWOcpmjXKv38/4C72eO97jsR+Q9LudI5XnmneS36RO/
DTjsqufCkvbiixc0Xj3s4ey6vQ8lTMnS58Fb/EaEt/1apc/DHm48N+2HDeez
9Xnw1C/Cw/5YX63Pw06+W3Dt6btLj6sdUH9LSVFknZm3UN4Dbq9aMLwup1bt
OXj0Lffs+MSzUePns78F5cIOvzH6leAd4/K0XPC+K2/Ejdp8Wt+v+4Vnxh3x
er5Z51/wrbKPgH1gO4/6WNl/2Nu8xAvevu75Wh/wmz9pOPBUYLnKAbxK9iOo
p8ajm1253oxfqnk3yJ5Db5lrnHziqD9zzUdM9gTvYY7nXeJoWfhhNI8ScdSH
OfqFxzvKdYk3JeUyR7nMUS5zyJ/HO+rjco9e7Btz1NMljpPUkznqyRz1ZA59
gz3pWvxc3uH0ZmceDbIzmh+EONrFHO1ijna5xFOSdjGHfjJHe5mjvcyxfrCy
h8whB+YaP5w45MAccmAOO88c8nGJjyTyYQ75MId8mEM+VuViXhj55H0btoX+
YYBjXjh4cEJk4vI/1e7B/u8ou7b74dedeerBG3JTckZublH7A94h+2XUk/fL
qCf77SF/zCMpBzZNyw1r1nLBP9t0/y7f7FZdt4Cvb+7eHXi8W/dB4K2phZPM
e8SYN3nfjXIxj5SEuqfPmfOTlgu+cmXNV417run7wX82854UOfNzYX14Ufzk
Xhb+cIxT2LfrF4e5ZaSfVvsPHir+BMwXsEtrKP81+CDJfw0O+9B7vG+XLcZT
44drfKrMtgq/lj7dv4BvnFj2Q9iSodqP4Fe+aR9te99D+5H9J5Ab9Or9OUnz
bUHNKjfwGaPcFn1b2Knlgl86OsTbfD/6BXqydvChiIB3Gp15Y4XHBn24M3Dn
dX2Plb6xXwV2QOM5l6bk1+Y484WA21t8jkZG2nW8gAf5VtjK4werfHgdgvow
R7v0Xue4Rs/kpDYtF8/31C/tDavt0nLB3c9kBVcUe6i+aTyHr5qmmOt59Dv4
S5VdmcVTq5Rjfk+8nHHKO9rplwBvGtE6ITfMrnqI/d3q29v2lb7qnEfAjx/z
esK8x6p5gizWD7xvgv5jXNy+p3BD57/23eDPvbP7LdMOQD5W+wvmmieLv9dI
ueApkl++0+K8uua7t5h3rOY1l+90IgfeL2NcW80LGBe9OW51YXcN1LwA0PP6
oE1Puz82QPMUQM6tJ988MueUMx895Fn4YubNyUl27Ue9jyP5vKDPPF5gb6GH
vT/2dNujnXnQ0N60FTGP24p+V/sMvqZgUlVStzM/MvhwyfOI90B/FmcmX4mN
7dXxznLTfGfS7/OL+u81aJ5H6nfIGf2bcEPp0LE+HbpPgfzD57UE/fnXd9qP
LufbpV8gnwLJ33eXRTwW9JfVeUK0d/q8iWkhzTeovwt6tWKpGae0U/1j6PcZ
nbFbQtY68wbyvAb54/17hjb1lsU78z6zvxTyh5yzKZ8d+3U1b7Lo29U3O9zC
lwzUfBDqd80fP2l6dpvqoZ4LXd2fVwvyR78M+fmn0gkB1Tr/4v37X/T0M+cF
yJnlqfma6ZyG5oWX+sxw5Ne7TeuP52+V/FN/A/DvIok=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAncDtX7xp/ned+ZeWaeeSOkImsLokRJaadFJe2bolJEpCyV9lKhPQpt
SrYQRYtW2rQo7ZtUKu3RJtHK//q6zu/z/3yM+37OnDlzZuac+9z3dV/nbdb7
nKMGlQqFwpKoUKiSbJgWCptKvo6sFApNy4VC45pC4ZzqQuG9YqFwruSOKvtI
+udJobBcxyUq215lP6uNIbp2lsru0/kPdFyh3x+ovKvk5SrfKS8U7pacJTk5
LhTuVHkmWUfXv6v6n+jcQN13g/R1WaGwQP24Qe3vqvpnqOwHHX/pmu3Kbv8z
1V+mo5/q1KjsDd2rk84PVtneOv+mjsb6fYrOvyX9VMmC7neTxHP0XfV/kn6p
5KM6t7v0xyQ/1jneS1fJ13XdEh1f6PdDJeuUna56b0ueIdm96PbbqM7bmc+/
JTlM9Q/R8Zp+D5W8WXUXSy/rfnepbio5V7/X67hDv9dm1v+Q/Fd1b1TZf5JD
VfazjqKOn3QcpfJPde2wUH60fh+n379IP15yia45VmVvSA7R8x4g/X2VP6ff
B0l/vtrtFHRcpWdcpfv9Kf1fve/Vkqfp1DeR9UTHbapzheRvvEO+ZdBjHctL
vm9Jx0E6VuhYpTq76frNpO8u2Sd8u/1V/o/aaib9VckGGnQlXd+cd6d6DSR3
kFync1tKn6Bv2kF1/pV+g659quj6M6RfInminuMEHeN1fK+yCZIbdG1L1TtU
1/4nfVvp06TP1nuYqTr1JRurzSpdv7XO3a7f16t8g+77q97DPyr7RfIbXbtS
5SdLdg3P1Uq/Z+gerSVnSr6oa1pK/zf2eZ7/HF37m8o6S99Osn9muUzvdkuN
41Wqe7Lk1br2cfXhGslM8gDV31L1XtDvFpJ/893Uzw4qz3l2lTeUPEzP8mXR
9c9W2yclbv+X2P3tovItJPtkHvsf6L4Hq47+FeapjbHqd1n3u7Xa84N5crL0
B1R/U+n/qH5L5qHq3yd5k8rqci/9/kl1JkqfK9le5y5W2YOSt+jel0j/Q+23
V2fvUdmZko00l59T/ddUv2/me32q9o/R+c2YT6r/vI5tuVZtHK/ybRjLkqfF
Luf8PerfJurzvZL/Sv6ldurp6KE2d5B8W20+qvLzdbTR75ZVnqufSN9D72uZ
5Jdqc2dsho6v1W5vXdOL96U2uqrupypfpN8d1O83VfdJyS8kR+ueu6mNbdSf
J3T+XZVdpbKlqn+15DeMFdqUPEt1dsV+qs/9dc1MtXsW3yvzfd/VPSdnfper
pO+oexyi9o7J/e6vK/q998w8Ft5RnXfV5vvS95X8QXJH1dlcslnFff4i83O/
Ib110c96nfr1sup8paOtfquZwua6x1dq41jJLXR8K/04yUcjj5ef9fsUtdWg
4H4enVj/QeWnZR5776We27sUfW5+5H7+qjo7qf5F0mcjK/5G/6n+D7r2D+xU
6nc7S3WmSj9PdZrrOw2T7Kh39ALfEbur30Okj+W5pM/Ws+1dsS0aEezRo7rf
JLWzqeRTsdvcQnKI6h6kY5HqPKbf96m8juS1vI/wXp7W7wdUvqXkQh1zpG8l
2V59qOh50tRrEmtTP5XVVR/r6HhY12+v/ndSH6+U3LLKthu7vV7t7qH7bpCc
omsnqiyXfDasj6yTc8te1/6SPl11d9cxD5su+bjk/brmJT3z3ZKbSL6Mza32
Ort/sJNPFm07n9AxnW9a8bW3qs/P634PqayJ5As65kpvKjlPxz20Kflg7PYr
kk0yf9ufco8NxlRztXO77pnqXndIvsr7VXkLydd1PCN9e+xn5jFzkuThiecT
4wn7xpxtpXaaZbZjAySnqq1aanOa5Bmq15ZnjTz+6zOWVb9pZhv2m8rujO07
rIu8Jj6kZ3xWcqbKx7KE83zhPdfwTDqulP6X6k+UPgL7KX2S9KtZQyO30Ygx
gG0s+90vUt/vUZ2rWJdU51L17zGVXyY5NfgJRcnuuvdeqpvLF3olfKMJ6vPT
ev9r1VZTlQ+ueEycKzlN19ysOiXJGTrGSI8kUx23F9zW1LK/42Yq65z7247D
Jug93Sl9ULCn2NWdVX+17jtD5U9KPpb5ORLJlrq2HXNOcrp+n1PwXNtWv7dW
eX/JnyK311q/71L7txRdb2rm8p+Y15HtUivV2VrXNMWvkjxd505hzOi51qvO
taztOrevnnWt2hkT3uu08G6fSix3wa/QvX7HTupYjR/Hb8nVJV+7iY7vQ52y
jpuLthU1Oh7OPAY26P676L7/qF4HyV1034klr0M7S04v+h09qvsNr7ZPeKre
bVud20Zyvyrborvxa/T7Lsm1kdd71v0zVLYm8Rr3kOQEXbd9yc9F2e1h7XuD
946tqAT7WrSN7VT2Gre1vmMDnXtW+n2p/Q7KuWZX7EewS/eV7ce8rnsNVlkU
ylPVKeuYKf0ltfUK311ySup1ZrHuP0DXduE9SL4T1ibWqCa6bgsdz+jaXurD
GtXpKVkvsp+zmWQzna8uuX/b6bu24P6SMyWHqZ1PJR/UPS4t2A9soXPbq2wI
tgFfrOj1/lvVbad2vpOcldnn/031z0wdH9yjsifV7ydVvq3kZ/q9sOj+9y77
+WZJ3qc2dil5TI8J8/fPyPae94OP1zPxerNa5z9mPaj2eNhO5QNUfq/kIyqf
zJogeYnOXcBckz5e/e6l65bpPTwo/S5sS8V1RqpONXZF5feqfLXKL1b5+aF8
ZKhTI72H9BNZByUP0e+tdK8FkvvryBn3ktfo3DXYfOlLdbyv8joVtzMulM9l
fupef6h8lMrHh/YfV/l8lf+r8ntV/ojKN1P5WOnTWL8y25z5+E6SY1Q+lbVP
+jO69tm4sNFBfErHM9LXq51J+EMqrs/3lD4qvJPZqnOj6qxSncHhXa2THKpj
OPZT8mHWaNVZpzoHZmFe8A1V/qLKS9yL9Ub1G6r8aekvMC8y2y/sGDZwvPQF
+LQVzwfGHWt9XOPv/Yv0WjUex69n9i2Zp/gOlRqvfy+r7E79jjQu6ksu1b37
69rl0i/XueNVvxtrYGY7cKb0tMZr8Brpd+CHaMxsJtlVfbiwiCHTu1E7D6nO
X/RHxzYac8dL/qPyy/B5w3seF97/LdJvC+98TvhGDXhe1T9a7SzVta+q/G2V
N8r8HaeG9z+bd4q/If0e6VPC9/0xsw28sMJAUHyj+45X2Yjg518leVpqf3Cl
5IM6Xgz3Xa/7nqA51E7XPib9YfXhb+n7qM6hqvON5N6MV+lfS96tOuerzleq
c5f084hXGCfSL5X+LWNP+iXSv5F+U25/Ygvda0LuNftT3qf0gdK/kP6E9Mel
/yf9eekvS6+WfE/HZ9Lr5V5H6D/PsUz6Sj3jbpIf4FurTn3J+3jn0r9TOy9I
f0V6JDlHx034Jyp/RPoD0v+UXlvv6jq10xafWfq1se1PW+m36p0cpPJdpT8t
/UrV30n63dK7qrymxr5mQ5XXkf5BYmxhC+m5yvdiLup4RG3+wzou/Rr8bunT
pY+U/qP0+6VP1LXt6JeO64m9VD5P+v3S10r/SHpv6Z8QA+VeJ5pIf1r6ApVv
kH6S+t0/2JY9Msf3NwSb00/l3zOOiBVV/3vVPyDz2ngn80Ll56j8S5W30u91
qn8ecZmu2VP6CsmJqjNcdb5Wnd10boPKryNmyoyjXCx5V2a/eg/VuV31z8Rm
Sx+n8otU/qHksypfpPIqyfE695bmVCZ5aLCN30q+QtykOpnkWzo+lr6p5Ls6
PpVel+fW8Zz0Iu3peE16Ivm2jmXS60i+oeND6bUklzBWpG8ieWtmvKOj7ts5
M/YwBj+Za/CtaI/xJ71GcrGOd6Tnkt3Uvx7q53eS60r2DcayJqXGdZizKxgf
+qYdM2MqYC7gKnvn1g/CR8XvV50pko3xXaVPZoxIHol9kFwvOUj1D5c8q9o2
57iC53d3yY81r7/U/b8gXtW56/U825X8PkclxnbqEhNGPn+s5Hr16Tzp7Vmn
iJNV5/PI3/Ocou89QtccgZ8vebOOntJvkjwOG1Lt+fKR2hld9Bo9PjGW0wC8
Tr+vLdrOLFPdNsTOkvtU2Te7SkfPsu3k5uAqqj9YZQemxpHQ6fflsWPqr9S3
Wbq+nuo/IDm6bB/wdnw0nXtB5RdKjigZWwFXaZB7ne/JGMnsU4KDPRHi7o3x
N3FH0fjMnBD3bR47NsJnAEeqpz7vXXK8Nj+z74KfvE9uDIu5Q0yKD3y/ZC29
04bqX+sa22TGxQzmhNo9g7Gtft4R1nqwgpqK5wvz5vnM9zxc8ujU76AK3DTg
S88EHxWfEzzrvuD/EwdMKdqXGK3fuyf2q5/APqr+/SpvrOPFzBIs9I6ycbA/
VWdc2b5TC8k7QpwCrrkNManKt1O9yTrXWfrOkgszx42HSX6SOb4hxqxUOQ7F
J3s1s896TOZY+8qiccAjU4+rJnp/zXU00f1nSN6tNhqpfCL4pMr2I1aS3FTv
az+1WSdyzEKf++idfJMbJ/pZ+lbSc2IvyVN0/lQd++r6c2O38y5jX+c7448l
xld7Fo3fjs58zSjsgeofrDofqv77+t1L5ddIfpv7vfxaMe4Idgz2+F3ub/C7
yt/Er1L555KfqzzSfdpI/1T6ANX5XHWWSy+pfHuVfyW9lvTdpX+WFzYCai3x
9aR/rvqbSb6EzZJexlfCBkmP8cvAcYKP9KZ+L1V57dy+0zvBj3oVO6jyiuS+
FX/H/Sv2N14I/sOHrPv4whXjueC6x+v7ngrexPdibukdNdW1L0qepT52ILaN
jUmBTSUq+zb4TvhQm5asg2M2VPt/qu5pkrVVfmzRMfyeqXFu3m2kssuKnufb
qF4ztTczNx4MLoxNuTVxzLhFYn8KfB6c/sLM/flC7X2k9j8sud+vEdcxdxLj
6N3Dtx6u310Y2pLvRdZrS98j9zftpHYuSvxty5L/qP2+rGUqn6/rG4CtSB6j
d3RC0XmO01Wvver3DjmCw4rGPwdnxu8/0bVDMvfhS+mnEQ+r/DnwdpUfzphR
eV/wRJWv1ftqIdsxvuQ1dEjZOHAvnf8IX1Jt/122HSXWxZbSR56d78f8S0Pc
1zWznehXcSxIOTEqcz2pcqzEvPyx5Ln5cOI4uEWId/8I6xrnV4Y6M4JNIx6k
DusfuDy+59qSY/BTwvhhHHHfLPSHPn4U+jmm5P4Tp7N2rQjr19FhnWK9GlH2
uSvLzglQh7xAx5ALICfQSt+uI+us3lln3SeqMra/NIyHf6Q3DvftH/qwNOi3
l50j4PrRidfEX8GKK45biV9PlT5G9XZW+7dJrte1OySOLcCOwQGIvVkvsI3E
m42q/LsPdkS/+0aOs5uEmJpvhK1sIn1kwO1HSR5Usa++ER/V+a2qjOOBx4JH
E26wNpHnIC46IqwXrBvgAFyzT2IMr2G49tqyv99WifMfjIcOicfX6vC9uuje
v2MfJA8kplO9HWr8PdeEOjwvST1w8nmJnxs8BBzlvzAG7s68Lt9QcZ6Gsk6R
12nKWRfBQn4PeMhNZbfP/cgBMPbwt8FjilX+zThfFcYJY2x1uHZF8HkYD1eV
7VsxTuaU/A2I9//QXGnIdeR0yh4br9DnkAsjJ9YhYEG7Rs5hkMu4rdr2Dru3
SPJKYjJyfcRwITdEjmiOjrWMk2rjF+AY31cbkwKbWiN5n45fVGey5P0h10PO
Z73a+hXch3gk5ArJGX6mo7b6vBz7SFyt8l9V9071ezI2Qe/y/pJ1xnk79fsy
yfbgkyXjIMxr1u7tdDxf9HynnDGNnwJmx3fEp8C3IG/1QPCvZlc7L0J+ZBL5
Wd3vR8k4tW+Fj7VG7ZwYeb70iGwTsY1PSC6oGEeaC84k/T/sTWb/Dz/w02rn
qBjzjH3wKnCrl1RvFLEzNkD1W1V53DPstq9y7opl8uBQH4yLXOh5JedDuwV9
e54v+BL4FEnIjZbDvYaEa8mdkkN9T+faVJyraVpxvof7kvt4h7hE8t1qzztw
c8bVi/oWl5acO7tAxxLpwyUX6DgfbAF8IuRGyZG+HvKn5FFf0lGtNl+WLKpu
U+mlyP4rfuxFYLQVf1PyHbsWfS/yyuQnyVPupbIXMmPOAyrGcPnmZ1TsH3UO
NvDKEPuDAYBVMj6Y+7yrB8N7m1L2M90rGZe9nrLODw3+9DDyh2Btuvd7mdfE
zVW+U+b3wvt5T7Ju2XEDsQu+1WnVXnPnVxwvEDfcEXIBd0rOA0fBr5asH+Yv
83hawPanSx4ROUY4UrJ1+f/xYPL7A7g+sV1vHNaUB8N8fEjyHfXhTMm+1V6T
e1Z7XT6waF8EPwQ/Gn8avLdD5rHKmCV276O6P0lOSLzGEqfUKts3wEfYEHI0
hcjfkm/6CveI3J+eknUSx+BXS96Oj6jrV2oQPyFZX+ffCH4E7xNfqmFiOzeO
vFXZOTHyZnAkLlfbe4JTRLaPO0XOGZI7HKHjBPW/hX6PrjhPemDJ2PJLRevk
sBdWzH+AB7FYbR6g8j8lNw1+O+sR+QryFuSZSmF8VknuVHZuamLZ6xKxAOsL
XIheOt7V/TsnjhXeSnxf8qDMqzaJ7c1cycbqw3y+UeoxyFi8Rdd3D3OKuVWt
OluXHPsw1w8O9uG32PgtOC552Ov5nonzll3DM7bJbUOwJeQ0sRHMa2zDIcE+
pOF5N/pCYfwzD6aH8cAauaFku4nN3DWxn4C/MIDvpvKBkdeTmjDX2un5U9Xb
psb2gDodVX5YxfbyCsnWgZMAN6FF5GtbSk5T3dpVjs0aYj9Y+yVrVVknd3hx
ZBsAx6QZa6vKm0t2yp0D/D73fH0t2Od7yv6erBfdMuvnqA9dqtwubZ5ddlww
kLGgeq1UZ7r0jiHf/aXqHJf5mw6pOP9NOXyUzhXnIParuJ150rskzgug842H
B9u4PrZtG6zfq9XPeWXnF7A5TUOugTXoNtbCkuOUwZGfZYjkPhWvY+RtyYHX
C/lTviFjFzvYo2LfYpOK/ZG2wSdpnhjjmoJfpHO/4QfoG21ZdmwBbsEaVx+b
io2UPK/aOYzJYe2eInkw+BVxB9iyZHu1/7PkbNW/sNq5opfxE9Xf2ql9DnyP
dcw3dNVfKDmo4mc9MjMHCi7UIB1bl51Du7lsvKFueMbFYa3C758Y5uBdZWOQ
5JHRD83+P75nbf83rO97ck76QXq+/2KPi4GJ4zBs4O/6/YHabSH9Q54xt7+B
37FYv5sxnqq9roGpLCrbL8E/+bzaHAxiHGKdYsijNQhjiLH0V9mYGTj2PrFx
tTek74E/lThe/pA5k9n+XZJ5nnYLa1OfxNwXYkiwwDeJHWNjeB9J3z92/Eru
GN7BwtQ5NPC6L4mbiWki439LpR8QG6MjRoZPBSYJlnY8/lXi7/Br2XEJ8Ql2
f3JirIa4FEwV+w92hx86Pviit6ndYdinyLhoZ+6VGlPHRyK2uCVxrAvGB97I
WnmU6lwVuw/LI+OxjMkzVD5J9SpF4yOTMuNvp6bmTsFZADcE73xd5bvFxr8/
l354bLz8M+ndYuOmy6R3BWtmTdTxt35fllnuKHll5jiJNf3azJjjrpIXxsZq
PlHfBseOl4mbwTaIr/slxkPgY4H/XhE7Tv86Mo4H7wIHrlbAXsBgzi0aZ+T5
awLOA94zNDavD37frdKH4vdG5rrADzk1M9a7kPVEcnJqzgL40lth3cH+kDd4
Fbsu+WLq91MnYMafSj80dp6BHErz2Ng8PIfGsTkj5BbBB8kbLMYvkHxf7b6I
nyPZosrr0aKw5rDOse6AwcNnaBUb236e9yk5NnZO8xc9y3jp50n/XXoTjY1x
um5GYryd2H839bd1ZtziT/W5bWZ85S/pg3TtTvRL1/aV3kz6gsjYOz4b2MUF
Kt9H+tsq7yO9qfRnIvMw4GPAa4Kz9HVhY9qq0D0xp+dr1e0mfYX0FdK3V70d
CuZWnR2bX/Gy2jku3ggLFuZIP0P1fy2YZ9VPR3Ppz6r8RPWntvStUnMXwale
A58J73PX2FgZ85T5+pZ+P8s4lFwe5vheklek5jyUVXfH4PPg+xxdtE3YTkd/
9WF1wdy2AYntGdy5duQ/CsZbzk3su67S+94p9XsGbwFfAr8F9z823ujGFR7Q
f0fF5q5Okz4HX7NoDgNcU/DbfuR1U+eu4bZ1yowh/afzN+vas1S+UtfeIL2P
9O8j8wDIe8KXwDZjo4mfL0uN08bkH6rsn2/kZCTGpeFpTC0ac+Z+rEusT+St
wTyZO/urjSNj80unRF6LWJMWgMervJ7KZ6v8pNjfZbL0k2PzcqdGjimIJ3qA
a6mcMHcm70HXf0P/Y+NP+F34o/hpl+v85ql9anxr/L9TyMno/Cyd60nuRfr9
kbk72xbMv+tBLFkwNwwe5MqCuV77Fc1FY4wSp076X6wa8MH9MvN5yX9gK/tW
7HsR78BX4R3yLg/KzBMpa31fFdZo1upHwDuIcSXHlv3uwTAWJuYWP5aY38k8
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
At7WfQ==
         "]], Polygon3DBox[CompressedData["
1:eJwtnAn8DtUXxud9vTPzzryDJIRC1miXVFqESpv2fV8sibRr36RCpbQQaaWU
yNKeIoRWadWe1n9p35SU/s/Xcz8f83HO3GXmvXPvuc95zrm/TU4+4+Ah5SiK
HqxEkf5FW2VR1Eb/n5RG0W9FFC3S/4+XougSFc6T/F8tiqapvHkSRXNUXtH1
lPR20udLbqP2DaQfK/1I6RfmUXSI2g9Q29+lz1L5EpUvUnm9ulH0sfStpS+O
o+h4lb8vva3056UfI727/l+l9rvV0SV5UjWKWkrupZfuIvl11W+s+jNVdojq
d5C+gfQTE7f/TPpO0rvpOlvvsoX0TST3V/kJKp+iPnrrt92g9i9LPk+/r436
v19yZ73fjqp/sp5/rt7/L9W/XfdTlXfR87vq3pnqcy+VnyD5OJU3VP0j1ddP
uvez7t2i8qrk5pKbq79X9P9Gat9c173qa1PVb6T3OVT3f1b7MXqX+tKr6v9m
yY3UfpL0ybruVt23pC9Tf6eorIPkf/W+96lsA/2ep9S+veo0lH6C9KOln6zr
db3Prrq3rco+0dVZ8ku6d6LKGufu+35d96hsmtrV0bM3UPmber/NdK+Vyvol
/j7z9dze0lupzgLJVb337tL76p3Ol7xG73O39PVU/wnVr6v+r5F+LZf6KqRf
HfneNdJXqf5NkiuqP6vwM5gLW0V+9ol6h4l61hnS20jeWmV3Sr9M+jaSj1V/
W+vZffTsw9R2hNrcrrJ71d//pLeVvp70Y6QfwXjoef+p/aXMcck9dG9z6R/o
t9wp/UT110X9HaT+DlfZvXpGW32rJ1X/CP0/Sv3dKXmS+sv0PXeS3l/1L1T9
1ar/k95xE/X3ovp7R3JNVzPpT0h/W/Jb+j9X/Q6697bkT3WtJ30L6Ssk/6V3
uIXvr/4fVX/r631ukz5W18161kEqv1Z1B+i9pkp+W/8PUPuVus5Wm5aqo1vR
YZIPUvt2Uqao/vW6117yKL3DD9L3lPyu5PfCep8Xe760k76+9OPU/ijpQ/WM
9vrd7dX/4XqXZroeVfljuh5R3ZNU5y/V/UX6RSp7N8yXObHHu7+e8YCeN0vt
+0neV/d/k9xdfe4n+SH95s2Yv6ozVXIdbIT01upznuSj1eeWqr+vxvdQ6cvD
+n02tn0p6XpEegvVf05yA9W/NfKYjVHdptJnR37n6YyN6jzNWKj+AskXpR6/
jfX8+nq/OXqHf7Fv0p+teI2wVrbRvS3VvkVmO3mo2h+oskc1Po1Ud6ZuTpR8
sO4dzlxLbI/O1b3W+q1TmJNqO0N6Y/X3lJ61jeZPT8lj9Pzf1EcvyafpfXtK
P0rvdaza/6x+mqrtHrp3rO49rD6el75Q9+eq/Ef9v6H0Xio/WuVHqP/P1NdQ
6Ynkj9Xfe5KbqN7Tqj9JdW6QvqnqtJb8kPqbi70N49dPbRK974Oq86va3p7Z
3s9Q+WPYS+nPSn8u2P9pqnOJ9JukfyX9AZXP4ftIf0b6g9KfY35Jf1b6u3rm
EvX9ju710L2FGocr9Lsv17W/5LNrnms9VW8Tjc+EzN93tuo+rvZ3Zf6eTwZ7
F0v/vOL186vad1U/ayQ3Uh/bYysyz6cnVP9J1a+TeZ1RfxPV/0/XMuntpW+s
Z/4rfW7F3/9HyY0l785cUH8bSL6Db8h8CvZtrPQrdH+x2tb0vk1Zl6o/QXWa
SR6o8emhtkeq/BfVf1X/Pyd9KvORPQr7yVhLXy19jZ45reL18J/0mzLb/4eD
PThD/fVmraver9JP1Xg1lf6n+mmi5+/A/iJ9kq61ev6Tqn+d2t+u9o1V/rn0
T5gr0n9U+xnS7yj5G+4peYD6q9ZxG9remHl/mar6s1U/0b2RkftO1d8fut9O
+kHqo6+efZuuKyW3KXvPq9KHykuqd7HaH6J7XVVeU3lZv+EJ6fdhP1Xnd/X5
jeqpWrSd7h2ssnP0Pi30Pm3Q1deTujdZ8sWq01nyNL3ffMkvBHvRlz1DelP1
vbHe7wjV2Y29mP5V58rM+80dkh9R/fvV52iVn657u+ded6w/7NmfqnOYnv8J
76p7u6j8BF3bSj5Q9X5Q++1Sjz9jeJKeOTyz/b5bbWewn6n+F9KPkv699Nv0
/63YS/3WX3Vdhg1W/2tU5xnJ26q/DdXXeF1/qPyx3N9yBHNOcqPEtgSbMln1
91T9UZovH6jOTtJnc09lneoYz0xS2U+qX1/PmMxcjm1rOunaQ/Icfr/Kx6vf
r7Hl2AT1lav9eNYCYyz9ArV9jLmlNo1VVl/XxpKfU/tHVD5Ofewj+QXVWQ/8
VLa9fzn1t9tQ9+6Rfoeu9SU31HUn+0FufSJ7u75Xc40fePQgvc/+7M26P0Pt
R4EHJO+k/loyf9RmQtXz4yE1GBjs6U56pz/BTqqzs+S7q342mBHseAl7vuQZ
jLXqH6Xnb8b31PP6YL90v4PKZzM+qX8jv7WJrhaxcSH4sKLyf1U+Vfp20u+T
frLkJbr3hPp7WO+7ofrcVveeYX+hjuSlen4n9bNE8vZ6fvfUWPBJ1XlJcmuV
NQr9tYm9Z7N319W9DpLzmm0VNmus5G6xbR2/md++R8V4Zb7uXRPGmLHeVeVb
S/5O16jYc4S5cmHN+BqcPUvyAuqoj5W6ttT7pPoef0veXu1/r3pMGdtt1X4X
yT1iY3P2MPay3SvGSrwD77KP7nWu4z2fvf+Mmr/fHGy1fn9j9X+e7ndkT9G9
RPq3ate45OfP0r3d1f7pkudPpPLlKj9F4pUa35nSR0h/Q3Xrq78aGJN30vvu
lvr7Pxi5D/rqExt7XKX+9pe8THUWlOzDPKX+Eum9ImP+81LPE+bLROk3Sx7J
GNfx+I0KPgO+w3Wxx5M13FfyKWFtN9P7/MFY6H12lJ5Jz8P7dZY+U1evOt4v
7tPzz1XZsLLHg3FZP/N78r7jWFvg99j4d7HaNpF+mfRLy94/3+LZqvuXys9S
fy/o3vm6NzT2+NbVNYDxUp0P1N/+kmeW/b3AuuOkf8Mw697tkqdofdykuver
7sDC+G+hyhcEPAW+QsYGY4tjfd+2anucnrORvsdU3ZtJfb3LjWp/t+qPYD1L
Py34B2MDXrsm+AfIYLir8eVyt2+p+iNVf6Lu3Sv9cemjpDdR+TMBz12HPc+8
9uZIvx5/UuXv6HntsRUBv0xX+VyV3yB9em5b+4h+39ngSfAa/g/fTu+/V2H7
syC1ffpF9f8p2Tay394rfZT0u8GRqvuV+t8XW6hr18x+Cf7JSuk/6Jmdcn+b
iu5/Ah6Tfr3K75V+qvQvM7fdW9cuksfpmgjWVttrGH/WpOoP0zVW8niV36Xy
WSofofI3MuPFJ2LvN79JP1f6z9IHFfbpGoK7I/t6G+r58yRvIXm0yh+WPk59
T1PfZ0nPpd+s8ljllxX2R8HSYDCw2FOZ27+u8psL+4N/R8bUYOvHA158ReVj
Cvug+HanJ/ZNP02Nny7H3ujdmqv/N1S+jP2Qd+edVGes+vtJ3+ZdvfteKjse
nzyxf4TvOjng/Uz6mMj+5KVq+63aHCF9BbZb+t8qP0bPOpo1IHkjXW9GfuYc
sISulyQvV/tbVP+6zPjlfulXFbYPq6X3Y09M/R35nqy5oZKvUv2rGBvVv1z1
f8e+Rd7rh0g/T/pp0m9U+ZmFbQK2+to6thX4448FfwV//9HM8/tFsGDh/Y+9
gT3iLrX9MjG+yFgTekYt+D/4j1eo/sbSV0j/lD5UqaT2f0o+Sc88B5uZe/7U
Vf1hqj9a9y4GD+q6ESyiK5F8ha5bJC9WH0tV/xNwjOrfIP0e6VOC/74qtm99
T9l4qG/VWGCK2v+nsv34HpIHq6+Odf3+eoVoG+yx7v1P/R0NXtK1r+SvM8tH
sqYYO/xy1W2sPpOqfewlcFcl+97Hg8uwN2Vj5AOwn9KvT/mR9v/XquwWlW0l
fYvU+gS1nwm+Sc3XfK97I1krue0FfNe1hctXlo1xwbq3qU6Jb1cyH0R/G0iO
dO9Wlf2jdptG/s2DVHZNaiy5Qn0MA6PSp+R6kpuCV/W+h6v+VWrXj/krfaD0
U3UdnZlDeFy/d8fI3ML3uk6Sfpz6PFN9P6bf1096Ae5Rf99kbjuAMZW8Utcg
yd/pW/RX/59L3zkyR7aN5A/Vx2C1H6RrffWxg65rJb/PO6vsC9XpHplTYv1u
H/ikSGUfS7+y6t+GD3qV5Fn4VGX7ZOyfJ9Ysd1H7aZJv1L0/pG9VNr8zGJ8A
eyb9dL6n6rUA38GxwSno3h4qv0H3jpL8N/uv3u9FlS/Hl9L79OBTS/6c/aHq
vfPmsCe1rXovh1OCW7pe37ckff3U499SbQ5U+2HS/yk8f/GF4DDgMk6tGm/O
BiPrG/UM43G+5L6Fy9nL8QFPk/yZ+rle73ddxfh8ta69y8aYYM3WGoN9pe+M
rOfviw8sPcb/U9vjax4fxmkLlVeq5ht/1zP+1TN30PO3lVwO+8lk/V+PcrUZ
zW/NzffA+2ym9rer/Luy5/CIqv0X1io+/ziwlvTeZb8D7zJE7b9T/1/pfkO1
71M11sCHeyZ8j+vLtvdwUa/q2j4yR3Vo1XzV25IvYezVvlfqbztP9V+XXKqa
b/tebX7R72mY+nuci01MPX+PDPaA+d+AdYz/q+tq9hq16aBbh0kfGDiT73Xv
28hcyk56/tiyx+QO+N/YaxUOccvY839z9j9dnTNzuL8mfh+43a0z89H4ju/D
l8KnSu8u/R3Jp4Xf+5r6GwRe071XpO+o8mXwwfj8rC/pbxbG22BnMPRK9b+B
7r2m8p1V/pbkf+Giqa/+1lZsv5eF/eklvUt9+Ei17aHy9QJHDlcOhwf3jc3C
dg0v+fv+jt9QMv4Eh4IpwBbsnasKc35wf60jc8dwXMinJua+wCPdgn0Az3xR
M5fM+p+I/ZC+i/Sl0u+QvkL6ltIXSR9fmKODq2sVOTZwaWz7zBwCt24f1uuZ
et6fAT/xLGxSd/Zz+o2Ml8HNSzPz5dNi85tng8HLxsznSN44W2d6o4PV3wHw
e3qfLvhBGoMfNJZpYX6qI9hYcivVl7iOs4O7uxbOpGz+YYTk1zLHE6bG5vvw
Ee+LzSnjO3KPMjh3uEHeiXejDVwsnOU+7Aslc5lf6Zueha3VM76umLP+Qs/+
PDKX/QtYSHJX+KyKOURiGzNivx8+8eTYMRZ85c76fefBL+lbrwVP61rMXFaf
LxfGN+BzMPuzmTntr1X2ZWSuu4H0lyXvoHuvS/4o81pgTfRX+auBD+aZPBtO
F263ZWRuvXfN4zVc9x5kLqh8sN7n0tT7T33pL6rudur/NfiSzPGeIdJPKYz3
8B0WBPxVFOY3t1b5S5Kzwvzh5tIXg0cL85Xg1SWSB+q5I8peg6zFeoXjS11U
/ir7k95pTNl7OrGYQ/WMQ1TeOPgnz+NfqGwhvJXqb6GrZ9m+Ovwj/Cd8/8yw
/1dUfyj2XtclmflA8M9jwT+5Aj5Q+gTpl0jvpH4u1nd8V8/4RM+Ic7e9gDWg
uj+r/HSVX6vyCSo/Tff6gVfUfnDhuBq+6VyVPy35fJVfKX0MvmrgD1qXzDEQ
T/pb5RdF5tLAl/8L/gQ+yX7gKY3HfpKXq/weyqX3kf6e9HsL4y3swz4Bf62X
299qoOcNV3k9Pe8/1mvJe+RKtT9G+mdq/4DKm9bMb8Jztqpr/LLOdus6RvLo
zP7EQ+rv6sL8M3zq/OB/8PvOln6z9PPYi6UfL/1y6f9hH2rG//gBd0vfOzO+
v1jlf0sv632HS/9H5RdIv0Dl50i/ReVDC0CTbLDe7zSN+eM1xwvwHeBY4Vrv
xOZKrqc5cJfkPzJ/79/gLgrHTODNOoU9tZQb7/8du/8Lg78Fx3e+9GHSh0m/
M/hPFwV/YKz0C6U/gf8C/6Dxuqgwf8j73xPwe50QL/s3dn3wNv7Ng+F7dKja
toFBbwucEtxSLL1j4XgV/N7kgO/Zb/OyfcSDwny8NnI8jvlcCfE6nnlx5t/A
b4G3ZDzpG/6qo66xkj+q2RZgE8ap/EH8aGycrpYqL1TeUc9rVjUf+1fAo2Da
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
         "]], 
        Polygon3DBox[CompressedData["
1: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
pLeU7zL5jpdIzsxmxZPfMPFb5uHcGds57lD+Gni/3Nl0P+0PWs2CZE1+nFtn
sd6eiXmmPRRvDbmulffyTDLPN6aT7xjfszVfL+0sit8fMXfwOb4buimvoq8s
mszpj3Euxrejd5CvpXyP0b9W3ynmDubG3EPH+E2ljxvVPY43gGbKFYon78p4
Xx6hnU/bR9sLiyLOWBqIu9HYfuapim/R7j2xL+Sso93a8SahN+O7le9AjLkg
Wae3xz7jmw83G9t99Mv42vG1hXsLku/bI518n/hO47PJd+ucTuIifmx8t7i/
aXvwztptr91L6Fn93A/36HMTWsO4u+P7w13aegZvBKXwPvnJnRZ324q4F/Ad
sIm2DS8Sd5dcA2kP0IrGbwT64/jm/Nw9gm+nd00n92Dch+toR2ivp5P3X7wD
59M6ZpL7Je6ZqlBDf6+BCdp4qUTyZlnINzN+v/F9wDMVLuD5j3zPyXVUG+PU
vRv3cSZ5H8Y7sTqclk3eiqG9ideE02mDxB43H8egSrz58CL0T+WrHfOq3cmZ
5NxdmDvn4rwbjheDz5XPg09ZpvL9JX5WrHd4n/ZyJjlPF+fOmzh3RuTOtafT
yXkY52Kn3B0wL3duxvk5LL4Z7STjH6O/T+lfSXxvvDFjroznTuW74H/0+WLO
gk+0OymT3MtxPz8ntgKcKt8tEW/tjsWryFsq9lW8a/hG0U6CanyfyD2NtgD/
KH6304bG733ztAraaCNTmLyn4l3VmucHbVfiO0AfmU7uwLgLe+fOxH8o98xL
zrz420Fz+gv6MCoeDvbWjNw7cTU+OPd3kLjPz4Ur5F8DC2mVxW6K3/tx18X7
hdahILnzrsGbw35tTIg96V18gvFVjb+XyNmzMHl3xftrZF6yt9vzLYq3WfRB
27/FG06bDUsmv/0ry39O9Du+Gcwx/tlQWWz92M+0GcqtiidvyHhL1qbnib0P
borzHp8EI5Sf1cZwuFob3/J2NI5Fecm5EOdDd7gq3qpiD8d7gK8WLR7LcWbH
2f0Qfgq9DP409KL9FX2hNZG7efz2oO2gnQ1F85OzOM7keP9u026XdPIGDi3O
63K0M8Ru5etrHGXjrKdfr74T7Th/lWyy/+McOA3/N30l/n/4ZG+l
         "]], 
        Polygon3DBox[{{2397, 2396, 3121, 1949, 1950, 3122}, {2710, 1932, 1497,
          1498, 1933, 2711}, {3060, 1699, 1548, 1547, 1985, 2748}, {2401, 
         2400, 3105, 1822, 1824, 3107}, {2945, 2235, 2206, 789, 1313, 2990}, {
         2546, 1674, 1948, 3120, 2408, 2409}}]}]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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

         "]], Polygon3DBox[CompressedData["
1:eJw1mH3UVVURh8+9+8I9vOdF1GyFpZkLwRRBSkhBFLMwQJRvBERBMAgQocBM
EE0ECjVAkUpLMcNPxGr5/ZFikmFogKCZqEggICpg6sKItOdhTn/MujN79tl7
nz0zv/mde+SoSf0vrmZZ1raSZTV+VxZZtill2Rl5lnVqnmV389sO+1Im9Ubf
0Jhl79ezbDvz+zB3G3pP9JOZcx/+FU2yrD36ZsZGN82yEcz5gGevw9ee9b7e
kGX72GcG9rHYz+J/kfmnY3fEnsYzw7H7cZj7GZuDbOP5Xci16E8jN+N/FumG
/iryA/QO+Lujn8t6bdEPQz+O9W7ifDux5yHnMrarWZZNZv++PLOGufsY+y/6
HPwPoG/i/Rr4PRS7Nf7mzJ+F/wne50nGP0VWYQ/H/030g/C356wt8B/FXq3r
oe/FvwB/I77fot/LWDP0f+H/EfpWxmbjP8Z7Rv8e8gS+Nuz5HOtfhFyB3gq5
D30IMgN9Pftt5PnO2NOLOONQnp1ej7Nvb4jYvMRYX3wDkdeqcecn4GvLGTZj
N2PORNY4HnthNc7sexhPY7ecsZHox/P8XPT5SCf0wchG9Bk8u66I+P67Gnc6
HP3HvM/r2BNYYzr6OmQRcw9mrH8ZH2M5B/+Bnt890YchlzGv7hj+G5FBvOt4
7FOZ8zN8HzbEnXl3ifkfcL6h+N+uxp3m6E3y2GsVMrEeOboGfVI9cncq/pXY
OznvdnMX/x/NF+zu6JPxP459UiXy/cwi1voYfxv2n8TYY9hbsTfzfDv807BP
Zv5m/D2wH8VuyZlfQT8FWYy9GP9O/DvI77a8SxdkKWv1x/+y8ce/D/8uzril
HjG+FN8A5sw2d7H7oh/Juiuwe2Efjj6YsWs8L+dphn5+Hnc3uxL53pU1bvY+
sd+19tj3auyh2P9Bb49/VjXW6GAszbtq1PQn6IfnUU+jkDs514fIR5WoKWtr
EP4K5+iJ3IM+k2cexN8N/+mMXZLH2boyviyP+9iLfxT2Xei9+b2Wue95XvRf
pcgdx6o8vyTF3XmHDbWoUWvVHH8IfUyKWBiTL+KfX0TsjIGx+FItctmc/mmK
O/PunmXsiFrkuP7D0LfkETefbURuYP5N1nol9hQneiJXoW9hbCj6WcgC7N3Y
56E/xhqTsReCg5vyuJMOKWrIuxLTTsUemAXWWcPW8kPVyL+ri6iNRdid0b+P
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
a88a9NvwNO5jVBacR+7zPwDTabE=
         "]], Polygon3DBox[CompressedData["
1:eJwt00tIVVEYxfGt95o3r00qyKJJT4oQ0uxhD00qLBUhzSgRKotING0QZUkP
Cwqkt1hUSIEE1Sx6IdlrEEQNGjRq0KQCa9AgahAS1G9zGizOWf+9vrPP+fZ3
ZrR2NXTmhhBKKI/KsiGk0iHUUEkqhG7+ZEEITUIVmRC+54dQXojhN6y/p+3W
BmUuYmXqyimN38MWYPusD6udOj6EOrUXsJkyB2W25oQwKjeE3ebv8+3y8/nz
NEVuGg1jO+XKsQH3Dzwv1/NqPO8SViXT+7/+t1zGepHcbLwb7/Tea7EdWL/M
TSyt/iu2RCbFL7Y2jz/qeR38G6riZ00IYYNrR9xX7V28QO0prFXPGtQ30lv+
GH2Q65HJwZr4YlqOreKP4yPepRprw77w++kxPxrr3X/DR+k0/zEvOYdatS2u
h8fpAz5kvZEfSiXv3EIXsLTcIPaC30i92Bh/mZ7xc+z9AyuN50uvsCfYHuyz
zC16ifVgW7FX/DV6jo3lJ99/kl+j9nUmmYk4GyNYMz3kB/RvU/z2dLJXC9+Y
TfoS+zPZcyqd0RFsi5rq+F3WivnVznO6zDa6iu3W54V4n/vNWAGtLEzmMvYl
9qcZW5RN5iPOSRf/xR5L5frxOu9Rn0rOahlfQwdk9sq8la/lT9AVmaep5Hvi
zMcZi7P2yzdvwz/x1+Va3Y9hu+K88Ovscyb2P/YIu6P2HD7RvpOoEivKJnP1
SGY1NWNz+QrZ9niG6aQ/sU+lWIF3OyT3DqvPJv9D/C/WYxk9qbVnH/ZXbUgn
s/5H3U86i63ACl3bZP4BMCx1SA==
         "]]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJxF1Xl813McB/BPrV0tLXRQrVamsVaUWlKxqSQlREQUuUOJQq7lLh49Ho4Y
pVCa1rGONdty5GjoWAgx91VKFF1Kkuenf/zx3Ov9ef/e38/v8/tuv+/ajBwz
eHSdEEKNH8cnhBDrZXVDyFW0TA2hkXWWbC1zZUfZRfaSBXKgHCSHyeFyBKPU
4+UEWSgnycmySE6VxXKWLI/vWz+Eau+1Mu6fFsI4773aulQ+Xs/+Mse6X3II
A9RtzVSb7a/el+LMXitT99av0N+r19c6W3+ovfuo8/RK4nnVWfq5DULIt1++
9XT9nnK3meX2yPR6D+sp+rv0uqmr9Fvo56kL9SutO6t3er2pfif12Hgm++7Q
62DdKL6PLNBrpXel17Ot6+tneO926lT7DNFvo95upp7X8p0507qf/ja9FuoD
6q76zdVpet2tm6jLXL9HfTAphMbW7dXpcS/ZUGbIpWZS1ZvVKTJdPuG+PslT
TOVpnqGIZ3mOaaxw7XT5PDOYyQu8yEvMYjYvM4diXmEuJcxjPgvY79wLZSmL
4p72XiyXsJQyllHOp2ZflRVUUsVy3nbNa/J13uBNDphdId+Kr/MO77Iy1vFv
Rb7H+3xm9gO5itWsYS01rOPDeB9c85E8aPZjuZ5P4pni9Wzgc4K/3y9kHVkb
e+ZnuPZL9Vd8zTd8y3d8T4LZH+L7mP1RJlr/JH+O53XtRrmJX9jMFpLM/Cq3
8hu/s41q89vjZ5N/xM8n/5Q72MkudrOHv9jLvvi7Nfe3TLbvfvlPvIf8Gz9z
/FyJPhN1SaDWWWe6pp56lUyU02SSTCaFVOrHtGeaXOuaBjLN+jDZkDWuSZeN
OJwjOJL1ZhvLJtTE75NcZLaZPIqjaU4LWpJBK1rHfe2fKUvNt5FtOYYsjqUd
2RzHlviskDmsM99e5tKBjpzAiXSiczynvU+SC8x2kV3Joxsn051T6EFPenEq
S8yfJvMp4HR604e+bHCOM2Q/zmSx+f7yLAYwkLMZFO+RM5wjz+U8Bsf7Zf58
eQFDuJCLGBrvp/mL5SUMo8jspfIyhjOCy7mCkWyKzyV5FVdzDfNcc628jusZ
xQ3cyEbzN8nRjOFmSsyPlbdwK+MYT1NnuU3ezh1M4E7u4m7u4V6amSuUE7mP
+3mAufZ9UD7EwzzCJCbzKFud5TE5Jd7L+NyxzvH/y+M2VOlVYotQIT06Q3ni
oa9sKJNLMR6WSI/iUCoX4jEa5ice+gqEEj/i16FYzsHWYbb0CA21yf//v/wP
Hs7kjg==
       "]], Line3DBox[CompressedData["
1:eJwl1Gfcz1UYx/HjRt0yk15WZBNCtpD1gO4bWZWRjBSyRxqaeGArUWnaMw07
KkUD2bIb9qhUz1pG7+vlwef/uc75fc/5Xb/1L9t3WKehOVJKTfw0Qn711Nwp
tcmV0oMolielB/jRnCmNwWMoYVwUxXEorwzPNN8G/+BvnMlM6TbzJTHRuAyX
RSncjtKYbf6AXBZfxn94EuUcO2jfSeqK6qe5PN+ql6fUFdRvcOJrfBXfyz/D
lcxN5spcRH6K+l51DoxVV+FBXJUPWPOc+g71s/yLXjqqH1JncxZy4nnjFbLV
1EPUd/ILfF6+urozOuFhc+3RVr1PPjfXRA3crJdhjt2lro1auB9d0Nv8XvkO
3M74RtTBCON6PJUbciPURQPska/PF/SwwPHOyGecB03QGNPM3cMrZZvx3Sio
jxfNN1Uv5oJcAHnxknEL3iU/Xb3P3q2Mx6ub8zhuycv4Fi4c14Wd8hPM5bf3
DL4Uvah/49/j3uFP/IGFsk/EvcYJ+//KN8ku59PGheK+qPvhXNxj7LBmKS/g
i/Fs8qWUac0F9eh413AWS6KHuKf8SOyPn+15krdZuyjOgVMYhZ/iePQUPcQz
jD3k+vJbfIzn8/EwfsQPGIkj9j3CRzEPmdZ35MXyfeJ9jLzMQc6l17lxPuPD
fAjDsT/ef7yHG+J9c10ZsvdFj7K94r3g3bwH78YziTkMxc7ox/FdvNV534lz
2acd94xrxna8je/iO5HdwYPxTfRtzbdxrciwri33wBYcl93Kb+JrfIW58o/z
F/gSc3Alvl3ZbO6OT/EZXsfmyFrzOQ/ERhyT3cSv4d/4NtEN67Aes/AJNmAA
PsLHeBV/oTW64v24b/Zeya/gQ3yA/liDtXgZq7EKHTKu/8eN5QLp+n/d/0mY
p1Y=
       "]], Line3DBox[CompressedData["
1:eJwl0jlMFAEUgOGHGi+kIITWSIWBEBMaKTCIXCKoiZUciiCIoIKABwoIeK0K
amJhYkdDa4VQiDZWEioUUQ7RHhNsIFrxEYo/35u3M7O7s5vR0H6mLSki3qh3
W8TZHRFVqlaN/u2NqOU5nVedLqheK7sjGpjpnIts1B+7Jo4lR1xis1LsLrNF
7+xbmb4r4gqvatzuGled18Z2XddfxxNe6zB3qksH7FLtbphv6pYOuddtptl3
847uqtzn6mGWa3rZp3vK3heR75p+84AGteac966/b36gh1q3e8RJ+8dMKM/u
CT/YPeUzlbrXEIf10f45/zvvBV/qi2fb5dl+9qCP7oz46riQszzGIn0zF3OO
JfzOUpbph/k451nOE1owV3CRlVziSZ7ST/NpLvOXpr3v4e0Rv80HueB4ak/E
jONJfuJbjnGEo3zF10wwwT52b34PdqrFXMPqzfdnBQuYz1zmMIv72eR3OJK0
9f/aALWbUK4=
       "]], Line3DBox[{1425, 901, 1010, 1009, 1425}], 
      Line3DBox[{2968, 1429, 3031, 1012, 1013, 2330, 903, 2254, 2968}], 
      Line3DBox[{1433, 1044, 1046, 854, 1433}], 
      Line3DBox[{1437, 902, 1093, 1092, 1437}], 
      Line3DBox[{1423, 1422, 1011, 1424, 1423}], 
      Line3DBox[{2273, 1427, 1428, 2981, 1014, 3148, 2329, 1426, 2273}], 
      Line3DBox[{1045, 1432, 1431, 1430, 1045}], 
      Line3DBox[{1441, 1102, 1104, 855, 1441}], 
      Line3DBox[{1435, 1434, 1094, 1436, 1435}], 
      Line3DBox[{1103, 1440, 1439, 1438, 1103}]}, {
      Line3DBox[{2332, 2649, 3149, 2507, 2331, 3150, 2508, 2333, 3151, 3032, 
       3221, 2334, 3152, 2509, 2335, 3153, 2510, 2336, 3154, 3155, 2511, 2337,
        3118, 3156, 2650, 2512, 2338, 3095, 3157, 2652, 3033, 3286, 2651, 
       2590, 2654, 3308, 2513, 2653, 3096, 3158, 2656, 2785, 2514, 2655, 3309,
        2591, 2658, 2786, 3310, 2515, 2657, 2887, 2984}], 
      Line3DBox[{2340, 3159, 2518, 2339, 3160, 2519, 2341, 3161, 3034, 3222, 
       2342, 3162, 2520, 2343, 3163, 2521, 2344, 3312, 2663, 2664, 1633, 2345,
        3097, 3164, 2666, 2522, 2665, 3313, 2592, 2668, 3035, 3287, 2667, 
       2593, 2670, 3347, 481, 2669, 3098, 3165, 2672, 482, 2671, 3314, 706, 
       1402}], Line3DBox[{2346, 2524, 2662, 2673, 2523, 2770, 1119}], 
      Line3DBox[{2348, 3036, 3223, 2347, 3166, 2525, 2349, 3167, 3037, 3224, 
       2350, 3168, 2526, 2351, 3315, 2675, 2676, 2527, 2352, 3289, 2594, 2679,
        3038, 3288, 2678, 3099, 3169, 2682, 2528, 2681, 3316, 2595, 2685, 
       2788, 2789, 3348, 2684, 2596, 2688, 3128, 3290, 2790, 2687, 2892, 3369,
        2597, 2893, 2944, 2985}], 
      Line3DBox[{2354, 2530, 2353, 2529, 2674, 2692, 3292, 3039, 2771, 2599}],
       Line3DBox[{2356, 3040, 3225, 2355, 3170, 2531, 2357, 3171, 3041, 3226, 
       2358, 2695, 2696, 3319, 2359, 3293, 2600, 2677, 2601, 2360, 3294, 2602,
        2680, 2603, 3320, 2361, 3295, 2604, 2683, 2605, 2362, 3131, 3296, 
       2606, 2686, 2607, 3321, 2363, 2811, 2608, 2689, 2609, 3364, 2897, 
       2986}], Line3DBox[{2367, 2533, 2366, 2532, 2365, 3318, 2694, 2772, 
       2693, 2364, 3133, 3352, 2996}], 
      Line3DBox[{2369, 3042, 3227, 2368, 3043, 3228, 2370, 3172, 3044, 3229, 
       2371, 2614, 2697, 3230, 3100, 2372, 3298, 2615, 2698, 2616, 2373, 3299,
        2617, 2699, 2618, 3325, 2374, 2813, 3101, 3353, 2700, 2619, 2375, 
       3134, 3300, 2620, 2701, 2621, 2901, 2865, 3326, 2866, 2814, 2967}], 
      Line3DBox[{2380, 2535, 2379, 2534, 2378, 3231, 3045, 2377, 3322, 2703, 
       2773, 2702, 3323, 2376, 2816, 2997}], 
      Line3DBox[{2382, 3046, 3232, 2381, 3047, 3233, 2383, 3328, 2710, 2711, 
       3327, 2384, 2625, 2704, 3234, 3102, 2385, 3103, 3324, 2705, 2626, 2386,
        3354, 2817, 2818, 2706, 3235, 3104, 2387, 2819, 2820, 3355, 2707, 
       2871, 2870, 2388, 3356, 2821, 2903, 2822, 3026}], 
      Line3DBox[{2395, 2537, 2394, 2536, 2393, 3237, 3049, 2392, 3236, 3048, 
       3173, 2391, 2709, 2774, 3344, 3119, 2390, 2998}], 
      Line3DBox[{2399, 3174, 2538, 2397, 3122, 3175, 2721, 2539, 2401, 3107, 
       3176, 2723, 3331, 2540, 2722, 2628, 2725, 3332, 2541, 2724, 3109, 3177,
        2727, 2793, 2542, 2726, 3142, 3373, 2910, 2909, 2728, 2794, 2937, 
       2993}], Line3DBox[{2418, 2552, 2416, 2550, 2414, 3245, 3053, 2412, 
       3244, 3052, 3180, 2410, 3243, 3051, 2408, 3120, 3242, 2775, 2718, 2407,
        3333, 2999}], 
      Line3DBox[{2421, 3184, 2554, 2420, 3110, 3185, 2731, 2555, 2422, 3111, 
       3186, 2733, 3054, 3301, 2732, 2630, 2735, 3349, 2796, 2556, 2734, 2913,
        2914, 3375, 3143, 2736, 2797, 2938, 2557, 2940, 3379, 2912, 2988}], 
      Line3DBox[{2429, 2565, 2428, 2564, 2427, 2563, 3193, 2426, 2562, 3192, 
       3191, 2425, 2561, 3190, 2424, 2560, 3189, 2423, 3334, 3055, 3188, 3123,
        2738, 2559, 2777, 3187, 2836, 2835}], 
      Line3DBox[{2431, 2739, 2740, 3335, 2566, 2430, 3112, 3194, 2742, 2567, 
       2741, 3336, 2631, 2744, 2799, 2800, 3350, 2743, 2919, 2632, 2920, 3351,
        2801, 2917, 2802, 2745, 2916, 2918, 3113, 3383, 3022}], 
      Line3DBox[{2439, 2573, 2438, 2572, 2437, 2571, 3200, 2436, 3247, 3058, 
       3199, 2435, 2570, 3198, 2434, 2569, 3197, 2433, 3246, 3057, 3196, 2432,
        2568, 3195, 3124, 2747, 3302, 3056, 2778, 2633}], 
      Line3DBox[{2441, 2634, 2749, 3059, 3303, 2440, 3114, 3201, 2752, 2805, 
       2806, 2751, 3144, 3376, 2635, 2755, 2807, 2924, 3304, 3130, 2754, 2923,
        2925, 2636, 2927, 3382, 2945, 2990}], 
      Line3DBox[{2450, 2578, 2449, 2577, 2448, 3251, 3064, 2447, 3250, 3063, 
       3205, 2446, 2576, 3204, 2445, 3249, 3062, 2444, 3248, 3061, 3203, 2443,
        2575, 3202, 2442, 3337, 3060, 2748, 3338, 2757, 2574, 2779, 3115}], 
      Line3DBox[{2452, 2637, 2750, 2638, 3340, 2451, 2839, 3305, 2639, 2753, 
       2640, 2929, 2928, 2453, 3138, 3306, 2641, 2926, 2642, 2931, 3377, 
       2991}], Line3DBox[{2464, 2582, 2463, 2581, 2462, 3256, 3069, 2461, 
       3255, 3068, 3210, 2460, 2580, 3209, 2459, 3254, 3067, 2458, 3253, 3066,
        3208, 2457, 2579, 3207, 2456, 3252, 3065, 3206, 2455, 2759, 2780, 
       2758, 3339, 2454, 2841, 3360, 3003}], 
      Line3DBox[{2466, 2644, 2760, 2645, 3378, 2933, 2932, 2465, 2842, 3117, 
       3361, 2930, 2646, 2934, 2878, 2879, 3139, 3307, 2968}], 
      Line3DBox[{2478, 2586, 2477, 2585, 2476, 3263, 3075, 2475, 3262, 3074, 
       3215, 2474, 2584, 3214, 2473, 3261, 3073, 2472, 3260, 3072, 3213, 2471,
        3259, 3071, 2470, 3258, 3070, 3212, 2469, 2583, 3211, 2468, 3125, 
       3257, 2781, 2761, 2467, 3341, 2843, 3004}], 
      Line3DBox[{2492, 2588, 2491, 2587, 2490, 3273, 3084, 2489, 3272, 3083, 
       3218, 2488, 3271, 3082, 2487, 3270, 3081, 2486, 3269, 3080, 3217, 2485,
        3268, 3079, 2484, 3267, 3078, 3216, 2483, 3266, 3077, 2482, 3265, 
       3076, 2481, 3342, 2764, 2782, 2763, 3343, 2480, 3005}], 
      Line3DBox[{2506, 2768, 2767, 2505, 2589, 2504, 3285, 3094, 2503, 3284, 
       3093, 3220, 2502, 3283, 3092, 2501, 3282, 3091, 2500, 3281, 3280, 3090,
        2499, 3279, 3089, 2498, 3278, 3088, 3219, 2497, 3277, 3087, 2496, 
       3276, 3086, 2495, 3275, 3274, 3085, 2494, 2766, 2783, 3346, 3126, 2493,
        3006}], Line3DBox[{2613, 2948, 2612, 3009}], Line3DBox[{3010, 2624}], 
      Line3DBox[{2648, 2952, 2647, 3031}], 
      Line3DBox[{2661, 2517, 2769, 2810, 2809}], 
      Line3DBox[{2765, 2844, 2845, 2762, 3264, 2847, 2846, 2479, 2881, 2882, 
       3368, 2880, 2884, 2964, 2883}], Line3DBox[{2825, 2955, 2826, 2966}], 
      Line3DBox[{2833, 3358, 2834, 2776, 3345, 2545, 2730, 2719, 3178, 2546, 
       2409, 3179, 2547, 2411, 3181, 3182, 2548, 2413, 3183, 2549, 2415, 2551,
        2417, 2553, 2419}], 
      Line3DBox[{2850, 3362, 3140, 2784, 2849, 2848, 2860}], 
      Line3DBox[{1190, 527}], Line3DBox[{2969, 2837, 2950, 3001}], 
      Line3DBox[{2970, 2838, 3017}], Line3DBox[{2972, 2995}], 
      Line3DBox[{2973, 3137}], Line3DBox[{2974, 3359, 3002}], 
      Line3DBox[{2992, 2956, 2716, 3371, 2831, 2906, 2830, 2405, 2874, 3367, 
       2875, 2715, 2829, 2828, 3357, 2404, 2629, 2714, 3135, 3330, 2827, 2403,
        3108, 3241, 2713, 2627, 2402, 3106, 3240, 2712, 3329, 3105, 2400, 
       2720, 3239, 3121, 2396, 3238, 3050, 2398}], Line3DBox[{3007, 2994}], 
      Line3DBox[{3013, 3000}], Line3DBox[{3012, 2544, 2949, 3145}], 
      Line3DBox[{3014, 2558, 3015}], Line3DBox[{3019, 2643, 2951, 3116}]}, {
      Line3DBox[{1443, 1617, 3150, 1444, 1628, 3160, 1468, 1637, 3166, 1478, 
       1645, 3170, 1487, 3228, 1654, 1496, 3233, 1662, 1506, 3239, 1949, 1950,
        3175, 1951, 1830, 1831, 3185, 1964, 1840, 1841, 3194, 1976, 1849, 
       1850, 3201, 1987, 2095, 1854, 3305, 1993, 1855, 2209, 1995, 2099, 2210,
        3361, 1858, 1999, 1859, 2157, 2156, 2158, 3368, 1861, 2214, 2297}], 
      Line3DBox[{1445, 1618, 3151, 1447, 1629, 3161, 1469, 1638, 3167, 1479, 
       1646, 3171, 1488, 1655, 3172, 1497, 1932, 3328, 1934, 1935, 3329, 1822,
        1824, 3176, 1953, 1832, 1834, 3186, 1966, 1842, 1975, 3336, 1844, 
       1978, 2091, 2092, 1986, 3376, 2204, 2203, 2205, 2096, 2097, 3306, 1994,
        2208, 2225, 2207, 2211, 2100, 2155, 2101, 3307, 2254}], 
      Line3DBox[{1449, 1620, 3152, 1450, 1631, 3162, 1471, 1640, 3168, 1481, 
       1906, 3319, 1648, 1490, 3230, 1804, 1657, 1499, 3234, 1814, 1936, 1664,
        1508, 3241, 1825, 1954, 1672, 3332, 1517, 1835, 1967, 2036, 3349, 
       2037, 1526, 2145, 1845, 2199, 2039, 3351, 2201, 2040, 2218, 2146, 2202,
        1851, 2206, 2235, 3382, 2318}], 
      Line3DBox[{1451, 1621, 3153, 1452, 1632, 3163, 1472, 1889, 3315, 1890, 
       1891, 1792, 3293, 1793, 1907, 1805, 3298, 1806, 1922, 3324, 1815, 1937,
        1816, 1939, 3330, 2072, 1826, 1955, 1827, 3177, 1957, 2082, 1836, 
       1968, 1837, 2196, 2195, 3375, 1970, 2087, 2197, 1846, 2200, 1847, 3383,
        2247, 2198, 2281}], 
      Line3DBox[{1453, 1622, 3154, 1455, 1876, 3312, 1878, 1879, 1780, 3289, 
       1782, 1894, 1794, 3294, 1796, 1910, 1807, 3299, 1921, 1809, 1925, 2067,
        3354, 2068, 1938, 1818, 1942, 2073, 3357, 2074, 1956, 2190, 2189, 
       3373, 2191, 2083, 2144, 2084, 1969, 2194, 2223, 3379, 2193, 2246, 
       2320}], Line3DBox[{1457, 1865, 1866, 3156, 1867, 1771, 1772, 3164, 
       1881, 1783, 1893, 1784, 3169, 1896, 1797, 3295, 1909, 1798, 1912, 2062,
        3353, 1810, 1924, 1811, 1927, 2069, 3355, 1819, 1941, 1820, 2185, 
       2184, 1944, 2075, 3371, 2186, 2262}], 
      Line3DBox[{1458, 1761, 1763, 3157, 1869, 1773, 1880, 3313, 1775, 1883, 
       1785, 1895, 3316, 1787, 1898, 2054, 2055, 3296, 1911, 1800, 1914, 2063,
        2064, 3300, 1926, 2178, 2177, 2179, 2070, 3356, 2141, 2071, 1943, 
       2322}], Line3DBox[{1461, 1764, 1870, 1625, 3308, 1462, 1776, 1884, 
       2021, 3347, 2022, 1475, 1788, 1899, 3290, 2027, 2028, 1484, 2132, 1801,
        3364, 2172, 2234, 2174, 2278}], 
      Line3DBox[{1463, 1765, 1871, 1766, 3158, 1873, 2049, 1777, 1885, 1778, 
       3165, 1887, 2052, 1789, 1900, 3369, 1790, 2168, 2167, 2277}], 
      Line3DBox[{1464, 1767, 1872, 3309, 1769, 1875, 2050, 2051, 1886, 2162, 
       3314, 2161, 2244, 2237, 2326}], Line3DBox[{1600, 1746, 2007, 2298}], 
      Line3DBox[{1601, 2006, 2008, 2005, 3346, 2017, 2107, 1862}], 
      Line3DBox[{1603, 1748, 3275, 1587, 1733, 3342, 2002, 1572, 1720, 2000, 
       2103, 3341, 2295}], 
      Line3DBox[{1604, 1749, 3276, 1588, 1734, 3265, 1573, 1721, 1998, 3257, 
       1559, 1709, 1996, 3360, 2294}], 
      Line3DBox[{1605, 1750, 3277, 1589, 1735, 3266, 1574, 3211, 1722, 1560, 
       1991, 1997, 3339, 1990, 2015, 2094, 1852}], 
      Line3DBox[{1607, 1752, 3278, 1591, 1737, 3267, 1576, 1724, 3258, 1562, 
       1711, 3252, 1548, 1699, 3337, 1984, 1536, 1689, 3302, 1981, 1145}], 
      Line3DBox[{1608, 1753, 3279, 1592, 1738, 3268, 1577, 1725, 3259, 1563, 
       3207, 1712, 1549, 3202, 1700, 1537, 3195, 1973, 1982, 1972, 2013, 2086,
        3187, 1839}], 
      Line3DBox[{1610, 1755, 3281, 1594, 1740, 3269, 1579, 1727, 3260, 1565, 
       1714, 3253, 1551, 1702, 3248, 1539, 1691, 3246, 1528, 1681, 3334, 1962,
        1518, 3345, 1673, 1960, 2079, 3333, 2289}], 
      Line3DBox[{1611, 1756, 3282, 1595, 1741, 3270, 1580, 1728, 3261, 1566, 
       1715, 3254, 1552, 1703, 3249, 1540, 3197, 1692, 1529, 3189, 1682, 1519,
        3178, 1674, 1948, 3242, 1510, 1666, 1946, 2288}], 
      Line3DBox[{1612, 1757, 3283, 1596, 1742, 3271, 1581, 3214, 1729, 1567, 
       3209, 1716, 1553, 3204, 1704, 1541, 3198, 1693, 1530, 3190, 1683, 1520,
        3179, 1675, 3243, 1511, 1931, 1947, 1930, 3344, 2011, 2066, 1813}], 
      Line3DBox[{1614, 1759, 3284, 1598, 1744, 3272, 1583, 1731, 3262, 1569, 
       1718, 3255, 1555, 1706, 3250, 1543, 1695, 3247, 1532, 3192, 1685, 1522,
        3182, 1677, 3244, 1513, 1668, 3236, 1503, 1659, 3322, 1919, 1493, 
       1651, 1917, 3352, 2060, 2285}], 
      Line3DBox[{1615, 1760, 3285, 1599, 1745, 3273, 1584, 1732, 3263, 1570, 
       1719, 3256, 1556, 1707, 3251, 1544, 3200, 1696, 1533, 3193, 1686, 1523,
        3183, 1678, 3245, 1514, 1669, 3237, 1504, 1660, 3231, 1494, 1652, 
       3318, 1905, 1485, 1643, 3292, 1904, 2284}], Line3DBox[{2299, 1791}], 
      Line3DBox[{2303, 1821}], Line3DBox[{1266, 566}], 
      Line3DBox[{2315, 1856}], 
      Line3DBox[{1863, 2108, 3362, 1585, 2048, 2047, 2123, 1860, 3264, 2106, 
       1571, 2046, 2045, 2213, 3378, 1857, 2212, 1557, 2044, 2043, 1992, 3340,
        1853, 1545, 1697, 3303, 1848, 1534, 3335, 1687, 1974, 1524, 3184, 
       1679, 1515, 3174, 1670, 3238, 1505, 1661, 3232, 1495, 1653, 3227, 1486,
        1644, 3225, 1477, 1636, 3223, 1467, 3159, 1627, 1442, 3149, 1616, 
       1864, 2009}], Line3DBox[{2260, 2059}], 
      Line3DBox[{2061, 2010, 1918, 3323, 1929, 1920, 1502, 1667, 3173, 1512, 
       1676, 3180, 3181, 1521, 1684, 3191, 1531, 1694, 3199, 1542, 1705, 3205,
        1554, 1717, 3210, 1568, 1730, 3215, 1582, 1743, 3218, 1597, 1758, 
       3220, 1613}], Line3DBox[{2263, 2078}], 
      Line3DBox[{2090, 2014, 1983, 1989, 3338, 1985, 1547, 1710, 3206, 1561, 
       1723, 3212, 1575, 1736, 3216, 1590, 1751, 3219, 1606}], 
      Line3DBox[{2102, 1558, 1708, 2258}], 
      Line3DBox[{2104, 2016, 2001, 3343, 2004, 2003, 1586, 3274, 1747, 1602}],
       Line3DBox[{2215, 2250, 2226, 2283}], Line3DBox[{2252, 2098, 2313}], 
      Line3DBox[{2253, 2232, 3377, 2153, 2154, 2152, 1546, 1698, 2224, 2041, 
       3304, 1988, 2149, 2150, 2148, 1535, 1688, 3350, 2038, 1977, 1843, 1525,
        1680, 3301, 1965, 1833, 1516, 3331, 1671, 1952, 1823, 3240, 1507, 
       1663, 3327, 1933, 1498, 1656, 3229, 1489, 1647, 3226, 1480, 1639, 3224,
        1470, 1630, 3222, 1448, 1619, 3221, 1446}], 
      Line3DBox[{2255, 2081, 2307}], Line3DBox[{2261, 2287}], 
      Line3DBox[{1341, 819, 2937, 502, 754, 662, 3367, 1509, 498, 1940, 1817, 
       3235, 1500, 493, 1923, 3325, 1808, 1491, 1649, 1908, 3320, 1795, 1482, 
       1641, 3288, 1892, 1781, 1473, 1633, 1877, 1456, 3155, 1623, 1454}], 
      Line3DBox[{2301, 2286}], Line3DBox[{2309, 2290}], 
      Line3DBox[{2291, 2242, 1838, 2310}], Line3DBox[{2311, 2292}], 
      Line3DBox[{2296, 2249, 2105, 2330}], Line3DBox[{2304, 1665, 2305}], 
      Line3DBox[{2323, 2032, 1928, 2136, 3326, 2137, 2135, 1492, 1650, 2030, 
       1913, 3321, 1799, 1483, 1642, 3348, 2026, 1897, 1786, 1474, 1634, 3287,
        1882, 1774, 1460, 1624, 3286, 1868, 1762, 1459}], 
      Line3DBox[{2327, 2126, 2243, 2125, 1466, 3310, 1626, 2018, 1874, 1768, 
       1465}], Line3DBox[{1609, 1754, 3280, 1593, 3217, 1739, 1578, 3213, 
       1726, 1564, 3208, 1713, 1550, 3203, 1701, 1538, 3196, 1690, 1527, 3188,
        1963, 1971, 1961, 2012, 3358, 2080}], 
      Line3DBox[{2265, 3359, 2293}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
wnX2VrUQMG4izvJcH+MityrruTm6cVwrk4Vzq8kQYc8hbeVDhgF+3Zee3Nwo
GcLXcWSTYeUK3TP7fvrlUyxm2diN2+9XxCGJcfxnDfl1GNdjsrc05enBbV85
29FbQwau2lD7Y95k2Gz6ruIq/wbk2KgydwHTx5awHMHHkoGxetGSe7QHd/RS
1IgLxs0N4+RqMD7Fc3jrealeXFnSvqj1tWTo4gxTX+FFhgAKX+y7gzxop8iZ
iKeY3nrbR8Pwn3ayxVZ/Yu3DyUW3R3Ri/Dll5MRNjLORNE+JmPXh9o4lf7xc
R4bBfIt9BR6Y3/e1zBysNiLvLbqGzDlkGJWp1T6M6Wv8mj3CtfpxS88/JOzG
uPFkyScujG8p7k6+VtKP23V6e0xtPaZTPWWu6k6GnOeKTF5Vm1C3ilCjIaZP
bxnMGI0hQ+WXmK15JQO43oRDdgEYfxWxc7AQ4y5qS+nvtw3iolpuax9txPza
E8jd5kqGkhjf4M/ivKjbhn6yFtNfH1o15ITpuYK/vnI+PITTt+iMYmD83aX5
axoY19omNC2QP4RrWFST7mwiw1kpiw1SLlg+Fza/3VXOh2Rl5C3En5LhS1fF
JU5Mn3dWRuXB5DCuv7P90YWfPGlq1dQjMqAjxylRRiO42qcmzu4tWF65BXK7
OJOhUYo89vqmAOq/l9sVh+kbO9geJmL6DyX+JzjyR3FPhbdu6cD4RracLVYY
n1xY+JwkP4Y7ahVfrN5GhgdNx22zHLFxObG6cv8pQfS9+5L4hlwyhBkYvxbF
9Ly9F0hJ2eO4QO11QyoY55q2Z8xHk6FHKSeU9/gEzrbBsVT+FRno1HBUdJcM
099rdKTOCqOreb6HHmL6T3pNSumYfmuehU9e3yQu6eTbuA6M01Q4nt7EONG1
fW2L4hQOn6D+TP015udDadlYezJ4GWnZlCpvQ8Fy6YNCz8gQ35InwB/9c9w2
KMsI4nGigQGnLmFc9JWP1WgU5t/06agyRzyOk/2QhF8nGULzSmN1b2NX3MrG
HM/tyD1dckUxpj+14sh5H0yPvJ5edLIm4ArMhqY+YnxsFO07jvHUjGd71/cQ
cOd++MnRuskgn8ikSL5FhiWnT/r7x3Ygeyq5UyePDB6PGvrxD8nwnr464jSB
iHu0pTE0HuNJppot8Ri3eiiwle8cCZfc22vg0UcG39u115StsPw6vAsXe1kE
8VrxejDnk0GXLdpQBtNLP3uW5OAxjbPUvxenifGYnp4ZciQZdD6sHe7+Mo0b
Ho+sPz1IBltNkUxrCzIMJa8wo68WQ8bTpc7VmN7hx2M3B0xfsEmbkqA2g1uj
8NmN8zkZEjxucYtg3DX8xvz6nhkcS1qJ2tkRrH59/4G/cB379/3HOVjxu1Dj
xzeX72N6YY2RhzkRZPi+PFWmpUbFNeR30fAYfwonwrUwziHDtz99iop7z22c
8Wgc89dIYz2TCRlW79lq3v1OHG3fb81sXoD5n6FW1/6ADGaGeXJa/nTck3tB
b5oxHnrK2OomxlOojmMJkgyc6cspt114MrwJf8Z7yQirS/FKcabH9yIjZqOA
C4VYnqsOTwyGY/Pp9s7m+jVzOCvbT1drMR60UeKGDcZfRq1iuNbP4ezKTmes
nSZD9fNj+caXyPB41nrm0vA+1Gepdc24iAyXlz/ZvAnD6mQ0XajR6i3uQOx7
uW6MyxKkKZcxXkiWnT/d/xb39ke+qhoVy3PbCLbV+mTYcVTNOoIghULudll4
FWPz02p7ZG4olof+2ppnVr7HdXw7o7SMcVwdmbwf46h8KaTI+T2uJMhY5v0s
tt4IVyTitMnw6K6gmNT9A6jp4JrZmhIyHLHLpliGYPm/HHBCvecDjqXUY6Vy
KRkM1uEmSMFkOL0jTuiR3kfc3HGVbVwfyNBaz9n0VQNrZ/iNe80NWXQ0T+iV
YBk2T/U8fdh/6sNf6YpMfcKN52n4Pcd4qpRCnmMQGTbZUtka7i7gjvPcFS75
jMXrhp3SXhUylK3b2b8r+CDSEXsakfQCy+/SKfC7T4aQmKpGVfnPOPuFjpBj
5WTwvk9xIAaS4Zq7G68o8TPuFU5x/bvvZDB1Sm2uPIbVGX9k5LZ8GJU6EVM1
sPX6ln7dtn5svX6awXAsoS/h6ANBtd8wvt60ymkHxpOebwzRzvuKK/PBK46v
mgFfO5adkfJkeHaXfMD/1VEU/W3BTAJbZxUsawQ/YOvsRw4Dm2TW77gJd+Wh
WYwrh73vl8S4mPKP90rk77hQkvz+h+tmIE6N4hQpTQY7ojiX61qErKOKfY9h
62PaJqaJQWx93Cor/bG0hwn5Xkqb4MPWu9ZN+89/w9a7Mbkz6WLazMhu9dfI
A5tnoHH+NGv8bjLMPjeJX3HjONI2pR2JBWxfUeM674yta4ahD7ss5lagEgUj
30BsveuOzFwZ4In5Lc7/4ZkXC6qwbArCb52Bee7wIndhbB2REpE4nnASya9+
VK2ArUeNxwW6X2PrEe/k0LLajVXI96lsiGoDGfwfs/fWuGF5Yk7boc+zGv1w
Dzz9RmIGFDr5V67jIUOL18IXiswppLNdrf4oto6E3rlv0YStI3SJcyZDuqxI
zknjgnkzGRL3dL2NvofpZaNyngixoaxDowekD83AWgHp+FWryUAVqOkdUz6N
zrOulMlsJcOe0VbVs07YevuhLbq6hx0VJwVnLGDrgpqRKueSAxnO/zBOuVXN
gTbvXp11VnkGdrGfz+BfnIZG5iP3Euc1kMKpzq0RHWRguaqdrXuHDAKRKt0e
zFzoZYGfP8cbLD8MT+j22WF5t1vgsXwIFxLteFTloTsDGbqOEuTpaYhTFbLv
zdVCaRFda3ixeutCpHNU22D1w/igAHvwBtTWO/OisYcMmkeiP6zB6vCNds9T
olI8qLfuvpLkjRl4pyniNNs9DYYH5N5fuaCDwk8NJV0cwMZv3wejazex69GX
wiUZm5BMWtCdE0NkKI7dsc/2Bhl6mTid4y03I9O4Y8lTbjOwkU5ZDn05DYGD
A9QbSXooKctKy3cM27e8d0B8plhd7CbtuevKjwQ1IlcUT5Dh9UJO7PhVbB5c
+LLZ2VIA8foekFKNmYFC2Xr5T4nTcE/pjNT65wZo9Sqppk4iGRb2J21Nu0yG
i7qXcoPUhJHD6cBz58hkOOgmsXODAZa3yuUJAdZbUTU+20e5dAZMLpa/4XCf
hseidxvfNhuh4YaLggEMMuwW2BlfrIPV7do958OldyAZjd4DlvNkWF7ZqFep
hc3rrW2ae0k7UF4Gfg3T8AxMEp5cu6I3DSyNe4UVt5mgsaoXiZyLWH3QgfFx
VWxfmlmTXyQshkx7V7BaLGH7ABGbWgtlMhyj2G8a+iqG1tiPjP1goWB1ZJaZ
KjoNq097aM9pmqP1iuN+H1lmQMo5xzbkKBn8eNVNRZX2oDrirObwmhnouC4/
7HMIq0/Gi5rHLuxF+UFfh88fpoBgkUHNBJUEAvzi9OB2K2QYt9b+C88MTI0e
2EyXIMOhgJxjExuk0SrHs0befDNQwbLoLS2G7bvup80H1Eoj6cjBLQHmFFBS
e6RUWESCCxKRpxkVtmi9jax83VUK+N9UILtVkKDBdsNaznJb1L2twk3SkgJG
/NdvG+aTIIbWM2B9xg4dcoi9cekuBby2XWU9m0oCr9bG5wWn7NGp1oabb25S
oCxnaNVrTF+U/6rY090OMTPlSI3aUSDMU7bgeAYJzjIEhgNU7yB1u/Mk1UAK
CG1kE6wOJsGVXv5MsQcOiKdlV8XO2xTojcxzVc0iwez4LiLKxPTjA/HLdyhw
TSPoQCnWLseI5TaJgbsoRPRO9IVICkQSCPuyPEgwvvtW5jVFZ3RITcQ7G7Oj
J5Xglp5JgvfbOf2k1bGc/PB64Yw9BRpS+dbkpZOgN1vTd57VEVEP5c1dekSB
k0u4ilf3SJBo79poec0FxZ8vmLO7RYF5/kryzackeLwcrE/2d0QbpNZErLSh
wC3N+51VOSSwHnut3PDWEb1PazaQweyIztbyfcDsMG+ubBXb6IZqxRyvD9yg
QMrhesk1hSR4ssdBEm45oQDpyHfvMX696mA+qYAEJ/lISVqPndDejPPbxR5i
fn2cq41yJ0GmvExtrZk7Uhba9+jn9ybeLzbV/fze5I7HGYuf35vE8f5vXlT0
v/l0Tp7lT77qsoINbxgFkj76Jz3xJQHVtHxiwtwDybyee/sYyweusCxeaywf
BrhK/ObYXJDwK7XLWhiX+nSO1IjxV/3WklvUXNDbapxZVgDWz4bOTrUQEmge
NtdT2eiJGsb1eCKwcbcXdR0lY+N+MSzmpV2xK1KYefI+3oIC7c8Jn1djfgV9
bDAM2eaGWLsbTqt6UoDl3pZvXNEkqN78oa32oif6UWr9FmH5dsXR3oELs7OR
9uwEO787ivQ7puCI2Sl7oHR5N2bn8CX3/Mvp7ihru7iDhhMFfoSXjgQnkuDr
bEz//vueKIS8vGc/1h+zyXNR6s9JQFI5XDZ1wgMRFOdngjC/XjFLPTHD/PLL
k2O/jPdAIql2BfPYOL44Ojxql02C9CaezNBMT9QltTusGdMnWH2UEML0LSI+
LjhBT/T4uOOrM6YU4J0+JLO/jASOtgS1RVtP1BjDGmGI6cfPrzaNwPRfB2fU
hEs90YuMr/F6mJ50oFdBFNMHBH/ZoOfpie5FPFaLw8Zrat+aT5ew8aIcVc/+
8MITBUnw9cxeowAutGFfywtM7x2c5bPGC+19zm2ojdnpG27L3I7ZOSd+cpuG
uBfyi+MrpWD6nUZ6iR2YvvFg/6mhDV6IKfVLVL0ZBbYtnOe6XkICjQ32V0kE
L5TjtmW2C4uP6cqvqjewOF/uqPvoZOqNhAvyEz0w/efZ5bYiTO9wa95rFbs3
2hadUyqA+cUfsTTUhPm1sTJGCpfmjfgC4zsksbhV1vX6SGH5r3uh/JqJqw/a
khSeZXkdy/Pcm/kPijG/lh1VnfDe6P7DI1IKmB12J6fGKMzOjPjFN6vUfZBc
KPVuFzZPJ405VViwedr03ri0194XiVSwqrJidr4bPt/8FbPz0LNDnhDng07b
TPIYY1y9niU9HOM7L2t5Ro35oLbMD0/YsXnNZNeq44nN6zrynuF4TT9UkJSU
mIDFrfqaHXdiKQlCbL4cyT7kiyJsN/KVYtxj6tp2D4zTalgeCBn4ohO5WQPb
MTsTcNnlImbnhLDNiTsc/mjMI/ieMRZntemnZofKSbBjm8biaLUv4jZbkXoV
48oZ+BA5jKv/kLuS0+SLtHY3s5/G6h7j2r73Z7C6t+db7Y5PRf7oHksgM5cJ
BQ6xfH97GRuvy368p9c7+aE0orDmSoyf6o3Rt8A4urv28ulQP9Sp3yyeZ4v5
JYq324vVQy3esq8+JwOQ9ocAQhTWf30XSrMf1n9NSszRoWP+KP/Ht6Cf+aaw
m/HxFcZHKqOFWG77o3nnjbt+1jH8gyNMLdh4WfjGmunWBqAWN8GaQ9i4c7as
zqjAxt2IWq0++NEfWWrvKMn9mbeiT6svYnY8qn0me48EoKLbYzGl2DwdV/Pf
9vUZCc6czlphtScQsSkNrduC2anbZibWhdm5v/OyVFp0AHoQLQRSmJ0BrsWp
cczOgorIXoHZAPRmyJYajtU9Pv1nDrnYvFZ4Y3Au3j8QiRhIsl/G9K84F4cy
Mb2vgvqlepFApIvYr67F4rOKd4lFEotPGL4pgS0oEN0+H2qwyezn955f0wBr
V69tT6BfbyByajYM5cH0M/Ws57Zh+qDVYrsz0wJRyxpz+Pl7+NGiMSY/fw8/
kIswmM1zH5nwitb+5IddSq/95D7pkh9+8ksF1/+XXmn00f/Snwpixf/kq3gz
a35yZUMH05/89HFg+/m7+pxnriSNY/kw6LPVXwVrdz7EKFWOcB+lJvVbZ2J+
Pe2Q5N6N+dW45B7+bHcQWnnzjlcHpn+VO3f6IqavOm0l/owpCAllKxlVYP33
aEwZk8Pm+9dqz+CGxCD0rSrhFic2j2Lso20UsHlEWb1enndXMCqu6i1zw/SJ
7RUPHTH9UG+T+eJAEKpK/q7HhLU7m7tCuw9rV5STnctJLRg1CnLvKMTi3+sj
pKuAxf/HWzsZRa4QVCHe5xyI2eltMl5zCbPT7v42XyU2GKVv2Pe2CeMF+2hb
ODC+tGEGZ0sORqa5FPNMrD6PvKwMYcXqreh2runb0yEof/o+z2pMz3Pi4vQ0
pj+85TA6cSoEVdZLc23B+CfBNPU2jLviCmjV9iFoW2OG3mqsLg06NPP7Y3XJ
WOu2MnN2KOJPIw+xY/GpE767+B2Lj+5sMI8dIQTx0t7Yrcc4NUbaegnjH3dd
+m72IQTV7ZzqJWH92Zl8N/YJZkekmrt6z8UwdOu9sv/Pelud9UDAEZunN2YE
lgb8QtHtJe+yGIxvfNWn7oRxXx7Cd+MHoSgmqIdb56edL9LlRzC/4l2qAncu
haFQvhPjIVi737+U7vw5vgOCUc3lqmEo1lDqhiPGA5DOq5/z+pudoOQ62zAk
8sNw0QiLs4Cq+Ct1LM6Xwr/LsIeEoxM5piVsWBy2jpYHp2FxoNJ8g58shyFz
2UNJnZidr6NO03iMz7eW5AwrhCNrozgHPmzcV+9zNq/D9g88VRHWS2seIOf5
sxFCmJ1Nqms8XTF9zMxqgmFqONo45O5QhNkp0oo1eo/x0h3dX9k/hyOvYIn+
AGy+BNPfbQ7D6ues24FvticfoOGss7f6MH0oiyu9AdP7JlawXBd6gGRDrXz3
Y7wGyYy7YH4pHTtdbnXuAer6+I3yAmtXb/WPDT/n6WbR2k680wMk1OtJP4zp
WQgBJ6wx/YYuffWLJg/QATYiOo/F+bx11e1bWJyZ1xdskEl6gNQXrNULMd49
V7L2B6ZXO7jbpjr7AXokdsr5p578rk7XGtNXXnw6bJH2AG2tw8d8Mcb2Y5ml
B/swnnrfRsz/xQNkI/mVVxVrtzJhyeQIZqcoPPIN55oINBGTpK+Mcfq6jjAF
jFeEW+Yqc0SgWO/bKg8w+2UjH+x4MDvbO4LpASwR6LSd4umf/oYNvt/6c3zd
bxbnOOr9+vkyN/65QNfPcUw/mquNxUGhUiHJ3/evex7t8l7FV+fEDHDGf849
uTQNTWpdKTrmCn+Z/YpvzNJM2L6uYwkVXAnF4lDPN/c55a/7nsJqyvy+D5a3
Z43HHpdi9SqnYsOZZ89//d7Rn+XX71Tl5T6cARGNcmtK6jQ4FPOlpqqq/WX2
d0UUFhuHY+uOl3iliQ8JlHln3wuFWCCj8cA3tUlYvhE3rLDalwkciamOlSYk
VF3RyvJ0+Of/f9Ht3JVQgq3PanbE70TUXnvTOqOAChcvVwu7zJfB1EfFA+Nj
BMSvOdw33E2F9DTuyX4ywKuVkwSTewR0RZCDZ282DQwCrhe3zjXB+yNU/QP9
UyjlZamfdiIN4m+V3VtdUgc9+D3G1jJ45POoft/P/9+Hvv2ztvKxViDilZ+7
DU0g7XyOjWzadMjKOZYtJtgBXW0qVsEHJ1DfQ0HCKTodxg49UXxBfwN4z7OC
aftHUfH0G7vnHXRwvVruyCzSDdtSpEv6c0bQ4qELNo7HGMBb7pdtW9sD61fJ
3eFyG0TOD60jDvIyYEqEU6JVqg8e2m36kMU1iNTLRWx79zKgXTaxwVR0EHgJ
On1+ib0oW/Wye4gxAx6c1rQdXeiHDaTHDymdvWgumKtu+DQDTrRuMdy0ahhs
FM4Y7TTvQju230h5tJkB8kLSZoXvh4HLeWK7jl4XuvAxtMxzhA43LHkSqx+N
wSZc2TTNtR3lZonpvnGjgxpN6P4V9kkIN3sz8YTUiB4RKwpoO+lgrSR3Z9lz
ChiPvVKZWADF9Zzb78tKB8tgX7+M9ClgT04SCRKoRfK2qmZGD2jgbYKGfyTi
4dlla0UNyzIU+iCFCe9FA/GE1snqPDw0VI3Ucze+QC9ltt3NmKNC/s4gv5RU
AlSaxxfccy1AwobluD5dKnQ0H+9l9ySC5Kp9ezvGMtCRIJ1t3ckUcKTmPkqz
JP0/7L15NJdf3/edCFEkUSpDKUpRSCFsYwMNkkQkpaRJpihFZjIPEaLMReZ5
/pjneZ59J3xHVDSS53vel/tcz7qv5b6e7vv3W2fXs85/HNZrHev47mMfe38+
7/fe+zg2dMyfnhmMDUMkw7mD5KckuKi0y8V45D3URZW6+2ri0Q91mv9+TzJ8
bL5naxdfDN89nrkORGORC+HnYPgN+nP/5mPJUFwDPjfdf516PYEmt0c3XmGh
QrYPzi6E0AwGCn3u5q0jKDom0LvvHhVMN8gfNWTrgudvNt87920AeRRjT294
SQW70E9Doj69kBZ6+fweiV5UnnK2ikeJCp1YtjoXzhFIPRjp7n2hGa3t5N94
Po4Mc896TDA+WOA0HmYw185HLGEV9bqfSHDc+euiZBIOgrponumaaav2Lz9G
oXAuAzKwnGg8LMKUBv52DpXnuHEoUX33qL4eBVwar1IiWspggcv07AlFDNK5
FCYlz0cFv854/tRN9UDtKa4KCx5F1aSDie9eUWG67lKJCKUNnnceKqh8MYhe
S+Veud5KBa0ixZj57m649eWpFmdkL/LnDCehtVS4Qk/x3zTGgPNlxdbDO2tR
pJzS5dnPJJh2/FV7IxkHc32Tl0XmUpBEyxM2m4Mk0Avx9BkoxUNZwBtGi9bV
v/fu2XXd+Zc0BbKPucbENGVC+O5C9/VlGLRN7BDS3UkF5b0XgF+9EnDIKjbJ
YQydD3exjiqlwljJ/s1LbY2AbeKIrNAaQgut2y+RWGlgabe7Yk9eJyS43rGr
2tqHLF85/2NIHGbPnWqOGu2l6/m3qtfXdyHaUceDi8EUyNF3u/gwewKCrcH7
Y1gZGlW8aFG5jQTzzwvEb/Xjgbskf2Pqnd9/37+tPjopmpUK0s+fnFo+mAMp
nfXCAZ7jaE7g7vCmbiq8P8JrE+ZcDTh3Zf/b8sNI2Dg4O1mFBned+UtZ2Fsh
nPZTfVdHH9pWV8pec4EGY1WVmsWl3TB4vv+oqmsX2hm1N3ZxAw2+F42SuiUH
4Paux8SY5WY0lGnLujBFBoWjZxgqxbHAdO3zRR2JnL8szq/GZcIUcjBdVChu
YfD3WMyDEnJVYbP2CPo26eXPa0mDPGa+jdmyddCTt2h9pLwfZXUW+b65TYMz
/ja9S0J9cOXSwzMHE1tQpb7qlk+9VJA0F/AoJgyBifcs/zb2WvS4iwX1fyNB
oWfq6MA7HHyzsY8z5v4/3v/3/5pnRx5RTXhBg5YzH029vYpAuks5Gj8wgK6t
3znVJEeDY897+Yx/DcBHM0b2JONaZEnuCObVpkJ5rfiaTRxj4O5Rrn1ytuRf
vQ7tP3F+FaO95/fNwOYFWHNAuBy2Ou8bPyrUi9ZV6UVtzaPCfucE+XdPR6A2
Qmzw9XgJupwtL15uToHwzWLc/rcxwJeVfa7JMeOPu6/V+LuXoeUJ72Zgqm5Z
hxhbBd8YUrIMd3QiFrFG2dg8ClzQ7r9Z3DUBqqXC+w3XpP9x5f+reNKPboWP
czOACVPWnJWsB1xM8nLI5wZkUlvBsGuZBKSOg0LH6XHeZ3BN46vcv//7pX8a
P6YofGhmcgbY6kjpd63bgPnZVTGLbYAcTG0FgXEa0mfN2X9+mgT9s+a6b66U
/XHl/9P4lrbKs+t3zoBDgf0mrEEf3OZS5kkv/P9v//q7eXdox4/Cu1PQeGza
uvhuP2j1q8eaTeL/uHL+m/+b/9/wF8mPLozeIMKHeDHXT9ZJEKiQni2RTkBh
1h/ishVJIOrFx6XDVQDj8WkWyU/wSN3rgkQV3ad4bvx2K/dyJUw3JO4Q0MCh
Ta1BT25q0nVLQZA5jbMRnmybKsCLTyCbV7JN39Mp4Mls/5pjqQ3ko6zQSbNR
tHZ7qT7jHAVep6e0ihd3QU+ylCRb1hA6tdibpED3WezF/POHVHpBEb+uxOhb
PyKkzJhRlKlg9Dj1y5noQRheU2wCil2o0GMjYekgBVqlKeoLdzDAcsbn8xrW
SmS0sVjifSUZdGRa2u+qYCGdkCfI+LMYGUZsjFJvJkJiL083jywBHHwZn+iG
RaLHpXtvnFYngVmgtE4u5j2c2EEW2ReKRzOp8fLPucnw7Smzj+LbIliuubHV
WROHwqoTP92oIINb/JxYoEg13Dsqkjb8HYMSO34YXP5MAe1Xzrrs6c0gwYP3
qt8/iiojFWiax6ggZDR5jMetExQw2+5InhhCUvxcig36VDiradjierMHljX7
rig49qNNHY0OempUYN0RqS4VOAwL0Xaa3AstKLWMM/FEBhn63sumXbLGwrBu
ctWREwWrPl+xLwvK7LvIcP2OlyArexrw8Cct4E1xqHdsbn5okgxSTR32llGl
UCQskLS4iEGW6bbqXc8pcOJpurydQi1I1qZd2iQ0gS7m+w/gPaigSyAvklPb
4KyuQPGu2UEUNSkjbJlAhTcvD29pk+2Gi2Gx9lyLfcj8xOWr/9iffaevQkJD
8Si8cPps8SK3DtV8LuF+uo4MrObn97T64iBFQAE23/iwuk8/U3Lm5CIZ6lUe
KXp2Z8Ix2/pBxINF8+vUVEyzKPBphu3BRn6AhQ2sjuvo5RzcyVVtIUUFq+dq
Z73e18PwR/O71zhH0be4Z9+VflAhJN6LnBzQCXkDCkw49z40dqb3waN5Knid
KZEtYO4FasfnWCGHbrQvWIu/lH79fe2tS5e3TkD1ffN6q1BABLbZjFQJEjw5
vjzWXowHI+nnP/Sif3+fJuo1zbc83RS4fuiwa71UDoxM8dre1ppAB99YhCc9
oMIZqz68XVIV8A/ivYF5FGUMaHRc76CCnAkl84tTExgpWg1eqR1EhaoFZbIn
aRCjqP7WMrAb+t61Sdh/6UKMS7cavTlpkJQ5+3TyeD9YXXzCazDd9pfFjflt
AnWvYqjgSHBZz8qUD+uSTLBf9o2igB385aO8NLjl+WKz74Fa+JWmWXUlaxBZ
KF5/m36LBszjt94VDPfCtOXbUp/wVvSriyW7/iMVRuJSpHvrB+HFCbcHP/H1
iEtgVD91YAoSWHe96deYgvs0xTt1vbl/ezwMIelWtuvTQJh6nXA+uAgMqi3U
cDWDqF4w4YuWMg1ArDZfJGUAqqrF4o/q1KHGMC+zEX96+7+P+3q6fAT69M9a
X9pb+cfF+UZnKYrKIg2GswV55w6VA0ff2MiSYB/q32+1c7GOCkckQER48wiY
aKwVfVj45+ntcotMngOeM6AQyBb7ZKESTloE+FvS439V9rRz0xAF7jWpDO9W
n4AdR7a689Zn/nHl/13efDP66oGxGTB5xL7nklQd8HxxPr7mUjPi2qGxHq9I
BlHhda1Xz+AApDYcvhz6X+4n9d+Wbyi7O1ikgIXevY+5Mw+Mwdj0fb6qtN//
fv6/+b/5v/m/+X8XHhhxgJGXrg/XTjx8/fLbKBwuKU9mNmxC24S5zj2zp4CM
g1XDrNwECB9kvc6iU4v2Bj3cp5lDAV7a1IKqxDjYFRO8NKLr0KlCn4MLE2SQ
kZb48HQtFvpOOKxPPFSGSlGczjkdMiROdJ2yZsTBdS1Fd5ecPBSpFKWtIUKG
zy1SlJFzOBDal2FjTM1GZWfWPkskkIDN94jM+hwc6J2n9vBuzELU8wenOQ6T
QHevLstkLh6Ksncon2iPR1gBoV1EXRLEswju03LDg1lWbKjS59XnF+Qj1xQO
031Tr1VL48mxUUi9YuL+y7oB5ZsV2VDpPlFJUePjhqVRcH8xSVDe2IAUuS9K
54RSwOyZ28PS+XHY1XnVsTikBm245oh7z0eBPWbRl45FYqDchllEnaECPT/8
ZOGUAQUkRL/Ypwhi4OPS2v6D6ytReI3FtRwDMlxsJ7yqWMaC9ZTkBeDNRSfm
Z2fECkhw/3JneMJPHIgLUFg/RqWgwzVrLt5wIkG3KbvcKy08hLg5MTxUTlr1
vmxDrPe+c6PCboO133p/DEBfi0DU05udyEi0uyPmCBUKJqT9BF+NwJiGbd/W
vEZ0/usWTYOnVIhjsk///n0IMiLfpT4JbEa8D8N5gxMpEKTM60xlmoAOnEez
f1gVYuDpK8h9Q4H17B4i10UnIFHhjP3ZI1UoLX9n5FUxCixsd6LqvsBAx2c5
eWuTMgTX5fczhZLhGAo7UpOIhUWt7KGiO3koeo2J5MMeMrDXHX1QIo8Fr3Nz
vRdn81Fl5YuctjQS0KLPJXxmxwPYSQzVFyej4M6ukKQFImB3rTm4by0BOivt
b+60jUJXF9Oj1+UQwU01/rDqZQIcmOF6xElcfXz76seauYEaKpSxmLFdUB4A
5ns29vwGHYhLXPEJTz0V7MuYxxXZByG5YdE4ubAVzbu2m5k8psIJ85SlWcFh
4D3hG9JxsBmVSB4hbaZSIFFVti5keAx4GY4+9A+qRicKtrS3IipEjp88u+/S
KESb/azQFqhF7T/ytfX2UEBFQeRkZBoGhMw/fC4wKUJtpz5wK+6gwJN+Ea9b
gIEXzgziV9IL0YyVfY8ulgSLZm+IMtU4cJr/QM65+x5V1JtmWfCTQVWH3+zx
PRwo7RmOEr2Riqg/zoeT+4lwgvH5lZr9BOBmuyKaaxL223FgWd5plIeLBuNU
WqhHdR+U6E763hHvQOwNIWJrM6kwen/429nQIbATpyaaBzciwVLlseBoevvp
sn/v8WQYRjUWNMK+1CHsW5sUAzkqfLMx9f7sNApWwganZatrUMbwy+/uDyhw
skfxe4YYBt59cHujV16Mih735lxqooCtZPzmi/T+dTzsfHf67jKUaJdLzLMg
g0tj5KfiOSyc6ZA6+astHa07rYlvuk6GjhJjV/91OCAElmt/Tll9/n01/syr
Q/jCMhWsm/tVI44Pgmiz7rFI/kakss4xK82Y7t+3/ZBiOzIK4g17gy6tq0Yv
U9mP35Om+5cPdjpVx8dgQNVKNHUDoG93/K4cyyEDcVO72ZA3Fu5x9veo3MlE
D2IqJl9zUOCIsfb2iE8YqH5Ejo3QzUZtfm/PzTwjQbi11KW0i3jwUv/Vclg+
BvHIHZwevEeCys8XA+vu4qHZofl8nPXqfr82cgd/UyoNdB03+RSbdELBV+lG
Fq8uZNiRlXfrNg3S69lfRTzsg8kkVb2C7GZUwcf5gredBkGSBhmFpC7YXVlW
EN3YhtpF1J5uSaVCl47MndIdI7B/d3Jxp3oVIj2bK6inPxfRoyXfWQ9NwKV+
SzPt6EKk3OFgU+1IAe+CK68zpTAwd85LUMjo9/3yJPGXhzvfDJzO7L3g+aQZ
xAu03e/IdyGxvTIMjXtnYH1/b5zfSDPcMs6zppZ1onW7VfnMWmkwuuXOY9Hh
bvhoseHV6actKMVgXTDnYRq0L44/qDceBEz2tuSnFjVoUi611LWKBlj35hz5
xl5426t2PGJXPRLY9wO/bQ0VSLwVPXufj0O23LFDF0fzUSz/N1/DETIUt+28
fV8HC9mf2qXEeFPRD4OLMe23yXCqn+Ps9fU4GHOTzPgulIBkbnHsXR/RBqZc
yY7Rjq2wOWp71/tzM6veb4opkZXl7AwQZgIEU6074OhUffW8bzN689112l5n
BoTqXQfXf+0AYd1F8+seTei8DHe7SSINvgUVjeQs9MHLlIPrEbkGVQ89OK4R
QwXqwteuvPkR8JeLPXh6azFKqBwnRVymwXkGN09Ru0EgWrFq2F0qR09V+w7d
nyKDTYlfAfkEFuTKDV+N/0pCAx5lrQfo+WVLaIod0yU88NTYds33haKOPpfz
QoNEUA9V8rslRgBMvWvIJVMPNMMQPWJTNwNpE7w/w6yqgZF1Yql+sg1xOpQz
NR+agfg9d0dVt/cAS/erD7L0eJi5fh+uRGwGOLM1cf2Pe0BOwN5Q0K0KWd4s
yZE6QoIMQUad0AI8vGfmb8jlW33f6p0vRrhP/5qBOB0NYbnHDeCLAmv0XtQh
X9tcfnwgDc5JPZMonxqAh7dHr8YE5aPJO/VbPaxosK7nxLrjYYOwZ7lio3jU
6u3z8GPhXELjDLQ4OkY5ynXCi2jOxPOkYvTi5TPTISwFmm5oTe24PAEnT3wY
npeLRTTHWQ+JYApcubu1sUYeA++vovPbyJFoRGeubbcHDXof8WjFvRyEWIHv
v2azElBity2/+YNOKFZOel9s3wAinu+dGq+u3k5W41Kqws2Da4gw+e4nYXlD
IgRGGXxjEZpE4X6mYnK8VGDM4es6OjoMmj4ud/oi25CldHrXJx4qpHR2BSR+
p/O8gHZlqTa0z715beN6KmwgiXxlmx6BtV+JFO4zzag58nYY5hIFtm1U8Oxl
wEDWR5H2C7uq0aLE7p36dD3Q/oyy80LgOMif+h68EFyLyOO3Gjd2keFHBnvr
+V1YSOtsenCevRQtW2a6qCqSIdLnoPO1fThYP8l14qtqLhqVvlXNF0uCAwek
lZT58IBzyJTtyUtBwxP3ovznSFDrO1e1kIADLTbnzZ4JGaj8R8Bc6i8i8OuS
GJgW8OA4YYh58uotEh5N0ag8TYJrZIMtliF4WJq9kBeokoB0BQLuLV2nwtTb
qXF3ln64xhFTuSW/B2UYsVTUnqGCQ/KbHGa3ITjgT3Ny5e1AUnw7Bf3peqmT
LHVq7+AAyLorXXR41YlC1Juka+k8K+PZtnniABh8n/QodexE0SOP9c4/oQCV
yPrWI3wCPpb/tJOpq0LaVnZnt3RSwGPH01+zP8egi0Egp0SjFklFOz3vmCbD
TUU7vSlGLMD8SMhGphK0fsGl9LwaBZq/BCD1ixgoCGhuNherQEV4+VypE2TY
99WJUUoIB1OGISFKO3KQj8TTIM7XJHgllU8b342Hefv8C+oO75ClqPJzTQoR
PPXy8M0cBEg5wOTIKfsa8ZlfXxOhQIKghbnsa0l4cJXvDPXij1u1Xc3WbfV8
lEyF7MWhIwvifSDLXcJavqUHPeQoDvlcTIW86kfXJHF9EL7HuGi4sQs5HBIf
76uiQvcVzpFa335gntb/yFjSiS5Y9N0zFqFCS/yAYuyeUch5vXsxWLwBpfno
/BqIo+ucpycGXvJMQBXq2cR3swpJWgQacjlQgX0X7snlDcMQsmed9IWrzSjt
vrvOIgNdf4at+7YOg4G3Pl115ziL0Y653Az92xRo41u6eIQfA3xBKrvDVcoR
n+f2ZSFter0FSocp89L189bL5RKfs1AoB4fRbB4Z3mk5OVOssFCRe/CQuEYe
Unrw4I3HSxJs8zjeck6CXp+XbpQ82peEboUb3p3sJYLomYGqkgMEsJFaG7xP
7V833uVzbV3dDioVLILPUidf98C5Fxvi9gn0IBKb16YdFVT4Hj7AV904CGfJ
Ms8evW1Gg0H3JNd3UWCZ7b62l+04tOZss84TrkLrbznwsglR4L3ps9EP+RjQ
kW3Z95qpCKWLL5f0KFBh5K2rkd6dUfiAcbBlm61B81rcJnmGZNB+sl/2H/lO
/twZh9fZmSiKVMV7voUMQ4P38Lm6WEgIyIgXEcxF2+/ttdf2I8GuW75WScfx
cCq0LhzbH4++OluJVC2QYJAtyGkoGQcNopr10Znv/jj/W/vpWEMAKxUkBriS
U7PGYJ1I5i6D4UrUtP0hzLhQgaFDh3363Ahs+FkvcXS+BtWX1/3QUKfAVf75
0h9OGGitL9QakipE+O/L5lbmZDjiDllDP7Bw0l3ps45yOvIjKhRa1VJgVkyr
M5ltAuzi+3Oj2koRddE94oErCdhpqXsaNfHwgDio5h0Xi6LRo9RXX0hQbzuS
k/We7osHAhXCDiWhniZajGwEEda8kvWytidAxoSbpbvaX7ffooPPEGXHRRpM
UEmPOYtawcztiuCPo31I+sakR6YBDT4+db+wc4muu0Ynx74ydSEfKiD9CBpo
HlvrkCrbAeoc61y10rtRoFZuSnM8DfK2azunf+qAgBvsHkLbu5GE1PYUj+9U
eNfUVSTlNAj3OvLFex3pvltOUMFeiwpv1zd3yuaMQhf2VKpqZSUyjG/fiB5S
gJOLthigQM+zaWL+O+ULEHOg7EDGWio0jhaVS0qMQ7D6Zc1Mo1JkmdGdTX1M
htargq8aJrFQnTorKHHkA9rczFZWbEuCb55nHrUY48GWwHHT2jga7ZJgwbuw
UOD52Zx965cxQNCNa3+0MRv53pe4JPKQCEcsMSeYUghwblKX36rUE7mpzXy+
hSXCI464Mio/AfyHJPMni4P+9vaJHTKwNsykwfGgMUzWu3rACZn6e7L3oQsR
AR73KmnAY88fp/+5Hsrxh9UMw3pR1gG3upyPNHgUINB/JqoRrnwKsj9O7Ubc
GL0wsSs0AOm9/B5O/VCeNPGr4mcD8k/ab8bRQYMOpTeLU1e6YcLts0Da21aE
ebPfX42uM7MES72LzUeA+ZH1TfWsStQraMWYk0SBa4WKeS/rJqDn7dzDI8H5
qKfaafyJLxlKVIMXetuwEJcqTjYpeY+k7I0Nj0lRoAt3yqeoHAPThltwqjJZ
f1wcYCofkdZQnoGs3SEEjqVWmJGY4mFkaUd3lN1exzHSgKHwuxo1aQi++3OP
hfVXogu7cjsz82kwNjflw3upD56qcfWdWFOHPDa1jzqQKTCv1DwtMTQOUXZT
oT7Deajw4UDTvSQyRNdmGnmnYIHHpLJrT0MyGlG4sUHyLAk8tWTSt4bR9XC6
b/Rx9VD0TIKD4+t3EqT5Bi8lpeLALaUsTOli9F92v1cKItQFdWdghI+gRt1a
AemMOP3P37vRMS2JtGeeNNjmhz3dLDAAgTQ2XiPVKvSMq6xvWmsGilu4hezu
dMH+tJRxWZZ6ZHLO6tDzE1RYulAjquI1Bsdern2lb5GHOPwSI1zlaDD9PU6G
X2wIbl050q2hUvrHPffV+LugQ+dEG6gw+CT3Y6THCKhHRQ5RLuehOQFTV7lZ
GtyZZ/7Z7dgHzseiA/kUylBwb3v75nkyHH4x9ZrhKBaKhr7tjTsW/5eV59Xn
6L1B32dgkNLIOXOlCQRm502moAZFn+rele9KA2Y3loKv0oNwkvecEFt6HpJa
Q0hZUqaAYuKBaSjDQKa4LHtXTiyiqjJaNXZT4VFvMZNGxAiMs8T21C6m/mXl
vJxdkMlfSYGAxOBvVZ0T4HL6yo0HMau/R/DfnVstmgfcrpuGtxdEkkPiE2BS
kuHrMdPJP66cv8szmA+3b+4nQkZEbLHMfgLoT9jKyBZG/fZ1xNZobwqXJMMN
hq9EggoO6llZ2Y9uyUajcjamiyxksBypOLLLHQd45zrr+5x/3frz1G62Qx6I
DGf1vtXTDQzs3OadorkzC114GHGkx4EEqT1v0wR18CC37cAGC7cEJFKIF2U/
SYK+gQz9tAg8sBK/TVw+Hrvq9RV4+T/J2ZPgASuO0q6Ph7UPdGscnq7usxhO
VFsHORFhV3zJvQfhdL/26JTrlua/bl9ddWGZyuRuCtyVb45UlZ8A3Uq989ZV
uWjGmiFrzJXu39+A5n5ZDEQ55Q2E7spClp+YjUX2UoGxc6nDa+s4DLPXPvUr
yEGXZfZvW4olQ+PujBZcHhaUhK+pJrfGo7d8XoV8e8ggHEEdOmCJg5Na0iJT
5lEo4KZGGq6UDH55B/IlA7GQ5LAt/J3t29XjQ8sxj43zMzBngTN+K90Cku3h
qkUlVWhP6eBSxecZCN+xT342uAXkeaO+PT5Uhfqierq7HswA56T16XGlHnj8
bCiurjgHNX97qRR4fQbW575KpND90ZPzqrE8CdloqkX5pscEBRq3UmdT703A
EFdk6ERLEIpPz+rbHkGBL7vmP4xIYcC2tmdgid0HmTxZk+XRTwJpUVmbwRYc
ZHK8zcwTS0PeP394cCuRwFmhqFIiHg8pMWelTnrHo4JLO9WvfiXCu1+xagbL
eLBY0MC/vxmNMqPPD1TtJEE/+7Pa1x14ODDGf3+31ptV66EltP3moZdkaJHX
8jP6gIV3zXJyTu45SHrnzikFJzK4FPaX4zux4FD/SSTnSvYfFx/MJLqCXOrI
oFIs7rHpGhZEU46Rsa05iDaaMb+rhQS5D7yVfxJwkPMg/fWtvkS0/apa4KsM
ElxJaH+TsREPijFPZbXnfj8/rn35w0cRKBC1rH1WbfcEaM3v9N1pU4pu6Ue+
43xEgeTbDwmskhhg0r2ovdG7AF063rHcMUMCH742ya15OGDiMkmvf5eI7mrw
mam1EME1JgO/SY4AfdEbPV6eCEa6PC07Nd8RwWpTkd6NWwRIP7MT4iX9kQDX
z+hPWAqUCD2Pn6gfh8DvIYbrlopQk5VgHXaZDA825+3V2YAFEYObw4erstAP
zri+jFAy9JpVrJusxAL+2QueDJkU9OpTCHIZIEITRmPNSTECqA+wBDSw/v0+
YjWetWadwMFdOMhyLCrjDMMCadmqqikZj1T6Uh/b0O9r3QldnDkvFgQ3btfI
0k5DBWGuBY/o9XlgowJ5czEOXl4j7LnJHYtq7zEciNInwUzC5wFhTzw8c7nc
KPrl9983eVPWcSY1mwR+R5xKAzjxcIhsuZ+nIvwvu9+Q/eJNzFtpILYNP2tH
G4LRTi6i4WwRsrkaEtM7Q4XWG1EbnOqGQZOg5dQns/p619X4w9Yna85O0qC6
Gi+wuaUP0sKHjivsKUXcTBxtTPS4ZH1/XE/i7ASMHdwfuoXxPRq3Wsgi+tH9
wv3zTyKOY0B4J5tDt1kC+vHxetP711Owgf12goU8AZZFN3UWXO1FXHY7UHch
FXS69wn7cYzC904BWrJECsLaGZXHO5KgikWQwfUyHpofyqde/OCBLHtvH3Ua
IkKqm9pZJXoev5c31DVs8egvq8/Xs9eytyYPgYi5J37CvRe4hYM9O+woSFN5
NM86jga8cZqXQhgHwcw64/XJttXnr5nXc77fJloJmtc5CvlEs2DCVUCJI2P2
j4t7/905W6L56YOjVLgwk191ka7/yx9MON5VX32e0Wnt+CLelgjNxWPje+MI
kD1g+L7bKRgt1g4nHzYnQtZF7o8mWQSo4Ttmumz/r4tjgm/qb27ZRAImP76l
HgweOjyUjWiLv69Xt+DiGNUY6Lpuh8q+jHk8rDlofvfjlldIdVLhHi6LCK+P
vPU9aUAA8aPiY5O8wSif1+TlR3r/Mt1f7m0uQoDrWc7khem/7j27tpczD5OK
ieD1wFwEe44ATzRdhc8VBv72dWTXhm25kEwCT/ar6yb48VCHjhWKlkYitNXv
e6smBZrMVUnp0Rhw2omTf+2ehuxHDhSVtpNAjUmd6EGkx3npmh5kuvq6ghS2
UYkz3hT4cdnUyEYeAwWvRBJc+lNQfp5lsZ0IBcZMNR59xGGAxnbR1ZOaiPae
OGE6Z0ABETVPb6ovBo48ihP4qbH6+LBYZMzMkVwSzGEnLxjR88KpDL5rxVcC
0OWanSn3uUjw0uWWhBAeDx95ezndzrsh1sNRrVZmJKgWt+8teYSHKkNV/dgz
3kjnoO4nQ0kSOG4VGe4qwcNt5gM9fszPUXrO7oMp6+h+hNlP48cbHDjeDT7U
vNYDRQhlqcUpkCEAkxWG0cZBep3BET7ZF0hNozQck08C0ZcK0fgNeHB3D2U/
bu3028/lnmxdeGQwEW4/+NGa5kQAhVqhNe/fhqBO6dTi0HF6v7tbrz0vQABD
rsAb15b+/v3reXdGiN3zIkK+pp3yaV8C7GHl2Kf7JgiZbn/dxxZD9y9T7xLX
WhFga8HGF10qIX/Z75Y6ab3Rorfz935PimPp7VzjsdBr/nWr96N9T58NvXtK
hI0J1RW5kQRQvhgzn//F77d/d/jQOxc9KRKEXzre+yWf3h4Ubmr+4o5Ecs2b
A+11SGB2iuGkiy8e2PYJOXnpRyNlkqfY1jUkaBwUMiv7ggeh3dk7Ej/9/fu2
Cz7sezNBJsJXxow8ps0EcJrYRnjgHIzG+dspCuIkyMjnM7lcjoeTWDWbmMPh
KPD549jhICLsXQja3ulMgHG7unOm016//buP5afmIteSoYxRK+V8NA6sp5ck
20mxKKLIf8zOlQxiino58yNYCNjGgXM48h49qe/Mb/5GAhMrT9yNVBzQ8sN6
Cx6v7qNV/I0HHoYQIdtOhkX1OQGW2NtUumJdURBNd90hFRKUUSM2FCTiQXxZ
qTElPQTtKIq440/vj1b6LP4fT+NAn/pd2UE5Dp07vtVyQocMHw/ZRBL24eB4
ydMX4nviETuzR2dJBAlGd1WxW0niIdqv+yD3wTA0KnnOQfU1Eey0VTtqbek6
v4LZyjvVGcV99dTbQfc1YulVXjefYWGTSvGGgQuJqOKHaJWzBAma4ehdS3o9
ywlrVC21+yMnyrtgm1tk8LLiWL/IiQMWy6ibHeVv0ca1WsnMHnQd+57XsugM
HrJuSSoZJQQhj26ZwVeGVFBwWTt64dYY4E7JyC/JZiJG84T5hDAqFD8Ynks3
H4W+B84S6gdy0KmtvdsKd1Hhk9CLZ5vOj4NWTZ/D0WcfkIWckuYXep4KmE+o
ekBvh5ZOGviX5zyQ7zbGe+X3yaCecS6zcj0Oxq2vc5kdCEUJT/yWbDFkcIh7
kj2rj4V9bd/LY3FRKGzhzqvrJCqcG3h884LkCMiaJ8t1TqShWLtLkl8vU8Hx
qLwhOWIM5o0Hz+GeJqLk2nVOTUskkB1Z9DiTgoNuxXPCL2f9kGHEGke/thmI
vvRG7uCnDnia0jbtzVCKkmXbpdISZuB04g3wiuqCK607+V1PFaD028D1eXMH
ECM2CAhNNoHbQfwmGaMZtEOMQ28qkgghtNOqJTYEONp3jHGT1+/r/xLD2zf5
f9L95qEgw/f0dvjgRK5Hfd7fP58r8sXzy08qEZ4PM4eKbCLAwrqYmAU5X2RJ
SejZ60yGbjZ22ksyFvgef/LgV3iNFBjyar1TyeAzIfC9Ow0LUYa1dUyt4ahx
4Xmnxz0iaCbxu2xPI8CvA0bfcvn+unj7u9zm9vZUi1IiHHYRjV46S4CJmbGR
Z7wOq57PcnAqITCKCCykx4Va9P7VqDCXgR8NQpjDB9hJdN99yl0nMpnuux10
cA7nTFxWvU7Tgc0lDXZEuPhh5P3OtwSQLlmYEnP++3Wmyq+71uz6E+D5RtmF
xDoBtZl8/qmHppFYps7nAAsi6Kx3iqp8TwD2M2Obv/4MQo+D3z7WcSdCRWSc
YmMAAUgnLVT3hK7+nTRrXnOHZfr5T05Zh98IpN/XQxcfpWAXdPeMabVJCRFy
uec/f6PnwUEm/SDaHrdVr3O+7XTvngkMpN13Nr/wdRy21GtdO3hlCkX5NBya
f06Ejwlj5LuhdP3AvTV/adPqeWqDAeNHievTwGhdEHNvaBKus1upFyhdRBMN
6perbhKBK36cYz6fnvf17qgYyVkhZgePOIZAIiSS0x60uRHgfP4GCRazh8jm
M39yVfkUcPMWPbzkNgV7aovvG+LYf7v+u1Uqt59omIaMqPdWAncnAffOx8ZA
5caq55ffsc+pTZ2CBsklH5vwKWD/NEfl3DuqVM6itiSWMQUXvgykrw+dgstP
ma0PVk8qveroxe67S4SErs/62zIJwFK+pkRsyg1lGxw++Tp3CnLuoxfB/lMw
bnRp6zr+T0qr/e7c4EPpvrEpGCErHKm8MQVBJS/IwRu2/3G+71/FjWf9rdnp
7efRebJKMb39bF9DPnj0ky/S6FS2V71BhM2Gim5MRXRf+aT3mlTQ6usAV+PN
TLof5jyJcDxQvOSQPwEW5Ub6J66vrsNzvq0rZaP/7g+xw7vtCun965LV5Ztq
f97+ev9/5X3V+uh+yhR081wRbHs1BbS3OYpaw/2r9q+rZx7OnkqbAq4dCf20
l1PwQnHJ+aYRdtXz5dTG4n2zpsDZ6Bw1KWgKnM5gx0/WU5RCXDAONyenQGjn
/nQmwymYfBDx3sXpENKcf213GTsF+Rx7WMSuTYGB5vezU1vFVy3/QO+JF+SR
Kbjte1Iy/+YUZC68KOR7Jbbq+YVhu+oTCqeAyabd1eXFFMBZTf8ixW9KpUrM
p/M7p2Cvw+X7QpZT8EU249jzyN3Ia23mhoa2KdAZDyVut5mC6zvwcV3Wm1a9
/g4jgZ2Rb6ch2nLb97GwSbiWXHKq6NTVVc8P8qVcEvk2BXU+gWEVJ6cAiW7d
FmIm8tvPMfl2gcc9eyIwTMVytdDzskS73+Q2X/tVz38rJMy+4TERcGedXQbf
EICqqOK2wcN51fMzFEu6dt8mwrEX66Z8cghgy2Akf6zVA0UR8V619HgSeFuj
XpoeT8wk+V/O5f++r7lJa/pGNCMCR6WtgQD9+veeSx/Z+iIACYuManLfIsL1
E1Mf+PIIcNn0a8yXY7+vNwojp6X0eYhgJfJrev/mSYiSq3e9WmSKJs18LvB/
IoLe9SHLqocZIK7N86LmMx7xPmw+U6w/DTJNYyXdww8qkrV2+dnjJpHjmXtl
NpfIsFdmzwG/TZXAF1umfLwUi4Y3ZPI036ZApFeVSTh3E6R67UjiDhlHXhKt
9yJ4qMDrfl7BZVcX7L9aolZiPYS0dIWkk/Wp0J5/KCc5ug+qDDmN9Y170e62
SxcpslTYdQDtz+8agj2i9Wf0pDvQ9jsBjh8aKXCsrJuX9d0YjGlr26kW1KNz
pWbtkTkkOOgZz+LakQX7nzqdXPiMQ7vjzI/58RKBd7OMPpOnZYXy/Oc1PZsm
Ebkcd8qPhQImnh31qhlVwLjLxNnHD4NMrAo2+3yjQNq0Q+sBqxYgLl5Lyp0c
QZsybz25+ogKs1ss5Vyju8GAW1y6Oqwfico1FbA+p0KAYTZfmeYALFxPO3nj
SRcy53+EGvdS4UfkkE5z1AhwhklLu6Q3rfpcXA/xVyVZk8HwsbCNXlIOOL0+
9WNiFIve+xwVqxgggulCZlPmVeuKNm/G6dADBHR6qjvONpsCsRWv3Hw9amBZ
rGB4yHccFZXqz92wp0LXe59Yo23tMGeq4Oe/aQhd6r1hKllCBXXr15YXlHrh
ZpnWskRsD/KXsRC4706FzIeF8cf4h6BA4Gl6157f/05CH3iNThyiQC9zwPa8
+jzQ2KB56Hw6Bo2bLfl6vibB6bH+p04ethWlt7Q/xB3GI+54gqzSeSoM52be
NY2rg+TdZ9Z+bR9BAYl+LWiCCjnqO1PDfTrh5FaxDce29iN9ZdGOyXEqmCtc
0jba0A9id/NTHF93InkuuR3ON6lAww1erN82AoXTw8TbDxpQbMH8Ru1wCpwR
3s91zGsCGnU6n86bVSDr1C33ewPJYPBQWk82HwuPHC8wyOZnI13Jto22liRQ
3ssXMH4dD+bZpmqK51afN/+rOHNyBPn6NAVsqq592qxRCER2IeeSxnGUqKUo
fN6EDEpeBqUHuOwrMOvXaloL4JDRS459aqN0Pz4mLDPL2QgMeUtfthIGUYvy
nXpDMRoUyOVLPTzeDRmHTA1i1vSgAsEMQt8YFTQLf+zy3DgIakYcpHLRFrR/
9CStlZ8K/t6i7+/JjcHsTcVh9vEqxKo2/eYaJwWYbVjNF+n6fbfa6OMXIvno
dfSnN9nDJGDublOQ7sDB+uSPojz/m/f+/m6u3rt9T3YYFb5ZCU93HCsBDX72
clHGUbSeuZFfeA8Fnp5GNoY7HCqycfbnYj5jEA+qa1h3kQb+uGuJgG8GvQpm
job2PjQytfCLV4cGk+VEBv99vTBVNFRMTutAL281U77kUMGkb8dOSdVh6GTn
eMG8vw5drvjldCGRAus2iYfYRk9Ah41msLBlMep0X39U6AoZ/IUndH224OAb
fr+CnlgqmlkrEPP+JxG8o9Nonot4EHg17u+5+N/ne3drqbfepBylgcb9/pst
FeUgbJl5aDfbEOrNnYm9WkcDhv14HBdjFXQc13U2nuhDaoqLHSkECsiyB9VD
o2PFq5pTlwlXJxCzzWHs3rdUOF9vHXVRxKViqH/p8t63oyh3zUzglzQa7Gs7
vCtaph3KBzT9MC+70bPIW3MsOBpM7PdNtubuApVtnhgRp3akF7rLruk8DYQE
KjMsDfoB7ckXe36qCV15YGr95AIVGIzyiy42jUJd127Vh4QKFHaUN7VhnkzP
FxG8JEEsSIZlcXrKZqFgBuqvDCsSOAjkpUeZ4qGiFfdYZcPvz8v8m//v+af5
zo5y+Rkw+1UXcqe1BsqpEdUn3boRZpL7V/kFGoS6L1+5I+xekX1P8a1h4hC6
EcNPNaU/95u3e5/vD+6BDc2bTwmXNfxx97UaZ2lYMF70mwFjlpRlWYsGOMz9
3FiOuR2FFYroy32lQRmqce7c4V2hkC9aYGvb/8eV/3c57txJCZQ+A3EcAY8o
Jq2QUMK74Wt/PYq9UnFjwncGQl5Zihe996+obAy0WOLq+ePK/1fxwixdHzmf
GdC/qnMn0KYLuGz9p+r3A3omqVj/lX0WaKPGZoaMoRVfMyy4Hq7tQCMYaZM1
NRSgMIQxaZZMQNzO7jH7W4l/3H39q/izlp9mwZ00WLi2hu/zQD+oKMhHpRzJ
Rpo37d8v2cyCffQeC609URUatPvROkH/feLDv4rbDfMsHm+ggOjr5gkhmICI
L/1RoeZ///zgv/m/+f8XXqrDse9qNRGotoZ37qSmQrSZ/5HjRwjooJzS8w8S
ZDj4IWO/ilwFRH/gfubBgENjbXixWEYqRN9L5IuM7oQmatPTb1uH0fZApq9D
OlTIwyoRubf3gafheqcRpj5UvSHY8bESFfQ8184I6g0Bz77QBppsJ3Le3Gxc
PUSBs0k8brqSY3BAyXMdV00D0jttwku5S4bJrbypa8exEDC9RZX2NQ9xKR0e
YfMlQdGnrM8bZPEQitPyFI59h8x1ZTxd4okQobqvzOUOAY7v/Dh95+fvf+9i
YftUz5rLJOiLF+jeNZ8Cwe9keZ2f4JHCr4GAoDIyGAkU3nu1G4Bnzz0rv71Y
VH3xkaeaERXaHb+0Djt2QVwwZcvEzAD6dHfHVUdnKnR3LydsOtoPIexS4gYt
3YhTf31YchYF7rTlX/3uPQ6Uy143M1NqfrucmDM2L21PUkAr1XMmcgngaFuT
wi0lDLK+GxIg/Z4KqsFksScPu+GLBybvaH4fkny700o+iQqFC51fhy8MAE8s
n8EOi06kKNN++bslBa5UNf88+2MClLbkDXXowG+XZ9+hsted7RRQceSWzr5e
CcKyOIzKq/E/rp3/T9/0fd9/+Ka+Fd/0P/3O0IrfOf0//Y7nvRhVXhpsl7Hz
d50ZhNqx3obRX9XItvkEZk8OBTzynresezcBr6vznvEY5CGOEH9lC2Yy2K4z
2oENx4Fx8pD291+rr3Mw/sfBeVN5wT+OlZzl/+r6+bv5nh4HLrkDM/DEuWzi
cUEVsFQEdYnc7UHG3vH3In7QIEbpzLPblt1w7ofF0vj1JqQrfnPrUwYK+Brf
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
S4eY9UHIGeNPFWL8qU8Yf+p/AMiuwqg=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 407.36378100584443`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-1., 5.666668319444688}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.061517367000044, -2.274689792132166, 1.4233525547547852`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.547575973960267*^9, 3.547576013214428*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXeYVcX9P34+997dZVl6FTWJMc2YmCwgYAV71ES9gApiA4WVjiI2LNhj
19grKGLD3rBT7L1rYotGjRpjjCaf9JjznXefmTvn7q75/J7n94f7PGf37rnT
zszr3d8zZ4dJ86ZOmTVp3rR9J631k7mT9p86bd8D19pmzlx3q/w/WfY/D7rr
i7Uy+JxnmfzCn4fgF//z1eevPn/1+avPX33O3sU/PT//7LPPVp5xxhkfrrHG
Go+NGTPm4SVLlnzhfuDbB6dMmfLq008/DZ/h3orjjz9+5UEHHfTQ3nvv/eLD
Dz+cvUBNvY9/ys9tttlmz61YsQL/K+Hv5kevvfba3777Lnb2+osvvvjsFlts
8W/389Fvf/vbV4cOHfpX95M9X9PM8ytXrsT/GvB344pjjz125amnngr//cP9
vLr++uu//dprr7Vf8/Gddtrpydtvvx3++4/7eWHTTTd96dFHH22/5nObb775
c8uXL8/55/lRo0ZBmf8v+1xx3HHHrTzllFPqP+fzI0eOjGu+8dJLL6Um93l/
tSt/+vzzz1fMnz//rXXWWeeFBx98sJGawMU98cQTcXEnTpz44iOPPJJ18b6L
F55Wt0t7ALmXOv8H/ulVtP7wbUdwco/fWiEkKvW/DhspWqlK/a/DRoqAUqn/
9f/lSD6FPyVQeprrA6lS/2tu7hNtLivnbW1tOd3OGBOFYKvU/5pb/1hbJxhZ
FzkyDvdFPVw21PmOAfeR9kAjqvg96HfPUuEP/IflB+VxhXVZrSxp+afp7vt6
o8z1VPcURmgPhZ+epIrv6o2GoorR5DQlyj1Gjb2jjaUKpRrrojW4iV/rjeYO
NtE1Ue5hauxNbayXV1FU8xb9lou/rjd6440GLApVTnPTDBdU65bobxU18Ctt
oK9XiBtwg3e/8VvrmSu+qjf6JypWwopR38upiZe1iYGJJhrxd1ixWWtwEy/q
jUGJJpoSw7+fKj6vN9bgitXBbVqxOdF3atGYNJ+Lvsq8ZkcPsWa7JsbDTTyj
N0qJfuThxg6NGsNiODL8dDc19pQ2VqnT2M7rW2NddGRl/UQEUfHrarvLqKMn
9Mba3Oguw9rCFeSm6sHhdmrsMW3sW16hXYdjgw7Z1kQ9YHBjj+iN73iNjR9B
jdlD9qg7sluosYe0se95c7LbBvqo+F2fuuPiplbpje97TU3YsE3ovH8CIzdR
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
0l3z3XWouw4idmzaiZu4/baiOQYhD+54EfLAye44PqExpyi3V/htROuRKp0S
sBGkByYgHa7El4R0JPlwOhwW9r42z/e6xl1OLO/pZN4ejt/v7q4JV9LMj0+t
VLxKF+BK8Qr0MZI4vWaViByO41U9mlfpcHcd5q6D3XWguw5w1xwa4mb+ikGW
BFQEfz6EIkS7ATZ85wlFJlqkePVJrEQ5QTFNCdqxdfI0zzz3E2s2DJnwl9vs
Y2YUSjjkHY7/7rM0zyddl+cT4XILt/c1tHh7usXb4ypbuN0Wy2J8s4bExrrF
G3NxsHDKy3BRfBI7hRfu57ZwQF5Y7ij3+QheuEPcNU8XLq/O4jL7/Tuv7vtP
0mM38VcS/CgZOxEhMgNK37XzSYLcdWLoxzAzJFL1yuHqNih3ixSulEyteOuc
pzXAEcFKfsmNVbazaJSR3ffztpvyfMqNdE122sa+cF1PfU+SVYYVTpGnW+EJ
i3GVkTyhzq5ulXdZGK2wI8+qrDKsMDNRXBkhT3+VgTyPR2kFpMkI6k5M9BBk
onl1rrv2pxWuTv8PtTX5n3l10t/z6l5/zau7/29eHfcnqruRv+LgscrYK3v2
fqQ/X3c4Sbq7fx560CIGakIt5UXBKR1Ql1ibE0x1uL+6nd/O1hhJzEz4NK1w
JZ92S55PhevmPN/vZtenW3LXoiz4ZF7wfa6XiW5Bst5byPrqJFnjgo+7XOp0
zXd2ZD3WLfqYS6IFP58XnFQUKj4oZMkRVYvQxDU9lNf7QF7v2e6a8Z+8OvUL
+n6ff7j1/ptb77/k1fF/zqu7fJ5Xx/wRe9nQX3ZInso8Z7eYCyBg7zkpkVHs
7+rqmBUROQH6J6CQyihJ6TxDaSnX0SdIxY2G6TKX8hm3wbfTb7PuS7DqJVhy
10MNmdOKEyNfysNvVSqvs+DExxdRP7rgjsqrsugeH1dV6UxezVMLqVz5OJY7
OOLjM9017Yu82vZv+n5vt+J7uBXfza34rm7Fx36WV3f6Az7GCH/VD+TM81Mj
ewmE9L0nh8RO8rgmoJYSxM0JHmBqrwn7XnrPfFu9EzyAl/u7ofBm43vWHe7e
zNthX8gMp025lcZ1nn5rnk+7lYbpVjorGXX3S1G3sfPrqNLe7bBzWGxm5zSd
36nLzWWdQWbjGrWzzsDNsdw85uZzjJujvJ78L/p+T8fNJzhuvuufZJ3z6s9+
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
yFjRSm1n9O2VYHvLP+l7NNdla4sXC+5pGQ0bsmsLieMFJI5q65NMFA+6azl/
vstdt2Ptb/oiRPy0kO3gRQ0waFDKX7y0SIT0UvPCVKPGhED4ktpYKrPCdCuT
LWW1rusSRmckSnedngrQRUXJoazkQPIkNOLLKkkw1CCyAvSrw/xreU5xB/Lv
kjARxAfChHSrBl+3wgv8u6I4+SlABTpWCciEw2rEHjXHLZYhN6kMCaIOMLLO
pk6MudTbB5reG6jaVqxhLTBfFkL3IN8U8cLLk/xY2mccS8PQciZRYkiVqA7/
FZVD8ngWyMMUrBU11GE7a8BhMdiOdgBPMOTvetEMDGaU8pcuayuHKZa2BTyV
xdZR9at/AvAR9Lu2C/0iv20K+vbupVK+4OGcBYPQZDkkB7Q4eOyI/4ydWIh/
0qe8uhbmYDOcLA2fDNihi1dIBhVqHKDfIMkWehn4m4pEhB93I8UgUKLSEkI0
KN3VXo8APG9udwHfCXm4z5XcVOIL9i0GjQ+3F40bxbb1iNfo7+AXGdPioH0I
QV1tvc9dd7vrDnfdAmW/4eN6whA79kD9tUdQ3jDkpEN8o8QWtsevdXNkxMYN
xtFxiBZFLgxXRHtpC1uJBES/UCyUlCK6t0sRRV7eFEWY27iUH/2w++TIogR0
IFTiU0QjUITkGoFwOJwuCnWwWJi/QurWowg0tiUpWWwKlgBl9eQ6kElehcQx
mABKMeuH+EUP3SIOV0dYP9sPeIqxs+0gtxOUH6iumy9izi7G8yl8QNUAdCYh
Wv2ct33rx+8E7dVN3mIF51Vm1c8J2sVcYpesgr3aeiP8b9vqXJk91rcDH84X
L+2RxLZL+SuLYqAjpAKWbj7baGdFpKXYKXup2HTqrICWRDkLcBjDL2lIuR68
O3YwSC7eKO5XsF1WbDcorBsA1syBUw6lKLuC2X2a0Zd9fUedUZ5JoAaB53ht
UcerYLdOBlGGgBdz4DbPHKAeAfKyD7qJcQ2MHZqNGbuG6dg0Rq3mklxCFKMT
ur/nN1ItI8qZqx4iCtzqpMxIgn5NdI63Gm35Pt3b5NdOoeEcuSEvMeafVqcq
ROboHjD+O911a4IWKvmew+xc7QtntpXYH3MXBSwsXNGQoILaYHTKmE3lxXVT
g6FeaNsoymRKKuLRXEQffYvpY4DycnvvRJMiH5V9VmIE+eRV9cfHJrHoOz6f
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
81efv/r81ef//3zO/uf/Ae6edTk=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normalized3D", "[", 
    RowBox[{"x_", ",", "y_", ",", "ref_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{"1", "-", "x", "-", "y"}]}], ",", 
        RowBox[{"rx", "=", 
         RowBox[{"ref", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"ry", "=", 
         RowBox[{"ref", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"rz", "=", 
         RowBox[{"ref", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"med", "=", 
          RowBox[{"Median", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "/", "rx"}], ",", 
             RowBox[{"y", "/", "ry"}], ",", 
             RowBox[{"z", "/", "rz"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "/", "med"}], ",", 
          RowBox[{"y", "/", "med"}], ",", 
          RowBox[{"z", "/", "med"}]}], "}"}]}], "\[IndentingNewLine]", 
       "]"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"0", "<", "y"}], "&&", 
     RowBox[{"0", "<", "x"}], "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}], "<", "1"}]}]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.547467187602984*^9, 3.547467196502426*^9}, {
  3.5475717684130163`*^9, 3.547571988986555*^9}, {3.547572135190092*^9, 
  3.547572266825357*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"tq", ",", "ts"}], "]"}]], "Input",
 CellChangeTimes->{{3.547734228160301*^9, 3.5477342361878443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "<", "r", "<", "s"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"q", " ", "rx"}], "+", 
       RowBox[{"r", " ", "ry"}], "+", 
       RowBox[{"s", " ", "rz"}]}], " ", "\[Equal]", "1"}], ",", " ", 
     RowBox[{"0", "<", "rx", "<", "1"}], ",", 
     RowBox[{"0", "<", "ry", "<", "1"}], ",", 
     RowBox[{"0", "<", "rz", "<", "1"}], ",", 
     RowBox[{"tq", "==", 
      RowBox[{"q", "/", "r"}]}], ",", 
     RowBox[{"ts", "==", 
      RowBox[{"s", "/", "r"}]}], ",", 
     RowBox[{"q", ">", "0"}], ",", 
     RowBox[{"r", ">", "0"}], ",", 
     RowBox[{"s", ">", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"tq", ",", "ts"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547734105089649*^9, 3.547734209606226*^9}, {
  3.547734240438554*^9, 3.54773424322777*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"eqf\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\(rz < 1\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is not a well-formed \
equation.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/eqf\\\", ButtonNote -> \
\\\"Solve::eqf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.547734215180964*^9, 3.547734244029399*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"q", "<", "r", "<", "s"}], "&&", 
     RowBox[{
      RowBox[{
       RowBox[{"q", " ", "rx"}], "+", 
       RowBox[{"r", " ", "ry"}], "+", 
       RowBox[{"rz", " ", "s"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{"0", "<", "rx", "<", "1"}], "&&", 
     RowBox[{"0", "<", "ry", "<", "1"}], "&&", 
     RowBox[{"0", "<", "rz", "<", "1"}], "&&", 
     RowBox[{"tq", "\[Equal]", 
      FractionBox["q", "r"]}], "&&", 
     RowBox[{"ts", "\[Equal]", 
      FractionBox["s", "r"]}], "&&", 
     RowBox[{"q", ">", "0"}], "&&", 
     RowBox[{"r", ">", "0"}], "&&", 
     RowBox[{"s", ">", "0"}], "&&", 
     RowBox[{"rx", "\[Equal]", "ry", "\[Equal]", "rz", "\[Equal]", 
      RowBox[{"1", "/", "3"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"tq", ",", "ts"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.54773442955898*^9, 3.547734498863381*^9}, {
  3.547734753111289*^9, 3.547734773201127*^9}, {3.547735816385454*^9, 
  3.547735848615552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "r"}], "+", "s"}], ">", "3"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", ">", "1"}], "&&", 
      RowBox[{"r", "<", "s"}], "&&", 
      RowBox[{
       RowBox[{"2", " ", "s"}], "\[LessEqual]", "3"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "s"}], ">", "3"}], "&&", 
      RowBox[{"s", "<", "3"}], "&&", 
      RowBox[{
       RowBox[{"r", "+", "s"}], "<", "3"}]}], ")"}]}], ")"}], "&&", 
  RowBox[{
   RowBox[{"3", " ", "rz"}], "\[Equal]", "1"}], "&&", 
  RowBox[{
   RowBox[{"3", " ", "ry"}], "\[Equal]", "1"}], "&&", 
  RowBox[{"rx", "\[Equal]", "ry"}], "&&", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", 
     RowBox[{"3", " ", "q", " ", "rx"}], "+", 
     RowBox[{"3", " ", "r", " ", "ry"}], "+", "s"}], "rx"], "\[Equal]", "0"}],
   "&&", 
  RowBox[{
   FractionBox["q", "r"], "\[Equal]", "tq"}], "&&", 
  RowBox[{"ts", "\[Equal]", 
   FractionBox["s", "r"]}]}]], "Output",
 CellChangeTimes->{{3.547734435864706*^9, 3.547734455491218*^9}, 
   3.547734499884407*^9, {3.5477347584998627`*^9, 3.547734774937893*^9}, {
   3.547735823651815*^9, 3.547735849291421*^9}}]
}, Open  ]],

Cell[TextData[{
 "Find the surfaces for y being the median. First, find the surface that is \
the transform of the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], " ", "<", " ", 
    FractionBox["y", 
     SubscriptBox["R", "y"]], " ", "<", " ", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5477416532621098`*^9, 3.547741705878478*^9}, {
  3.547741820447172*^9, 3.54774183120199*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0", "<", "rx", "<", "1"}], "&&", 
     RowBox[{"0", "<", "ry", "<", "1"}], "&&", 
     RowBox[{"0", "<", "rz", "<", "1"}], "&&", 
     RowBox[{"Exists", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"y", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"tx", "\[Equal]", 
         RowBox[{"x", "/", 
          RowBox[{"(", 
           RowBox[{"y", "/", "ry"}], ")"}]}]}], "&&", 
        RowBox[{"ty", "\[Equal]", 
         RowBox[{"y", "/", 
          RowBox[{"(", 
           RowBox[{"y", "/", "ry"}], ")"}]}]}], "&&", 
        RowBox[{"tz", "\[Equal]", 
         RowBox[{"z", "/", 
          RowBox[{"(", 
           RowBox[{"y", "/", "ry"}], ")"}]}]}], "&&", 
        RowBox[{
         RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}], "&&", 
        RowBox[{"x", ">", "0"}], "&&", 
        RowBox[{"z", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"x", "/", "rx"}], "<", 
         RowBox[{"y", "/", "ry"}], "<", 
         RowBox[{"z", "/", "rz"}]}]}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"tx", ",", "tz", ",", "ty", ",", "rx", ",", "ry", ",", "rz"}], 
     "}"}], ",", "Reals"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547738961995021*^9, 3.547739100003578*^9}, {
   3.54773929445096*^9, 3.547739422913108*^9}, {3.547739682475902*^9, 
   3.5477396868414783`*^9}, {3.547740053073061*^9, 3.547740092284072*^9}, {
   3.5477401227443323`*^9, 3.5477401707725973`*^9}, {3.5477413685326853`*^9, 
   3.5477413874465322`*^9}, 3.547741523046404*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "tx", "<", "1"}], "&&", 
  RowBox[{"ry", "\[Equal]", "ty"}], "&&", 
  RowBox[{"0", "<", "rz"}], "&&", 
  RowBox[{"0", "<", "ty"}], "&&", 
  RowBox[{"rx", "<", "1"}], "&&", 
  RowBox[{"tx", "<", "rx"}], "&&", 
  RowBox[{"ty", "<", "1"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "<", "tz"}], "&&", 
      RowBox[{"rz", "<", "tz"}], "&&", 
      RowBox[{"tz", "\[LessEqual]", "1"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tz", ">", "1"}], "&&", 
      RowBox[{"rz", "<", "1"}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.5477391014191227`*^9, 3.547739480787779*^9, 3.547739687805664*^9, 
   3.5477400638402777`*^9, {3.5477401167827806`*^9, 3.547740171552971*^9}, 
   3.5477413940718727`*^9, 3.547741525028943*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"RegionPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0", "<", "tx", "<=", "rx"}], "&&", 
        RowBox[{"0", "<", "rz", "<=", "tz"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0", "<", "tz", "<=", "rz"}], "&&", 
        RowBox[{"0", "<", "rx", "<=", "tx"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"tx", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"tz", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "3"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"rx", ",", "0.5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rz", ",", "0.5", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5477418624783783`*^9, 3.5477419605746098`*^9}, {
  3.547742059351268*^9, 3.547742062979925*^9}, {3.5477421375675592`*^9, 
  3.547742163331539*^9}, {3.54774228560673*^9, 3.5477423036640244`*^9}, {
  3.547742392594119*^9, 3.547742403571497*^9}, {3.547743527467766*^9, 
  3.547743609179229*^9}, {3.547743712600415*^9, 3.547743723508154*^9}, {
  3.547743759376238*^9, 3.547743779672308*^9}, {3.5477438965791483`*^9, 
  3.547743896689102*^9}, {3.547744039650795*^9, 3.547744060863214*^9}, {
  3.5477441103658323`*^9, 3.547744110710314*^9}, {3.547744145715753*^9, 
  3.547744287639371*^9}, {3.547744321745734*^9, 3.5477444079527893`*^9}}],

Cell[TextData[{
 "Find the surface that is the transform of the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     FractionBox["z", 
      SubscriptBox["R", "z"]], "<", " ", 
     FractionBox["y", 
      SubscriptBox["R", "y"]], " ", "<", 
     FractionBox["x", 
      SubscriptBox["R", "x"]], " "}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5477416532621098`*^9, 3.547741730892541*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0", "<", "rx", "<", "1"}], "&&", 
     RowBox[{"0", "<", "ry", "<", "1"}], "&&", 
     RowBox[{"0", "<", "rz", "<", "1"}], "&&", 
     RowBox[{"Exists", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"y", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"tx", "\[Equal]", 
         RowBox[{"x", "/", 
          RowBox[{"(", 
           RowBox[{"y", "/", "ry"}], ")"}]}]}], "&&", 
        RowBox[{"ty", "\[Equal]", 
         RowBox[{"y", "/", 
          RowBox[{"(", 
           RowBox[{"y", "/", "ry"}], ")"}]}]}], "&&", 
        RowBox[{"tz", "\[Equal]", 
         RowBox[{"z", "/", 
          RowBox[{"(", 
           RowBox[{"y", "/", "ry"}], ")"}]}]}], "&&", 
        RowBox[{
         RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}], "&&", 
        RowBox[{"x", ">", "0"}], "&&", 
        RowBox[{"z", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"z", "/", "rz"}], "<", 
         RowBox[{"y", "/", "ry"}], "<", 
         RowBox[{"x", "/", "rx"}]}]}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"tx", ",", "tz", ",", "ty", ",", "rx", ",", "ry", ",", "rz"}], 
     "}"}], ",", "Reals"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547738961995021*^9, 3.547739100003578*^9}, {
   3.54773929445096*^9, 3.547739422913108*^9}, {3.547739682475902*^9, 
   3.5477396868414783`*^9}, {3.547740053073061*^9, 3.547740092284072*^9}, {
   3.5477401227443323`*^9, 3.5477401707725973`*^9}, {3.5477413685326853`*^9, 
   3.5477413874465322`*^9}, 3.547741523046404*^9, {3.547741749835421*^9, 
   3.547741759062098*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ry", "\[Equal]", "ty"}], "&&", 
  RowBox[{"0", "<", "rx"}], "&&", 
  RowBox[{"0", "<", "ty"}], "&&", 
  RowBox[{"0", "<", "tz"}], "&&", 
  RowBox[{"rz", "<", "1"}], "&&", 
  RowBox[{"ty", "<", "1"}], "&&", 
  RowBox[{"tz", "<", "1"}], "&&", 
  RowBox[{"tz", "<", "rz"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "<", "tx"}], "&&", 
      RowBox[{"rx", "<", "tx"}], "&&", 
      RowBox[{"tx", "\[LessEqual]", "1"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tx", ">", "1"}], "&&", 
      RowBox[{"rx", "<", "1"}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.547741763652618*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Equal]", 
      RowBox[{"tx", 
       RowBox[{"(", 
        RowBox[{"y", "/", "ry"}], ")"}]}]}], ",", 
     RowBox[{"z", "\[Equal]", 
      RowBox[{"tz", 
       RowBox[{"(", 
        RowBox[{"y", "/", "ry"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547749709453271*^9, 3.547749764591304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["tx", 
      RowBox[{"ry", "+", "tx", "+", "tz"}]]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["ry", 
      RowBox[{"ry", "+", "tx", "+", "tz"}]]}], ",", 
    RowBox[{"z", "\[Rule]", 
     FractionBox["tz", 
      RowBox[{"ry", "+", "tx", "+", "tz"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547749765696353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ry", "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"tx", "+", "tz"}], ")"}], " ", "y"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "y"}]]}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", "tx", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5477402586286077`*^9, 3.547740266175088*^9}, {
  3.547740304050984*^9, 3.5477403044985*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"tx", "\[Rule]", 
    FractionBox[
     RowBox[{"ry", "-", 
      RowBox[{"ry", " ", "y"}], "-", 
      RowBox[{"tz", " ", "y"}]}], "y"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5477402666349487`*^9, 3.5477403052532988`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ry", "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"tx", "+", "tz"}], ")"}], " ", "y"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "y"}]]}], "\[Equal]", "0"}], "&&", 
   RowBox[{"y", "<", 
    FractionBox["1", 
     RowBox[{"1", "+", "tx", "+", "tz"}]]}], "&&", 
   RowBox[{"0", "<", "tz", "<", "1"}], "&&", 
   RowBox[{"0", "<", "y", "<", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547740743808216*^9, 3.547740775378272*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "<", "tx", "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "-", "tx"}], "<", "tz", "<", "1"}], "&&", 
      RowBox[{"0", "<", "y", "<", "1"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "<", "tx", "\[LessEqual]", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0", "<", "tz", "\[LessEqual]", 
           RowBox[{"-", "tx"}]}], "&&", 
          RowBox[{"0", "<", "y", "<", "1"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "tx"}], "<", "tz", "<", "1"}], "&&", 
          RowBox[{"0", "<", "y", "<", 
           FractionBox["1", 
            RowBox[{"1", "+", "tx", "+", "tz"}]]}]}], ")"}]}], ")"}]}], ")"}],
     "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tx", ">", "0"}], "&&", 
      RowBox[{"0", "<", "tz", "<", "1"}], "&&", 
      RowBox[{"0", "<", "y", "<", 
       FractionBox["1", 
        RowBox[{"1", "+", "tx", "+", "tz"}]]}]}], ")"}]}], ")"}], "&&", 
  RowBox[{"ry", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "tx"}], " ", "y"}], "-", 
     RowBox[{"tz", " ", "y"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "y"}]]}]}]], "Output",
 CellChangeTimes->{3.54774077705555*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rx", "=", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ry", "=", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"rz", "=", 
      RowBox[{"1", "/", "3"}]}]}], "}"}], ",", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"q", "<", "r", "<", "s"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"q", " ", "rx"}], "+", 
         RowBox[{"r", " ", "ry"}], "+", 
         RowBox[{"rz", " ", "s"}]}], "\[Equal]", "1"}], ",", 
       RowBox[{"tq", "\[Equal]", 
        RowBox[{"q", "/", "r"}]}], ",", 
       RowBox[{"ts", "\[Equal]", 
        RowBox[{"s", "/", "r"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"tq", ",", "ts"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5477359018491497`*^9, 3.547735902710885*^9}, {
  3.54773593867559*^9, 3.547736026238098*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"eqf\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\(r < s\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is not a well-formed equation.\\\\\\\
\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/eqf\\\", ButtonNote -> \
\\\"Solve::eqf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.547736012389138*^9, 3.547736026812714*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "<", "r", "<", "s"}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["q", "3"], "+", 
       FractionBox["r", "3"], "+", 
       FractionBox["s", "3"]}], "\[Equal]", "1"}], ",", 
     RowBox[{"tq", "\[Equal]", 
      FractionBox["q", "r"]}], ",", 
     RowBox[{"ts", "\[Equal]", 
      FractionBox["s", "r"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"tq", ",", "ts"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.5477360124727573`*^9, 3.5477360269268503`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"normalized3D", "[", 
       RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"normalized3D", "[", 
       RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"normalized3D", "[", 
       RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"MaxRecursion", "\[Rule]", "3"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547572277687077*^9, 3.547572341854218*^9}, {
  3.547572503443899*^9, 3.5475725284984837`*^9}, {3.547572628547284*^9, 
  3.547572629729044*^9}, {3.547573147855527*^9, 3.5475731654743967`*^9}, {
  3.547573213320202*^9, 3.5475732432115383`*^9}, {3.547573329338565*^9, 
  3.5475733392085247`*^9}, {3.54757440468857*^9, 3.5475745022847853`*^9}, {
  3.5475745426769133`*^9, 3.547574588897246*^9}, {3.5477293397926693`*^9, 
  3.5477293695692453`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
aCoPr7G62AMvSXouois8TXZZv28aAkl6LfyXP2VLt+gR9j75+sHAMr0/iE7j
YeKluiYd7DjMMy5QssCePH8n2DxT8tUXLkX7ewV8CFYUHEJyK739VxRxH3kf
hBcSck09v5zPie/PubCflvzr94VBrWrQU/yqOuqB7ewal+otp7MKoZxXUy+m
Ig8Svnz/kztWCTnLDyybbx/DSD7M+qsr2p8SfhnyH6zM76Qw9aLnpk090NO4
9g0K8l5oarUXo3MWTPM2jcxUg/wlmn9H+MrQL5JzZUOmDGes9wy0o1XcvNMg
wHvTmXFoRfQrJP0zkoO/S5cPBPnXwQAfIwvx3e3uVv29yVcFzlR7vebEkXqF
ZPRv6u8qkh4NA8cdo9LnyduRQZamZR8LII05b4tifA6i35bI0SXuL/W5YwOL
XbrWzNqz60tiY/cmwxf5rcwhGVhPipP7fIKBgywtf0ZiEX15ZrJv92AOfEnw
lHcST4HT0WsNOk82Ij5Qvzf1+/9XD5g3PNpso9UCveRzo6HdIC0/nNYb8Uc5
xuVxGG0WuPLsjSf8wud1Y9ph0Iz9nDl5pcrvf/VDu8leHp7KHhD44sf5btbf
pNJtaJY4dToNw2dSbn8B9f5Q7xNVzjfN3Wfrufv9X/mP7nscet0uSE5i0vWB
zzE+in3W5zvC8/wl/Zrh7hExTsqvB6wP7/J/Qnr7emtCoiDrFnTff5t6Gd9q
9oBj3LF9hJ9A3Z+WYsh91P4FfN5vHdshnov49mDUaJFZcxDIOq531ODMR/Sv
gcVNt+GqXNLpvBMcT7PhPMmXGuAg3+Mlur9pfeZt4mllYN1zjuOSZSD2r4qV
6ppOVcKfiR2uIve1URy3nOTLH1hL7oPjl0+KgeWMzKNQzCIctGrWDiC9tPvz
OWHOEVAh7QP2249fdD/ZSzsGMqS+t0H755D6dyVFjtw/A53TjeT7SgoXGe9g
f35AkH1ikekqymVSf3uh+FHKj/BzsN/OsutRk/ptJsRn9Tv/i4ddGs6rJw0u
QnHQnVWGegp/oqFlxSuPg3+KEf8pi55TxjyiwG9l86M8Xvxd1Dgk7pqkf4QN
2tZVpauxPCtLVyuaNn+G21uftRJ+EVVeqfJLPSf1nlDvDTo/qW9/w3ZSHpMQ
3YS0i8PwktwH+/+lSysu6gsPgSNp5/MRf5TXpl4m7AyVDw9+Wt0j/P/mhHH5
NLXFFKocRq864iw0669Q3yuBd0uemWsibOY+M27qWoDo52TvdR469gPElxRI
D2plI/o2N7uZg3+S4RSXjpaubi4MvF30ilmtGnxYpHKX3vmFziPGYtFK5A1C
dFmFn7Vmo/MvKu+NbXnZAgyK/2r2heUgujjpTwzCD5I/JWiflyQ//4Ik6U9h
efjW29jx/TQNel96E6vpR7N+su6hgd6UqXHsB14g4qAYsPdXDyH8RioftouP
dfzkHIRVdTwUwm+k0mV21SrvXvoXva+Fp4bFD+5sUCip5isMxnLSwH3mc0R/
BtxIucdExH9U+qnzju2EHTo3cKDn1KxdKjkV1kf4/5X+nfxM8+Q8bbsl5xOd
MhjppRQxq2Ujetjp3SfKjZthZ9CNmISNhYg/J8ru9RP+XGNQo3m5cTGij5N+
3gBEknyuRvs0pEZXqD/rR3zgYAhK11RIh6fBGftKJYZxXEDa30gY3KhzX8t/
AK2fWELEUxHwtanWcv79Mjb81iZs2obeN2y0GQ4dq4MRUdDK421cEA+OKCxr
asopR+uHD7yuWXGnGHrI/BXmJ/s3KWuCj1JkvgXrW4abxloE3yfO75r6Pvsd
Jk+lOCdsbIRnwapyRL6KyofDYeynLozWgWxIMt38OLH9aKOvxrVudH5v2Y2s
hL2sthVivKjQjuhJZHyXBLYfVxwl4l0q/SPpD7yH+w/6hz7JdSF6OxmXhaD3
HBRdmmq+qgpGSbuG3+uv1s0Tj56XQz2ZJ8mFnhCxLAH1KvAODXy2L6wGnVPJ
9PBOrfZm9F1Ycw9+ExX7BYLXC/kvcTQiOg8Zx/2AicTpu27ebYh+nPQrgqCH
Qtc17oL3mYog4q8AaK7Ver14qgD5D+tJ/6EY1lW+yd0yz34NknFZHlhJumzx
rCxH6/nfttd6VKaj97054vR4b3cD/CW/bzq4yscfXTzVgNbTkfv7A+O5DUdW
v6hB+zeQcZYv7BF6YjI/HmdVCxMh5Cz0s/XviwpxiC5YTC+VEVsI6ts/9D2e
F6c3ru4LPDzr32SvW6Y44ZKM6GpXKLypU1nonlDvDZXP1HtFvWf/9R+6vXgo
N9ProYaMc+Ohd5fMh8fJFWh/LtIveofWe30fDImpqINQ0v/0gdDHMUd+D75G
65f8sAg0MS+CWsGEW72DH3D+ga9mSMekAPSDnq24dO0V+l6rSPnLg+FRuSc9
gwlo/dIb75UNb2WCra4N2/x43/ro5Y7nXLN649A6VUK/qJF53NYFfpc6DesG
19w2eE3mZ36i85ucTRYe1OqGy6RfnYToptUW6qbGTVBKxqG+aB/JMxnGRNxa
S8q5P6xO+s7NqvYeeFgecbsebkD6J4P0D95CHmmv8HnkNUJzI6T1kV8UF2Yb
P70xF9k/qj387/kNQ37+XiH3Bxw0FPmJeJlqJ6h2I+s/68NWbXPg0uiE42Q8
G4jt2rM4lkPH+oCN9A9DgJXXgTbk3XU5HpEbrYScUPeh2leqvUX2aM4eU+3z
f58rfeNGbdLgAHiSce4H9FzZs0qtD5+PQAjpf0YC15xftWzOz6K+r/Kc/7Ri
zp+i7l80529R/a//+qU69vG1wlb/wI+Mi2PRefrDZPKP2NNTjJ+v2E/E3VT6
IycPjvNLVlC+2hbIEXG05Jwfljbnl1HPIz3nt6nM+XH/dxztJdc755dR6f0X
LzcR9u5hLLfRZcsXaD1r1zkF1oA6SB1i6VieHIPoNKmixs/+1cCMQyKwqH1D
9GaLshTn6Er4puZqvjw5BdFld34pX6H2Cjy5zlksvdOI6E2OH2/vD0sAhrMc
dUS+kHp+C8t1GydcitE9Cj101HykogfpX6o+pq6vCTZs2aBXDikHdVVWzsov
lf5lu4OhtuZKypUQJ6Xs2bjhv9+dnvFiIq1DNChUpp03LsmAg5qiXVJ9S5Hf
Rb/mmhYR5+rpGgd6f/sLU+1mskrz4sfMu1sNLzD8Q/f69kQ+IxEnqux3f6C0
pxw6M1ZPOkdnoueKyLq9r8z/A/3uffzz84cru0UnmY8OoveVXrvzFRHHUeWk
K9b+WPXfQpA/8WRozUQmNHyYOvBiTyd6rsDZJ/QzScmgu0fPuOt8D6KzmF1V
D6MNg4NCvcK7H1SjXxQXeHnG1tPhOPfuJasMwbBAUFoUGn6xvRTR2ad/+4zN
pC3IH6pNP4ly9/aDFSyZ4jmr8H+/4yrIfrEkG5w3C3EQ8doD9krfY3VYnzvq
FZ5nWVaO1keq335vEPoWNq4WOTXfvphPXjYm7AeVD4H6gUUBbc0g8GA/05SC
H9SIMKUyJgfAqRX58qHMjQv0z8EdS/be3P4X5M1/HUm/lI722dVn/WLyQzd8
p1e9ZDIbn3GajX0g/N0w96NvzwcPLdjH36XXoJdpCO4On2aJqYhA9CDDa69F
pBZRdkntDXk7G7dem5Ozb3Ny9187Rf2Nlfos+/rYTop9Y2Z+1rw8wJ40nV8X
OTageEdZzpqGN/kBcBWzqRP1BepzGw0ObYqbtVvbCzkH9Oszod5aJiePYxXl
rsuZJLZ58cvus52n5+eXaKwOZ7QWsaH9Cxg4dhF5Ib9t17c+fM5Aidxt30Hk
R3hjZxZ/fROG9jFqKGX9F8RGyXqfKHB8ntxSz6NYt+wbp/lXOPlkwxSHeRbU
rWVxDDhVDl8rX/yO+P0Vyb/B3ZC84pZS0D2/vfZPVCLax77uVt/j8WnIJ9fj
e83zxFA5JXwSyclL8n6lQQPPe/txF1oUR4xMsi8h8j/U8wR3ue1LTUqB6Ml9
LAPHMxHfBXUjDxH1nUtT4+X9+7Mh7YSt4NfUAbghu3Nn3lglOmdth14FUUei
Prfl+uZ1RD5H7tKFjz7H/yJ+6pH3NBFeyXF/zdUfResbyPXRQOda5hMlif1w
qagr3Ia3OuHPKSG6rSfw/dpF3t9mkOHRCc9+UQq0Kw1Dnv3LQecxJvnWCu8i
lRWJPAGVPk55MOpYgvNgDE07CvpHUsHd4bw/3RZcZzlo66nXPevH/NfPF1jq
w03kr1pu91sIc5ZDiBKbzfy8H3VdsXbmIzvzctBrXiNLyOHOZ7/FEzlbkN9o
987yWrNvOlxs3waC/Njv9SP1SSps0T1zIc+2Fa0PlKzPJfTqOm6BsK7THYhu
Qu4TDG6C965x7a6EfiGNgaPz5O16zinrMukm9F5rzv1uXUwbAPeu+507+zUf
1wezzpgefJEJ18nvmglFm3QvbU+vw3GrgHdNy8sS4PdYL7c/rnGBXb7W+ok3
7HgDKJN6JgnxQSWq8OAVxXrIE+WbspL/BKq7nQ6ZvsL1iLodLqOVl31h1suR
3yaG6yBi515lbRXLwvXE75SNj563Qy+pf9LQ/uyXs14R8dj/9n8HjFFVplny
AYifbYJODJ8/ZcF9mowd9poOaP9v9VfzLDUzIfR93J5ldyLBY/JGVMGt+gXv
deuozI7ru/pglD/+KpEPoD7Xtmrv/YST7TBp7dJx+tgsP13jFQm9PW15ke9u
5OACeRhssCjdxjsIn0h9+APnVa7kvHGzHYPCPcuMifwk9bkTpx5oyYj+gbaa
I48uUMKA7ewEzfVZORuWMzolIo7zeNR9xkdyWog69//2icb56nElH5aNyyjv
dNZLEPlAyzl91zSn/6jnpDxdY3ybPxH5q5c4yv79eSiN9N73ysXOGh+uyOUd
M+gl8j/U5x5atT90U1sATEoZ56zxzYCE358lm9+VglL5oasjPD6ID+vrLWk+
V/AgP8H9NhdN3ex9lxuXfLlldDPSS6xiDvHnZ/VSkWL9dtVUNkS3u/z0adOs
nM88z1nM6iRGEWMb+Hjq/6FXP3VufJM0G8+kFesleFNm9VIJ95vln5dSqPel
+mTeQ0LeTp/1Ocq9D+eRGMdrlIh7US0b+pjQk9RzSi5Lvxv7yRuMobnaePc/
LD8MowORvB7Q3Jb3UrtvBtEdyurliPjadLJXP+gKDdpnqQFFRWTbS7C+/+6H
hibO2zgwnmkg8lR/aXNrXc5NIbntkqlxIOJim9IqT9qIUbS+KPajsufv57j+
umTDwT+zevn1Bacq4rtQ6boc3VfPhmfAWg+ayTOzv7z+POfs3w3iuFtmB2+p
RBp4eyX9K/fC9PC8/YwcW1xgVZD0EMsnXL/IUPB1mjb7CquzxV4oWuG8ylTN
SIlxuCsURctXugvjvAormYeJg9DNaaWnC7D+TykJFCPqvBbilYk5t7G+Xdqz
q3+38xN0/qlLCZNPPUqAyeJN2j7IhKikuMIjDm1o/TWyfp0Ksg58E1YmHeg8
UW2j20/N6odjv5ZsKh7pQXpS13PbywefHODY4166q8d+o32s7X2qMpc5waIG
mnFKP65H52ue9E648Agenmg9WERTDh38Ovq2m6uQfhhRfsy7xRv7gdFvWy8f
NraH7yUhb+h2tqPnXjkWtPim+kPIOHnoiWZ2E6KnNedLVBY9QHLrFafdRfe4
EW6dczhCxH1Duisui2bX4zrsI4FsWWNbCFvLsZnJGdsLPaORlKNrH4BFhE3e
uZBqtP609hvraTkbOFCwwtngTB50PuYTfyaL/b2EUr5KZiYc7z/1l1wToGcF
D+pOTBpnVyK6aUOjKd11a3TO79+iZK3lG+A8addCICzu/nD2qjJsx1MrrVWn
g9H6d+NMOv2h9QD74p7U2lqi75uzJpzrZk0TzLCsmhoWt0HrZxafPJ3g0Ahh
TyLPnmmzQvSApTV/Jf+0goeA/P5fU7ZwKEAhiybZH9fl4zn6rWbt7FO28COr
1ZygamPrR93GhXZqY1lrrfeSYXiffoZ5fj16IL+nWjCjE/YKcapYitnjPJ52
gPSuxHbQz6rRj1pih86T9v76/kXRfQD3pYePLXsMx7VKLcQz9eTcs7x0U2wa
EJ/PKkinE/mZl5zCA+8yxhbkYZyDOFcNrfsLxlwXb2/KdcI4MMkY36cegyBB
+uFxaP3mI7l6Y+f/gFZ5lcnVdAe0fmOEEsV81ThIVTKHEvEvdT2d15f1PwJH
gCvzZf45Ole0fuvZNTtOaf0D1b1cTXxt7oiecj9rw+VqGsqerYb/RjywHZ8y
+d1B2JfvXPGsj35i/WOnJL3sgTg9xSnNkq5//yu0vol33TGWPhYKd0cjLWEf
qesli/W6/j1ZSrGo1Sm0lMf5peiQwqRF53gpl2RXV0bP2i9ZMh53lfs1M87y
w3QZ5b96fp9kiqROiTAlKlPGr3jWrjEnJJ+x8HSAGF7TIgKHQP3uJYzfeW57
ekGBqcoeIm/6X3kYPvi+XNfus9zWrqdnwv12Umi4zjaMRFaAg4I/j7alPfpe
8eo1MwckqiCE9OfD0T6Syw/eSrpZDsuVrw5Fnr+K6j6+ZDxDSzEm7S2uK02b
PSjMHVtKGdAzDeech4urv5CerXqZA9kL6Hbm7Zr1P9Pn3n/fHD/+a/dlGd+1
Clm8h7FXKraCFrh+kSIl8e5iUBjYXwBXLo1MeHFV+KMGfRnoLuny6Yv6jJ67
y4Uv+kUfDSWRfC9cH/9J5l+WUEQyrFPn43nadTzihOVxnSWVsdI6OfcNdHJ8
E35oMQIcZL0D53v7056u0BLAccfU/eNpRL3G4Lxbz6DEBNKHcrfchU9pu4Oa
TqJabkMFZFh+P/pEJw2dUz3vgyER52wbPuXceRLXC36Q36UL2H+3tnp/w/UC
djIP0wf55D44/8AWtu5tphvW/0qkn58AMqvkMz0qcfxSwhcvpKKfAEbMRQmb
+rFda9vkq7hD7inic0bO47Pyp/JB5Q/TXqcnuZi+8pfzrxV58CiPTZzASVLp
17m1/SQqikDWLvu41s4MaCHjvnbIvmFdTOAgqOccJetN3bCcjGswPzft//mg
pqcN8e0O6f/HAbeG7oCOCa6DjDYScU0sVBk/X/q8qgu9172NQ3Y37jyG9dv/
ejT7YjvlRcYXkaBWlpg7sLEF7eN5UeiXvZcdVLUt5vu8rBHRuck4Igb81USP
p/lheuhD7YqlduEQOLhzNUNwLaKfyP+1SrLYBpoHY2M+pBSCk53nVPBlfE9f
iO5zPKeH7Uh77FCZlLkl7HPbmSAs9hXtE1TyZHtKbi7EMW3iS839jugGHO5T
IzPZ6F6cu7Q+/KxqC3zmEV/xhNkWGGTuf477FIb2133IF/d1dSb0sfc9cniq
h/A/oSIy77Vbs8CEjLcLQHBqXwJ7SDfi/3cyT1cCXmS8sDB/y+1AWVoY/Bee
fh3uLAjG/nxzrb5RqUoXNJPxC8ZFlB0V2DYa3wHuZL76I9ZLu8XuHV3VAyn9
d+++evQQlpL+fyoskmXd9cWhD9cZHYl8YjbUkPbuz4LzzOyVNkkSGYJ/X90+
9IliuaWIXnq4rHoKmEmcNs6TH5hR3afBtojySJNluX+AJxwm8zNJcIXMZ2B8
0Skyf5sPdqXr2KceL1mQt0laXH3VyWc1JfSlzMz52fhl7xbu5k2zcceOPUG7
5dvF0Hqz4YfC83GYjrz8DMJ2o+j8Dc5XCjrEa+EniWeugC8lNyJFTxah71hv
l9VG4NZQfibW/h6RnxFVCBpnUa9B+5isczxP1Mf/TDHJ7O0ugFtRE55EXYgq
/xLvWWmJuhF1n2L5d+u6p6vBLOXKyrvdWXDP9raEaAzGyXz9p+pE4NAe/9j0
XUW/Bu2zmf/eDUJvaIsXZnaewPUgQfK+pKDzxOsqVMfubYYuEg+TAEzLH5Z0
ncb+WB+J6/sKHLrBy37Ylv0nTo9HdWVqnRnxn8y3pgHTMQX1P1HYD1k1px8T
5vQlwmeadbUQeWzn501P9Xg/oPso0b3crdZy1k6R+fifiK41JwcKc3JB3efx
nBycm5MLKl2DzKcvpejtZvk2H9d9MMHsgFlaBdCSch27MH/o+nHny9RP4Pt1
2W8lgSz4wPX+/v2L5TCx6/cVk4ORC/LSNx7KrNheEAP7vixRfaKM8SQXojZq
BwTEwRG+FwKqzVg/dDk+H+UXiAGhB9HMnVNZMPxTxGudGwMlgqx74Pr737l4
m3ku/kb4DfdMv7EmemQHq0hcejrwkPUMBsp6Mj9aveCc299nrw/+8gu2yCzf
QeSRqPK2o31PVx7vL4hOLDqQ1ZUJi6z+l0ewmssrUPdxH3PUMaqugWYyH56L
6JsOdQ0Q3zFuZiVdEj/GS7iVy9cQOMVGsi6P68VHSP53QM+2aHUCN0ddfzeK
c3H+1h4YI+v1OO/NQNYveqCXzM9jO7V4OP/I/Dpy+YppWxPzJOD2zzPtpa0E
3Q1ij8KgeGG+SCXwnyVLIRzmU/YqSs6GNWNiZ9m3lkOyj6XUx9n7mfEfvrFT
DoSsci2GFjLPUwAbB6Orf2Zju7abzNt/BVPnnm0qD7uAR9LbkqjDUM+Ze03E
2VW6B51zUf3ApQnrX/DaM/XySAPOBzqQdfMYSON4trnUrRvtz0vmG6OhQOR5
Z1ovjvsWkfXrSHgRzSul/BXXo1+RebxYuPtk5Iv7AMbLrSbr2hHgH3T+todm
C6KfdZP9kPAP6//R61dqz62qhS2mNa6vkmbjeNuqjW5cFWi9BVlHSIJF53az
0P+rQPpno/qbVd9cUuHKPpeb83HOHZYbVguLZQLLxlX6Lyvq0XpmUl99gG82
e1lHrWvQelNy/yhQemgR7miP48o2Ui+FgT/l9BFX71q03pfUh++B8u7HOj/f
bIxD8NgTNRmeC0U0drcnZpIQfeS1n6fmNfx9bQaKtGpim4HehsinpUCUopHf
hdE8KPZwpdOgb0Hyc+NPLHdsXxFEk3n3tgXx1Lm13MdTvzfCNVJvf8X17vUl
Pix5DVBD4vNjEV2B4dsN512NMHPFjF1670/gzuX7KZFdivMSZL0+BsSOegmt
eYb18//ylpGgmrDrAmdaOdbPJP4wZC4fmASbyfoVjrsH3wpIGt2Kx/L2Om7k
w+5s0OO9/+ljdyJcTHTP+MVfj+S/+o9a+nzcOM9TZcnbgjkQL7VFc9I6EuMt
25mTRhMzwerB/qfeGhjHqJxaUULgw6nv+yL39OGI/g54nzKVSeQDqfSviovF
iP4rBZuI3fPjYmFta34H7h6Y4HeqUziG8VRW+xtX7C5qggNkvjcK0Z+f2T9w
Xb0ZzpL8D8P50qYUnnTetrl8aQyma9DkUb62wTicraEZDUf0yrWCOdp/W6CI
tI8fgJuMQ2LgKllXbEby8EdUkP5gQhQkW+72VqlsXCAPElPvxog+n//lUb9C
tNhVf0fuYhAi6/gLcddnggxXG031QbdbXYipayKiL9e+tahzqgt8Sb5FIjrH
yeJaU9d+6CXzw9GQPBdHic3FVdT9t8/FUUlzcdV/7V2YjphHPQc9Za2hcxRR
pzacs5dac/aTut50Lp70n4sv0fnn4kmaW/+LL6n07jn7vWPOnqN49oM+453y
MuhjGlM9oWeH+JCdL6T0+lsFrP/RfvJ3VNACvc3FpfRaY5aP91w2ZsGFImx/
y+inCD/G926xqqg2xomd+GgzPaj1DeKP5m7jqcyBsXWfEgLtymDjzqFfshO4
3i3i+daZ9k8FhFwKzSvRxHHo8+IplwlZnCdkJvt6cB5+/7XNM4RfeL70tAXh
JyJ7+uL89s6pqlm9X3BQgxP36dgE3jhN+IH3z3xbT/iJdPtfHTSlx3m/PQzp
fATuKMzj1CaN21i/VZJ+ZjosNbhXJ3I9FeNkVuU7PufDedduNt3mksQ6qCFx
UN+BX329d/djrB+4/5mIu9yLhf372OIPvsB5NmXSrwsFFTJflAyfyjXuTrdh
/baE9Ce+QTJZf8N14e3BRVXjxfFgpjE9FdHdsECeBznehfP3NUIpifMJBaHH
3VoVxtGgUZEPXLsxbvkEKW8hc/UL7E9euj5+YcOhIMjO7RI7kNC0wE/zEBqr
YJv97hKk3NIjPCoTv2w/0bdoxrNyEYG/+G89d+aS++6NF9kX0Pdw5autuINx
iZuZklSJvqPQ/pGRNRpjIGX3yHo+Xt03a7GRRvD4gnqxKqnHWtE5nZt1TIj+
xpFY9T6NWT1HpV8rfH1eaqIGdDyN6yQneiCu4KOfhya2mxWiRr+U5SrgnvTP
dU7z6uxWv0fyCVxm6Wnep/P7qqqGF29T3T4DNrQtiybn4fyNDIOZRE9iXG5r
BCcN0Wdklew4bWKM+zev/lleQODkn+Yv+2KtNQj5D1/2zse9V5E4vW6gPzim
oHkN21nGvG630cROCLc+6KdrUoDoqlz/kj/s7oa/JSNuArvm2bVnx4XS/ArR
c61veURprW2GJca2gZSvuL52TjR4d8H7Jmgl46ZE0JEi+gpxfXZQtkH93LP1
lB9bNm2ZTn6B4uiWZSOuQ/0slHtfnLyd5/HNo5IyMeaykrJ6sdJ9x3l8U/qQ
2vh7x0qKdXqVscjs/UM4ebkyfgLXm1bIeoTmFsa1fk12u2uqvZRiaMRnOR/X
Ov7cZfvHuiUUnhafovlxJZ3QZebk1cwUDuni4wROhrpeI22f3MUhOiS3Ky6V
UYj+C0cFRlWFY/9gfaI+e19UGez06aGJnIxG+op6P6n3FfV9vAm93c7ZC4lk
XT4L0dVIvMUfCCDxwzh/JfHS5Jmb7yh8JHFt2D+n4tuoeDcqnX8uH2E0l5+g
noeaj6DmJ9D6OTsXOWf3qHSxtpOC48WV4Jki69Xulb1Az0vU6h7lqayBTzJT
aperG2FVmNV33kNl0MMzFKdSWbhgPavN5rSV8UXQuTdzl9REDtgWVLiE0WL/
nPJcNvqkfCK48n5/ovsD97WFb65lIP7N3JbfvfxjIqJX63o9I/oSXfdb+P6Q
S0L7TJC4l3xwzvGMzYjF9eKXMdHRIxU5cDx0w/UDW3A/oNRIfkPbj1xILn28
WsuyFFySX/WYVWH9dqw5+ECp5ncwYFG8/GUJ1p9M+lNG6w99BpnyKqXia43I
H/NrCdhVphkOCptd2ufjLanyc6lq61bLD3+gl+zLToIfc3LgMScXqB5awtnL
GpAHL0l8F87bUOWDKi8I1zGHO6TiEKn0DaQ8VMNeMh73W3CetRpEn3IOhHXe
A5MwugX6lntznuVGryWIzr8nw5HAe8SQ9ZEhtO6h2Mt4Are8T/nUKf++iQW4
CNbl1jLz+/15O7+zE3jptKtF6lHuU0CbnOY/H19tze7k5d5Fg+5d++o8nm3a
P6H1/G8KbyPOo9Y4Tli8M6mAuqti8nzMLRhvvMw7/nJpNXwr5hYl9LxiyZPo
xSHYzurqNHolrovE+q3rSGJhVwsspxB+5ndE5wxst36V3wy/SXxvHO5DcWRO
MnNvBv6NHMcf/cT+LXtEh8zqWXt3V2i1z4Q0Bzp/BFvR2D6ohDSyvt8HLbrH
PUdnsnF9iowTGyF5gr1rPg55rf3TfuajLbDBtn71NjGsxyyVyraS+fUd20/E
X8Z5qssJvcqSPA1QWCh527MyHdGFSNxyOfDsudZA1HWp+1u0fGNP5CyBxSVV
dd2P0xG9k4xfCqHFLoTrG3sVPBFqTuyP8liQr4h2NKom+thzro2vzOPF38sp
JubL3k/OcikDbzZturgYyU9d+Gu7qln/eNXK5/waQcsQnW5sSJTojx65sTIm
wnJwgfx0DS8/yBE6DHtuniyJGMNxzV5+7xXTZsso/YflwrNn4zCUH1u1VvuZ
KgtlkEHGZn6f+3GehqGLArSUB56Lsu6caIMJhfdPBn6monuxluwD6gTV60qX
5+tV3fSEitKdOK9o9nbfqy0nWiFw/OdyKR6MJw8j8+R4fsKRbBl/gj9SJM52
3rwF7pWxxNyE1NeCArcm2xb4J3u2tf84E94BUrrW6lqzfiWqp7MHPiDyStR1
qW/ocipm+Sls1pBE4GoRHsY+8Asxl+AGz2sdot+Lysdl1+l+NuekwwEeppLw
/lGcj2VheFcYnAwbXzK4pF/C+dJQa9MeQk+d3LH9+qt8jOdfdHLzx6NPfoB9
XU4LPUsxFMzhm7Pm8M5UOaHiU6l4VSo/qfhCKt4Q5aNIPVgLGmQc8xjRqbhk
Kk6Zug+1jus8V9f9r93JeUTgj2sgefoETdzAaiSf18W+CRB+47d0CpPKRhZE
p63uu07oE2Whgwo1y6dhSjYsWuQ69ouu6SzZodHdjfg5IH1X5teKOjjgWOxA
9A2L3tuoSPSjU+XhRU8EF+GfaTOxuHgOEfyX5fu+s3qBH77/e4+G9N56eFGc
/bTmRgq8uvx2DREP+t9z6bpoiXHjIQczab5vLISUs4/9BdTH8RyAO+xP4324
UB1tB+/0nyUfP0ENW86lzeploHJCvyD/TCz+LoPpb0MbGNB6c3v1luuhbyE3
m6dXNwjjA9sUk53eSr2A8hFnB5kff9F7sbTb6VYKPwPnRfw3AspKwSDtKP38
PlzZ8aSgs02434R+gD39IasDqK78xshTjfNaBoeY+Plo7RfgYCfiF03krbeF
j+vcOW5VlQDXeg/9+fj5bAuuSB1JrM9ruU6cXtJvCXBgL2uH1zcY+BzwaZfF
wniH4cyJ5NDnzXBH7W3f4nc2iP6Ytk+qraULDudIdoRV2MNMms0V4n0iJKsU
r7CNL7CbBS6r7q7lGgT24QAh1j9PEF3oDV+C9KsZOC0V8z5e1APX+zbyBXNF
s1FUVD1lbjYHQbpGwI0wWxGUH27OVTQPGfsFRmuEblmyrkB0l4+BKwn88JOU
w/wEvhHVSW8VyZ+Un4H7Pi+NgtQw7sjTUZSXwA2q3zONeHJ9Efq+Rbpexyw1
veDU7ZX3LZ+MoPVaQ495Qw89hyNGi/Yze/Qj/mex3/F6muaE8IJU/CCVDxNx
IlKLGDGuJrpdWpqv6iEsEhoT4RXCeEId2WUnlMwewL71TGc+HMHxSM7S+oRC
TczP+4qbBfqPNAGNVjvrhbVpIPNjQu51P37fE3HFxzi2fILHM543WmKrwHGO
fnRJ/Mcdf61BVtP0r0rlL6jmlL57cJae8Z/vfjyho4m7vAE82M+Z2G3HuBGL
j/rJ24va4Hxp5dnbVhhvM9rmv/TP5n5QiJ55ltzwGMel3C1b1NjGYFZDd7iV
YbyEmsulwjs7GCi3w7bvd3zyBq3f8Pb9hn1Rmyj3XtbQvzH5AiKq//RE582d
+KAntUXdSwjp8yYRon+yEuq3cJeWrF6C9JKg9uGLRHxaxnflhegl3C8vuWyA
xVn5O2gMhxfVMmcCK4n7H4VLh505BOfh+e9/d20XjMW4rLb0335EHxP7TUd+
on+s7xH0B9rhenrpm8HHbUW4rm0bqUlD6LFwZhPDmSQcH5XcvXZstVML9EQd
CNESwP0FZx4yFGkqtGP8xpd/Nrq6tVB9r/vw4W8tcMpK/CTLUezv+clLUYpW
NcGP5S/NCT8Q4bKa7AWIX+r7XrnQ8UzHqgwODVeLVFzLguJjtvqZG3H++Ri/
s5/C5TRQ6difuHspPs/tXWecu05nQKHpDZoT09iexm+1OVLZmQkClFfHQjKw
X7SKfno/4Yc9Uv8x3mRUAB+zDGKajBbqE8/Rpcq6ur1gZmM7fHwN7gsz41Ia
J+yrsyOjM9EXdnaLbvRW3UqI7uzhMj3oi/i8V8XVT0SmDK789ks/pueO9qe9
VjJI4FSqB7tGpc1wnWKVQf3o30WN8MmWZuqKCMY3TvIEGDzuK4UzzWbsAfJe
iH6NTvcyR0I5bLJM1vj2xnuBHjuzOrN+T38k3JpZeYbAIVPfazIiN2bntlhw
rVo5YyiZCY/H/5gHnGKgtB5eG03guqn7NO51P7KTjxHpq2Mcud/rFJJB+ujB
WBP6JQhXqWpwi4nAdaN+Up6a0BzTdLDttrw2LZ0BLkq88R8CykHr87RLbgPu
D/Wkzc86zjQAZ6ymQ4i6FvW5nUH7XbMf4bzfQ5aVR1WnMf8FjMVFsgQK4bOL
piOzSSbsU4p2N7/XidbL0g/v/WmB17NcZUt8dqUO/hnxfhzTxvjVHekr+e9Y
10P8+3WtgtvSwTSTzdlBG/vJXhcrHw7K58A19o79IZfzIbG3gmVmCMsJnZHb
V5OSr0je1n/YbvNxbSbk7XZnt//1Ge1z53UkW63B7PfdvurTtZq3aP3RDys9
nfgzYCvfUUnCHhlwsp34f80DudUzuGpAeABkLrkZheimwaWih78I3HmJaHgK
29jfBes3Mp8dTlajpdAeH6IlcMuHOs8mE/XLcPV1Z5R2/P/7LK4WnPoS4rcP
6SuRxCWiNlYmYGv/gGs1L5arb79/PZ3c7Afa2vHBJQczgPeaFM+WeDFKHvP3
kvx59cpmqSc73PL4kJ2SeXXXxtX7M3zq0Usi8nhUuvy/nMSnX1kpw9PHrs7P
mxn8/eyvKbEanUcumekJkR9bzHVi+sK8+MLiB6cokcdTyj9a0sOE85CpAW7m
v78Gw6pDq//x/8uAPc+trlFMy6CgQIRl/rwygUpH3dMFpWDkVfzvqgjGd9nE
7BPkLGWjDOj9/fRxXp8F64XvF7U0V6D3er1lqcNz7zRoeePsvq5sFbov1Ysv
nQilDYNXP25rjBQsR+tz/h3bRvQBUc8v9qp2iMif11W37yDwBipfnkx4RJSC
3XcdA6K//r9+70pPpQmiXtV7Yfu2NotMKBZWmcifwX3iTRZHkqeTkmH9AXtJ
DoEJJG/aBeJPiP6Cglc0+V436NA5f5sb3Sf6IP6aptGXlNGhfe7dXPv6luBr
cAnmPfKycxp9F/Yb9w5sXeuJ7aBpZwX/wKyeVZawJebGiK75obCT9i8UC+6P
JerAVL6537iz3fo27vvYKNUZReAiCkYYS5K2j4B+1me5+X1eD67ZDTLfx3ZK
a9UaXYPQn9BoeiF3b9sY2udwU73oG3830P2V03/aDuOW9S/LmCWucwV5F8kD
GvbY7rRYfXNT6moHl88msQfZsB/iuDPu8EE2PP8tkOZzGyFvXbn5HKJ3m8BW
4G/T1ulSsJo5szd/a86CeLl9mYATEQ9OSOYdIvStQGvOYu477eg8pUeW9Eec
SAOJUOcCw6RusCH3wXqPnqf21AUBjE9T7k2QJPp3mphlVq9+gfHMT5sNHnhp
pMLSkrdp50QxfzSWWOnFazpD8Z5QPq51fbj/faVM2hI1R/RehqG1cQZRxZAR
ynNZ9fOsv8ceHGdTj/XnNqZDryPaH0HTFoOZV1oYb7aP973QoRZ7MN9u0R1z
twwmDxWnvf2A70WiTgWnb0YlpHXSUDL34u+o18H72c23Arj1vvqXXcH2ziNZ
UkDUFNfNB7TO/RARs4Oyls6b73oa0HnGuSqufEqxhaJCRbVnsoXwKniRWmon
xo9VD7IMcKllovU7dtdsuKyaBYMcG1gJvWqhJeznWIvxn1rXhp0J/cly62ab
lUHjgu+4JDbinNFUHWxw3cLnXvYL0U8IrXa8+LoBzNrXrD07gvE8yXc6K688
qocniql2O+hxffleTiOTNGs9JHwziWXoCAYxO4tN4I/r7FrdAawnH9uA8MNi
tbcduL5c4ermJdNpBYXaZmuD+H9ifHXk0mdNxZkwfcFglacfllulwOsMjIsx
vprbVuvhom1NwP9v7+3eAGsY2nvbZ6loMM6/WRqYEn2C2xhPObuxmiM6W/zI
74esmfAp9tnVKmM3OKDYuDjuHJ7rVSvxqIFOCc8HW3mtzVxELxNiC5pXOHFH
g8rf1ns3mPB32cnInrUiIAKq6CfbtzfUL+Azt1fDnXNDfaBVfv3t8wncb3hl
RLX5xPceuKiu4UP0xSA7bnJliKjnvjS6EC4WnYLWH16hGgPrWqHTW3XrsK0t
okfc0Duln9ABpRLX6nm87aDlblYugR81kH9N+ds3uECvOotwy8ZlDsLyW5vW
b3fC3zehPvhxJUxA3ZHTrwl8ApVubNsbr3i2FxjVPJR09j1C+zTlez8K3TUA
h8/Vr+RJxPdu/xDb53ajadizTnfm5rw+ph0nDmYynR+G9b4+7RqOz9D6Np6z
2111JsHvSFLYmmQ36Hjtl03IMzdr47DdkYW4u/de2xVu+TBQ6N8fVIuuwPV6
7ZZdN9vFmSgW9UydMfP6jMT2g2jIQ1oKm8WA2p/jXnj+SebpH27XGCml/7af
nlTAdkrCuG8g3WsNZYPI5t7IiggonLP3G+fsP/U8yytFFYz4C1A9aPmLLpvj
SYrIXtfS2dbdvHpFjn5SLW9JdAaYmT8zWeNSCjc+39niahiM5E20gX5TuuoG
ZI/0XJa9Tc0NgP028NVsQAjZr40f6303x0TAw0QDBjOtlWh9pSXRv5kEG8cO
BVMqMH3sOOPFR8kvwXCv7KSsrjTaZ/TK8e98MT/g5aCJSHH1MkR/xEn0NbvC
16UPt6tnsqB93H4Q82fc4YpB7gN3R+wPbFnPIED076R+qWFNP4zt6eUJou/S
Ce7nFugl755G97psnOjTfAhVl8q9WKawHR8xJua9PAa7I1714frY3mXoE/2S
DyBnn7ZcofAQuo8qXER/pTVs2mLjaMiP8cx624j5JzbAGyzL+KkX+9Xe1gT+
+R4kx+vGsHztRetPmRJ4Kgs4XVmml8yPccW2k0T98S6UT/xaHufWiewC51sC
h3wbtqauoiHqWAFrCweJOZcIJ/bAuol3M57j0ahF4KPM4JGt3L2xDGwfz18l
5nvcApXSqqIB+Wb03OGzBH7SFC4erwoffteA1pf/I3BKN2HtO4OC5n+N6Dxi
nMRcDhP4UOdDK6+NcZjsZN7bGJ43b1Q+EIfxVF7niLqSEeyhdxJnssL9iVED
xByMG+ieHqDp/RiXXAe0zr9iK2oM0L1Y+7P8ZpBKE1RMEvr2BqInSlwbkl3W
CMmribyEEaLfjwnykZdrBSNSX90Ea67CTGtPc9gwtNhHj3dhHMq9V8D1TXMH
MJB6zBT3fWit/SQy0gaVJUR+wwTR+cLtHufa9cKNs4Reug3xhvqPlAd15VKm
em8b8WA9zPrYXJ+oi63LZT5hVD254LkyEeEBOsoD8EKN0GMWaH+Ntl9PP53u
h3dRRP7kDqIX9QsLeJoPg+I7Qo9ZYTvo+15r9dNJ4CX12AOMx3gedYxObAw0
yXwLztdNb2p8z1/FQLkNu5PT5vW/RIh58Yz50FJ0zAl95YDz6ebxxac/raSc
HS49NTJvvoewEE3sBkdGCi+px57jOZCJAefoVBgoH0OJfI4ztjseVf5v49ZQ
jgkT+s0H0b9YfPoek0nN84SAwQprHdOcO+DmLV5D+Yn9Gf9LQbLOrLjP9Bit
deKyY5ifVcL6mq8ffQa/talbpJ9gO6jR63+ivjoGXnVsek67NQMu2+t+cS9g
oJj91fhJzE+gfq+V0prp+fI47hZgU8si5kF98bh9lZh36cFvt3K+/zzYXqPy
7QrGN/IqZt/aFpcO9uucztneCIMpwR3lYfn4/HQ2Kmci2sLRvRDa3ce891AG
iCvcZT7SXwy1pB1fiHs3fba06PySP3Bm8wTblDSOu9kf8kloa/yG+xuvBl0+
kwZdTtkRLq3ZMO59drdZGrZf0iQupRgS42lNnjxiQjjz/83P9JXrOBZhsFlk
7QJ7t7SjUUT6gSQl2ES5dfFs/CQ4dMNuHHCf+O1K+e8awVXoPKdvczwIXVQH
BffiJdLicN5pUdetFKKeKCzgrfJ+cwaUsU6fnY8zSTgwcoXwl6rvnh23UsD6
ZFtMdu90URqcT7+R+DQA+2P8r49rv9sSD/y1XicKd+B6tH9Nk8H8+Qy9Oinq
OePdIOvx8kuxQhpEGVnsialaTFF7Vx40/zu2pX2QPxOG52ysfGsdXyKRBj+/
+e/ZNhsXGFdvvabyEPvhXserlr2KLwPd2956xdcw3uCs3zpW93OYP9M/llQR
c3Wo59H7fTXp6kgzBDsfMCfmPyCcj0ij4uncWbsTVmw46hEFF23Y7ibN+qWd
136v3uuJ/cPFL70DXbsT0f6H1oxk9vTP+ttK7sk7bWfjr6ImYGQbWOB30T3I
v88hQL3v2A+8dM/0sE7jUorbvhA7AhfHlCqRQcwHoO5fG9bozKZGi/yKUENa
L+I7GtI/+rtHFNcrDTdw6jt6FoLA9tfMT90yYP1NPff4N1/hbv3e7bZNdQv0
3mmzfWpEPnPHoSkzs+EZRBfdNrDril2aXIX5jFRk9j7KSPVZCjd/OTAcCdQ9
q2eK3ms0wnVnulsZcBzRvcledgX1bdlc2bC+jm4Nsu/LxQXcBWN8wCi54OIH
IQb0fZ+zEfPrnsKMhK794ZQRSMw8YDF/Dsmm3MDbqcZ4DrY/Occ7HWz0fyWO
sE1ifKk6MRfODiQYWvYZLMJx4mom1iT5LSnAnC5sLzSI7buq68RQcu53EBEM
eq1ggvt2KxcTc9IsIdVNQv3kE1z32UlHzAe7g/5N/TVTZPOJTkwHE6uqnyJB
uB7kGk7M6TKF10r09Qo38Hpecl6WMYhtqpe0/4TztFfoNi/ztcsE51scTWPL
cT3oFC0xf9gQ62c30fz26GaQJes+xtAgIxL8bQ/u6yk2NOKlLcQ4vfUmCc4v
mLthJpuoB5khOU8V2+u4XHwQYoeIus89RPemvSPikToDjGTd5yHGQ369wDmV
wUZZRNZ9PED5gHjVlzfjsDm4WmWPGY4379imrT3NO47z8+5rLxD8uSARs/aH
HP4uzU5PJ77LJYGfE0uzlgX20xzIueW/YFfSr46xGdwndcjqhyCRtxcxXX3p
NCumM1llqfoY4/iIPtP00NHZ+/Pz5Yim878NC3AgOmZu5VdDBCjC+urD8+ef
qO/m3cp0dBPOv8U+9/1g+A10fLlGLIMy4BqJIxwDukNEnb10wT3SUPeNnfxQ
DRte6qjy9/2ZPe/nxePvhpCf9jCEokPMyWnobPFLExlG9OwTeQ8JfHtWvWuM
AlclhHp9m2Kch49a2XtHhuhbMCt3+Hk+GD83ZG5dxtz/R6Vv2VwyXBfUCE6s
nDTP5vml1O+7yy0rqNqqFm6yOgcG+efBWPG7e8rXcb5ITCdNiqgXaDz8tGcq
PBfx5+6nw26+vrjv8voBpc/elA5QahVg5xfAceIWpmg4GtMBgTFlJv4B6bN8
yNlQH1QIGeS8UozzPCLntZ/WtATexSwqWlG9cK6scde/WBbdESjVY0z55pWG
ntsgvEVSkmUEHvDp3ibmuVHpZox/UsS/1sJzrfO56kFcFPcc+cby+ln/kzsv
4U1/ANpf9YjpVWKeyc4lj3k/9/khuY3hHVfx2FYGjnYbj4bdxPRMumF7a+eV
FMa8u2Gq8/pGeUj88RrKknrV9Cfz+kZzP+THxHSupNzKOpifo5iE9jniZLh9
7N1qpA9FaSN2Ev2hf+fsvcyc/UfzUU+GNnccWEVhXiOfy8kcgvbxc7qpEvGb
i7JsA33C+nl9tVS+3bL5wEjU8Q1+lssx/lhEuWqwPCt2aTmwdxrseu4btcAe
ve/NjrQK+gI76P8ZvliWhfaZdp02eUX5Aj7Tk8eI+Y3Sho+SlPVxfcSCb9dr
Zf0EuC91hNXqIiOF1YmY14Xze+/d+m7pNuC8q+WI7GTXYAK8ZGlVPM6J+4ny
yHwsziNdVDAwjjydCLah+hsTarC81dqb191M/wmmV44D0We65vZd15hknKe9
SdaL40BOZHCNJA+eU8Eh6O9J9HuW97dUSQrgeNOGnKf9AyKvnHtbdQXXl1tH
memI/hqOQQ+nd8E4DuUm87cxMOqu4RfyF9NXnap1IvpAl0kvVekpLAND0j/J
Qnxmv6I5+PJ9KXxcwcBNH5iJ+BO97f7NxEhsd/Y1MjG43EsF9acHl+57PACM
Jzd8nD/vqJWsB/dBOIkbx3O8TzpvSqPbg+Ni8/aAIqJfo2+dvpDLPUyPrbq1
h8BdM/2kVBPzi6j3PYvUP1Hg+OXHuYkGrIcPkPYxHN6HhzS4c2G9vYHM0wah
7/KD+daYol8BPC++kEXM0a1ov7ln5PC8uZoeI34Z8rN+4YuOv6x7cJ39gKPX
HmJuktr3c1MelTguZuouWE3oeeHTxmW9VtifVzcZrIj9FAZDGwtDP7TNm+9N
7h8A4w7+pbTjv9F7hVfK0N0W/ACqf+55EX//gbr/Ze7hHVG8QZCcChpRvDhO
d39/I4uYA5ltMHbJ3QTPEb1ha+64dW0wXBYsGdBrwniAa6KxWqe0A4Br7LT8
zDYcv9McYHk+zekDmg/pIjOqsZ0S+euzZq9+OnykD+KMGsfzzZ4MnlfUE0kF
SmbTujx93N/kd3/fmGAszpt1enlwsMk1gkRhpgdHaBpUWbP2rSyux/jtIc67
nr/9wBYafR9fwnkD4f5NX5raXoFSz5vrJV54nkZzdpfmG39/SBU5eabUDded
039KTxqH+0LChEi95Brs/699W24eRusNT79IHem7gHGqe2j239L3zIKqLN18
4nuiOksf24B5eCbEattnHKsrAt3hLYed3TGO9L17nLOKXgnQBUqnadjguZ1M
7Xu3atCXwN7PeZ6LafB6+7Cwte+eF4MQWb9aOA9T9ULhUkWGejj2hT/1NX0c
+HeOBog0Yz9KgsRdvIP7YpL/CjVx/vkFid94CZKNIUGW73GfwnkSV+kLRU1D
HvP/3sRLzpzQSuG3cPOzqtjmnzgOyv1tpadT44/uRZ/sihk7uga4dPT3QU3H
t7ieJe59a+Wx+tn4gcCneYLsRD2jhHMC4hut9rIKZbkMuM2vJD7/71BkqAWO
5nlkgFnZjgvFOtGILpBz6fdurizwKSyVvCQQjfva1kqVpvZi/jAGsaTsF2gG
BjLP74vzons7otdGN0EY2TfhhdaLPft+4UFKI0wY0tGdp8PzQgVr6V5f1W4D
pdORA2uS/RG9w/SlvFxe61wf02sYu33VmKg7XiXrvDjPwxUckk70SXrGb6Kl
NR1c4EeZJp589DdtCPhJHCCOjxoLT++1P94Bmxnpd21sw3M2FHc4TxF58nUF
RUV/jociujg7+xO2iD44Qc5B9YNP6QNCrS9LwHb0vlet5cL5JDK8NtFhQ39B
VCSl0/EJ7s8Sc9g8cWfrX9Ak55QGIrrW8+vH4xjGIPDU3oLJeX1hPQa1e0RL
qP5JKFqvL3ahKc9sEsrIvHoM7sNitm5Ku8RA2eskfGd+H31+/jXt1B+0FFf9
P3REPxd1n1yHL1EvVOgpLeePdHWuwfmfRo4SSpUVE+WtyqpaZvUEuDfnf5TM
+SP/d59UPujs+dl/QIIL0Rnn/Iz+Ob8DzZ1ojuFcfscXRl64a6rtx31nSQMK
9HY3vOHMFHeRnzaeE/vG83XP/L+zc4+cg9cPhrqH676x1wBnp8vd+XZN7tLu
IyKmWE/ukCu/fLE9FdLc7JqX15QCm7IWmwsHji8CGXsp/5IDUbxzv6eh2E17
A6U6vfSE2uFyOFsT6ja/T4HKt+6sjzs+700Gw3UC62nKs6BXcO8oMceXus9B
7cgbTKe7wOPWMb/fj8qhfNEUy9V3eO7fbYa4FBF3HN+lkX8/4hvQyF/lHZXN
gZH3zq4fUhbW1x7LLEk3FGoDXvLvSeE5M6XNnRzGD9ogZIM2w1fRNCi++THh
pFUZiJT1/7re4YP2yf2kEHUqYQ3Fh+xbwv3aTeS8FC4K7eXoH6zMGGdyLE18
m3gUF4VNn+iT+7lAzs2OfxTyWPYVlE4w7nI8mwkVivFy6al4bkk3ObckBmLi
zn1OvoDnl2aSc7oiQVv8zc+TPtMgbTEZRswbRDjGZY7W4czYHxMk/a5f0MR6
KDQrD/tdrVLhzSeb08DP+uKfeg/sdzWQdfxoUCp12NkZg+vmCeR8Ejyf8O77
LUcf+ufAtZdZdpfW437PooqKlCXsOfDFufh8WG4GiHhx/T29ogweB7vwOlRi
/nSqLJMqF8PzVD1If+kX1Pi3zlxrwfPB+Ml58img8jO59Mhf7Kddv1LZI3Yj
GZTOB56TuzwIAo57ynYewfmrw8qXWfSf4v3dyDlgIXB28KxQmjP2u9ZNxRwm
+og9P4ve6dHCflcrOc8EzzdG+fV3RV5vCnBcf6daK6uXqRQ4HFS32h/PAPNH
VduIuPR2byZv0wUcj9gEzHSuD8L+j7LM9GKdw6nAstblnWM59scMSBx4KuzJ
LWcf+onnxI6eIfrB/UHD/FO4r3Y/Ov8tsi4fCBJusSftzuD915D93W+h8Cgv
01Q29qOWXVrb8c7dFwrtOz3rHmI/yoWco/IGfV+ZtOWjAeqNIEz2IySBpdbE
xhHAfo4j2X/9Cu64ranTaMH+zP5IzWfdg6+hMkKB1YkH+zNyZL+hF1xqy7m6
P64QvMQfja8UxP7GzkPTiSvKCsBX42+WAx2eF72J/K65YMxV0fzGBuu9sf13
mSPtsP+WSs4B8wTTFiN/dWFcT2Eh86Je0H/CYqClE/sPkaS/EQLsS/d4gQGm
25L4KzxfWnBU0DzMsmGunu6J5ygqubN66zXD4NmfURco3oh+MzDJ65RGIyiT
88peIrqlT/a0QWQbNFo76G/e9AZ2Z5cb+q0KAGG34JLNrxbOgbRgtZRMPTgE
0glSXlbyicCj5sB7obMEnrQfz4i5O7xAn9C9Vd4ju2QITna9Ex+dN0drpHJd
Ju29LnhE6rcgjFM1FA//WtAFEZEvHT1S3+H+aM6akjHfdugk+6Mx7vTRnZLE
WMF+UCTr49i/ehGomv5LdBBYSZwY3j/mQSgUK41Bu1V1nEV3GFo/dmtpGXPe
DPCQ9ejPiL6L0S5faSUN5fDqZ9bz+515xJkPTszGkVdJOsZF7B7m1Dy0bBHl
JNk39wOY5/Rv35w+pvKHc07/np7Txwj3KD/RfznnHVAyLhW3zGD+B87h1eTm
8GvU9fqBlHMaNziRnjQKu/BRQyEd1Mk+5zWUNU+IOsPCPE/kpVCpJ6HhID6g
PMr1C+uNZ4JxTF3i4VCs1bB7ND4D1dep9XbqPjQBux/yWf4F76kr34h8CfYf
0i4T89Oz475EEnMCUb+2790VFkZD8N64aXx+Pirp0Enl0p1Yz5eQeO9E6Bh4
nS2iju2O7Q9DfmJOBaefZGSoMcbtHyJxXLFQJ/KKflRpAudFyXmSEXDa/OpR
lRS8Pi+u8DgxX2K9YOoZ1ZtYb0uReKqPQFdjnp9eh+PZzsXE/MZgUDj7Yrv/
R7z+DInDDEZ821KSofAvowiOnTy0f4cDtjs5ssXTxN+HYLTaVTx/LuX7TjPz
pdpFkNT93v87eyZwnjkT0nAQz9mQY7odYKkZCs8vC6385oPjZR/y71b4geK2
Vp9zIXj9ejJe9oezlBjL0YN4blUCv23qW6lACHztuEi0AeOLGumJ+Rs+0HMg
bazKE6+fiUsS+H3qLTTkN9N8eov7vn3WxhwOPeQHvcmDXlXr8Dyrr/+HrO+O
5+p9/zfKFiHZlCKSFBGV6yUrhEq0rNY7pYRUlMhKWSVlZCUho2whO3uVPTOz
98rI+DmvT87t9/VXD9fjdF7n3Oce1/W8ntfzIupg+EHSjT3yw3tQXUNtBN0d
6yE/+HhiryT1qypgUWvVLxZD++Ty2ZdPsDrMihdnHzDWIf//Brmmwnwnipsi
if34vOHAFt85h9h1cdZpX5uu92jfCx/aIqAX2w2biedCCG4XVdCEc3+6gVJ8
h2VJ4DuUP7Woy80W7gZOoj6DH9pX57yP8AZNQMxfqwOSDWi/OtDK/4HPeBJ6
2FrY1+tCaNfJinTADJAR90Oku16mdFfohs0MyLkJTwaZo74hHkeoa/xPTAMZ
Uc8QzZ/QWBNuxXEywrAmxlNNABxP/Icv4vXv//DENXxxQ77mYGiwAjkrQdqf
qVwF089c2992tlbQ5rUANVFXpAayiOuzBCgqZ4fW90HwIK7nQjicX8lFIoW+
SwbrbMjTCITXsaZTHMP0bfA89YnSa7V7ciHJvn4mS68ETlVXBAU5r8Y1S6Vl
hp6oT1BAsMfHV/71kKZRHPiVEunb5MnUBI+eq4OZFWcju84K/Ho6dqYbUl2I
j8dUcX8srw291wAp48Vw5VZQJH7fUqhwT7xjT9OEz0PVTUWDGJ8z+1lOx3QA
ypfdIuIepWDSSVY7D8j+85i0Zv7JEhD/QKH3hh3ptLxd4I7LP1kMl6RyeLB9
8BiRP4vw6vN5w2Gxf6vhT6GKmEJKL27/Wb6UqhKG5q2KHZtt7M4keFsimWG8
C9llPCTMBQVQ3WVR2gktY6N+EFl6tEv0B8pftOSFp3gpD8A3Yj0dwr1j+ax9
nX0H4UBCUj7Gw8fPtRH9z/KuZAQ1p+FNmI7HY+sn9VXP66B5OnBsjtsdf877
GbqGpAYNUNgwssiS4YGPv6MS1zim6765lf38+vrB5xMOt/PoUL5M5h1X0/xK
Lh6/rcVzeL2hYcUwy8kW8H6sKzzNjfKMvlkROgZ9q3Eft31OpD3yk5PNTn9e
X+/fkRTvhemMDcgf9/J6guzSRyhrhRlKwKLUx3x3FtKj4NM1rsT0XixrqJmG
V/3Z/S8CFdbrXq6NM416jmsRdTuIZ1A9yr2PeGK36o577pRvg5bku45/o5E+
/HOSr5McDm0gPbqvDRtPTqobHzFespW9SBiLaMcGvSYasxShTK5mYFXqvj/T
PwwKn2Sd1tf/hnsaqPvFof7L8xzaIqSzrUD1nPWFIUc1wlXKE0ZWOjpBi4ir
IB5gNc3wC6w/YtTFsqcyoyjPYpsoTh10owsoLKmU1NbtAzZSsxf4KzqB2miB
THK0EBpmc/mwPBeOK6a/OhxetJkgfKh1J3llNcjXCCyQVSJ/ONgr8hNW/x6v
cXrX8IA5qhudkHNe7qmDI88qhdb3O1sbzwoTfU+s7vK37vGSvPYiCDy56fhC
VS3cfh1U0e+N4vGrqZvIbJrH8eeZP1CajsWJ/f90h5/90yFeuz6W9EYq5+vV
eDzHT+5RHIpr+Eekf/+NqoMSJ6ObmO7s2ncXeJMkWHge5VWXBt/AnHgRnJRs
O2SghPDAMWJfpEzg31FFOaGL1mk/fdjXgn2ZIKI1a+vegM6pAkW6BsxvWXtf
YdmRWax+3Jdzf1V2EBWef5///XGLeWElNGbti/O8xbAh/5icPlqWM7UVvz4m
hCoR6zMlc4VmWdVxGna283dh+nx4fS67S1vaS1SfnmnEE4vpv9j7Bgf/SZ0F
XQGaGkwncO0532tV1+f/RvWz9778EDwX0wCPiHU9vUjvIorNEKsb3Xra4YFT
aT9+PQ2P1FbRiBaQ6BhfsGgbgHKqC/Xr8RwRor5fDX6fZ6z3HERsVs+LXVQz
L8vrwE/2BdN63Ym/bHEOr6nroIrIjy+G8C/twbxy6+KOx7uWsDq/tfuHRrXJ
y70ugnMGhzpe/EXfkW73p/TMK2jdUU35ewr2OID/8n9HMX25NfuIlgv3JU0H
oHabnOA7j/y0Ssbesy9d3SBZqHEqsKQIjIn6aU0QQ9SLyMOfJ89sYQDLq750
0rt2tw+day922i1SEOpgKa2Yj08O4SrswzWPL3mgfNPP0C88mF73Ypf2A6we
fW0ccsU0VkyeIv0TjScfbUoEf8E5qZTP4lUT+HO+21N18qpOAYweaapSd63A
7T7Mf8uwdT7kM+Z1pRblxe5G5Opd78sHN0Of+GuFxXieeC1vvPacj8rDv6WZ
IH22a8Q4PQt4O5qDvKSR3/iNbZHcsDcP7GsPGEWro7yGFTEPUgh3mm49MS1Z
p8v91qOSjCUPphbUDe7XIvsrYp6lALZyzmu3XEY8nO8DRzhkT1TCIAmtX/5J
dI5HE+P6dNgcYNPQrtiM7w/CRL3KbHgi/EE8RqIZv36QmL/IA06QKlc7uK6/
OTHuXj3HLc7kfYt9gfIdty9FRPeUw2OBv9viyJD96RcqvtrXpUAtNKce5vAa
t2+hk8yzj0X1U6zlD72UJv/8w3tzgZeoc/Ud5CKPcR4JQH2jeol9i8rgt0+3
1udRVG8bmuKl+C69GsiZW4yVrqK+BvcvKeruX4fzn7A4/uJ71HbCIoflS9J1
OjAX/bVGT9JxEuRcsP7aSD/BvUZX7VYxB8H0H5775x++i9cpsFWyyDLXgUVn
8dIHXtR3OF2wc1KfG+kbXzj55RymNxU48GtGzgnhdf/T+Y+H3OLR6P28U/90
1tH5rhLh0Z/yCNVj/k8/H+mhOansDt7vUgObOA3osHoRnA/ZUf+R5FUNhDmK
PTmYiuaz3cA20f08NUB+q89wZV8JTB+X2Zu/iOKjq8R+hQUgoO1yt1YS1WsY
UnKTcKpkQP/XYnVPfZTXix5oMg+5kguFIWMjZ/uQrj4LUY/iO1ikp3zP40J1
KP/TRQwFrbwn6f5PkV+aQYzL4sGZeqRDRwH1Vyp12+knIhoB37xOezGEIPtz
4u+GwMsXh/LnxtDz/E9H8T1wBvcJYXrN8bBYssUF+UV7bjnx8Sh3/B/dQn8Q
mnz1x2dTLeRbnHyVehCd11SlAptu8fyAjPtdUev14qLZ1Xv4F3/CouGo72QK
0oFJM8muBjmU55Il6vj54OP/7axhS05QP3ASdWVRf7HrN9r/e849AElKfPVp
C0hPz/vn1dg95INQRdQtQf7JkH9x/kvyTuje5bSJcrMvtJnHXfWUC4dtekO1
NyQ24k5bOrkL2N73QRAjhRrWd29A9oYXplvBT9RLQH3ATxL5guVwtJLJtssI
9XHLddq8gOkti/ib/WyX/7MBD1E6Rh6i/WwC7Il5HNRPbfC29L0blBNAIvv4
1djxKKSXdfXimZEjE3CXWH8Ritu9n5dI0eb9hd3jK0aYjh/FPx5G0D9eBp7X
6A3c0qAfAKoWCnbZIl2430gWSGFDn+cFUkE8b1KjUb7gznsvtlBmL7h1oPGH
QRnKp1g96v3ozIP8EPHX3iE9mcMgLBKicdcA+S2zHeVH/SUKQUST/63nOh2q
LSVBsqyfEa+JjIV8qTImG6YDa2Iwvc01e5Ldp4jK699hSWUuIZ+vCPRpXt1c
X7fYx0T+5RX7IIQKVaZgvO1+AZoQzB/EeTU+GROJI50gs1eBqusswn/OEOPE
31BFQhKB6WH8X7/x+RTrO5r6RqC+hulSIj29iT6BOH7fBugg+udIz9Zn1vvh
sGMDcO7G5hXan1Ny/mtIcayH1tc9CuabS0G2rWgKi3uvBu7blBqAcKod9hxy
kj+6QSnkvytfn6N9zMP3SYb1Mjrv1MxUDvfooDhk7d9MIl6dAbeNnftmxhAu
fbbxqt4+rVzw0y1h1IhFeAs3EffOgWhSxRysH/ra9dpLSQ/yyivB33aQEqqR
jpm53QQZy5syeLpNM41eENWHHiHm30sgXuD79bdTRSjv/1Ck583q3wofVZqz
t5RC2REnqTZPFNe/ceE9qjdbAZUPD/0d+Di/Yfyb22hdvlHeg7K99XTsCwi/
0gjRGdqZZw5TjNn8cVRonA8m0vzZ1eO1uh9ks2J9dNfsrdaf2YxsfcFygsn5
ui26/lUQBbsovy881IvqiHuO1uOez9vfxV4PBJPoHu+AriL4xMVnl13VAG4G
u24zrtNhzjGXuHh3rg74ifmmb/jzF7YEPsR0SHby0drsdk3H7dWBMgYr6nUw
t9233W53Gm431kmt4FZG59pO3bAwrD5x7X0NiwmqrxcKQTDgZi1PH9Irpjex
IRPXLoLDp9/rcGcjfzJJ+4vN2a5CqNQ+2nnhARo3b1PxEawuNFZjyBirE12z
p/uNcgvQrI4fE6lr3/cSCOx8kkgQQudRquPZJozXOk0ry/BhG+LDBETLlmD6
Bkn7rvk3kqJzxJrp9lHHujx4x5Rz8E4c6pP1gqjb8x5u7Mx/NUBbB9ZDPV5n
3Rs27Icnag9l/PnRAUldyiu2ht9B3SNzy2mGMihUUgt8uxXNH34Nk2upsaif
+/XSSZ041TI46RYiR/8lGH9+iZa3k5Sr/nbahUixc/LB+PXxh7SOvJEpBnc7
/mBKslDErxAhTVR2R+NTNXhfXE5lBvYTdRHzAGz1n3WZ/IAkEUGb0Wd/Nszb
xEEP9gyDcegk6pGivMBJEc1jxwXICAZ65g7rdQzObHrcbR1NQlCLP1uN8atF
g3IuPLv7Ao4lqvR5sCHckiHGadkp1hd//thLu2IoBotg7GuGa6fSa/z5v3+d
b3vhXwTuluE5m6ZoCd7Py4fW62n/THvx4o9EHexMY8tv6UV6dM/1OQYcs9F6
16j/1b3dA71XwyaZq+qMk6BF5CEg/S5KCT0T265JOHSRMfVsCTp/3z+d35bg
NfyP5xCPX9/CLZO8ODEE94g8TNSnJtJiM7ieHAZv4jmOeCBKBzbrO5EPwSOi
7ut7oMgnI8m4j/z2PTnM57C+uTi+ytly8dFgE2QxD3tdYEY65CSnrnpSFzWB
6HksP1UCXrl6f738kN6U8xMHkld+5SDcZl6DxZVr9q2fMDy5BHSJeh8lIMaq
8t96nRwFtnwVrH9rO7GfJ8LfOgMPOB8gq4Zf5MmiVq8HNvgVEy/Suq8058AE
p5aqhGgxCMUzN/451gKKhVKNl/oRnjAkopiA9aXwf/tNOS2/asN8+32OdHHH
ixbQ9A8+TVOP9rfFhFdu7+paYUcVL3OnXQmM+h6iwOpY2hS/jKzvT7d2H1Wv
VntMj1VIQowjngnNf9IHb8rvn28FVgOruCtSq36C3KTeXvFGfHw0iedFFiw6
KNm+Y0P2MSLvKxdyB56RHHnZiO8DwdKzoieNv4OtMK085kexT1xR7v2B+FTa
RF2FfBgdbjtpyormPx+FSgTGn2gdW5r/rxv5aeW3I3U7db+DU4Z68OU7yD5A
Gd4zegL5IVVEPcN4kA3Sr/OezgdhlsoP5DrIX/0f/ycPMh/quBp6ot+1CO6f
KHPMhYP8X87evoD8n+LDz4/m+ubACx39WLMfyP6auN6KgKMRNkvYL+D3eT3k
FjgR/wN4vyW9e5SN4qw6Yp/aGmirM6yb5yfH/bQCYj1vNTy9KDAeeR7ZRYwr
N728Uw/DNh16Jn3uqA+OBHXeWHITOOyuuTJfXYz7dSz6Evy3HzSA5qvqNDWZ
QqSrwDF07A0Zyu97Km6XxHR1X44OyIUvI7/OnMivTgca77CpJwdTAOr2NWC6
Kf93/rjFXp3GdIArlTQ0jpAiPdh9ehU62LzSf69m0LeI7PkXOlgxfWDpTqWx
hegFlOdtqZfE9IHLCCqCZmeRvcSO5dhe7Va4P/Mg9IrKKNiRZ38yLUF+y5YF
vTSzmiYIGJDcTc6CcJ5J5t6j7c8bET5TQi2H3f8am8vF65NTwBj4IAnrQ7F2
Pcto3Ij90hTc+W0Vg+m14ufa0lsZydJpMBiNkKAgQzjqu3vBz7D9omiAWduW
BI1b1OAnjhVRpOcmLUsSjulAHiuoMfIo36i7y7G4527UHg7cbuwS81MvrAlc
yV5GmtujegHx/Y8/Y/pF2l9yucn72AmRnyq4RdbpGYpfO2fi9ouX8F7jRfx6
nZ/iHw8FVJ9vJsw7keSt1601KMh7WphBSrhLE8Rw0xzhe19DKiQ6i8gIH37b
C96zRPthye4GQ6w/H9U/nbU13bW1eaWxXefQonMDHI6Oyl/fD6hK650fhU89
cPNSJZU5Vm0495/e2cKoo9kNm14FChv3oHMkf8tMtfvbbjhC5NehfIT3sojq
vGI3jKvt0rbgR3xUn10qezHd1Ahtk/rHE4u4vYuE5K1vfjBE69VFtPFU4PYG
p5c+6fvCQMvak4W8HOF18e9yEt+bR8BM1zPfN/SlcJ/Yl6EFOIi6oZn4+7oW
KbLd826EuUR3Bqwv9Jp9Ia/va0NcPagfFhX/9SQVt4f/69fL/K9/79o4rPUn
W+tXhuMzTppcGdorcIV4HxS/2P3rT+z6r1/xmn1NX3VNb3XNTvYde55e8OUt
t8D6fqw9zxwHryC1A8qrkhF1iXMgPvMK1Fojuy2RV/wd5v7pOT79p++4dp80
YpybA8pE/hHqFyBLjIsz4ByRP472+Z3+tGbv9D7i98/jkVy+5lYJJxJmRovK
Uf/QfazXLb7TlYNpv0CgZzHST4iRfkJdQl0KU+ITp6+JlMMUsR846sdtTMz/
/YTNZ43cOlVR/yBDIl/tK/QS+40g/y2cdmuM/Or3Mz8/d0MuEtXh7iLyHvJB
m9Zorush6r+D17eS1aqe0KyAGlsqedfTTIRqtprs9frVjVJ/Ut92z8J/v47+
We9XyMJuI6UrM8jPGYoyv9/WBN7zkqpVeYPAZbKPv9kb7TNCUiVxe6zrYCSc
ikG4FMW/jsTvUgPNTClmiX9Qv8J6Yv49H+JG2fU7TyCd5+aHQ7ew+kfNr3x9
2oOzcKHoyigWL6+9l0UKT5377wVw+CWhj8XLa/a9Ra/m6/SRboaHJ13NCY0c
WHC1SHwZa4nbq25fGH0kg+Ivb0aWX/N5/TAeor40dS0P/mS4exYlofhxUPBt
zsuCYZCfv9ZGIoHe6+eZhk1YXxP1gBs8CVH1YC7m8HdnDOp3s4n5npX2qzrw
2Zyrf5Ajd4N/9d+BT0wrF7+DV33cYukZ9DzFTXxpR1fy4CVtkrclM6oruUdw
3tdVVg8Pif0f0b58LNSDbe/netAk9lmowu2TTd+m+13qoLVK8a9pYSV4Ma18
4eFGfbiOkkwMucSjPPW+v7er7xUGgaZa9tKHEfQ8jyXbORg+h8D1nXa1mF86
kU1KJWaE+IrtQ6lhHCoZYDz60yB2FukVnDs9Lo3hh2v3z9hHwVidVwoiykW5
WF+XNbtIfmUEVpeyg4ucA+uHhvOu1fYxfZ8pgbo/Bdn85aWw+19fYcl/fYbx
vNip+LEgzy5gSLtIt14f24OYd+iB24Z+Q5j+MV4n+29dGfxbZ2vfRYUtICV9
21+QINYZo7yb3FWPki+cpIQeor5TyYZzYfbgIOOO801AS9RFr8Pth8nPcoaO
rJ4/UoJ67HqNIPsP7+b+h3/jfKd/ftjLf34Zvv/888P8/vlla/asf7qfH//p
gK7Zu26RHmOiJCFYzhpmrM9f9P7D0/v/4es4T+kfnh7yD19fs4f80xv1+6c/
umbfy+y/jXCzD3hsr6dhfcjX7I/TFzS2OjSAWWrEco4v0v22og4feXGoGwaU
zBglC9DzFBBxiR5Yzj4opiiJ8CXjrLblh4LR+Lya0M59N9JUDmLDAYpyPF9w
e/UCU5l7QSkEa/JcTA0oATJiP0a0r25Kx/JMlXD8I+egympctmYX//ddlf99
Z3w+/Puua995zf7kNsWIekQ9NC8l7/GNysff68elHslTWut0BYl1rPVwx9w4
VuBSE1ylmk24552K31+YOG4NcJf4XVBfxYWtCTd2tObBYSnpZb5WhD93EPVn
cuAlUfcO8U94X+yeX68XfTItz+PPygL8DqWTXa8L/UDu2rKQ1gIYTGaeXK9v
r0zG9Oeo2TK4b+ojrzuA8pLtk9OKSZtJCAsBjd3lc40gon+8s5kX4ULKFQPq
RbeRH65ErGNKBsHGlaJ94siuJnvJW1g8DW6qlW7P1Eb2xl1YP8RMaC5riev9
kQvZxHxI94b98KTLL92GmzlQz9rxCOtHjeNpRSuK3WWF0Jik9XhqmBbP/556
RLkb2w+ZYlxCxFiRvnF8WMsS3+p6jAp69zddC+VzE0mMDU6z1cPFhsQmrS6U
z/2Wvu1FZHkD6MSNcUSW90HuwoFn+8bR87M55/R9X0wDsZy6hDrWCdxf5e/D
9G+zYDyH038LNdKT9PtVE8vZVgLO2V3zZCwoP7gyj/n/aZBxUs/cUADZa4j1
U9lQncNfq/cfytMxLI8Gzq0kg7/9C407Osh+hcjPSYeDMfkHdozdwvtxX2HI
nw1/Wgma+aJHt523wp/f37t/nMoB4Qxr/142CS84QVGJ/32scpv/McpaeLPV
hmWvdjnwzPBb97ggnnM4MS8TD2dsn4sG9SE7rZhx9tf5GKSPUXam6V1uAwhd
tFFzO4j6R4h/LbLE9Eu/EnGzGuDpzehW6Ub+wJ0xIX2s7/MVeasymwFkP0Ks
C8uExqkU00joAn5zTZrZOLTPxwXpnKAm80J1c4ezzZ6vnl+22xYVaM/74XYG
F+GDxTtLoY1K3bvR9AMkEfdR1OeujtgfxwPeE/3f3/j8fDbkWdiM6aVxBlfK
BHVt2P/nhK/eZXVvBhoinwSdy6INRTcxvcFZov9fB35uVVmlb2oBzjAd+qGL
+Dbq5P29DlIonxswHKntfDkbwuS3izN8QnhF0P0HTJ9/5IDBbwm3KpJCCLFn
m5lmQs+zZc/r4PO0+TBpbTq4vu/A2vPo6kzV+xEagGnncdstl/7idsbGgT9Y
vBZmp/DVkfwvcLjSFK3sRPXLWcKkg1k3SQjWit1X1u8nN/ySCuedSQlsHp+s
m742w9mBD+JWJijOcin1uiK6pQkuyLPmMbjWbBi3Gg1CMuPDLghTfVSznif8
dL9pKhtZN5AReT558Fv/duX6OFqrV3Om7fkcxLvqWUq/QutUg+824ZZ3Grw+
cF7xjTbiRcxJfHaoTUa40/4C1kcJpr2wkCO5VT8M1Qf16tnfTbPpg2yjZWVB
q3R8fD4xtmyVUu6HRGKfoCwwPpajiOVxyWVcb/X+QHHNmk7cmm7c2jicnB3w
wOocdj+9vGNHKzpnj9baiLPkt4BkaLm17BU0Pr5JlD7ZW1bH88IHdxuX6g3f
ManJ6ZzsSivoRPwyDXlWBDeUPN/cFEE4ALupveZcIfIb7/cKpkbbr67T5wSD
sy3I7kRbFfaGa3Vd8AV3DE8VQzyxL1UGPPx1f8R5fhR//jIi/vMdjA4tsAsl
onxiADEeiQYPYlyI6tDLxvuDP39/D5+J+DPCG2v5jS7vL1xd58cOHKiYQ/W8
xx2ydHt9m+GBs9E+zP9Z+93MlqsMxoLN8KSeu5hsHNmbdMqpNG6V4fvwLmI/
u9Xz4/EDcdXuSsRzJuoA1wHViqC/3FbET24L+vZfT1UupBnTByqGT+Dj1uyl
/R+Xcy7c1eB0vq6HeM4nS0/6WKnkQDNR97YYtl5wyazunkb1lelXz0vII1zl
eL6y0NY7xXAk3GqU3wJ9F7O4eH8HqRIINFX1EFFpBDnj8O7SN8ivkOanscT6
7azdJ0f2mDyG7/ws5A+L/YOex4bIr06BSG+tcv00ZB9j3NaiX5MOy0XhV/dp
oXNK5ta9Sxg/5HNUigz1wxyIlnXSfMGF9GAziTheHtCkZ0s09a3LF1ffm219
3AI3BpZmeZQLcHuxMHvUZZoWuHs48fU2YYTXpZALvsHwaRyPIvYHrII2P9Zq
TBdh7XlCifhqDTzqlRyKXtfHge2IGE+t5Ax0ujyujJrLQfVEh1kcVASnYY+Q
Zy3Wz2LNLm56NAfTsyb86xer8a9/LJ5HuE/x9r9MpIfvw43p4QcDp2YUzell
pHtPT9S99wBDTXGh5grEhw8m6t47QsajGcMbLUj3PqwHO/dtgHe3RvyDrahf
ZNw4pm9vCZ3CZBo7yFBdjwBR394CTCl1Mj/NIh64PVHf3gxIePKzFO8hfl0I
G6Zjj3RLvOIs6Y/pdEG4yfmWupum+PrljvkWpm09AA2+cwQ1R6RPElp4WwES
JyH4Edb34DGqr9T1nLkRuAx7ugcHVR0d8etZpNR55rwZCYSnP2RVHd+A4YRX
1rtQpEtfTNSljwPuTJkAgV1Il374M6ZL/wYKmL8LDzqgOgVBos78czj2TLOc
7gvSme+bwnTm7eCh7kE931KkM7+FqDP/CEqEgx8lSiK/goOoJ38fnsgEfKdQ
R3VPvUcxPXlz8L07/bNoGunAm1BgOvBIV+1EV8pDW6t20ObWv5nYcAd/X96s
4DOBDj1AZ0yZlHTUHL9e/z/SPFefUaBMwfp0PMTtO/iVvTQfzsLwLcWPdTef
Iv4DN83BYvnNhMOvGI9vueSKX09WuU+T/cgOQn2rb+8Jx4+woB3nPU0uh48P
HePJO9nl3+FJIm3u3m6ke/zFD9M9DoOBpbYjPKNIH7htE6YP7Ac+ejUOQlNI
H/gGUR/YE655GD5aGEf6ge6mmB6vK5gERgSVsSB+XYgJpsf7DD4eSN1kT4N0
ZsI6MF1cexCVSjJxD0W6uPOXMV3cp7D1NJVNqgraZ8QpMP1Ya5iLO3igRB3p
x1ptxfRjrYDlY+tWDTrEOzpGi+nEPgBem0z3yy6IdxTLjenEWsD5+wm2Xn7I
HxYk6rveAz6+jO3n2BFeYU3UdzWDX0ypd3V/I5xnZADTRzUFzSjynya7ET/H
mKiPagLKElZC71vQ/vw0FNNBRfPhnOoX5vD5DtAQwfrGovnznf7UO6eGbjCz
w3AVM/x6h4ReUaYrfcBA7FN5D7/+waXqOr22Iagnx/p338ftK4ai/Uu/xiGu
GesvifTxLgycOlP9axrkprF+QE8QT8ByODf24wJMSFObJh1F/Qj2M89PaLSS
Eo5KHY0IMkf9CL7EySk1UtIQzP/jlay7+QrpYn2Z6qB1YyXMVrAx0l/yx+3d
u1t273E/QCjnEpFUWtfndObHCRbO/FX/kHGFk5GSCY+zPhUe/suZvxqv+hzg
Kc8iweOyc1QrtOyBT2WbXordpPNDcZbNiF/y7rhsYOffup8maBp/fguHi+lh
Q5ay/obyJtTaY0g3rDjOhCv/Kyy9VmB6pjuM20VyI1q+jt2T1VA4luJH3ofG
J+T9JlXyRGgPfh4oFop0mP0XK+XYA01lVbfJ/pp/2In4CbbHuATiYuFLu5H0
2Dzq8zhcvbOI4vFt2a6UuvxBctQHvPbB7z9hQ0aybodKKH8z1eHXn7l1XkVR
KBoEvr4/mxfUgOpfym5/4sqPAOb+1x8xXvra9UtqkXfLBf6T9R2XKWq7h/Cu
cfI5G3a+MJjaquX8NbgMpLLfDTZe7wAxvhlfW49beF+b/fdi3F/598KL0WC7
u/eR/kxKB8+ilEofODwxOlt/wwy/vj6ZwTXgwCQcv2edYy9nhevhWJVfnYoO
RXzI1B+7S/hjUP+gTN3i6F1xP+BCysQ0Zegk/l6577QisO9uUKCYQnYN9UM8
27Xzugr5dzD9W+NYdLwLf6/jQ8ZM2HcveaOdun48rfwZOjlXv6/koTT7dPlK
SHyaMV8jXAfd5Es/PcuScb9CLFphs6cbFvdmrDBcQXkKsbtXBYu3o3qTM3c/
KfmwojydfudlWWze+qlUp2/+NI7/LqPFTNGIYzmQfpFtzMhvx683dtV1xd7r
t8pxqV569B0/G02nsNTkguK7kxmJZ4rhi9rTZ8dSV+M3z33V9EbI/zFj/3mO
ZVMPFJD1S3pIonocp9oR/ZjQNIQb785ezpoZh9LukuvY+K/ZzdwHYqm+orqG
XrJr21TIa4D/el04Nm75ZMovndKboI/ChyK0ogL/3WFNtuU2pt9QHCniohGN
4gtZRQG9cXvUz5dfRlT/kXA/VJ6qfztmj+o+vE30HLne9cCiDfvSf/nIT6YL
dYvKou6GCwKPdYVW467b6oQkimeoPmXz7r3NJ5lR/1OhUdknukczIZ90/7ni
7fFIB6ZMklAR2Qk0tNvji7YjnROG6s+Zn+jb4eBbb8n183CZbnQhpagZlrc6
SRRtR/zqK5UZSXMRycCm42N9Th3pSBdsa3lrQ90MdbMtBjrqiPfrSfZwpMag
HjR3pjwlWUC898tjTIpCKdXwqynhTUxoJKpPvLYlZGBrDbD1efhHr/teb2nt
/frTf4BPsvULw9Jw/HkuaX9X11MvA3UvfQ11w0h4Rb/5sLgBirsdoxMc3e1y
wc1J0In3AuJRnP/BfEjzfQLc/9HR+z1qBLeHmVaKeqxeLx2q7DN5a3lD3Y2O
uEeutUIu7Jcr31oogPqB1ibuZeuLS4BEin625TsI7yKluW357UUY3B3y6r+z
OIJ06maZWPcx+oIS1+37bPKoD4vFy28SHwqfwcsLYffbudA+qaQo/PtRzBXo
uUtO9bqtGb8Pw9ZNPOmr9z+30j4Tcxntb63DV8cT5d7D1+1zg6caysGR9572
CacyfDwnCzyH9j+gwJ+/H7bqOYmVwJRfcdtfc9Tfbe4wqwb2vlXcb90GyYdw
u1GnEO1ZyjRoePhVN7YL9fWzD/yt2rs6DtJGUrfS5dvQ9bIt/oPhKZB1VWu3
VnUl9Mc37i342Az1Gn4zZ/ckIR7RlV+uqf1oP2HIVGWm+Ijy+Gv/SuyL/Dj/
ENUd3LW/YaSxuRBu1pApKNl34nYBmYss2POXF/fqn+wshtRcT7r49iaoLb8X
uNcc5RF2DAq9DTjQBawGK9m/DqC46R13/MK0azqqo0k6LxVVPQFiASMFyuvG
8+p5poIHlOh59rLIlE0++wHTegE62DjIs08OY/htXcfcRAwgvbWdkdv9sN/l
3BU2cS8C4RVDtmOyHqyo/4jIbIOKgvwAxDOV2iQnFODzv09p+7Y/yX3Q00AS
hN2neiZR+V0Twu1fefwkZIshvndVUUhB6YE8kAsXGv35JB739wLGXO53GXdB
P7MmEzb+a/enihIX2r3QAap3Wb2x912zZ51WMg8dbgPPvWd3HdVD/r8SpzZv
StdX2OLSpl3QhfaH/Lll6m+7W4BdIZBB0Qbp4cffiu/PeNIIXz6+Jdt7HvE/
ha8vBjmn1UGB1dJY2bYo/D6x1/a6LA3WQJGn4UHsu+D8fMbXiXKPqqC3Rj/f
YFcEbg/1Jz+TGVoOzUMUNAunPsHTSdNzAnoIt4+pMOf4QcgGjQRKdnqyXtwe
RNwH4kHryiO+0y9QnuK6L7/q6ojCJWY7k28NiJ8zPxXC/ZJuCi6vfBkx07Hb
sG/8vdAt8W31fM0f9Rau1iEhcGmMMde2N4LVdr5nDQ6xSHeU6wrXJbkhMOYq
zuL7hOYJl63NwwDdIQjSODZU11K+AXcquZvZg51Pi2V/QvjjxmAH8f79oEKd
mfH4BsKvPJrj4kaEkX7a4/h35ra8uUD1QTLjFi+KL844b8mumsoBzfFzvMOm
KO+82PTfZZrXyN8TGyXXPHO/GeaSfC2x/sNr9qwk+XHseeKr5gRZatA+xkA1
tU3Z4ye4Oi/1YvsVxb3HH3IuojjF936/XY/4N9AfGZYLqES8msqM4aLtWS3g
XK3he/QJ6qcZZ5Yc416wuo/UNzj65eXj1zPd3M2xn+onhDYK26yft/Kbq0a3
fCqG2QejIXn70Po9LVHzIztgdd2N0H7ILE3F7c5vlvQ6vpaDrNeVQPneVb8q
I2JbuiDid10x/uQiRFYDBtuVJ7YroDyX6ak9T+R7a+BtVJq46fv+DfPh0Ddt
0dLv3fCoUMrmyTLCOX0ZjAowv/kGf1jBiVU/eqSM58nF5+lQ4Kz7GX4i3Li9
lfn29aYKcGg54XOYe2gDfrvv7+Mp6W3DwOI8c239/e+3cSpgfnzV7T/tHKt+
39p3OaCtdgqLByaI8wfVA17q49H8OOQrmzd3Lum0AzN+XghZkuf7WzmAcctP
Ycw/xXGM0mudHHxv4ZXVbxfMn1yzh5j9R5Y6dlXW9UaRTr99CWxbWVmc1miB
5Wnydpcab3x82IjzvAXEeNVr9hzxwe2BOceOF54aALaFrWftmV7h7+tqqhHM
unccHrs7B+4eQnVAuiax5k/fz8Gy5asPvOpxuD16C6k75od78e3pUR9PQ/1E
hKl3bc0lJZBTXHsWSeKM++2vmfX7XMYYCcfEZqmWhlEdsaB6eVHRdpSne2Vt
n/u3nA4fH4kPg/tpz8aAkGmlz00r5Meecao7aLscCT9+Kmqx1CA+gCCblHmn
Vzr8t3wsZFIf5YFekIRybKuJh3O5s5M8QShOufXhmPvu1bjpbFSuQ9LfYqCi
mvLE9n+a5ITt10dT8Pe6vrL8MfNYF4xuoc25xfUVf35mCVX6w287IDepMUtN
DJ2DCSrBvep7B6GmamRHniXy89nj6FuuNY3AZxcSvaR+dH048bvMg4GTiVrM
VtRP54Oa4ktsnN9RPy//xI72K4bRkeiW1/Q4HrJk7PfckRnNNzdXJz85lnyI
WqY6UDqP8lO3JK0jdiZnQlafPa+UGuKxO7ILM0/p58OXr5IWZrU/waU/lJKX
tBFIm/3Zj/egekY64vhMwqTelhupSyg/rqCoZR4VOo9/RzFb9jd6+mmgzJf0
yuks4jMbKUlUUN+ahiP7Qth11FF/wEaHWPakANTvXutRthDmR5lWMxrFn0N9
WtUO8o1h68HigaETa2UNbiewGzhg8c77u4ct168XiR0O7ti6IlkRTencXgOa
zQH1OwXqQd5w2ojzHvJPcgYsprD4NGjlqctuNxTvHHhbr+L0HuFCnDkjF1+O
foa3OqIHx+wR3mLb8O2noVXHhvwj6zbx3f32SHc95a9wAZt8PWjd3jLLkY/4
0vSSas7YPHYn+qtoPqeylVy97VEJe4jzvwh0zNVMJePa4O98COXf5Y35pmr/
u8Xcik1wuLxkalseeo43Cm/+YOfIfeJ+iMZt4qk+FXtJHZzm3jWQrF4KHLoG
j7zCEE5VtWfwraFkLqhnkP5WXEB4L+d7+8xLHrHw/iXte5oSxFe87u7KfKqh
GpS8Ck5g333NbkN7TEZ/dzUknrCp0lZH+bWLqXrSS2yVIMELutkvqsF/p4WU
IiPitS7rLLDperSjfk9E3csw4GXqZNAWz0B+3cxSfOStWjht9M6+kvADxsxi
L02xI76BVcTPOdZRpOuoHvWVcttMANR3/rfp6iEUN6Wpph3ZQagGu2c5l712
fMLtCb+HuWzF0Tq60dNm9UT8N0xYjO7ofop0G8ield8JyhiEQ76HS2Iuozr9
IClpioSrPXCTeE5Fwgxbwy/sHHxG17hA8m5kw3d8r1VWsiN5BGaeYedOJFBE
SQQr9CZCXpB47DVa1A+9neiPpYKBuGxlkSyqd7Mm+lc/4Fdin5DbCdRHoLa/
0B6Lu3/c2ZNU3In2+VieD6zRUl2Qav/zuOFmtL8FmAtqxJ9vhQu7P52NLm9C
9WhEfKAOSsZmSWnCfdH+Nn4lQ5Vrdb02Uhuk5yOd5LX5ltXa766onAAvP3Lx
YeuVNOlrI0vsMJzh7AoT2IV4bjyayR/3eaG8p/veFy6HaIqAloHerOsqqqPM
ve0fVF2XB7w8pyu7o1Ge4uclGvbftQlwnsnRpUAH6bTvyrLjszP6BA7bRY1V
d6L57EIvnyr67SME5MkKFykg/6dn12Fmqt4KYJ1JIBezQ3VzL5WTB1x3FUP4
SsMg9WVkfyKjn6ScUATkYkdPbM4KBwIf67mqb4iXnudcrPosvQQY7mVKLi6g
vktLRP+kFGKKhXZ1xk9v8EszFzJSds1Pg8y9Vpn1fshiVewfdmNSAp16VK/1
OnuVmB3NiDUpQcfc5jbmn/AR508NPHmpXhwosbHvoX0rt5mzuAXEn1+6hcV3
a/bZk66e2L5xvF94F3PNVkJi94Pw9f5k/N6dp5spGQk7uA3jaK/WQ8yPk6fp
k5E/sPNHhx+m9/KUvdvo/C3EtymaqaG17EV6TeRXrl39JpMD/U9VBLKyyPC8
wJ6Za7/LwjKBn9qw1k4N6UF9XNSwktqG8tfSEeRL5VuKIaLTa5lqvgLKXSlk
Cp6gvgCcxVv3/RxI2BD/nrSqLcPi+rW/n1Dvk8bwUGk6Z2fedHQ+jn1JscJw
NO3cexTYvMX5jXMvG9Rt68FINFcVGzdBhrP/tTS1gqp/dWPWg2Z8HJidVRKw
cRi++FBleA7x9J7If/3A3dkA9PQ7klX5Ub2h2p7qm5jfy85C/pDpZceGdZSu
8OsxhvMu6byj2hWHdIfEPFKadIzbIGxzv5sFUwJcuDJvFfwY8S5+5uff21H/
BdVVsfO5i4h3QH67/baGk0hXcNt98TbLRx0wTrx/MFz1OviD6R7i/e7tvHHp
KGkpdLUNbiPvD8Pvv7mnxUliHO1jlZfzTl+v6fnnh4eCzQxZH+bnh/yMSJTv
Xcbfd/LTivYbCl78+wroFprTChfADuoGg9eDVLidMftm+4ffgeDS7l2mO4fy
mPvPOTIVHkW89EW2N1PyQmXwm4jzlMLuCenNfd9QHbqIgGqugJIreNvvnb5Y
gfLmvZvg2KHVuPt5fts8z120/3RrBEfWh/tA/NWKX6mqaP9xUZqdZxB9CtYc
Poy1wnWQTb1kR+6E+OF3To1FKprVgqVbFZDsRXFHnjt5kcg5xP/poiwb32fi
A26VBL/w++VAvvuxUc4YqrM7FFX+vKQF5U8Jm7fNmD+3gloLzydTS8j+uGW8
Oesq6iskmrFFbVdcO1z23/ISO0fW7DX8+xs1dDqhZ9Fzl1edKW4vOrk4XX9y
GjQi70WvP7/KrF6PZaT2gr2Hx4cjX1G+5spZsa+MzqOQPqPKzZ2NdLRmBR0d
fMqmwTv4psmphgzcrnN8svSd4R+gr4CM9sNu+H0CnHtZp1hICQ7lA3ex3z24
onXgzJlGUN5raPfVZhc+/9/2Uvjq2TbAx444rqKoT4i/tEibP3SyEXwoi3Rv
PLyO5wW8Qn6RtUeQET6e6I+NT7fHx1O6U06Zi5yBoHC7wPmDJOIt1xp+zCM/
SUlIp0jo5y+J2bAPb+J0o8fijn10X/h5jJAugY5r5HJ2VRSwxf3Xpy6O7Ptq
OJ7xGkXBTn2XzSmr/tXoebUo08M0hM5mDtrReMQXbZXJ/XbheTNcZLC1trRA
PFjFhzMhe4J+QdDBLGvrHqRjI+fr0dgu3wvOmvcuDu9B/NjGsF7LoU1Ilykv
oIRQmIn4yc2+X/Y2tpQDxXj/j6W9JSBA3Ld7QcG4xYHuMpq3Vy22Zh6q64Ww
9sdtu9kQDraHuJ/3wv5X4QwJ39B5LZJ+W5iMAel5nil4QeWYkgIkj9lqd/eg
OtbcbNrY2chkYGOrJSG8H0D1zseElNtOhUD4KVlGkgWUP72898lC5v4UuHhd
MOkFM9LXlRH+kcoS5gafYqXmG8xQPbXqY1OL54U+cPl7m17fd+THfk1WYRXU
tYL9SnlEHZK1699c9v5TapMIUqXOB1TJkP3zxQknH9tI8Ha3kc02QvaDnELz
SdRxwBlw3KNvFOEbf4+2Ftw8XAGe53xm4kQQrq6YxSHweKYYbJzMZ51Wz/3o
w1efX/Dq3bCf+5hZ/MdaOQVl9gm88ecK4TyHNuGd2Xd4e3r/hc+lwxtwD/K3
7yyn2kkJIo2hZ/wKw//5h99BFN7dOmSN+L2aHqUKzqu/++qxmPJ9SkrcD/w4
9ayd2awQpo/Tie7rQ3Vtnxlo9bF4fO35+5VFDxfY1eO/++GNpOWIYyvcIOLD
VfCbQfoI5g/g40BJHntssRhO8JoGvwpoQfylQJUuuRCko7Xfy3HkBHk36DgY
5smT5sAJ5d6PB+8gneeWc5mMr3d/A+GwqFs15Ov0l3qCTtWdS4Ut55xT3wg3
gs78bTPd5Wh8fBipWase3SQlmNNZSo1uLcDr734R190CVHwpM/ipg3By8mkM
byQnVPTyTjdJId77SyIeQkIQLJ2LZLNGeagsJwru8U/LYB1j9kWsBvHWfA78
R/2pfBPBj1336cmIXxv8+Qm5C5trdHKANLfvzkxlCWSUJh6V750Cb70brR/N
0fodI+L5g9AQRaoT9w7tD7dYN50V+z4KSckf5cvSkF8RncQwNiOE9Ensdv3p
tJVBOADttdA5LO7lOYed4whfsvtsraOyGm+xd90Lj/rvJ/w3ZOn4xxr1TTjk
Y0ta8DsFEu3O3OddQjqT11Z+0Km0f4GH/SLc0h7o3IHPQnF8xrnA6Ly4o4QS
9Smg7ajh5Kf+Du3hHkMS5cgP+ZQucMGWOR6mJeuXd5mgPgIP2N4e/B6TBuN6
Q51RoUgv94oLjcfCsThwP+EwcpcTxY9eI/bTb59WwA8bUmPW33lAvzu1II11
Y3/VFaO/IW+9umC7iNM4Y04uxI1HKVVrVYHez+NcvQm/N6zH+wMlwqEJbfDa
990J+Zk4CNBRePh6B1rvidkR9X76pWAt+mxiqxny/9VGk0OOD6Hf9a8u936y
PABV16V2i11E9XE3pcsVsh8Ngfjbe81nqrNwuwl9XPry1G9IkbjO2WQdh/gY
W+hyfMp+wxbi86M67qXLj0Mee44Af8j0QPvhGLjTLpWMxb/0o2SBrJHDG+Zh
1XAZZ8fhYZicv7/zZGcqXDqr+/dOcT0sXSpi7+UK23DesUk8va4g9A1ufTX+
7Se9Dk+bkxdQX/3/Xyh4O3Yko3qWC03KVyZ8MkCJlTvvRxOq45voV1QIzkiH
R1t4qiyLysGh/kn++eRagKGDo0+ffMfHn1SSLlSVAvldHje30FupI/067Qg2
0YSrdZCUw+dhF9oIlLTpbtq5iA8j+JixsnBvBJSNlxceTlx9Dt7o86qZiIdv
od/C2MKbDhq6pvTX7yF/THBnFvf8ahw9I534aV/cxr6T94oik6t1OiCI6Fd/
AKb3rE8OiH2BL3UjhVWTaD+P7Rq3ufR81Q/Q2qpYYIl0deqzv/ySTowB/arI
mifPezZ8l8BArx0Oq37FaJ1+FXMNyof2sZCHcq3GG7cc9/aLFTDh9sEtzwOx
PMg73XPj4p7IXpIBS9h6z6rmoGWpmQAVgunV9fFaYwhfo/XKPHxTkErH8P+1
cQsOmuxuN5nfgF+9tfep7Wbqwf+2Z1c6jMVHmsGzDth8lKLTYhtfl3+nNwg+
quCzAtxZ1PVxK6je7ViA8MXo8iG4p+tqZ1CKeMv7KZUUZsMR74J84ATD2Wu/
gMJ2PKb9A8Jb5gjCl7H8hwQR10LzgeXWuQhR4y74LritBfMbxw558j1bhzfa
HBGNTtlGQ5Cd7I1cjzd+OPWWZVQQ6fL5je0+iOVfussJ+4sal5CffFisdJt1
Ajj9mSNNjCwCmrfU1yebe+CyiuUVq5sIv80g4r0LoDu8d7j3OMJJTrip7ft1
oRMcb1/5q8WOeLDsRNx+CJg27TUZzS3H7YKjbm9dd0+CHvt7ttreetxuOqrb
bCo+BnFWBdskmdC5I/rohTpTZQOYM9w7stK0sW5L6XCoesfhVhhhULHyO9wJ
H50I5z98rYOG9J15LExV+P0jSutGD62La6haBfQsHfJgqEOIDi6g/I7GVZNn
njuKoayJ2hMufEN11tHU19n6qqHr53SLWxPq8xhZsWASSF8O7IPjrIla6aBy
lPbIgxC07mpDYkzynkaAenRRLI8PinP3Hz2tWLVQBQ/UM8YZhsdx+5mDJ++e
P9oOXR8GrricisLvY0Qcn3bY1iQ3mCMatWH9vmF2FEpY9atsQEYR87PWxmd+
5Zsvhrte/1ihGk2C+iTi9XlJVPVU2iv43yEqnoew+W/w5/qXKwdW4BoH+en1
OPDCvJFxL8USfn0TeZg8xtvhFz6x/Ne8G7fz9Sm8uUHbCE8Pz9VpayK7QSa9
9OLqdSLJD/eMOCJ9D9WMePGr/t1Qk3lOK1nuG/5egQy9Bs9X943Jnw4ZZzVR
Xuk3h82nJwq5IBOz0r5vHu0P90QUaU89aoSaB37Olo/G4aWPm5zSXVQHwXuY
YEVn2QHmwxWf9OZQvu+/+pPGewbbITglOsIrDO0ny9uofL8TWuDt40OkwmfW
jcODM1t7RTtgcjE5AtsH1vwBORuLAQ/hBiDcFD2zPv9+t7DdkIu9GqoYMjcX
abeAy47w/pOUPhtx0dsVsy8EKuCdupFsmBH6XkLvleTChp7L8tvO59MfISMU
LW+6HL+C8uA8v6btk7nICR50gZtSEhB/RvFO6lHXYRLCl+u+BnHdPXCGRvMA
wyO0rkfruDKclftBSjzrWDUZqlssOirHxZeH6jWKa2pdFxl7wTQv23B9voNT
Z/b840/dYLTjDKuBNOIjzfJf8g4wRXneu3e3ZmHvJX7KW+wGbT9ud118RYLt
8yPEPCPKFwcaRbhi8zZ3VumirTGq8/qtptyK8fO4KWYPNCkjPox2ys4rdqvz
RDbmgi1bCap3dvntK4jxOrSJ+H8zwgMD5oexOOQCEe9CeYpi9pkPpfM54CZ1
OmazM+LJUJ8qOR+R9Q1MTP0E5VgQvvbD9ZQQe2wOPLfhv6kfUw1BxHxWF/DQ
Wp63OPgGH880oj/cDSlGJZus40Lx9b6cxqqO8bVes6+cL7wUiF/f9+dUof2W
TnjMNdrGFfoE6X4Ex3isX4+PpDPEa8ORnmpgQIs49j4hl2tGWZyWIdJki0aO
DKrv3vrj7BUv+yHQIBsL6X7ejc9bhh+PU0615sOShYdst3QD9A/t0ntGgfRb
Moj8hx9waKr25ZfuOfx54jjOZ2X9Qfz8z5Iux8/ToD4CfW8eUmA8n0cn6rpV
XxZB+LmjXcNb64DvSFhF3GNURzlixF58bQXFuc2dzcx3/37A/8b5SEPWTA8q
XkDx/IexORNkZ43LNd9NZwf9EW91Lg/Wo/g672PKYR3Un/qeuv+vc5zMhIA+
5sHHy2kIT7M9/K5Ei5lg7uLhxJ6P9MyVe+N+YviwFEMQ5Y5ktO8NZybb1t35
BepNrZfCOZbg03IG5SQf6hcTLavB4W9TCE8TsoXqJxbB4sdO5VQhFDflvAv4
aNeD+rYnK1nqXPgdCjUxvlnLHQjHG9Y7e/dizyvIpmV7Ts+B/MYTHEbPju9w
he6bw7xvehtAyat329ZJlC8L0w9omW1pgZaJI9amexC+0ZU9nOOxVAYen8Ln
Lxxu3xBHFLKGbLt8tRPmiXkfpB9Fd/zZf5+jOqGz6EJb/FXk5380oFEW39UL
lG6qXdXD/ogvykvxze1rL2wi4qIOuF2/+p3E/Mwo6BPXuzNuV6tU6/Upq4VD
2lJ5h+RXoPJcBU17PBoHnWHqp62DhXBSvOzm+nx6hML3u9EVaH94WBUaHJTR
DGe/nziV/qcT2jyvVnU/R/okihdTK2hnV+Ps/87dWs+rPPuLsKdzFuVVb+u8
NFIj94IiXQtp251FIGavut9dEvWVy/7z8XpUeSGMjk9kX56sBf5E546lGZ8N
57LKvl6ybro4UF0MvI7h5530dgXkWfWQKyZ9nysa1UPFJru9axNsAD5eVXdP
x2LcThJPfYPDHn33XY/Et5xILoTOoDNyqbtSQZzzis/zy+g7UsoqyTRd/wl6
HSUXqXRR/df40H52hy1VsHKA77LXjzFUF0zkq9SA1pKF2yVqlK9hVzCLxHDs
mA+abjxbJjfME0qpH+9buUkJ9UR/Phc+U6cGC2PXs94ujbm0FcdbUgWoltf7
4SKVCTlDFgyEhvp7rxbTGfA8CEdr+J0qkgI42C4jfZRnC8HNx3mS4wPCAbik
OhsjVenwfWbTQ/FPCm9Swdf9xqmLLNS4PU7sZVW533vo1D/vTee+CbdLF/Od
vj9fAHt+xKpG3VpB9Q5HbeOErnuDMZH/MAm9LjJHvrEg3ZJrI0p/3VNRv1o/
j/BLhzetw/+/kUVj+4CQhl8pTxDKj7tzygeJPG0FFZ75U1MsiNeU47JrEMvf
8y2bb12fZ6kR0ArDzkf6Kwo62DzxqU+MrJ3vx393ws6VuTrhLez4I2x8xwLx
9C74PnrqGPkMfm6xzDNMroMIo5qRCVO03ptiS3IpRhBe0dqX/rptWyFIqrFf
SelB+CHnIYcYyfsOcGlgvyX23WU8zyViOpf/FzcgMfe9ZLL4C24Q+QmJcJT7
vvSBMnT/pqFDC7+2oT4ULsPXPn8W64S8n/UKLDV2uH0n840UzF931sZwG1vg
1TAyJWtGeRZW5nzLsXQ0zmEPubwVOgYhisgTQ30rCpStudjPDYH2zikuxzGE
C+kqfPYL/TsFH4eHnJSHUD8L0kffc1V4p8Ga6CejfApXfHlN2J8Z8OTIq6lf
lye6UCsgH3PhD8QQ+U4vUX2rIF2kEy0ZgZyYf/RZjdtfi0aGonNw18n/Dn5N
joHb8dFpFqSofif8rlleQMFL8FK3jYYiVD819GzZrNfMGkzV3fox/sbp2/Ps
M2LNG9bd2wqa4y2kY/AmCItPHfHnZD1y4a7COBPhLJzMjF6NE/0HLl/RfLm6
H9ZZKKY1JiKdBEUVqfy3A3Ak/9ftHfYbcbznf15KG3KQEdiJ/MNXkEWM90vh
joTiQ6kySnxd+3x75omt67Xndzyb68m3er5zLtJHvk9C/skwje9rw6MpcO+l
zDeWTUhP1Fcs6Bnf5WIIbzj6bGdzHuItzG/uOvMJPY/BG2vFOd9ByNW3vKU4
jvI1hHyubP6dg0Agxuno+8aH3/nF3VQJ+7uEeFJFV8/B6m28O0zq4Oy07lm1
+J84XorjP08j3nWJtwGF7K4XWF8SPD7avsMBi1/KyMha5O4t4/bxW8Z22PlC
b3KXc7pwCRoJNwLeH0V+yFR5Yc83YVQ39DvXW8FMj5mg431HR2H8A/C5ytAY
lKL+WTcHS7rmpfJA+rjepbEHM7B7MiG7M2xjvTCPhp0ld3YT3DRRFVEUGgev
5slDEtEz+O+OOwXJvKoqhJFicpH1/iG9n/zLxVM/oS32Usx8KjoHb3xWb6jc
XgFSwl27olVRfBREw/ppgqwMQnf86vQzq4GLlDpzSqN9G+bhbIe1SUPzAFwW
eVhY3I90RPeQ0zGdV52Bl8R1lwQs7SKh5GL1oJXPZ1gt8AF/r0hi3oqJwMZ4
Y/jyNRTXX1+MCbzwnIMQ/eKYvOIwwgcSTocX6/ZvI/yXwZBKN4TwZLPT1du5
d9Li685MmWHlajL6jlZeccNa1VkgldZvHZSB9HBqBGwKLF5lg8uYHaOHHrIL
6G2/cO1ANhicTVZidS8FwSNVHS+bkG7qShvn5y3Kn4FK8MGT4gyUf5cCXrYd
J5Ng34Pzx3kCEJ/qSZEFe1b0Z1AlRJxYfIf6PliXXErQag4AUj1L5qLt6PrT
nWGZe2vCYJGZjGRrXy2onwpa7l1G+TK6fg5ZdWdUl2c3yJD81roQLu0rYlfs
Q3yPLC7B1BfvvoCPa4/n6E3ECzr2n6Hv9XP54NXXs7sgCu3b88ekf0tJFEB6
980bTznbES9l5hr7+U0fwLepeXv6T5TPPZPZR/7zSDDkxZJzjM8gHWBnor7B
e1jRMb6+aQz1wy01ZLiotQnxLr6xOtHsTF6NX7o/l2DzZLLXhxfD1fE870n7
AzvIHIHj78Vc690NKI+2uKU7pOc5aPYnndWzQddPCP1WV/zuBYt2tTFXtyK8
NEh4mL+gNRiKp4rGlv2RDoN4CumixQfUx5np4/W40+KdEDf6yZFZGJ1Tog7H
uUfiO6DPK1UgIBf1h30h+YuE3a0HvjbM1tBbRoB7czyjmk84BCrx0giabzw3
9xukfn5APw2MrF49X3QRvievyDlZ1DgChUR/GMUdV7c9tgzQHIXSW/NW1Tqo
/6zWPrVDB1lGoXhoNuYBPTqnWjIG5yK2/4HwDyRir0XQ9YVllw2FS0kJvoL1
hhh+rq3C+XgfO/LHXtfm7IvdNACvZC5JhLjVAedKXKXBNIpDHYVMCkdcUF2w
5bH7JLv4kuCN3OO8/CjUp9LV8hbNNw+kHzITfvjOzL0yGOrU9+jwQvniLhqa
BAHPclh+4q4S+6AEXpmaNRtUI35CRqZdtxpVKrw2vu8pvBvxzO+MmV36QJ0L
WppnPDa5oXrkxGfWeyeHgiFa+d6dYkY0/9PMEqXdmkOhZVvCpO8c2p9faW0+
3XLJEy5ebUyXjKuE84EEetdoxPNftHjqXD9RDjZBiimJOh0b9uEdi+lLB707
wPh+5PaOw6hvY5rhfyfL//b8y2u8hxKf+BCfqHA4zm+e1uq9EW935z2059qj
aeBj/rxVfgbpZsip6rOd1u6FR4crvrKVvMXtdo7Zao8VSAm6i4kKWD4F54UO
fmFxUooF/fM9IVysJbAjNnw2kGIz4VdRcfZemUr8vUwuc9/WkKIkmFF/ZXvQ
jepHCJtmv912RLyj0v1W3H8avsHvOfZfB+RQXoz9nJ9ym2cEqEY70dM6DeD7
xiXzgAsyx9+Dn3i20qwaup5Loj+GfCkClt795CgSRnF92Fnn3N7wV0By6Vji
cCDKd3/wlTdIPBAAFSqRn9QCUH196reU/NZfz/D3fU176Y6r/wwUE/0xxAsa
qVNQ7Hk4A+I5+mcwXhBe39rm9R7Dg0SIvDLED3mf+MNsjygzQUB3oVVHNRmN
P2FX57OwFigm4u3V8H6v35CiP+oL1mzc84H7KPJDrEynIjAdSavX6mWYrtrB
reyHFSeRf245fCHaNSgfrrFYuJ8QRTgMnfhcqkNkKSh7fpQYdEI6frBLtCDp
YDlYsAgNzi8h/6qwYXhn/s8SoNlrtXQkrgpubd85i+mi4XyqoqR6Hq1qMN95
7EzRYaTX8b2Bom10Xd20tfb0IMeJr/jz982d3HsneABCyiVrzOpRvH/Dzvcp
uQUpId7gTaRaZyrsmGrqXXhbBw9bWJNmVQvwedX9l+Rqp3QdnDI7ZZ7vjvB/
llgh/S38yL+d2lkjl0qVB6f4KHijzBF+vm9YneHsiVLw5baYPhWM/MOv96Nk
6OnL4L3YlQc5MsjuqNE3vnS6BNw/VRhgepeturacMysb11db+vsE3vQWMBdw
OoLVKQccv3/0/8PNFPInHLVR/aaQcWIMVgdrSsQrUB+Hbqi89PhvJzz/KU39
iA/t28/qCI47eLtg0erujU5PdP3NGGZZSudOuMOz66nqJMJJDvl4XPi86pdn
GSewY3Hfmr3LcKYgMycPtn5Q+0xzfV2/8sXcl4c886CXwrb79Zsi2FEu4Yvx
WtMqgkRlLiJeepaqszTJAuIP8De82x/2OwvUhb2P0uchu8iMf5zbDdT/S2Jf
TwKGr8qqbrPn+49pg05sl1QNM/0RZJeMEhTD8gJ3dsq58B9kIrxLqO9bz4ve
Q3LjilfVNCg9UrNbj8+ELcsZB039wd/rNd/mqUrrBiji9BX44I3qAVN1nvWq
kzuAUBd3MVa3i5+b2U9YGodd4YOx7O718fJlBcFQOm530KzRat0eXwS/iHFN
E5TmfPL0/7tRp/FJRKXbx8h8SDC99pUtFtVHnHBNp75lVQS+S60Txh6VcFqR
r/T/tXXdcTl+718URYkSFSmRhpKi1Ke4IpQm7aUiMiKiItoKpTRRKE2lkKb2
3nvvPbSHlrZfz/O97+f04vfv9Tqv+z73uc+5zjXe1/tKlkV8L1dTo5rPRVTA
om7Q4s5RdH7zMsfDg8nKQZ+IY6kBS8+lCoUvfxCum4h/roEfn6pFqk4gHmZS
vXnjsgsVNZnEkRzTrQS/ZvRMsfHLB8jO9LqTqnbqN+qfaNNSW0CoBxAi1kuW
QxvXbFREMLIDM+qKqz0a8oG51EkttRTluULD4kzDBDzhNHPz5er6CogONPOy
cUF1rxGJze3Mi5Vgv7vtxlq+8QoGO8FO40q4UnuoSFK15x/7/8IXufWvLg3B
uj/HH461IT+aO1bhQlV7JzzyFsxj4PAiyafzroRkcXWBEjFu8BRA/3A5R08o
DFQpiVjtRnj4R9fMKAi4Hfpr44qytIjHRtpih21rJPJfNHKX5tOejIBR/rqt
9JToXK9MUVF2nhuF3FhG+bV54T/72U5rew8BucKH4LXxKEHq5CGmrkFotLDb
UV3fAbH1apJv+BAuZY/Bu3jmxU6w5tY/m6zd8M++ilQO5nqXXw/tD9+FE/Zt
1q6sDvKwVb/yg5aBW8i/44+3mmhe21YPeYbL5wj9FLhHKuUIeYETZfMyflrI
Hy/Rt7Su7EH3IyfTrdmei/ng9UG8QWsO9elQA02dJ87ZIP0z2ZZTAI2/u7GW
oekB0rOkegevKcMnlat2+WvBm+9KEP+GmT6TL5lvCgzoynz6MIjGX/rV1tGh
lwP82i+XCPunYJlTcvHGv3002KuLlffWmAD5r/5YxWl0fpXUTbuVNjyAlpD7
tOVDSL4pLS9R62wDHAxVfSGoWgBXnvg7rusKRTjVO1csnOrQ8/X+kxA/7jIN
ruIqJhGGyF764UzTfatvnUTjO4s0/jX4E9GAksl1v0cgmhg3iIGBHtoJlq4C
OM8/EDXi1PtP3EOx7mD71I4sCOFjfl27rQgSOG5fc3q6qi9EghKnapEd6Giq
RUbArZm6fThtroDsfNH1LQ2nInOgUItH4FEZkv/ozE2lW93PP3Vz3rpMo3qN
JAM50XUiSD/nN6fHiaSgfMQUhYONyr1WGLClrxubHyPJnVpbWUdXWsGPod8h
KGYMgq6o1on9h/RtuhifK9lwPTw07vy6qR7h3Ha6icc15zeu2pGUm/XX4BMe
nj19+9ksmUTKbL9qpGsDpLuZ/VmxRHmEYyHqLgrHG+DC3s93pLbUkOZ/sFUw
jH1DPejTPOW0Mav6Rz8wKR3lIuTlT5umRfdcR3iD7fMuK32t/lD6ADj3UaN+
WEypz34nOYXCoAH/TUXHEjggEhXKY1MPdkG1fyRoEa7+2IrvsVnJOrCOWXE8
sgfVrz2ViT1YP9AFz1JMNqcKIvu2fS794RmJXnDQMFdgmUY81bcjVH4o/EC8
03vu9m36TzQTlJQK5wszwlC9tmjB3O/JcrAua3FvtkP48PPDnl3mosVwy5dy
95/cQtA/73Zg2AHZYz+IcbNkWPBqTzHUmkV9mracXSbsn4L3x9adovmX5/mq
/lkj54NlsPX+oAXLOzqJLZa/2hrZ2kl6j+GczqDqrxz4+OKDnPTiGh5mL9VG
7yP54MhxpHiD3G9gV70rIS2K9Jjs1GZLlq7fYNiQ9K5zc/0//ytXtuwcIW94
lsgzgOrRRL4xDRDyMjnZX7kTpVEdwdWbEeMHv3+ErLzdVEm/kHyvr0UKwa/L
HmeRIPh5JFzxy3ELAk69dTnMjoBbx+W7OPcKXc4qgqLLFvmm5xC/JUdARxsB
/9RLzDfVgTsRfzgNB3dyhuazofw17ZsbtYWvZuC1PtfinkDEx/snSUGl0eIP
DLy5yrAciPaz3NDOmMRd5BLDsQd7dpxqRfmO0syNE9TdINvVphV0G+0fVinF
OjoTtB9yj3L0PSsog3D57N7moBJgi6dqEP6K6na3L1583llXCpWed+r0/yAe
iR4iPioVJOkeyrDemiM9//xOg6K1eIPWkFfv3RMQTklM+FM/Yf0n3aW+nBjv
XbV7XOw31SOeDa6a7abyOSng4vT1nqcquheULT7baLRkgEMntW/8PiQ/cvo8
82GBdCgjk+PJfYP4SLkW5M/qnUR94fOEBxgNGGohInpbIQH/hstbz/xWb5Cr
hSevJ8+LnkO4uCU/zhrF6UbYWrx9sIcO8ScfnbDTczjQDPVE/ocaKO8/qFrL
kweHNNbFCbsinExwQCHl5fg8cPWaYqjiQHrysF9vzX9384BXiknVtbHrn317
xrtzsqu5GzYQ8VToXghauVMs9mP1u+uSFR4JZAF39pM5gp4k8WIZ0cU0HfkN
I+9GLV8tt4DrHf42T1Gkx54ScXTFcMzvhMNGVVSvVNM6KlBbHwVmMmUD+Q6I
L/FpFc/w1aY2oO2OZLlSjXgRYz7TnDl2sh1s94Y/2WZaRHr+T9tX9/MiEG5k
77kUXeu79fAjendYywziDxxtZPfgYa6Ha2cnFY9/L4db3/Kkjxqg/XNYQ9sw
4wYaX0I1osJrtGqvG19zHAtBccWtXAY09gLfQM3HPFmjEMVbfOSGuwRTf0Ck
6PBEvw3CnXKFBznfj121hyeCrum8qkBx460CfTGr9tPjFGn7rZqZpPEbuZzj
yyJ/Q80LHWF1+TTk93Va3XQymQZL3iE5F6qgk/j4o67XA3lgD8m/aA3eQCGc
kAXC6fnFn91QP4XjfjT+fn4/QHbe0CJTBfFmqNvIKwonRMPVUeX7b437kZ0/
aGqQpvYFmujmukOiO5G+uryz088vDBb3/wzRvt6I6jiS5LfPnAiBmPet0y5L
VfAI43nRwnhf8P/Ve5t/yYXKkzT/Mxe8+eYNNpNwFw9jvBI/+BXAx6Rbj8ri
ES+W+lbBYKHV70piMqmpPN6H/JcyhgupaqngpKipe7+xDdlRph8WPqx+796a
U+zhD+rACeOjscf4afD5HC2vkE6lfkHiDf5ewK3Ir43wQlyy2y4KJVRBmO2m
FaZsxMdFdilt7wWPYqA59+rYZjLkf5F5ifymPpUH+hbZs+/km8HoHvuG0KOI
XyVKuIGO7fk07KSrVnalsietw45bXG7eX5F/tzOt/uwHvwaIkQp5aliOcI/1
qgfkCfMxuB/5WrIY/RclMMxPUSuF48GH3HKy0b1ja9XxnLCe5VcmRe0ZK2AU
q3eVx+pf8f0fIuI2UuuIcHo6SbRO3R2jcLFs2pih1ZI0z6JkU3OF8Ak45PqN
onYNHwvHshAH190hxMeyPOicvb8e7p/wGJ0/iP5L9UyRDGH+tGXenCPHayA5
eLnm2XgCyus98doRYvQTmn/Ev0mlfkR670TCfLr3+UHYkPGW/tk4srt0JPhu
xbr2AIOaj27IUWS/0VEUZGRHoTyybUhUoaJHM7C8KYm6nYT27UKJfgz1qToo
G1204daqINVlPcHqtPB9IsjY1+i9vRfhGPUSNdZ15oKlsuxTx3FUz0LRd1L3
SWUMbHxdlp4aHot4NgTfkX9g7IK9bCO8oUejSeN7O/KHIo81Q1Gu8dxRP1PS
PpS2En1A+K6xa8E2rlT3SeswFt0y6m3XDqdnephSw5FfUlUxc4hKqg3Y4j5+
CFmz31poYvqz++uAjO1yLZMVwrWa/PdDoVmnES5z3C1ICUdxs+2hj0wi76O6
b/ag30y9JY1gear8++MzhcB2YcSOyQr5NcHTs3fei+dA5v3X/CFH0X2aT/SP
YoD2m9rPWG/EVy90Rqri4UoN7CXfW2JFeY/0XSXsE1u2VjXA08XNYQytt0/i
PJaXT5U9p3xYDS8w3jc+jAeOxBeB8UpEYDwT+P+yx/jg4jF+uL/9rMSPNTkM
hUvgwy9q8aUvA0qwug4yrM6DhBvB+CkuYXwVfz/n+OfqvoH1OVCXIKVhR4nw
n7V7we98eiJcjKSolLuO+Ar8eqtiv6jFwNSbs76VH1G/7K/hnILf2b9C9fwD
Ib8HCOewUUxS9g1POHSx2u+ze9BEkocURjpTUwTB1YscZuUOJZAmf27etr8B
VIn6FuUH7TD+nRaMjwf/LjWMZycA493B5boYz85NjHfnb/+ugmu4pH+xCPJm
38kGz6B7xN3iqz1hHVr4du6he47ukTqdfcrGC2kQNFt1hfMyOo8BlfIz0qvr
E5xdcSnStAGuSp+JUdZuhbvEuAXyR2QxnqBwjDfo7/lsb2UZvvquDHybWiR/
aSAc49t3PmFnOQtAqi3TLsoS8Rx60AdeJszzvaace6MO4jN8ZdylE1FVAb5f
FF016VvhS9CLt+/5okj79k3Ntpyu982QWrplROQauq9dyZYy5hTqofye0OTm
P4Uovsrfn0q7vhruOfNbGpciu2ImOeSB/K0SsNA5Y6POhPzWnp1P7hDiCfaH
Ne0lDFE9S1BfULnSnTg4dKDnmvtWpJ+HL/gK3qJB/A83iiRc5uM7IfGm6/mT
+5NgnW+moc3q+cPHm14zUTMrQ30Egsle3xaqaoGnl4Vs+DkRL5mIVF7bgSex
cN5z4OBRoVIodj5Bk17fAOPEOBzCP0zK8tF0H0K41pm4fbKGkUtQofnt84xm
HbQR+XLSSONNaS/wGTciXN9QTj+l46oex997a0rOTrurFb4PbD6mMIJ4C9PE
vnwgzHNgzpzads8EabyYdfAI00weMFu/fTO6CeWdQ542Rr8PyYNbl+5S7KAr
gisYT9BVjDcIn48HxhNkjPEG4XKNi0PChPuZ5M++d+oOXtWneqxbR2w6EV73
HaP/ISsNdC8fb41m9d3cCCLed61fx6N9nlbGm6MVXgnZU/xpjs2oToFH8lVE
AncF1N1VdxvuLAU/WcvSS1+bYMTcgU/kNcrLk/MIh36t6IJjnWG2BB4Fkj/1
i0XJ+gOqwzqbtlWJsH/ou20uWa7+d1x/qg7IqNQ4Ij/RIP5ErIhUL5zyt2H5
XhwDhcfumJ2p8UF1kSFyRuXbiyCw1T5E8zjqF6A4fjNPlqKIxHeD89/g5xTn
u8H5b/B54rxaOM8WLsd5tXCerb/P9cjvxJoDbcNwRZ4y9lw4yrPcLjgrc6Js
GPzOqM2NGv0AfYz/aw7jA/s7DjBptykkqjkY2NzlOhOhivScbw/vqlv3BoHA
zY9TzfXlcBLjHwzH+Ajx51zG+DK6MP4MfJ69GF+GA8afgY83pHeLWmuHVD6P
T3E4QYni/8WFO3e/SQDhdvEHlz6ie7ad7oPc9Ik4uP8hfZPfYDmYYrxXpzEe
LPy9RzDccAKGI8bl27E4rzkW9/17HTi4Tcl3emfCgQSJl83rUNw+Q9pj25hO
OtiT5XKwNaO+tB12tJa3V/2SYO6WnlN/yqG2g+pMClULsGasyK61n9fnfjtE
4O03dCgoI9St4nLJ7r7FGyut4JoptKT5AvVNi8PigElYXBAfr47hYwIxvAwu
p/Yt42k0noZ6or+L7DHKgxp71J0Q/tB3r8I+gr2RXFx4dssaPWxgZC8T6zoF
0tEUwd3vUR89z/JmXUatKYRz6/PzI9xrvFSjHpw86L8cFfpt9PhlEcxX114z
t0Y4dvZnFcNkzJWQdcS0T1O4AvQ8Vihfb0fx8+ZyzjqCnYaP/3BRO81xoBoO
2qiE7F21x676CBxLPNAJF57uCSHko/D1aRBiPOxqi+qgeasbNp2UTgctjFfF
H+NZwcdXvns5cWQS4Wmfpd/b1xSSCoyMfT/5jREukaZ6RENsLhDEeNpD9ZhR
fcGHUI784oFymMd4glQw3iB8nUVe8rUOTaG6y7fE+ygExMl3PbBcc78MaMjx
j++pAcEdVrfX2vPDtZPfeRmqQVLKPWp8D8o/Rox4DfA6lpJ4lHBeJfy9bj9u
lskIe5P0mHDVtx2Ec1Vympq9zjGSJI8sfP7fB+pyEPcrG693fE+St3i+UIpM
R/p2mK1HL3v/T9jTU9PdTp0KrFhdQQBWZ4C/NxqrK0jE6gxI+iqWquSe+C2S
vfrjOaWHMG8pibcL5/Ei1dtivF04jxcpzoDxGgthPMe4/BLG5xWC8Xvhcpx/
Dedjw5+P8685Y3xs+PhljH9NC+Nj+9teDWR1Tl+4Qy6xkKQhGPcwHo5jPGuu
GO8aPh4w3uQ6jEeZpJ+xuseDWB0kPp/4Dd95L8w2wa8/oQX7GFE9Ahnf7sLN
nJlw5F6q5/UepOdXsrVuNO+th+JTsn/EvyP+n6cY7wwnxkPz9/xNGEy4Cfaz
R6qAaiRHIXz0vhz8Sxjhlis0L/U+Xr0HyTcmMmZcQHJrydlXhHtcH8NzU2L4
bvz5ahhuWwbDcZN4k1iejRP8PPw523b6h+/OLoanWHzcDouX4+O/R6Tx5fQj
u+7h9Lm+aG9/4PrgKfgrOom0P2VeZg0yMqA+LBfNUu95s/TADwUNitfkESS5
Dc9J5vHV/SlidOePVWsA6IhdFHy65tx16EcnDkztlhjPFRejWaP3PmUEaAs+
3E26d6xPivhsvBUIT5i479AcR3r+qJ1v46lfAcAQrb/ez2gNjnqBSZpgjwVK
U6mtZ9okwZlfGr9IPgs9354uEvhpSPwYCkZOGYYIP3ngxgY/gr3aX9KpuaCP
8rxW/0XPswYgv8CtqPJZSEgpiHgYSqWLFsC+jS3ujpzInoGbzOq6IbmgkR03
DT6Ip8Kzq2xvzer5x9fnAD1n/cP5GvCSdZy0WyletUPp/JR06sGNZkyH8B/x
fdVX3ebV11ALXzw7jNbagS+Tzr0j+NmkepBmAWWCXdpbXnHVfLELtjf9zLje
g/ifG82f7jJ/jeIA24n+fjYcabAYj1xC8jiDayuE/cYeM5hl+ADxRYd1vK3u
vvIVHtN1+n5oRnIB4ns/wYyMmsAXBeRH7yfq7Wigw+Khz7D4KMnPxeKhcVh8
9O+4buoif8+URTtovaupvnw5iiS//Hlw916Jdoj6XPtSa+wr+GD8AhkY38Df
zxG75Kl79PUksCtE7xW+nUD6j7wGpWWHhycg7nEQhdW+CGDHeBCcMV6Ev88v
TU6D3mLfPCQcOzRE+ySO9Hz/KlHrvHPzMKlkuxhKjnCndo96Zip4AyGyY1Mi
n0IhbMw8fliNcg/pXLP23A+UvRUJg/3bppurUL9Fl3XZoSdW702OsJPZKoLr
UJ+Om2NPlO54Q+HnohJdZjT+/C9mBsI5ZxBeHxTfM0X6L8JmxU5zCvlQWMHT
OT6L/ILDilsE5G+lgKWAe5UNI8LRzV6/JfQhKAh+8nzZzXof1Zvc+KxUnbLr
JQl3guNQSPhAqVwyr0MoD1XAdIPW1dYMUoBxvsAW4TPJ3czTvbej/iZU5w6b
jeqs2hnPj9nxhSG+Jtf3X9mGCzrBq3l0JU7LHPht6x8u5KA6sPoIch2RJwWk
uji8Tu5vu3F3YbA09akZ6D6sF/UjMZsklyv7/PVt3E8o01BfiVNDfRZGj1yZ
37dpDIpVu2/KNSD+n8uz1fI3lKag8lXuo93eiN+jb2ww78breaBN5VbYKB4L
L1XPUD03bAGZ+Q2KbZoof+TreKkjg5+A+/3AXTaH+Ge6gkJcInMm4C7R/kT1
1OIVmx1aVBDfRbBTwg6a9h8QuAf+uNgifeVvlw8Eu5G0n1k7vro8KIeLemZ0
II38puOsXK4bHMtgZ9bnY7sFioDf3kyZ9sowPK2NPkng6cfnY+OdcNuYHMUD
f7X20h3jTobiQr1U11k0H2GivxYDRwyzpxoYEf5EfPZquJXuI5iso0/7dhjh
ED5UbWg8nvUc/EI3Pmbb0Yn6NC3dpPctTYGhwNCOD3QIn0mjn3vNcfwNqr9g
nz0YqD8A0XIpSl4tIagOYjpv5YXWALi/fNyg/DUEWDT9htpoC4GcSqWgPwvZ
FTivKM4z+ve51rSk7lAXJpOod09qe/TJG4ox/pQmjE/l7/F3i+dZco0ZJOrs
XS76nUgDspPXp83LUF+AxQ/favseTEF0c4UGwe4j8fiN7+okxDNJ9+ZC7BdC
fCCO//oCTzOqSw34dcmbcH8VS/Wa+35uJY1v5n8kK+zaAmy1hzXHHBHPyb1B
Z35bmRYgd31vBPWoD+Bi9BsOoYQuqGh4EUvtlgH8SYxNZGHoPI4T4zkppP4H
eD8EfB++wHiXTmM8TKR7E+PfocP4eHC5N8a/o4Lx8eDPmcf4dz5jfDy4/IAz
W1PnnQZIuu6+63Rk7D9+dO6FbC8L6RgwFPKeODa1uv5d7qfJghqgbYvu4pvC
f8cv9CmIWL+Phd4L75z5wlEe2SKp+aNVbwzoD7kmpbAUw8Uyat1GSWRfhZV/
FqVdnw3vML62xxh/G/58e/oDk6VGFBIFRF7Dpn/eu4fD/54OWyYIREgVNW8o
h5jdlyvYXzTAx1Gxq2vzFJcmn0x20Y5A1FEj6v0HUf49aui+85GTo6T/QtWQ
fC/mPOpLnrN+k4F32eq5TnI9IkpXChltm3J+M/aD54WCuLV6OOCJ5S+yK8gO
Oe3lXXs7OQfSNG/u12NG59dfKJtpYtWeu332xJahSnRf1xPPYyRY5ZWvKwW0
T1KdSmsPbEqDnwyjgl+ONZPkTNLK1CFHo+HZ254N8S7IzzrydNKdLCwMEtRu
vP/eicZ/Jz7nK6ofkXfn39XQDUkj+024DBF+MiXZKmw2ohvonPcJ+zUive04
fW9FrqkTvA/ZurdTIF5EUwWOQc+uDoiu6jvwn2AcvLzaUelsmA5XiHxCyK54
JhJUycSQSLJjmdKS3jn0FK6ux8mjhHgpLp+VFUuIYC8DyxZGQ72QOJI8wGil
ous9wrEvB1DuI+il8te0o7veIvzbRve2hhs/fwLLLp/HG+pQPZp05G3de/KD
QLlA+3x9L6qX+WatWXS4bhh6NZIStjsjnu3/TMwDmkK6IZORnfWjcihpfdaN
v/P3v9MHhefEKqbsE0ny9X+ecqz/1gNHOsRvnA+MgovZfitV8dEwYWAxqVWF
/LVYjF/DDOPb+PveXGhppTw3PwplbQbkcZ/R/Af/4449tDAIkTt0xRJtUH03
a+34cncJpURMfNcht9I8CMB46NwwXjr8+RIYD50gxkuHzycN46Grx3jp8PE8
LhqS0sv1sPf0aXdejqB/9DDFN4oR99J4kBiamhYUrQYvJSNO2ox60PC/7UP3
/8SRRArLH6WotUKuoPaSU1oLRORGa1CJoPvOW3tLrI5LIhRGfCh2Pd1KOhcX
4U1rTHQe/DoYUzahkQ0756QNxKoRzqc3+bfHXasvcJRYv9X3z3sbvA2pCXpe
ymJp3zNeJpJfQ+tKptK5pR4YyDeZn+NE8ZzbvgpRhHyfmovXxz3scyT5gd9k
DQR/gXXrnGrXyV5oCetjt169h/F5mn49OaLm9AccX8Q6EfKMuLzzjfDynTV8
L7Im/VGEvGFo1Wu6TqlJuAscMs3vUNyv/VgMW/u5SXA8HKbzhgXV5ZXXPnQ7
XjQCcwsKrFyHEO9NLNGvGYZrD9b3E+IZuNx3Q9eIWdkgcPdwVq7NI1ONhEyn
r/q31RbjI2vjXf73Gz0paykl9rurne5ZE+8SJbNnEUumlFggD377cM09OyzK
17ivgFLiDMZ/VIjxIZFwpBivigDGs4LL3SyO/FkwnQcnIl8dsrsMMPzWHQzP
hcu/YHx2thi/Hf6cbRj/1D2MjwqX61SV98V4p5PmGXDN37PrUCXIQFvMLRq0
DkFE/7ocwu+9u9uuieRncpy4TkqXw3yDmMfafOhv7YGNj4zR/S4hvy5rcaQH
RCRmRpy68km8xjjPMT6fIQxfK4HhbUn40pTSe8+Um2ED8R5HfBRzLhRyKr6t
UBH/0ZudMfQff0qAaYnJz68ABm5/MT7ft0FiEpMn5Z6uJ+QFlrx3hvxwQ33E
vgoNaBDy5uc4+IR6NFB/lh3Bnk2E/bzfQsHkou4KZHw9wkWIQ+L71r5V32E+
epH03vgtv35VWmaAlV5rvZwKwpX57vB1uyffBNasVxMTWRHfSMtjmU+Ec9c3
ey2v6RfqL3ZwZMbVc7kBNB8c6pnUHwJ/0e1b1+7D+K5Xh6qpeuCt0NUb1yNR
XeQP9oUdKXu7wYC+rsVQDOGHjT5x2XUd6gS62qyX1VQobsDpclVJ3akDGNT6
2Vp3IL7lG6ymXPPb2sDh/VH5bevR+eJhJvhNdcD9LO6jqy3ib2kI4TRUyEJx
XbfplQkCXuJaxd1MWZppSGnsfRi4Jt/XVF9QcrqfSiLKXnN7+Jp8/UH/Pdt1
mqkkCn20uwj7EZcnEf39LhD83nZlJBmd3+252vVN71A+l+JVScGoTjnI5J94
JcSP4iHldzKSpk7UQs/khf0Pw3pJ6198+1InoU/xW+53VjoSg6TxbCIPHQjx
/PqzHGbl19F+oKXRJU9TSwXOsvPGP6pRXySTlocGriGrdswhdvXRTIQPKWx5
Y0/A1Uja+32ctqkGT6yfkyLW34nEI4rxU5NjfNV/62cT9qbtBLwKpdBPXlc+
BhJ+ZgO/338bHNsgZespqthmlJ89yhdk5la7qvcmLunyQy7IYXhBZgw/iJ+v
EQx3SJH8PxwiLueS3zr9KXw3yf503vGSjxD361v8+G0bIL+pT2XBNCX8KXyR
/8gw9xv5R01SBLvLDpixPkD7sL5A+Hc1vW3SyTGoBfIuE6m1cWA9yT3UyzSI
z/DZzUt/6AVQ/dre+fJjvuPbJVQb7We1uT/BBd3o/fk3UHyg5x0hn+gBkfWL
Wh/W8Nd9Fvi4WUo4hMT7jPNA4+/FeZ9xHui/7WfnS/WFtPATfjfuka9MQ7y+
fd8DNykEjUPW7naTwCeo7+EVmSpBwj3On6/sXOu3kfS/TI/aHyP8R+qBlKS7
RutJ8nUspm19F9LgkZHRUNTLAhiz35mldAfFQwy3cnkQ7H98vLGknE3ncu6q
X/qisnbHqp7r9PMhG0HnfSlKSYsQ/8Lnw1hYcyoOWiDsgc2NIIVeSH5QEvsh
CI23HdHicZ3ogJCYk6/bzyG5+61np+6YFUITh+iI4xpcEMPW4cg3MYXAjtWB
C2F14fi6yXS05pyhb4LkMs6FnyeQ3l661vz45LU6yKdtFJJ7hnBrbDfdO6LZ
N0pQlBL41xGfQMq5poxXmcgP2nwvV5QQ/8TXodKBN0KhsR0EzmfpF6qgurCc
i5Q0F43bIUuJvG7LkzyYEBBrWhpA8WFDiTs7vebR+Ro4KvWTvS8AaMu9LW1P
FMBC44DDWnuDRXEzmf8RSonDHkY5PKyoL6omMe4dSHqvZZsNAwGPMfVJNf0A
Gep/fYLHDLZHpUHzL4P/9mkXgnZmVbJUCcqvNUzeeECIW5LXSlEZ8qM8l3HC
8r4hEcQ3RRcwdk1GsAz484bdHB8WAr09Z5JiJuLbt7AYiBc6hfL+W046Zs7R
14Ck1JRz/0QBFFTs2aXXjer+9Bh8ls3KnCDxRn5T/SiSyzQR4qXPSO+9M2Sa
Wva6EUqduew3JxSQ+Hpw/h4Sn4+9LOz5WQ+SPOdeZR1A/1FhInTguBPKl8Ur
dIinSAXAlgde/ixT6Hv1j88YEeK03CuWDilqyL97NkWwQxA/kqWm7Yvk3k5g
jAp+fFvRhsQ3h/PPkfDzT1l5rt+PgOr4JuazZ1G9Q2vFYT+xoGjgUhE2FCj9
l9fdxOD62ynhCbizxTXM3ArxNqT/ae+yWz8Gnacei6SVZsDDR911K5kV0PNc
54Kc9dS/vH8eufbHDy+D81DFIFUa8pfVnom298fOwMIh9YXFiVfQidXBsmN1
sfhzjLE6WCOsLvYfnNV3Z92rwxQSX6UdS8PIUd2cXYz3npdHN0m0x3/KashC
vNOjCb97Tr/cIOE1stMkaeE7bDjbrhh5DO1nyQ+evevC3sLe4KAZPROkV1PK
75XqMr9CvDrXFDtbp/rg4WW1tEufHiB7ZvMumv+MZmC9bJZVyqQjbMl2s6Jj
G4LukgudDndQXpXpDFno0BTat3omdhuL7+eR+ARxfsG/1zNIqs0m/9QE0Fx/
oP/iUy5I9qaGsu6vhjri/x3/Z3zobOUJbXFCX8yEyDmPXEj8Nd1Z/GhNf15j
gWVd5nYwnUpa7p5Eem9iwO3eVZYCUP304s6Ob0jOQ4wbFIAi1leAF+szQMJ3
LTAXWFEjv4wzwLenmiUfTk9XVlD9Qfz53nrXWQhxb/v65E9XKNNBb3tukbIf
qi+j7v9J8bAM6avGa7vWqW0qBB3Gov1asuj+FT0ey6P7xhZOKEp+MeVF9lhM
b+dwmBmKA8wq6Ow+lrBdQuy/df7CdcFw6MIrdYIdh4+3I+KpskGLln78RS1a
H47oNldGLRQ3ULiheJ1wr/XUpFw1tZ8Aa/L6XU+XUTx/mIy3xWXVLtQjU7/F
3oburxwh6VeE+Az+nMzWG7s/+PXDvP13S+aYLPAQuxx0PLoKfIi88ojHQxrr
98aG9X8jxfNZ1UxqQ2vAU/z3hrntg/+cX+Vd4Wc1HWdBXr2D57E00od5lDI7
l0Rn4eKFjB0+pqgOq54urk6rqxVOL6X+p83PLLEpQeWm6GQdqDCyBub7oPxp
67ryhk62OsikZWj5wYPkflGMzwWz6+BEy9H/3iWje81FT28nYye6v/6okt3k
XMMn/J2KAsbpMiCebXfIVqMSiH/ZbmUohe6FAiKOKwFO2Dt7ltAjuYw2V/pR
7mSYf3aM0pcPyV/QvjAgxAeWBTKn6/R/gTsRH4L08Pzwl5LBlCmQDxsYJPDZ
4+u5eZjOTOsditszEnFZ0bD9vU24zgSSSwlZqRPiZudPkrFsFkB5Q/HtG+R9
lr6vWoYH+jiVkZ43VCXYh8EQyLJCPTmM4nhWFjq/GfdEAPmTc++D1iM9f7b9
AROBNy95y6TlWvxev8k6i4S0ULiSke3630YkD6l9POmn9gk8Xx8SI+Cr8fPi
vdXsGuchtB8ExLqVNu3vhgudPNYi0gGonmtSfbAxtgvk2XZ/sBx5S5LHBTVZ
0wR2gaOJnZ6HOYrz1y3/7HqgMgCiLkfMD9kgXguDQPXDgr9+wk2Kt3x2Y6ie
1D7gxeInqd8gUtIW7SeKxk9/5JOJS56FvVEbgmuSP6I41Z1E83LnjRJfXF/v
P7czE0rXRxuuxTttYT0/VZwwAEEU1+meUNYD/fbzGx6HBJL+o+u6cP2eHGS3
Dyp+PtZUlQ57zkjeUtRB+bhwIp4nG17Lv1UdckPy/uqv+YS8qp2Oi4ADFzq/
5acsaBy4cmF8RkOYmwfZ1XKesyfUndD86Y9f3mXVWw2WL3cEHlFc1YfSnbn8
Z1HedtG/JNx7ey40HFdTTa1G+8ePmD8KAw8pvcdco2Wwn2dEf5cDupejk808
6KkqQVzpttJJfpRHk+ftb/d4gvyF0OZv1fnqiI/CeLye8xFPN1QOhtSKeyK+
kZCgwBwCvxZv7c1Z9h0ofphlWDm6oDMNj/1uGTw9jup0zsruPG6kNwuHtKVj
6ttQXFSGrEF96sQ08Pn7erpkoud49Yh+ijg4Du4yz4OEad6QnjPAp7w/TnwO
jjM6njpRHgkxGA9dLMZLh//H+ZKekLaMXRKOxDwFiv/Ynp+3qctD54vxobJb
zqIPDFs/jGPTRnWCK0T/KxCoSsPPjH9Ect50DwY9Zn94zOG+9NwKyZ3pX5Xc
ZAuAm7HiM1pr+CoPEOPnHkD5e2RP55r6/d7DSpPdV/xI33vBcOb89fT1EuUj
eW9pmz7DPowvKQrjT/rbbvkeEfVIf/X74jh8LgYG5gLOl4TzJ+HjH6xruVbq
XwcWxDwg6k99YG/VvezKeoi+KEmh4of4Q2TKV7q/L6z+R49FszMLpf/EhYLv
Sgi/eTIA5L/z6Nmbc2Ag0KDkxbMa+G9vZWfpHLpfWO06K6t7Vu8FQ483XaKI
R4KlcXpMKhTVI0f09nmdHMmHVwm9Zf9tRPevrhUUE+LwpDqXuy+3Cec0wcaC
R+uTGFDfZJ8+D43dvG1wM61J51xfFVg0aY2PzlRD3xdNdQLfKv5evE4br9vG
5V8dlH0KvND+X3JJMhf+kUF6/qQkM+sP7gpYpk9400K3hRTXvfTFkWtgsQhS
Da54DXEg/1Rw+u49QhwsaOvm/YJstCT5p4XYdkIczO1MAz/5j+0SXKXP3q/F
XUdXaVJbPJ6E3S8v6sTdRPlENWJcug6obFm3HTFG9YM3ZAq5jn+tBc3bN6Jq
+urBiBifzEB+39y36xq7V79Lf2jD/AvU9zBVzTzDo7AW5KJGD1xTTSONb5Qe
7dhjjvRY4dzyA4I9IyjKOc6oheJddxNMHm5t+AV1983zCfEqXL5xwI/sVBrC
29ONym/OMF61/6wdL+g6Ib7NVN499u6leVBgXd7G4oJwPoq6g62m+/PAxlpD
6sPzAuj+ciX6+FbE77R/hMAHmwQ72Z+pKFE4keSZA9G1hH3CjdWLemH1o/h3
vcXqRemw+lGSPxUteCtsTdz19DZuZ9f43RLZYnO2vWvi0mNE/MZuiWhOMu7Q
NfeIktfQ/YlDuyXW6/fAQ6868PVnsFUIiCGt89Hgedpti8iuyHt7u7zhZhiw
vQ54UG41ifGztpDmQyNZ9Eo7D9kJqUR7D+XRymsVXph71kDzCQH+2I9o3YQV
tobfUKoB34DZ2y55hfCFguX0pBzCZzorR19n6MuAGYmnI908yD81m1zhYhsO
BCGFMz/bjZB8TLyVKSsB8bsWBu2xTNnXBZVbnKxp9jtBrX6g2l2xT6DfJ77c
z9X+j934MqCBjWCXdrGV10hx+sM75QOlbGp5UMdadcbM61//gs1r/eKxhF/Q
+UfZQfUZ6gexccZHI2HnLzi0xPdlw5YvJN5knEcZf68Zr1z3QFE3SBQPc3fW
If/o0YyYaOgPxFc281n9z9OCTPi4/b5ayQCKfwoT9Xk5BJyPo7/Fhs7ja/H3
Z9SyS8H6ksGTQ70oD2Jcn7nnV1oBOH39/C2avQjsb76ifLQF+R20pzsuavCU
QoetlY9z+/w/32s+HXX0yHAAzAaLWz1TKYCkuJ/Ud643QkLsQNx9xcx/1tOo
OeVxUWQ+sDiPBfcLoXj4i1NVVCZ5NfA6Wyz2onwxkIdZb9hehOwEgwNK3wjn
N/GzQE7GevR/lQ0Z0wn42Lwp+rmYkyUwlqO3zKOD/ETRndt5ZyIQDkeZYvab
hd3q9zoorQSe+0iSX1zgT74iiXgeFtXvrL+tOQGlT4akpZOD4c/CoO3n13WQ
WK6XTcBL/31/eVYvuS0zNcNUaDi3chzCsZyI9Ho6tL4Jegy9KA3qEP6Q3fj3
sZ3tTeDj653hsbME2K0tVNbadV7E+pdiqDXJ4V0bdzpC1Bur5yV9OjW8A8nH
LzJPNkoWAQPW3x3v907KB0kwBefcLYZdjRySa+OrzXr0m+1ECkG976QyYR+S
/CmsLwLeJwF/TjbWTxfvr4uPP3lJ5afH9WywVfFZMIlEctVK3lPXgzNB8clV
fxhG/2XoQFyWlkYTTIhRlP44gOqOZR6lkbkfa4Ae7cylDekoH6rE4x1GWdsI
bFGXntOVF/yzD+9ahbgQ8iZXjmwVMLOfR7isGTFjAi4lPrejTegbitvHUFaq
EvxWyxln1mcMC1BKUX9/7fqf3/DsTaT+JBTXTRSXtKN6vXBi/R3KaxwRDFq4
/GjVz8r+/jP+PMKrl+2sK0pefX4r7dKTp5FMEhq2zO2P1uQBi6qcVtLv7Zbo
xfjKFzD+8r/Pi+7ts/aCtT0wsc3iE6Un8ltZTrnY3FDqgcZTYTY/fiF+p1e8
f/YMuAZB06j4LlNXVOfeQ2l09rF0ELi9Z+ZWdiwFaqzPZTrW9xJ/72esz+U8
1vcSX+eEj7esCfWOJN4Voh+XA4Lae8v9HqH4hk27Z53n2TwSXz/O348/B+/P
gffrwOUmWYxO0bcCSf6ancoV95jzlZCYUl25OS4NxKSDd1sNLSNeOKyPFN5X
Cpf/Nh3NIdRT4vN5TJxnDTw4EkgvEbKGV8f3HAfnw1W9k/62OIMB6UNDM5cy
HZdCqMgl9yPoRVK89y7rIk8v2m9H7/aJ7TAeAEtOSnvnRIQDKX3tJ0uI5+8l
v8/rEVNDksubqWgS8uYNF/0yH25EdTGF7qxfLOLrYRNlkv9ZTrR/Vu7cNxVO
CARhxYnmHg1kN15XoTTuNw+EBY6lV1tuFAFfj6E1TSKyc+Tlrqwj3I/MWH9K
OaxfJb7Oj7F+h3ex/oekODzG95GM8X/gcimM9+EnxgPx97kTGDsjPny7CQxf
1Dc7FNSDOcYnpYPxS5HqUDA+qQWMX4pUh8JbdiQig1xiZ8V40FqcIedBXZ+d
JT3QJBzMaVyIcEevLXgqw/b/hOsx587UdqDx69t0n8n49EKuQnQeoQ8hPh7v
44L3dcHlwrbdOXpk1SDaudD9fR/Ck+zTtrUi5FXx9Xy1lKpr9WYZJOLpn6/F
xQUxh38xu7kEDhajJYR8Ky7P1Biv/cWG+PbNemklCPvByaOQObtrGvn1re5c
hHUT8z3pR9uJ8s4rj6/t3erbCKZ9yrzxs6gfBCtb43n30joIlrK6eoyyH46N
bb3UuYD8i5SzDGLiYUVwjD1Yy7wM1TO2EescYyDjk7nL+EZuhE/g23VyhqMU
Tjy+x3Ei8AVJflIymHN/ENpvjPM8r3xmauEWfdUgvybK48tRKhLzp+Z+WxrT
+0sg/Om5u2z71+CuifnZaFDo7v1KFobkI0R8ZgQYDlGNsqWiOhpB24f8TFZp
0B2aJh4/iuwc1vMqcwbamTBe9P7p9ZvITpZ8lWkX8LoY4innqBUpUN1c6Xlt
RtctRZAGyteunwyB5BXPE5sMUb+t4gI11UCBl5D6eCL20ntUR/DHpqCTZiIP
klqmOjh2df9zv7fWf2KZL+qC7+Ifh0c2ojgAf6T97EhmN0j5lrrTsuYAj2sz
jVwRyovlfjrvXNlYCD3P7ogx70Ny6q8JOuvtisAf66stjPXZJuFpMR5zHYzX
HJ9PoLQfz7RDM9gza85dmKkkjd/gwvamRrcVblGOeTSzFqN6rqNb/lh1rtof
nBUDrVYIHyKoURS0Fv9ZLebX27RqZ9TZXm0RHUR165TOQrLFBxvh2r2iHXZt
2TB48ofX4iHkd7yBS8pr67z2EeMDVdBwWmZmShbxcqx3JfihFSCUvuTitybv
X+Rfk88ZNwPCvHO2VmvqLOaIceMZiOnJjF6LNzhDrHeYRvk155OLh0NDwPla
2PjPTKQ/L72su/huWzxoFzdu5R6uBNlJxkmPrSmk7yp9JBtlRvEHuDE+lzKM
3wX/rm+z64RiV+8j/L32heHzc3sm4PnCQj2fpTtJLq2hbRubNwATPhOFa+uF
V/bM1GX390Ezh8QiD6UR6b10xHr/HvimVlu6ZBtHkhtoNa33Xu6EcGWbn8Yv
EG+PPf/pu+s6a+F5i/RbEZZh6CHW+ZaR5ukYd1rWURnF5aKJ+OrV/zSj1UCo
48flTzimkxkZUP+aS8zyPhvjmqFRZZvmdHQPnOwtyCbwT+DjfYj4qBTIwfqa
U2J9zvF9WPBc5ytUdsE40U5APFfOWN/031gf9b/P0YENzQM6/8UALYPyfeqs
AuitjTY+/SiBdO8PjUXLTkQXwSOsj2Mi1teRhD//TRvj9A3FN67uYw84z+UJ
oE0Vlsw6AKc1AvTyQlB8u376yxkCvwXJPyLWfSTAVufFpiEalDfJL97pf2TS
DV6+q+Uj8Ebg8ltE+yEW2iQb+dfWGe0l7vMseLV3Yd11MWRXyNse3urIiXhg
fltIRxPsUgXGKVHbPZXAl3GpbH4bOl/NQyJKQ56IHyN+bCGNgEdSpbjDkrtt
AJixfnXRWP86Uv3U9RZRnQUU133tV9EftKpvQzzI4n/VLcJohBjzjTV1NA+P
0Y+eNkFx2rZOwv99SXov9Z4Z9cv/jUHKqwGTX+rP4X7cgUsX+FAdx2ti3uEN
WFs/PPyjug7m52rs3is3/fN/38QPaXZLdMHFIfLK1wuuwDH0PudPK/K/NC7Q
U/02XVMvc+FR5DFlMgnOA6KDr9bg58W66DKWs9LhvETfXEZiMVy/uGEwYi/K
C1DSNV2+LfcMhnNrNjMVo/jkih4Bh/8MlFVs9J7ylkHoz7O2lNLIH2HUUP0q
8BP5jyfJzO9WNr6AhWz5XKuDaD/Eur2gIuQdPtzrIv8oVw+hRPxzPvrejjFX
bklUX7moLLR5SrcUZL47PrhA3QzjxL4lqG63UfiBSn89eu+BiythhpEusHFg
cGS+DdVDabKFUt7+lgezis3baNvDSOfi8tnadNfZcji6r1DEtCML3oqoq1kc
RPU++HpGBJ48TLAfQu9I3UvXrQN1jCdaA+ONJtl1PAqq3suIT4CXmJdE/WS/
76LLlnOIA+abjZtscxEPjwbN++0NN7+DltLgou4swqeZXdvGv107EkbstzZ4
OHSgOtz7/lsD74cBy+zvljcMjcBd9CKGZvW++xEsn87ehnB97UoJDZ+t+4A7
/OmD3vAvpHlanKEvHemdWPVzOp4uF8f9Y3+2DcYtyDrkgo/JncDZo4gP54kC
y/36m5lwTf/1qQOD3ahuouokxzbtFJBsCZjiZ2oF8jz52N1xPdBzeuOlnvBU
xIv4iY/58ZFxqD1Uk7RUnPvPe7sL9L1N8suB8fF6sTvBCI8hs/OOdpZ/ITww
PvV8sAXxElDf1WWvv1kJy3PNvpf8Vv2bxxbWh2K/kv77h0TBfP6SZnge1HmJ
JzYN3S8ZTv7FOxrAWdi7jDsW3aeyvnf9112ogFPuBVXd4aWg9Nny1p+9KD+C
v/f8r+q4bQ+7YWwzZ+gBQYQXMjMcnJJzCIEIlf3vteyroZBOk9YpG/VLZbJO
IJfTGIOuaj/fgtJYkjzLrGNxseInHBo73pRfiva/x7E8EQO1Xvg5GdC3dp5X
pyLMilu7QFW7giVy7jtpv1XMJ4n4G3eBZ0rfo4i5TORfj5gubf/YDhZFPVf+
mBaR5Al9Zs/79Zvh/cKyl55hBMr3aXlqnnZA/L8sb5vt4sVjQL9g/0GDogL4
qMt/J8+nEdYT608z/9FXcpE+sYOMVaDQq35+c0MVnPKlJNvmuU5CL4I+gH4i
+5//ni7swks4F179CzpBPaiexUA8nyfg/g9QF2KeOs1ZB4eO971yHeyCJg0O
iQhrZFec3bYtlSV/Bfh1tw7QTVT/4+/LbFILoNUugZmXeby3T9fBmDCXS3d4
K9T0xEW7DiKetyEWcy9dw2TSOlh6HgszP14FGymenXDKRnqDRePz0bvL5VCP
nZ9H2Hki4cDpW91uqrTAxKemwX1t8QiPUbhleroB3S89t39om5YlgbfhNFOa
KrpH6Ih1o96k9XHoa165lz8G94j9bjzgW+nuRv2d6B4pJ+YTA+H5H8eFz9Z1
8N9udcl8epTPOnEvhs2TCen5/+F/EI960SNdz8HV+3kDsf/dc4jH9MhBTK/8
/X+/pKoflXWYBi4en8TNnzIhr1Nsb8ryIFSzlaksFdf+M74q6LWzlGIZ0P4k
M3mVWAjVORTUeueQ/aBxxYgxiikRMp4KL3+eQ3VhpVuG5+XC46AB0xcnMP3x
93mk+fzxVdYUmcQXYv+pQPg+fO9gxBzSw1nt5nRp7EgPZzOr2QontYKUfI/Y
snwVfK2Ll+WORXYai5pug/9wKgzQ7BHWO4fsIoq4kj9G5ghfNHRe8ZRJfjuk
73Qc2/zpO5Srh6q9WD3v+D4x5UtUL6NG+DT7WXJB3dBBEKlXS/yajnB0J3oO
3pV16AV49u3hg4VYknzD2F2ffqERMJxQPbFtPhH6MH26EdOvJP5VTL+3Yvoe
X//kxieaBaWIX6vF5URPnvgKXLz+iOtFNorD+D17umdRbxjkKzd+4lmjZ44v
nwvLf0EpYZNz7APz2xFITUiIfnyk4p/zu2JpoCu3el+8HlnZVTS5TsJ0lsE3
vxTFi1ScObn4chB+e/ZUq4FuaBMwvOQ11rJH98jj+mQpWu0WCGacu+fhMA79
kqet9c4h/24+r9P8mi6KEzb7B5cSzjWDQr17BB+qm3jHb1ZPuI9+G2+w0u5B
8YHFH4+bCPfah6NHt5V/RfZh6se9/b9fZ4GnqfjmcZFq2Di21Xz3jSXg7adb
t+cGwh0JY+fqKXbO8HXQ/Gwvs69t1Y4N/2izry0P8VosklsQ1gGf/42r+64Z
rO6XLSunA7Sv9sO5n+kXUpaRvfdmx4OtC27Iv/jyiUVRuGf1Pwq8k+M1Qv7I
Rp/NQpL02RBEO7l4eVf9qv9/1kfxC8LJhIXIW+YsITyMIJE36TNp/U8l7+8w
yU+Hao6op27ZCL/k2ubASsDttDFaJBH6WPmzB/X2VaH47X63C8cirg8Ak+xI
i+45hFuzv1FeY1bmS3r+kbrH3M88fsIWYl9XFxDdlHA8YxeyAydtCHEJV1S3
+CvGlkKcXoJ7gOcAfU00SH40/7b2Hvzq/XVQta4EeIySGdbuT9XjDvf4fyNe
snP7mhM/3i+Ad9fTTgu/Lod1FGwVvzOQffiKGD/xgCD7Yen8UmQf9sf7+/w3
lQeC2P0hg90nf+uxdwvbjiaIB4FUrZyWu0YpXMLus5PY/fb3uWgR/rYly78R
Dgu8/H7/Rh0kYefHEjtPpHzKprxLuUsovlRqP6UvSR8D9dg9x43de/j4i5hd
Apidgv/36xLKwofW2DnxF+r/XK6ehv8D61ulLw==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnQfY1ET39vPsbnY3m6yCBewVGzZERazYRayAIioqgth7VxTpImJHRVQE
FOwVxYIo9t7Froi9C5bXrt/94z5c/++6nnlydjKZTCaTmVPuc2blfsf1OLaU
JMnlzSQp6ziyniTTlMhcK0+SHkovtSTJbo0keVyps8o8U0uSDVTmNdG7Ku8K
pU1Er6Gyeys9r/KjVeZ+lRms/MnVJJmklKVJMl7Hq5RuF32sbricUk+V30D3
v4aUJcnWquOkIkn+Uv7/KkmyrtrSTvQM0b2VLhL9m+75ksrtKDrVdXsoHaF7
dlQ6VGkd3XcnlXlUaT3RDZ3vpXSyzu2k+x+m+/+ha1/X78lq52cqc6LaspLS
3spvr/Mb6769Rb+mMlurzCcq843Ob6y0ls59pOPPOj9fqaa6uysdq7JVHfdU
Okb0i2rj/nqWJVR2NdF7Kj3Lc6ldS4reTnRnlb1JaTXl3af7TFd6UPU/onSu
7rmn0mHK20Z9s57y2qht/dUP64s+Vc+yiNKpogfpPmOVBur8qkorqMzKqv8J
1fuU7vW66umv/L5K74v+Xu07RvWuqTJtdNxT9Y8Q/bGOnyt9qXLzde1pqrOj
8qeK/kDpcl1b1bm9dM8Oyj+K96c0TvlP6zkvU7pdv+9RnVfpHoyvd9WW0Up3
KX9FnX9UmV8o/2udP1jlVlL+I6LPrXmMdVF7D1D6U/lb6/7bKM3S9Yfour9b
PDYe1e+DlS4T/bmuOV+pF21TfUsr7aP8Q3WvpXRNN9EXK6+Lnusc/f5Z162m
4yrK/170ONEriO6n8ouL7ir6GPXr/kpPq87pKrOn0ijlf6tnvz51fw5Ru65Q
GqbfO6hvzs499r7X749V1+qq60Hdd3Wdmyn6X5XdTvSaKvOe6n5Ex42U9lP5
i1T/o6LPU/4opW7K+1Vlz1edW+m+udq+mtI+qvcc9dN41Xuyyv+qcv/q/D9K
s5X/ltL3yj9bxzlKx4s+U/VsqbS66Nd0fa62zFL5C1THo0qn6/ddOnen0jJK
m+n3Bzo/T/SqaktD6Q7l3ac67lTqQPv1LB8w3nSuRfc5QvWO1jXb1vwddFWZ
SYx5le8iepuav4mdRG+lvEG5++FrXbes6l5a6XnlfaTUWnkr6vfySm+oTFn3
WEz0E6I/1D3nKI1U3iDV07Xpb76L6BVFr60yZ4neSXRf5c9U+kfpMeVfrWv6
KO2sdu6oe3yoOjuJHqjyWzf87qboPfTUudOVP0m/JyqpquQG1dFefXUD9Yu+
hXlS9Cm6blPuLfok5sKG+3CinuNAtfMB3eM9pXeUrlV+Zx03UfpWdKaK91I6
UfVdqXZ1V3pH+cupDbvp/ksw9zIOdPxI+beJPlhpD/2u67qeSicwzyhtqvZ8
oDK3i75K9B2iV1TZdnqWDflO1a4NlForf7bu/ybjX/S9Kn+6yt8neu2a+2wl
xryOfzCPi75IZS9Uekj0jcq7mSR6vI5Xcz/Ry+u4v9ISjCEdeyjp9snRumdH
pcVEL628fWuml9Kxu1KF59WxJ3On6BV03EtJf8my+ref0uKij1QbH9P476h2
rKaCM/VMVzO3KO89pempfx+n1EapvZ67obJtVa4bi5vozqLPUFsOUb8doHoP
UT39lSbr9PVqyFJKW6rMbbrXfKXbdc1eunaxsr/BUfSP8s9R+Ud0z55KK8Q4
ZbyS/7rKrSJ6GPN2jGPGcA/VvZLo2aI/Ux2L1V0n166s9Jbyb9Hx5pLH1Qgd
hytdSb6u3V5pkMpfqvY/qHS68g/QM/dRmi76C7Wtj+pcTmW+Udnh1M1arLzW
Kn+i6hqpMTlC6RiV/0ltu1N5ZyitoWsH1jzOl9GYvUdpLdWxl+ruqXSN8r9U
+XWVFlH5ZXV+E6W1VeY6pY5KJ+peE3R+V6UTRN+ovG2Vzmrx+Nwrc78w564W
/fNd6vmUb/86tfMHlblSdEfVsYyOr6hMK+U9XTN9oMocxDPq3I+6bqTSfrrH
0VXXxTzST+c31zVr8LwNryMbih6t84dXPH74zfr+TeIjv89LXP5Ald9P9Olq
w0ZR5mdd+1PqOleO9827Zt2gLWeJ/krl24p+NvHzrRrPyLGd0m6iL6j6926R
T7kPRf+guhdLvV4cW/WYGqT8VVKvX9R5Vdx3B9FHqUwb0ZuL7qD7LiH6mcg/
UmlJ/b5az9I9dztpF3mMma4Vr4tc31A/XaC0t34/VXPfvszY0LGp/MWVP1HH
55TWV1uu0DUHKr3Id6YyKyh/G/2eo3MfKa2jd/u86j9d6RrRL+k4kDEieq7q
L9c9p22v685TWlPnllMbv1O6Wvld1fajVM9BrHcqf57uP0n0DbrHoUqX6L7/
6Pz3yt9cv7fVdUtqHP6nMrvo985Kf/GMOu6k9Jvo1qrnCsY6PIzuX9J9p+rc
rsx7Sv2Yc1TnuazxjAXVtzNrun7PU9my+rFd1d/BeOZspZuUd38R84/oU0W3
qP4TVK6j0k/wybr+OKWr6Adde6TSj8ofxjPpPn2Vv7PKXqD8rVl/1ba7le7l
G9HxMN1oMuu66tgRflz0+6IvULqXtaFivusK1mK14TDmNdH/qr7dVT7VucX1
fON0v3tE91Be3mL+rWvNvDD8Uj9d90LD9DWMm+A7r2C+Eb24rjlJdYwX3Uv0
J8ofy3otej+1cwu1s7V+T1L+ZkqnKn+ijp2UThK9j9rTS6mV6KUZDyp7JvwH
87nSc6K/JF/nl1FaVO26RPe7TfSGzA+iB6vM7io7QOl35R+i9r6itL/a+Shj
Xuf/FD1Y9ayi8gNog/KvU/qP9Vt1Xqj8G+HVmetEX4HsIPoE0ZeKHqz6usVa
PAW+vWEeZmXV+VuL1+BxFX+378GTqNzRuvZC5S+lPuiUec44R9ftHOvyO7r/
2/CQSn3hRZV2avG3+FTi7/F23q/SOcp/SNd+3fA62zrWW3i2+1ln9ewzRO+v
Op5oseywbvCnDyh1Qv5BdhD9svKf5Bx8ssbmaw3zhPDIPyR+12uqb6u6bz/d
Z4bKztPvS/W7fcny1kiV+Uj1navn+lF5D6hPWqmuz/iulNdUnRvruvWV/7DS
W7pmTf1eo2qeYV9du4vKtVL5U5RXUdqvZHnycZ3fVKm3nuVs/d5G6ReVLRp+
Jta4rsFnXqt6/la6nDGg+9yr/HsZ5yp3APOWrv1C7d5G6UnRk3XcSuk00Xvq
/L66bjPRe6j87kqXV8zHdmy6ndPUb/fVLCc+oOOf8Iz0M3Oqrnsy+b91i/l8
k5ATV9fv1uqzDcuer7dmPNQ8Pw+JtfcM0f/pfJ+S1+X99Ryf1/zef1Q7vmON
U/5myjtMabPE6x6yCGvKC3xTuv5a/X5Ozz6qYd7gauXtrHSM8jdWG0bBUzI/
qP726sevWB+ZI5W6if5O9XzLvI3sqTLf1vyNv67zXyv/8RbzNV/VvF4sob45
Q+k7/f6BuSX3/POf6vlZ5T8S/ZOOh5csP+6icqchy8EXqeyDufvnK107Ovdc
8beuna/y77P+q81l5Df9/kzHv2NMfy36m5Lf6Xply83Lci/lfw/P2mLeGLl2
iO71VMX89Bot5pfg5eFt3hK9T8njZF+9895V8/93p5bv54h+BT1Bw/SDqmdv
5lbmKx1nM18qVVXmTLXhXdGXVMxrLFbxer5qrN2p+u3tuvUYfXXuHR33ov26
56st/j5Zo5csewzspDLPIScpnVb294SeYRnV0Vvv7hLR+8KDKK2tc5lSXek2
1bOG2ruW0jOqeyuVb5P5u9tZ7dy2bjl4jM51Ykwq3avnfZw1qGLdATJ3d6W1
lP9Z2d/+nzp3mNJ7qudZ1T2mcJ/AK32u832QNVT/2WW/uxEqc7DGxinw67rX
p8rvD2+i+/dRey5vMd+0YfBOZyu/r/IH8Bx6pmWV9lWZh2uW+ZH3b1SZW0Uv
JXoX1fdIi3n131X/dvr9gY4flcwf34gcod9dkTf1e3vVt4NSSfT6avNDfBNK
f/K9q8wM0a1U/05qw3Gi1xddE/1Yi2VK3g/f3cPIcbll8s5qywCljUVvqOMM
pXUTjyPmrllKd6qfhuSW2f9Wfq+yv6Pu6Dd03FxpLd3rel27CDw8a1ZhWYO5
uj96tMSy+Xmq5/aQXW4J+eUz+Ja65Rfm1EVbLNN9ofqbanehtLrKXKekapO1
q5Zd7hZ9F2tIYZn+ZNE3Ky0r+qCq5X7asJKum6q0pOh1kR2UVuVb0HV3N6wL
WE15dygtLfoy9dlYpbYaO3PVz2Xdf1N4ftF/iD6e/kSOVft+aLG+aA5zB7yu
rluHsaFz85T2KJlHGcH3rrKHKx2vPjghN5/yFt+g0i3KH6vy3+t4RIvl6OtU
n4olk5Ap6pbR/9BzbV92G5C/WzUtg98m+v3c8+PPohcVvRHjXGW7KN0h+lV0
mXzDJfNR3+v5K8ofo/vfreORzG/oY6rW0XyjsjfBBCLnIFfBg6pMi65vo+PR
OrWI2nYxc6t+X4yuqew5azPVUW1x/ZPREZWsw1yJeUn0dMYta2bDZSlHefpw
E91nltr2nX6fouOhKjOAdVx1r1p2G5BtP1ZaLTF/uyNyJmur8p7NvUY8kLoP
4GWvE71I2fo9dAN35dYPHMP9m5bPR6gdw/kO0dkqf/OmZfvZ+v22nu1WXdvQ
dasoHdJiPdNiTfMtf+m6PVT/KayjuuYstecl1kTlH6j8ocofqut2blgPdja8
YWJ90RY163S3YjzruE/d43mWytyk1ORa5Q2vm//bDnlA6VeVOVX1bdO0rmFH
1d9VKWUO1e+Pa/7WxivvKqUVRN+s4y1KTyMj6drtmtZlrFrx/Pezypym/G2b
1kccJ3qLpnUWG+m6kXofX7I26d19gI5Rz3YUc1Lh9bcjMrfSZypzuY73Kd3I
eqV6bmz4e/+f6nqj7jXsaJ07Sql1i+UY3iFr6zZljxP0Od1L1r/Cz/8m+lvm
NqWy7n+20lbI4iXLZJeqzFLIjHqeocqbq3f3C+uBznXQ/efxbajM1rrmvhbL
Fe+KPlfpE9FTSpbB/ua9KO960Wsr/3P0bLnnqC9E7yJ6KdFLVjyuqGeenmsV
+DrR96hdd2du/6roWHTuMtW5TtW8G/PXRMZkar6xBQWS0qfKv171/VnyWKqV
vD6g2+ydWsbYQr+fgVetWRZ4VHkzU8sgvyvvp8xzckV5/yv52/yVPii5bTOU
/yBjnLUp1hDm7bYV6yPhIbPgJZknT6t6TDEvv6oyryhNpK+Vf0nV8l6uZxyi
dAD9qTYcL/p/urYhelTZfNTnzA1ly7DjK5b/GG/roStWOkV5ryPb5c4fk3oc
/SL6phbLOuUW6/3Wr/nbf0v3n630hNLLqnuI0jSV2U2/d1Uaqzo/Uvqy5PXx
DdFDlKaIfkv3+qThPvxDfbZ93fLsu7p/rvZ0hg/QfU5U/r/wkGrPZUo36No3
VfcbVctkZ8M/KK+f0oc6f37Z7/Ed1b1CbrmsE/NAi+XiQnVeUPaYvBpZW2mC
6B+Qx+BrRZ+FzlbH/ZnrdO2mJbftJPR2ordg7VCZ4UpzVOZx+D6lCUoPV6zr
Qc/zh+pOVaaTfv+SWr+zJmNa7fpX6bUW27PWza2vm6U2j2uYJ0dh+UaL7VzY
yNrn1k11Ru9Ut/4P+86ayn9O+QPKrg9dzcY6v0ndfCF6eHiQe5AXQnbDNoSd
aPXc+hx4RHhF+ISt1MYtU8sLP1Rst4BeN/iOaSrzbcW6P/j8HZReUOqo/GXh
+ZXG6veFeodPKU1TXUugJ1M6BrtH9AF87JOqoxoy8sk6Ll+2PeXlFstvyG7f
owvXtZWy+3Jci/m6t2NNrykdUDGPezHnRB9ftv1uHd3r1OAbeS+chwc+VHVm
SnvRzeqDXrl56QFV62rhXfpW3W/Qm6ns0MxyAXPshkr/JB53fCMHIWdWPYfN
5XtmnmtYT8O8vTGMBPfVcUrD82RZbSulnh/eizWUuX1ojKk+ifVUH4v+Q/TH
qfVfjNuvWlwWnRLj/vNoQ/84Rz7v89l4p++ozrdjjv0g5rn+ifVxzIdr8Cxh
j+D3PzruF7LSpxXrYqDXUzt/zsx37sG6hi2KR1PeDnXP2x10XLlhmbZz6jkA
/cCIuP+BiWVKeO+2jEk94+Cqx/qg1OMa+ferivU1yGg3axz9Xtg+M7vsdY8+
el/l70ktUzyisqXQsfRT3ooV2y/QpXSPOtuqXUspXaZ6pjCXpLbRHFC1zQ36
kNT2yz35ZnTtsqxvzO3MQ5l5rHuVv7zSSOWPVJ9MqFvfcrPybqpY19BKdSwa
uuIW9J26dnfeU9hMoTfS2j5R6XXGt9pVbViOHBB6U+yJD6jsfyXbvLpVzM8M
Fv1x1bI2dDv1zVmFZb7tKtZXoA9PVd/idX9H6AnQ1aMroL+Hid6F94iMomd4
Xvmrq46zlXapWK+7V+42vJD6++P7GVP2HMx6sJvuf2iMpZ0r1kcwF72u+kdj
A1PZI3TtKhXLw5eVPNcwJg9MbVfYWr8f0vmW0HFN1H2PzK23fEfnj06th2wX
OnX4pBX0TI269efwDP1jzPPtMD/3jXF+eWpecUSsfQeLvrbkeX0flf9BebWy
dbxXV7wuUv8NzMF6L1egZyn5G+P7Wkp983ru+z2JzJvaVvKcrquXrVseXPY3
i26Zb4i5ER3aErpuscL6t6kq/4/qPUP0mXqOqZl1Vm1Cb7c1c2nFenGufTm1
bpc17Dn167PRt2fG/MvcW6ie7eous5KOAzPrw69AF6U0VNc/q3Sf6j1X+Uuq
zAmZx8TckA86JbZNM37RR3UBD4DMot/rqz/GK43QNRNy4zEGIlOLnprb7vxA
2G2RH18Mfe9nou/IbbM+qWT5Avs+8sZroV9FZ3ir7nN1blvYEzXjQODh99Y9
V2javo3Os7fSHsrfUn35qcofWbbuB30m+p9jQ15G/3u76Gty25TRu/ZpGOfw
lI5fKv9d1mgdP9Tveot18fA68DnnVyxjgiX4Vf2Xi76Z+bVqPhiZEf3xLbEG
8V1w7aHBP28SstZq6FMzyy/jUsui6Jy/Vj2/lywbXhEyYqZ0XsWyKHaE31Sm
GW34n+iibMzD7JCHuC9yI/LjEYnntv9qnt+WRxZXmgpvpme8Tuke3e8f9cnf
hfXF68Pvqfy7otcW3V7pVdGbqeym6vOfVO/ihTEkfNur6vwZNfM6JxbGnaA7
21H00kprqF19dXxU+fNKxnTA8yP3ZaJno2sqW0ZEx4iceHRhezy8L23/vHD7
V9T5I7Avi56mvNOVTmTOaHg87IzsCd6ksI4i4dlZh9CHoTNuWgf9js5f37BN
5xnsieBmVCbjnTdsl0XX9VLN+q6lkWHRMcJfq/x7use2atshosfltpvenVuG
fQ0ZMeS7W0W30/F/hde+LrrPSk3L/TeF/IX9GlwS3xN676tSy//YTa5HJ9Ji
uR57FDw+PMZK6LQy87VnVMzPY/Map/tcVXhu+KJqOYtrxtUs8yDvPK3rDsms
151VthzC3D02tQ0D+mf6IuqcB05H5RussRXzydiGOuo+Iwrz2o+i60I2gwep
WsaBn39S1/XLPAe+oWf9oTBf/Vbq8sgFf1SMf2K93l3n9yiMvYIHO7hhe2Uv
vs3CutF/K7ZLIb+cHNf1UJkVc4835jfm8g9jPr8w9JNgSpZmTsqt5/xYdcyp
mOd4pWybPTzMX8o7pmJ9I3V8EPV8EL/BpbxU9pxO+5fV8x2sNEi/X0bWbJrX
fTu1/px1CjxMD7XhftEXViwTkf+7jg+0WPcyQ+evrRmncU1qOYT6kWORi7G1
LdLiOtBVXolNNLVdCV3f2nWPFWRH9JDIj9jGkSenIufq/Hp1Yxc+VP4HFctf
q/N+69Zt9atY5wyuCfsiZdELDq3YhsU7PahiuxV9eG5qvTP81edV6+fHi55f
NQ9PPdgs6I9Rqmc53WdO3XpaZL6pOpaU1laffZs7v1b3Ws46jg3zSuV9x7it
WOcOr7+O3vM3uemfql5nsXUeX7GuGPp8+ISK5YhOogeIvk7t26Fi2w9r9BOp
df3Q56IHRk+LrkH5f6XmAZA5wSTNi7F0dN22LPqmWnL/LKk2LFH1tbegA6j7
3BMl4xmZip7SvyfRVSptrbK7qP5T0KWKXi/oDbCD14wjGla3bePgxPU8rnRM
yViaYeAOde7uUqyfiXXX6CZuFX266hxTso4AWyi6A3T46Ey65W5zM7U9alGd
u1DPPTdzHnaua3Pno/vnWnQOc7GnNKz3qJSs82Ze6ql27l23jhd9+K0qMyWx
PrISZRiXLUHvmBnPdEPitpzXcHvAbqDX5dot1a4eZethttKz7JwaQ7Kcnnu4
0nl16/iHhEzdpup3gH7pjFgXoMHyzStcbg0wDqntDiekxregd9o1dKH0/6jU
9ghsvpwfFmVe1fFZpZFKa6IPVFo+MaZllNK5JWMywUIOZk2J67EHXaK2Ts5c
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
/+zMcenB1cI7Ef95YMzb7HuCjfT/AZDjoXc=
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtnHn8F9MXxucz3886Mx+hKC3SQpIikqJ9obQpLSoi0iKVLe2yZslWKUq0
oBKypuyyFWWJQvaUfd/3n9/z7pk/zmvunXPvnTszdznnOefcOqeN6zM2DILg
olwQZHU9qRgEnxWCoGlFEFQVo6XyR4u2ZoLgffHfjoLg3HIQrC8FwV/Kf6Zr
b/F3qHw+HwS/K/2nqIHyo8VvrHQT0VOq/5EeMDNRW6rztmiVntlOvPaid8T/
ROXz4s9S+z10b7vaOEfl9lK6k/h3q/65yl9acPoe0UHKvyf+0+K/rvLdlB+o
fCX1vZX4Y5T+VuVbitdG905Rfoiog571qug98YarzoUq20P8+sq/If77Ssfi
jyyZ/z+lp6vMX+Kt5PnKN1Sbi5Q/Qvwvla6t979T+e/En6yyS9VGVfHyujdA
/aulMvfq+52k91umMnepjfW6blKZ2/Ut1qr+TUr/rHtXqP6+uvdv+j9qqv5J
am+L8veI7lX6I9EV+l5XiuapbKgyX6vsb+LX1rP2V36HXqK1+A+rvRnK/yPe
raIaSh+iMm/qeVtEn6itd9WfM5TeT7RI/Kmqs7fqDhLVUvv/UV/9H6p8K+V7
KB+qrVdVfrnyd4nO1vM7id5TW6cqP1n8+eLXUXqJ6G315x3RTj1vO89TerK+
xzyVqSl+U7V9OWOAdxd/b91vozayavNs9be10pfzjdS3X0W1VXau6h9X8v9+
WuX+LvrdqohOZ/yKt6d4g0Wdlc8o31q8Hep/k4LHzxf8ez0vFG+Z8o0yLnOX
+MtFe4u3UvSg+nu1nveyymxRncpKDyh7XDAe/lTZR0RPqP9Hq43aKj9G/A/U
7mbdO0u8dqJTVbe2+FNUb4F4dcXL6f/PYn4l7vsEPa+5eNVEzVX+G907VelT
RF/z7XRvquo/r/baK3+y8ncofYz4jfWuGeXLjGXlX1f7Q/S8DkrPUpkDxN+f
76H8eJW5TfUbKT9CvKNEg0OPkdFKtxWtzHmM1tK7jBd1V51fxN9Xfb1R+ZLa
OV/5LiU//w6110TtHSn+HPF3FNz+c+IdLmqn9q9TezcU3Cf6UlX5h9TugyLW
JBamuUq3EP83vfvPotf4HrrXTfwVKn+NvtdZesYe4p2ney/pe98t/o+i3XVv
uHj3qM7dok4qf6XKb1CZSuKNVfl9GP/qw0zxpuje5+J9IbpG77JN/M/F/0J0
iPgXKL9RvNl6nza6V1nlT9P1edH14k/QO1yq5zUQ/9fA9y7i2/I/lC7o/56h
518o/qW6P1RlJqq9acrfqD6M0PuuVtnVjCHWYtWZz1xXfn/lZ4lfVPsnieqL
N1T5v9Xejcq/oHx31liVnSZao/RuotuVbqg2HiWtNm5U+coqf7Hyk5R/nG/P
WGbuij5SuqZop/r6o9r/V/WfFK0Tr73qHKby7yhfR+/+qehd5beJzhJvjcpU
qO4fov2Zf7rXk7VT5TsrPVnUTc+/SO97Hetm4LG1mf+T8xj7mHmk/AbV/0PP
r9D3maf+viReH9Ys8eaKquc8J25R+TVqY47Ss0WzWO9ZL1T/ML45/075baxX
unem0nNKHmtNVf5/6s9i9ect3e+l9m/TdYbam6K+zRP/KpW9UlQh3oH6v9ep
P5eo/HSVOV9lvmYtFW3i3Ss8nm9kjCp/beDx+p7o5ZzH1GTxe4qO1vc9SvSh
eI+JRoi3Ned14mbeJ/B6sUb5tqzJevYZObeV0fN6ZtzmRerPKezX7Dnq70F6
n0aiy+CrjXuUvlj9naM6y5U/nf/FHsHYU5sH6v4BokdUfi11xAuKHks1+F7p
fnQIewvfQO39oHxjpT8L/e0T9twK/4Ph4p+u572v+2cEnrufqL2/Q8/hPRlb
on+Un6I2yuL/xH6ccRvbVX+Y6h+i+pV0r6t4x/FPlX5X/N1U/lnx9lF6qOgI
lT2N/6d73+l548Q/W/SqyrfkVVR3tKiZnjdR5Sup7AWik3XvZZWZqHrdRXsq
fUP6fXYT7zTlO6frZ0fRR8pPV/0XVXZ3lTld6Rri76v0OOay+DMq/P3Xqcyl
yCP6vwPFH1CybHNK1uPlWvGvZC6qTKT8vqKblD5Z9Es6/o5Vuprae0tj/23R
GLX1uu4NU1uTRRvV1q0Zy0fIQ8xl/vkBerdRZa+RjDfmaq2S+8ac/V7966j2
Nqh+Q/EfFD9f8twYn/F6NlH0kvi3KP+sxtfNau885rHed3PB7zME2Sv0vEF+
uCfn+TNI6abMOfGGZf1ftor6B/4/tZkvyFt63lrRs8r/LKqq9EbVKeh5E8v+
ZwPV3ovKz1d+quqUVGaw+n5d2fs8e+Q6vc/1yq9lDgYeT4zHxwOvz6/p/mbk
y9AyXbOix8cK9a1LxvsE8tSKwPvFnmr/6MSy5XTxH9LzZ6r9h/S8JiqzJP1/
zPUFau8B8a8Svypyo/I91PYYZAjVn8T+yb8SLdX3OUb5ASp3oOh1ZDfRn+J9
LPpc/Bb6xy8rvVXP+Dh0nRbqyxlqf5vufa57O9gPROcGnlPvKj2Pfx1ahrlW
3+Malb9Z98arTCddd9O9c9T2T8r/L5WHD1RfRoae76+XLLu9I/5DSj/IHi1+
feRDlf+NMS/eh6HX0ovE3571mlqn7P7trvvjVKdKweWbK/2Byt+tZx+nd3hf
5e9UGz+r7h8Fy0bI7MjSF5asGyBTI2+8gvygtjsp/xP7GXtO1mvQVextetbj
avsJ5qeefVPZ35nv+6P49cRfhmwnukD339S9+ar/rOgTpc/SvYVZ6yifFT22
7896j2qeuL3LWE/1/Cm6Nih47zxLdLHKx0Xv9aPYc8R7W/SzeA+zHym9QKQm
gwWBZQvktbOyljH6lKwv3KSyPbPeL7cjj6kvx+v5vxf8zfnWnXVvMf9d93qp
7HzdW8f6J7pabR2mfFbpX8Q/VHV7K99b+V4lr/09VGcT8rrep6vKfKp7x5b8
r27NWka8S/xB4p/AvBR/qMo1E80Vr6xnzNb3OFH8h1Wvv/IX8n5FyyIvMZ/Q
PcSvyxhCpkjXT/aWl0UXK/8P8qnSn2X9rl+JH1T4nW9J5bWVzEO1d6DaOkv0
YsnrG/9nLPpF1uvPXkrndO8E9iLkIfV/qdpcytqtMd5X/K+Uryt+XfHv519E
5o3Me27Sn7YZz9FjY8vvO3WvasayUAU6R4VlItZyvmf3rNd05O9pKjMo4386
Re8/UvVj1vkK96+/6CTxxrFfqf2uKrNF+ZGq843q7iO6IWMZJav026Id6usY
5f/S89YWLCu1SeUtZGZk5V/S/a2yyk/LeA1Dv3y9YF1qfIXlo8GiUVnr5N/o
+aPLllFZz3k2+ihl6cOr+jbt1L9nVP5L9pDE379myfvd1+K317114h/AmiDe
CP632liKvJ84/4PyETKh8v+pP6Hq9cl7fH7IP1DZtuJPL3n9WJfxePtW5WLV
+bXCa9IfrN9F6yrN8/73yI8dsh4DyJN8nycD3zs//d/9lH406/+/qWCsgnv/
U/5f/l9gmbSVnjVc/f1Cz/hP33wf5Y8RvZK1ztswnU/0FRmUf8N441/yjzqp
7LGiV1V+mMrXK7u9vdFLlS+WvKeyl/ZSne+K3rs2Zy1TTBCvG2sQshoyh/7P
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
3Xptii+BP3F2BjrS/wFfNTyB
         "]], Polygon3DBox[CompressedData["
1:eJwt1gmwj1UYBvDP+udy495s175c+3Zx7W66CTcj+5YwlsaErNkaZb9hWjCE
aCPrJBrbZIqQmGqso4koJCOTLMOUstTvzGfmPvM/7/M9z/u+3znfOedWGTq2
x5i8URRNhQKwrEgULYeNhaJoA5TBNU6KopegWyKKvsXlx9VPjqKjuKvGkwtH
0RRYLV7Ku1rCtXRL6feI69FO8rwsbnGeKLpRNIrWwBUFL+PL8/WGTLqT4hPw
tLydadJwbfhK4cbli6JbuAFyjsBV4tlaMIpa+p0E/dTbhE/l/YduFu5lXA2/
h+j2+V0O83B74QBdEfnfkm+xnlfyzsA/xVsKX0F8Hm55Vkbch/cH/bfGtQj1
cW1xleT5RnwI/pCrLn6gfgfBND0XE/fGV5ZnMM18Nd4QV8VfFv8GT8hbK9TE
Hzcv58K8QGXcDtxp3hN0xyEhLhfWiadiiKGgngvARb0cl78B71lxef4Fnqfo
81VzcIjvPuzRVxX8DUimOYIrjbstnsv/He84nj7G+fz24k2hu2D8mLoX8Jvh
E77NcDC8g/hJ9Y/QNKJ9Tw+r4Er4hsQ78RnGQ+l24NfzDcA9D+tCT97xYeiD
tpl8zeGEWo08HwVd+XJx2owqhjl+tK5hfXfjJ/Jm4FfI/S70ly9LnCfMP28V
qAzt6NpDPs978/WEH+X4FVLV6yD+Kej5itP9rEa6fGfw1XClcddDXdzvuKZ8
Y6EnT3nwF40zf0tgv7Xcg9hF+xXNXvhC3CSsEV0r8WR4TpwGj+O6POq5l7gi
VILq4lR1H6hbXa4i4f3kLw3tjMfoo4Jal+SaQNfHu7XHX+I9SdMZ15fmM/GL
cnTEtYdp4RvDH7Wp66ixnT/LuDO+EwznW4tbxjeWLjvsk+R4X96huw25dE1o
RkN3ujKJ+CzJFI+BHuKyoGzUUM0MGMJTDlaa77M0f+I+IHiW7hx0wE2H4caN
oT7vM2r2D3MFhYzHB63+/g1njo8iRX+FQ9+e9aPpC4WNJ9ANM04ynmicA73l
64oriBstzg41cdtwO2CX8U7cdugkLkA3wrgNZHn2Me60nsfruZjxO/hG+uiG
m6eHX/RyxrstCd9mQNgDuFl0d8I6wtd6TsdVpZ8nng8LzO86miX4PXwtcTfl
2UKzG/85Lr9ehhk3S8R5W+OmQH9xOSiBW6SPknTF5NnNO9aCtKGZGvYbTQUo
SZcdzgUYLK4bvnlcjrgFb3W/6Y/27F/ypeulkXyHQx/e+65nF3Ep8mfic/S5
j64Z7z1cDu5anvjMeAUG8p1PxOfHHL7ZkCl3C9zbtPvFj/En+6Za8V/EdeFL
yDcmnMvQkf4+zQOo59kxXHfcAd57sMmcluC7Av/RPIRanmeE/ZYUnwEbwj2B
W//oPCgr/5CwnvrK5msLX8rVELKMX9fLdevSkq4V7ph3r01fE9aGGNLUPRDm
hf7TcO+E/cYzWbwRv038WlK858Pe/75QrMkr54DwfSdifao4iy6NbgtuKyyk
yw13nPEavlV0TemOh3NHL8l+/9bjqTDPtHNpZsNdOfqJ+4c7mGc47gWowVsG
t0XPNflKwGVxA/wc41Y0p8zFQvlSwh1sPbLwM8P5RHOK9k35loW7KxHvtRlJ
8X7smRzvu3Cuz0yK916v5PiMnx7OXONBiXg9wrq0lr8obrZ4ghqb1SoXvlt8
qnFr3NBwF+AO41Z437TwTcD7MELODnoZT7Mk3Cs0B3FXw7fHW4G+OG9zWo+i
D2k+gpG4OoiRaozKH9/XR8P3h88NezT872N+aoe7CF8cV4+mWsgZ1ijc53xt
xYto03FVcHfUq4W7iRsqLoG/xjs63I/6/B8cERa3
         
         "]]}]}, {}, {}, {}, {}}, {{}, {}, {}, {Line3DBox[CompressedData["
1:eJwVzb8rxHEcx/H3WfwobAyIQ8rm/gAWJ+t1pWRRpEjccKPFIO4YTH6UEyVk
RzFicMxGJT+iTFLKxOOGZ8/P6/V+v7/f5EQuO5+IiEk0VUeUayIyXKyPaOYT
eZQLcm/F8jincOrdXxux6L1svuf9jg/so4xbPNi743vMYsvukptv/RWuMSDf
cNbsjM+R0w1iRHch99RF5OUVeZgvdWv8w598wCWzkn/sYBd9GEMK0+Yv/Ip1
+8/c4pttOHbXym+6J/wibb9B14gN+4d28ro/hPkRV3ECQ97tPIWOCvICz7l5
5G33XbovTstFFLCKJGawabeTu+39A7fONsc=
       "]], Line3DBox[CompressedData["
1:eJwVzb0vg3EUhuFj8pEgMREhYaHCwmYriaVd2LoavNKhTaQhaayVoIKQdpP4
B7Dp6CM+FgwWSQdzWQy6uwx37uec5/zed2y1uFLoiIgcBjsjljHfGzHEOaTl
KX7oinjEkvmJn7GPgZ6IKl91R1zwJSpuKt78yjt8xv36PtyZG+ZDN23eNV/z
Hn/pW8iYS/oJ307hRTfDr5yxn5bf5MRd2n1VPpcP+JuHkXW3pdvEu/3N/79x
i7z+hE9xpFvgY65x2btFLriZ43vM4kM/wqMo6mrmbbcluS5/2m/ITXlNXkeC
cbvE3Q9Pmv8ADrAxXA==
       "]], 
      Line3DBox[{1818, 1874, 3387, 1819, 1882, 3394, 1835, 1888, 3399, 1842, 
       1894, 3400, 1849, 1987, 2172, 1988, 2561, 3492, 2567, 2585, 1992, 2586,
        1993, 2444, 2124, 3445, 2192, 2367, 2487, 2488, 2368, 2449, 2448, 
       2450, 2125, 3473, 2350, 2000, 2327, 2054, 2073, 2284, 2468, 2285, 2193,
        2466, 2467, 2465, 2194, 3405, 2153, 2591, 2590, 2127, 2224, 2225, 
       1938, 2007, 3451, 1939, 2161, 2160, 2009, 2403, 2062, 2425, 2286, 2428,
        3481, 2287, 2081}], 
      Line3DBox[{1820, 1875, 3388, 1821, 1883, 3395, 1836, 2250, 3466, 2251, 
       1843, 1979, 3423, 1980, 1982, 1927, 3417, 1989, 2143, 2142, 2493, 2583,
        2584, 2047, 2562, 2048, 1994, 2512, 2050, 2510, 2049, 2523, 2511, 
       2072, 3433, 2324, 2343, 2052, 2263, 2053, 2325, 2390, 2389, 2147, 2363,
        2146, 3447, 2473, 2474, 2128, 2534, 2129, 2453, 2351, 2395, 2328, 
       2358, 2056, 2155, 3448, 2055, 2078, 2058, 2177, 2059, 2424, 2402, 2500,
        3435, 2501, 2330, 2401, 2331, 2079}], 
      Line3DBox[{1822, 1876, 3389, 1824, 1958, 3420, 1960, 2166, 2253, 2254, 
       2252, 3467, 1971, 1973, 2485, 3486, 2486, 1981, 2045, 2564, 2566, 2565,
        2067, 2415, 2416, 2100, 2321, 3439, 2320, 1990, 2356, 2386, 2357, 
       2207, 2542, 2541, 2540, 2281, 3469, 2472, 2282, 2017, 2051, 2296, 2558,
        2557, 2519, 2517, 2550, 2518, 2126, 2149, 2582, 3494, 2148, 2150, 
       2057, 2173, 2400, 2399, 2004, 2329, 2398, 2397, 3434, 2396, 2077, 2271,
        2076}], 
      Line3DBox[{1826, 1946, 1947, 2544, 2563, 1878, 3490, 1827, 2545, 2092, 
       2094, 2093, 2430, 1962, 2298, 3415, 2020, 2198, 2266, 2346, 2267, 1838,
        2547, 2040, 2546, 2041, 1974, 3416, 2484, 1890, 1845, 2596, 2597, 
       3496, 1984, 2548, 2572, 1896, 1851, 2549, 2101, 2103, 2102, 3472, 2347,
        2494, 2387, 2447, 2023, 2208, 1900, 1856, 3440, 2104, 2107, 2105, 
       1996, 2388, 2026, 2420, 2268, 2438, 2109, 2437, 3482, 2108, 2326, 
       2110}], Line3DBox[{1828, 2258, 2255, 2257, 2256, 3391, 1829, 1966, 
       1967, 3397, 1969, 2138, 2364, 2559, 2560, 2200, 3468, 2277, 2276, 2066,
        2042, 1976, 2382, 2046, 2414, 2278, 2419, 3480, 2279, 2068}], 
      Line3DBox[{1830, 1951, 1952, 3392, 1954, 2568, 2569, 1968, 2135, 3422, 
       2570, 2134, 2571, 2136, 2314, 2445, 2043, 2433, 2044, 2413, 2381, 2492,
        3432, 2315, 2341}], 
      Line3DBox[{1831, 1915, 1953, 2132, 3418, 2131, 2133, 2431, 2432, 2095, 
       2311, 2310, 1970, 2312, 2377, 3476, 2313, 2065}], 
      Line3DBox[CompressedData["
1:eJwNzb8rxHEcx/G3Ily+ZTBaZHGDH5uSRVJ3p0MUG3VuUX6kRG4gP2KQiUVG
3SAs7Gz+ATEdMSuTnDB4DM+e79fr/f58v22FpfHFmoiYwUl9xHVDxA328NcY
sc8XfIkrtLj5woO+ynW6Mh/JW0nEMU/JHbg1v9vf8SE27af1PehKRZzL3VyU
ezEqz3E/xswLPIAJ8zJneYgneYUzeMQTCrqqfyW+tyrn8C03+e8gElTkVsy7
veciSvhwW7Zf42HsmDfc7PI22n1zXZ9HBbN2z/zjbbNdyTyCM/2vLuNNDll0
yi92tfzJaX7VH/Cp+zdzn/kfbSo0HA==
       "]], 
      Line3DBox[{1948, 2521, 2522, 2037, 2481, 2482, 2483, 2295, 2297, 2018, 
       2412, 3475, 2019, 2373, 2165, 2087, 2130, 1917, 2015, 1885, 3428, 1839,
        1965, 2201, 3421, 1891, 1846, 2098, 1921, 3438, 2139, 2021, 2140, 
       2022, 2301, 2171, 2458, 2099, 2141, 3446, 1928, 2144, 2024, 2145, 2025,
        2436, 2434, 2106, 2435, 2322, 2495, 3487, 2323, 2071}], 
      Line3DBox[{1955, 2089, 2091, 2090, 1956, 2374, 2376, 2375, 2064, 3429, 
       2265, 2340}], 
      Line3DBox[{2088, 2086, 1949, 2235, 1950, 3390, 2216, 2215, 1963, 2016, 
       1964, 3396, 2199, 2240, 2241, 1918, 2202, 1919, 3458, 2204, 2203, 1975,
        2316, 2317, 2290, 2366, 3474, 1922, 2418, 1923, 2417, 2069, 2603, 
       2602, 1985, 2383, 2385, 2384, 2070, 3430, 2280, 2342}], 
      Line3DBox[CompressedData["
1:eJwVzj0oxHEcx/GvDB5KMtjPSRnsbrEYTiclMt5CWS5OnRTlUBgY7hYyUWTy
ON9htstwGQysp3Ps8rrh3fvzffr9/wMLK7P5tojI4qkzYh/THRG7PRH9/Kje
5Cu+RhM3eMVoV8Qxp/iDG/zJt9hzf8B93RGHnOB78ztUvHdqXuVFpFCys6NX
5px6DDPqPI9jTi7wJKf5BRd213heL9PaU5d4iTf06vKy/MV/rfdx5vvbfIkj
/aK9LXldnkJafuOC/rPdhpz07988zDXzmv65ea9ckat4xwOG9Nq5iB83J/zL
OZ4wW3U3KI/gHwYwNcs=
       "]], 
      Line3DBox[{2361, 2270, 2439, 2269, 2421, 2074, 2392, 2393, 2391, 2001, 
       2112, 2113, 2111, 3441, 1860, 1904, 2579, 2581, 2580, 1995, 2515, 2516,
        2262, 3488, 2514, 2513, 1855, 1899, 2509, 2508, 1991, 2097, 3424, 
       2593, 2096, 1850, 1895, 2205, 2300, 2299, 1983, 3470, 2456, 2457, 2170,
        2470, 2471, 2469, 1844, 1889, 2529, 2446, 2137, 2379, 2380, 2378, 
       3477, 1972, 2168, 2169, 2167, 1837, 1884, 3419, 1961, 1959, 1825, 1877,
        3406, 1823}]}, {Line3DBox[CompressedData["
1:eJwV0Dsvg2EYBuCno1N0xqD/oI4V56S1kBiMHbUstKUkDqvJKOIwW9AanEn8
AwYSm5UfgP4Bl+HKfT/P+73fl3yp+cpcORERedLNEd9stEb8yBu5yRYdXLPd
EnHPRVPEonmBAkWO7XfaIpbc7eHSfMWu3bK5l2G9JPsY0cuyn1G9IgcY0xPM
Mmg+5YwH33jkxH7F/Ky/8Ku3+05D7pk/9C7ZSYZ9z386q9qvynd5yBHjzg7k
HVVnt7LbboI1c4akPklNf/W+N9b1c/L2WXemyFG3m3b+JWfkk93Q/3/yXIqk
+Q81xy/R
       "]], Line3DBox[CompressedData["
1:eJwVy7kyw2EUQPFLJZYCdczkLayFLSShSaNgFEZNYaydgohak+QFiGUoeQLa
CA1FFJIXSKXy+xdnzrnfvV9ma7e40xMRRYz3R9wMRNRR0md8jotkxulQxJ33
L93l12THb3zbF1HjKiq4Tnbu9+0nMKsPeBJz+pCnMK+PeBob+p73/O3V63gw
58xlzvMvL/Ga3Sia+mQwIo2sXsalmx9s2x9zC8N6AeXk3jyDEfMinvSz/y94
1JveVtw1zO9oYtX8gZRuuynoDn/ymLcrf771H/4Bb88u6w==
       "]], 
      Line3DBox[CompressedData["
1:eJwVz70uw2EUB+AjJBJlwCqpNrEYbQw+FrYOpi7SpJP4vIDWRxqTf2uQ2OoO
lEQ1Ee5AXAHarnoBds87PDnnd973/D8K1dPdk7GIKLM+FXGeixifibhI9F/T
ET9kzr7VBfMr2s468iMP1OWBOqRPTb6kMhmxYTdvZ5uOWU3eZEeuq1tc65+d
nem7apay/oWSfE/ec+/Ml+ma99M7+eDIWdPsUD3glrJ7K/TMn3hlQt6jaadF
Tt/gRv+bvkMdqW/8kcnFdJ+WPC+vevYxa3wya1ZQiyzy7t4w/ad+394Sc/I/
MkUxRg==
       "]], Line3DBox[CompressedData["
1:eJwVzj0vQ3EYhvHHJtTgdW/QGI0VG9V2lCYmCYnFdkpjdCRdukjQ1tCFGL0k
uhGJl8TKh/ApkEjwO8OV67mf//3knPxWvZYMRMQalocifnMRf7gaiViSgx95
YTjiic/kbe99NO0SruPI2ygfc0tnw3zhvST3+UM+HIy4NadYsa/qHXAZm+Zn
fkEF5/KOmy5O5F1uc4Pf3a9n39SZx558Ld9k/41v3Ol+8T1f6hRRNXfwgC4S
u1W3syhgWn8fM5iQx3gROb0O3uxO3Y3bTZo/zXPZvZyigCm5p/vKP/gHDXQu
bg==
       "]], Line3DBox[CompressedData["
1:eJwVzS1PgmEUBuBjcGwiGs1MN6fOamIz+8EY+IE2ZyBKIzs/ukUR2eRnUB1k
aEpVfgMgEJSLcO2+n3PO3jd9XS7cLERElsOliMVURI4D/S4Zcc+t95H3g/4s
95YjqmYpOma/Zt+ySYMuK3aPvOsv9se0ExEtmeXSrio/eKXgbottynY/cmx+
4V/nFMmZ1cxG+oZ+5W6gD+nQ5c3+U/b44sTdk7s1/vQd+vwzcXsq6zIvK25W
OdM32Z2nb0zt92XbOyNLbtbn3/SeAWyxLGY=
       "]], Line3DBox[CompressedData["
1:eJwVzL0ug2EYxvG72mii7NbuYiHp4OMQ8FbZ6wCw6OhrlIhFLR2UdmN0Ak0r
ZZIeAy/OgarfO/zzv6/rvp+nvHdQ3c9FxGbGTMT0XMQWNsxFTrJsvitF3KMq
P/IDEn2H39DFlV1PV5iNWJWPsJK90Y10XfsKhuZXvGDbLuVJMeKTf+RrPsYJ
3r1f47G+xb9c5xpf+mtg/yQ/c183wYX8x237ZeyY13Xhpsk5PuWBfsHcwKG7
eezqvuymdN+c5xs+wzlu3SzhQ7/IaWb8Ax5ALlk=
       "]], 
      Line3DBox[{2650, 3401, 2687, 2648, 3402, 2688, 2652, 2982, 2983, 3463, 
       2689, 3321, 3324, 3325, 3403, 2760, 3212, 3213, 2690, 3231, 3232, 3233,
        3024, 3473, 3078, 3077, 2761, 3031, 3032, 3000, 3088, 2691, 3087, 
       3355, 3447, 3170, 2903, 2880, 3187, 2692, 3298, 3494, 2904, 2906, 2905,
        2762, 3149, 3151, 3150, 2865, 3152, 2269, 3372, 3005, 2841}], 
      Line3DBox[{2659, 3338, 3414, 2658, 2763, 2764, 3425, 2693, 2959, 2960, 
       2962, 2961, 2765, 3377, 3484, 2794, 3165, 3085, 3297, 3315, 3314, 3025,
        3268, 3269, 3214, 2821, 3215, 2822, 3223, 3404, 3373, 2766, 3136, 
       3137, 2795, 3001, 3006, 3168, 3007, 2963, 3253, 3254, 2907, 3313, 2908,
        3405, 3312, 2879, 2909, 2694, 2910, 3448, 2823, 2843, 2824, 3050, 
       3116, 3115, 2796, 3153, 3008, 3138, 3350, 3114, 3434, 3371, 3051, 
       2842}], Line3DBox[{2660, 2767, 2769, 3263, 3426, 3381, 2768, 2913, 
       2716, 2914, 3348, 3449, 2912, 2797, 3083, 3033, 3117, 3082, 2911, 3240,
        3238, 3239, 3237, 3495, 3311, 3234, 3236, 3235, 2881, 2882, 3093, 
       3094, 3162, 3095, 3450, 2917, 3161, 3270, 2915, 3092, 2916, 2770, 2920,
        3451, 2717, 2921, 2798, 2919, 2799, 3139, 3118, 3119, 3120, 3367, 
       3203, 3435, 3052, 2844}], 
      Line3DBox[{2663, 2778, 3309, 2779, 3427, 2662, 3189, 3323, 3190, 2777, 
       3216, 3349, 3489, 3002, 2828, 3059, 2664, 2829, 2851, 2830, 3145, 3123,
        3124, 3478, 3060, 3069}], 
      Line3DBox[{2666, 2927, 2929, 2928, 2782, 3155, 3157, 3156, 2872, 3483, 
       3009, 3086}], 
      Line3DBox[{2773, 3299, 3300, 3188, 3307, 2718, 3308, 2719, 3225, 3224, 
       2845, 3368, 3436, 3204, 3053, 3072, 3054, 3055, 2922, 2720, 2964, 2721,
        3453, 2936, 3262, 3261, 2722, 3288, 2723, 3493, 3289, 2923, 3074, 
       3073, 3075, 3056, 3057, 2924, 3452, 2724, 2918, 2725, 2925, 2866, 2867,
        3121, 3205, 3122, 2848, 3481, 3014, 3068}], 
      Line3DBox[{2776, 2846, 3310, 2771, 3209, 2772, 2937, 3454, 2661, 2774, 
       2786, 2775, 3442, 3206, 2868, 2869, 3058, 2825, 3026, 3096, 3142, 3097,
        2847, 3437, 3141, 3143, 3140, 2850, 2826, 3207, 3208, 2827, 3226, 
       3015, 3144, 3431, 3364, 2849}], 
      Line3DBox[{2783, 2726, 2780, 2871, 3264, 3382, 3491, 3265, 2665, 3061, 
       3062, 2926, 3064, 3125, 3063, 2781, 3065, 3154, 3443, 3369, 2870}], 
      Line3DBox[{3084, 3004, 2863, 3375, 3482, 3353, 3148, 3049, 2759, 3112, 
       3113, 2902, 2820, 2657, 3354, 3441, 2864, 2758, 3305, 3306, 3211, 2517,
        2656, 3259, 3260, 2935, 3080, 3164, 3079, 2757, 3047, 3048, 2840, 
       3366, 3433, 3046, 2655, 3229, 3230, 3228, 2878, 2877, 3357, 3445, 3167,
        3249, 3248, 2654, 3266, 3267, 3177, 3176, 2874, 3385, 3444, 3322, 
       2653, 3358, 3413, 2981, 2651, 3412, 3337, 2647, 3411, 3336, 2649}]}}},
   VertexNormals->CompressedData["
1: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
h9DZn3T9/f8Bccts5Q==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  PlotRange->{{-2, 2}, {-2, 2}, {-2, 2}},
  PlotRangePadding->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547574559898089*^9, 3.54757458945993*^9}, 
   3.54772937103784*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNXQucTdX+P805c2bGeJQkUehxXZdEl79KMR69bve6qtvVpQfyTiJGDwl5
TCGpRCllKiYqUeRRmAeDIo8xpuSRyitRotINrf9ej/3ba+/zXfucPTP+/c/n
w5zz22v9ft/fb71/v7XWbt8ts0/P/t0y+3bvVveGQd0G9unbfXDd6wcMskjh
M0KhMwpCoaT0uiH+nYVC9n/is5L/p378Ud8vFd/Dp6zPp9dee+2ppKSkUNLJ
cDgcCp+IRCJbVq9eLVJM0vI0Et+jJevXr8/v168fz8spx63P4UOHDj2jJb1M
sl+ZnZ29evbs2eLXczHPI79bn8JZs2blT548+aT1eVZL0kSyKJg+fXregAED
+OPQM7HPufQvGjVqtL24uNj1XKH9oqioqDAnJ4epz6aMjIzNBQUFIClHuqNB
gwac5X+tT3Hz5s2/3LZtG0jKH+cOGzaM2yEvMzMzd8SIERyhnvR0FFszqTSj
umT9ekp7fjn/Tzy2EvXq1ctO6ErUmP+XxEQayc6U8lJil6yllAlCrpQNiGeq
oEYopUo9QUtcnxJXAImt73riPxGGSjjxeC3xxcQ5CVgqPT6DuiQtYmSQ7GKg
mITGaVxqE4xzPHbjv5IALUvLfT7lPrcUuc8jDc4DKcOANlbLfS7JPh+kjADa
GJl7n/gT/fHIkSN5Tz/99P5atWqtufXWW1fNnDmTdxROkaOCQUh9ZB2Qjza2
bt16Y25urvhVj9S2q6ouoAZg5q3S/NfoGAGb8vLyxK9LSIOLy87sQkL7J5Ax
CmijzMzqELL6IGMKoD1uZnYBIftL2ZnVJGao1P8MmKUC2kiXgE2tWrUiATVI
9SgQUC+YAFmFI0d//PHH3KFDh+6sX78+HymcJnE5yJsGaCMkv99J+6YgUQVA
Gy4zniSJVyQoUWWcLP6krJ0/f35+//79N65YsWL7li1bDtSsWXN1x44dD+zb
ty/UhaeJcOZXJojqMcn8efEnmTPho+K6xYsXb2/YsCE3V+huQoy6zf8JJmiK
fFQwbdo0jrxo1apVobtIQCuQMR3QhumoI7wPKujevTufKvx07NixzlQ2rUHe
ioD2qMsK6xYtWvTVxRdfzGsinwCI6cntBLJdMKaq3NbMnTv3u+rVq3Ogv1qf
ohYtWuT37dtXlNttxPw6wKgSoA2VzL8jVWXvTyP9tSBPZUB7RGb6lgCgHrZt
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
raZ1pQQ6VN+cmIScgKUnWhxO405FlUzHj9o6KoUzzTUNtXURtogQ9EiQPiqm
NahZBMU62A/zsk1Z1D+kFioHpZb8YzyVbK/H4mntbBy3Y+l6nFvWwjRBS6jw
bE+A/VC6/mQ3yevkAmtVVrTic3Zizjg/c4RCPnemQnOoVUrc49Ko0jp72/W6
YsfUJfwUPxvoukdcDwVZLlQ46cNPeLMsYYfnz3Krn+ytDYKX+frVeDbwPfOL
bOBsv68jv3HVU3RDYKU9qyL3M+/QLQ2pLYTZuvy97Od3prL9C95z8kVMExN0
YrAcdFft3SKJAKLYQqNewcCtEPFqp5U2Hvy/eX6QE4ayLFSyrMibRrYRDzh0
QOc06ezE1OqJ36l6u3f9jVU6DSpt/y0YO0CpTU5w4xQJVXDz+5nKpLATldMP
8rgbeViv5wnU76jr2W+vZtp1247Fv11EVT0mSylNUaXspqhMplBbG+z6blV1
T0O3yXDUc88jbBO6g51yBHxvA7PWoifElOTY3GlBR3d02NhtB3D5gNsO6ERQ
OtmhMdlBodL6vARN4O31lBnkr4gaA7gNtlqdwYEF77KTc560M4aBOZEd0I4d
ZQfZQvC1CAmYQmyeEl2guvzM3QW6fXSJdfZuU1AMULNHMtu+dA07Mm+GlfYh
3DEqY6DVkY8x0EZGpLUTXm2ufns6P2WHxPsBz/Mo+VPtlrBkHWO/vPO8u+Rj
5oJIX3Q/gEvfGJ9rjiJrOUjhq7Qs2i49+81DvuUZd5CPUkHbsb0NuV+KSY+p
gFFtRyFSXWEhajZV3Gvkt9Ip4e7Jtfabovt9OG3hp2RfQ+EhXVDI2aeyziSt
WssSc8/GQE1L2FkyS9+oZgcKN+buEn0SyxkeRCt0b4ePVq9R7UPXWquL1mks
ippUlVqlGScggjZrsLKA3QBTVZfDU8zZIlfInxQcYN/Pex3WyCRTO0RFKZ0r
IbQdeQYpjUJk8rRuMpp8JVSiuknUOwlthVPom8Vj9aojoubuXrRcaYtXHEhh
VMo+Ck8nhdErbW2F9X7HrbCxMzW11PwJ97n72hRt3X38iz3smw+W8GIOqjc6
z+ujt9hoqEIq5a+3Nz6y5omB3r7WMYAl50BuodWaR7Djbz+HR1aFCy050O5q
H8Wdk5boNaryiEDUO9DYvwOWOT1+Ywhp62zUkNNuGYTIW/Mb++yjjYytmGOa
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
NpDUtIVMT3o6ii10xv8Cq0b22Q==\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.547572635296042*^9, 3.5475726357007933`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refPt3D", "=", 
       RowBox[{"{", 
        RowBox[{"rx", ",", "ry", ",", "rz"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rx", ">", "0"}], "&&", 
        RowBox[{"ry", " ", ">", " ", "0"}], " ", "&&", " ", 
        RowBox[{"rz", " ", ">", " ", "0"}]}], ",", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"normalized3D", "[", 
             RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"normalized3D", "[", 
             RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"normalized3D", "[", 
             RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "3"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "8"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "8"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "8"}], "}"}]}], "}"}]}]}], "]"}], ",", 
       "\"\<Not valid reference spectrum\>\""}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"rx", ",", "0.01", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ry", ",", "0.01", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rz", ",", "0.01", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547572277687077*^9, 3.547572341854218*^9}, {
  3.547572503443899*^9, 3.5475725284984837`*^9}, {3.547572628547284*^9, 
  3.547572764189596*^9}, {3.547572841000574*^9, 3.547572842920978*^9}, {
  3.547572909827879*^9, 3.547572910526245*^9}, {3.5477294024816093`*^9, 
  3.5477294086203938`*^9}, {3.54772947802747*^9, 3.547729488353032*^9}, {
  3.547729521931456*^9, 3.5477295383733273`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{714, 719},
WindowMargins->{{0, Automatic}, {Automatic, 27}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"7.0 for Linux x86 (64-bit) (February 25, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 108, 1, 172, "Title"],
Cell[678, 25, 191, 2, 105, "Subtitle"],
Cell[872, 29, 99, 1, 38, "Subsubtitle"],
Cell[974, 32, 108, 1, 38, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1107, 37, 99, 1, 89, "Section"],
Cell[1209, 40, 719, 11, 220, "Text"],
Cell[1931, 53, 551, 9, 194, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2519, 67, 101, 1, 89, "Section"],
Cell[2623, 70, 295, 6, 91, "Text"],
Cell[2921, 78, 1028, 22, 168, "Text"],
Cell[3952, 102, 104, 1, 39, "Text"],
Cell[4059, 105, 510, 8, 142, "Text"],
Cell[CellGroupData[{
Cell[4594, 117, 667, 15, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[5264, 134, 823, 18, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[6090, 154, 1315, 32, 502, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7408, 188, 2863, 58, 1075, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10274, 248, 1705, 29, 502, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[11982, 279, 5845, 122, 419, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]],
Cell[17839, 404, 503, 8, 117, "Text"],
Cell[18345, 414, 1007, 28, 121, "Input"],
Cell[CellGroupData[{
Cell[19377, 446, 1305, 37, 175, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[20685, 485, 281, 8, 39, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[20969, 495, 638, 15, 148, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[21610, 512, 2227, 55, 584, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23886, 573, 121, 1, 89, "Section"],
Cell[24010, 576, 588, 10, 168, "Text"],
Cell[24601, 588, 891, 13, 220, "Text"],
Cell[25495, 603, 513, 8, 168, "Text"],
Cell[CellGroupData[{
Cell[26033, 615, 187, 2, 47, "Subsection"],
Cell[CellGroupData[{
Cell[26245, 621, 104, 1, 37, "Subsubsection"],
Cell[26352, 624, 322, 5, 117, "Text"],
Cell[CellGroupData[{
Cell[26699, 633, 1446, 34, 1190, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[28148, 669, 398, 12, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[28549, 683, 1527, 42, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[30079, 727, 536, 14, 502, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[30618, 743, 3373, 67, 359, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34037, 816, 111, 1, 37, "Subsubsection"],
Cell[34151, 819, 170, 3, 65, "Text"],
Cell[CellGroupData[{
Cell[34346, 826, 334, 8, 39, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[34683, 836, 799, 13, 39, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[35485, 851, 1419, 37, 175, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[36907, 890, 525, 13, 148, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[37435, 905, 2253, 50, 493, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39737, 961, 118, 1, 37, "Subsubsection"],
Cell[39858, 964, 1556, 31, 326, "Text"],
Cell[CellGroupData[{
Cell[41439, 999, 1816, 45, 845, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[43258, 1046, 2109, 52, 1075, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[45370, 1100, 1487, 36, 845, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[46860, 1138, 547, 14, 502, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[47410, 1154, 38951, 922, 493, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, {5}]],
Cell[CellGroupData[{
Cell[86395, 2081, 1990, 48, 845, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[88388, 2131, 2033, 48, 962, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[90424, 2181, 1622, 38, 733, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[92049, 2221, 638, 15, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[92690, 2238, 12063, 275, 526, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]],
Cell[104765, 2516, 1109, 16, 371, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105911, 2537, 120, 1, 140, "Subsubsection"],
Cell[106034, 2540, 2135, 60, 633, "Text"],
Cell[CellGroupData[{
Cell[108194, 2604, 1838, 50, 941, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[110035, 2656, 2401, 64, 1515, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[112439, 2722, 400, 11, 275, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[112842, 2735, 402, 11, 275, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[113247, 2748, 778, 17, 390, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[114028, 2767, 457, 9, 275, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[114488, 2778, 668, 15, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[115159, 2795, 9618, 173, 2231, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {8}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124823, 2974, 164, 2, 140, "Subsubsection"],
Cell[124990, 2978, 1467, 40, 597, "Text"],
Cell[CellGroupData[{
Cell[126482, 3022, 789, 21, 275, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[127274, 3045, 436, 12, 262, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[127713, 3059, 1473, 35, 695, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[129189, 3096, 17562, 296, 1645, 10215, 173, "CachedBoxData", "BoxData", \
"Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[146754, 3394, 914, 24, 502, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[147671, 3420, 542, 11, 275, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[148216, 3433, 620, 14, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[148839, 3449, 12389, 217, 1890, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {8}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161274, 3672, 118, 1, 140, "Subsubsection"],
Cell[161395, 3675, 2128, 65, 220, "Text"],
Cell[CellGroupData[{
Cell[163548, 3744, 1153, 30, 502, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[164704, 3776, 1537, 39, 808, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[166244, 3817, 2004, 50, 1085, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[168251, 3869, 656, 15, 390, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[168910, 3886, 609, 14, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[169522, 3902, 8054, 145, 446, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]],
Cell[CellGroupData[{
Cell[177610, 4052, 117, 1, 37, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[177752, 4057, 1069, 30, 556, "Input"],
Cell[178824, 4089, 400, 12, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179261, 4106, 361, 10, 226, "Input"],
Cell[179625, 4118, 206, 6, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179868, 4129, 379, 11, 226, "Input"],
Cell[180250, 4142, 355, 11, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180642, 4158, 713, 23, 408, "Input"],
Cell[181358, 4183, 973, 32, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182368, 4220, 1010, 32, 432, "Input"],
Cell[183381, 4254, 265, 9, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183683, 4268, 121, 2, 150, "Input"],
Cell[183807, 4272, 156, 4, 150, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184000, 4281, 406, 12, 226, "Input"],
Cell[184409, 4295, 377, 12, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184823, 4312, 488, 15, 226, "Input"],
Cell[185314, 4329, 536, 18, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185887, 4352, 1330, 35, 828, "Input"],
Cell[187220, 4389, 15189, 255, 1202, 9870, 166, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202446, 4649, 456, 13, 332, "Input"],
Cell[202905, 4664, 185, 3, 187, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203127, 4672, 376, 11, 332, "Input"],
Cell[203506, 4685, 113, 3, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203656, 4693, 741, 23, 370, "Input"],
Cell[204400, 4718, 9285, 160, 991, 3186, 58, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213722, 4883, 173, 4, 150, "Input"],
Cell[213898, 4889, 19664, 331, 737, 12886, 218, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233599, 5225, 1644, 39, 722, "Input"],
Cell[235246, 5266, 15389, 258, 1621, 9880, 166, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[250650, 5527, 723, 11, 822, "Text"],
Cell[CellGroupData[{
Cell[251398, 5542, 1559, 41, 782, "Input"],
Cell[252960, 5585, 3478, 100, 1650, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256475, 5690, 428, 13, 226, "Input"],
Cell[256906, 5705, 279, 8, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257222, 5718, 633, 20, 363, "Input"],
Cell[257858, 5740, 362, 12, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258257, 5757, 813, 23, 463, "Input"],
Cell[259073, 5782, 563, 16, 150, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259673, 5803, 451, 15, 150, "Input"],
Cell[260127, 5820, 231, 8, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260395, 5833, 728, 24, 463, "Input"],
Cell[261126, 5859, 350, 11, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261513, 5875, 169, 4, 150, "Input"],
Cell[261685, 5881, 72, 1, 150, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261794, 5887, 181, 4, 150, "Input"],
Cell[261978, 5893, 112, 1, 150, "Output"]
}, Open  ]],
Cell[262105, 5897, 784, 24, 463, "Input"],
Cell[CellGroupData[{
Cell[262914, 5925, 2730, 74, 1678, "Input"],
Cell[265647, 6001, 4985, 86, 1621, "Output"]
}, Open  ]],
Cell[270647, 6090, 805, 25, 463, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[271489, 6120, 168, 3, 52, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[271682, 6127, 709, 15, 751, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[272394, 6144, 718, 17, 262, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[273115, 6163, 662, 19, 218, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[273792, 6185, 203, 5, 218, "Text"],
Cell[CellGroupData[{
Cell[274020, 6194, 803, 20, 262, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[274826, 6216, 1490, 50, 608, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[276319, 6268, 793, 20, 262, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[277115, 6290, 398, 11, 226, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[277516, 6303, 2081, 62, 1262, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[279600, 6367, 20947, 355, 1250, 4021, 75, "CachedBoxData", "BoxData", \
"Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300617, 6730, 157, 2, 47, "Subsection"],
Cell[300777, 6734, 928, 20, 173, "Text"],
Cell[301708, 6756, 514, 14, 91, "Text"],
Cell[302225, 6772, 249, 5, 65, "Text"],
Cell[302477, 6779, 139, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[302641, 6784, 3826, 99, 1760, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[306470, 6885, 539, 13, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[307012, 6900, 9309, 167, 446, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {3}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[316367, 7073, 96, 1, 47, "Subsection"],
Cell[CellGroupData[{
Cell[316488, 7078, 104, 1, 37, "Subsubsection"],
Cell[316595, 7081, 442, 7, 142, "Text"],
Cell[CellGroupData[{
Cell[317062, 7092, 1784, 43, 845, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[318849, 7137, 2517, 71, 3362, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[321369, 7210, 398, 12, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[321770, 7224, 1535, 39, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[323308, 7265, 534, 13, 502, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[323845, 7280, 4889, 94, 411, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328780, 7380, 111, 1, 37, "Subsubsection"],
Cell[328894, 7383, 371, 7, 91, "Text"],
Cell[CellGroupData[{
Cell[329290, 7394, 320, 8, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[329613, 7404, 3445, 83, 1418, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[333061, 7489, 615, 13, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[333679, 7504, 2824, 61, 586, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {4}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336549, 7571, 153, 2, 37, "Subsubsection"],
Cell[336705, 7575, 3065, 92, 338, "Text"],
Cell[CellGroupData[{
Cell[339795, 7671, 1213, 28, 390, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[341011, 7701, 1061, 28, 441, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[342075, 7731, 388, 11, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[342466, 7744, 274, 7, 197, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[342743, 7753, 242, 6, 250, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[342988, 7761, 190, 4, 213, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[343181, 7767, 926, 20, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[344110, 7789, 435, 11, 226, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[344548, 7802, 979, 24, 390, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[345530, 7828, 569, 12, 157, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[346102, 7842, 498, 9, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[346603, 7853, 543, 8, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[347149, 7863, 414, 6, 157, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[347566, 7871, 5112, 123, 1303, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[352681, 7996, 647, 14, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[353331, 8012, 2150, 47, 617, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {16}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355528, 8065, 131, 1, 37, "Subsubsection"],
Cell[355662, 8068, 1447, 48, 244, "Text"],
Cell[CellGroupData[{
Cell[357134, 8120, 1410, 38, 390, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[358547, 8160, 2428, 67, 845, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[360978, 8229, 774, 21, 275, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[361755, 8252, 868, 23, 733, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[362626, 8277, 950, 25, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[363579, 8304, 637, 13, 390, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[364219, 8319, 3510, 90, 1877, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[367732, 8411, 1525, 37, 733, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[369260, 8450, 574, 14, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[369837, 8466, 2537, 55, 617, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {10}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372421, 8527, 136, 1, 37, "Subsubsection"],
Cell[372560, 8530, 2067, 76, 210, "Text"],
Cell[CellGroupData[{
Cell[374652, 8610, 394, 9, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[375049, 8621, 592, 17, 157, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[375644, 8640, 512, 14, 210, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[376159, 8656, 1263, 34, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[377425, 8692, 2731, 72, 1303, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[380159, 8766, 3397, 90, 1418, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[383559, 8858, 611, 13, 390, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[384173, 8873, 664, 15, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[384840, 8890, 2913, 54, 525, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {9}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[387799, 8950, 235, 3, 37, "Subsubsection"],
Cell[388037, 8955, 3351, 112, 244, "Text"],
Cell[391391, 9069, 2512, 71, 349, "Text"],
Cell[CellGroupData[{
Cell[393928, 9144, 1951, 54, 229, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[395882, 9200, 956, 19, 225, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[396841, 9221, 32764, 553, 531, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {3}]],
Cell[429617, 9777, 262, 5, 91, "Text"],
Cell[CellGroupData[{
Cell[429904, 9786, 6485, 142, 1028, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[436392, 9930, 671, 15, 185, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[437066, 9947, 3513, 73, 586, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {3}]],
Cell[CellGroupData[{
Cell[440613, 10025, 112, 1, 37, "Subsubsubsection"],
Cell[440728, 10028, 218, 4, 65, "Text"],
Cell[440949, 10034, 874, 29, 99, "Text"],
Cell[441826, 10065, 1151, 36, 130, "Text"],
Cell[442980, 10103, 1833, 62, 168, "Text"],
Cell[444816, 10167, 1372, 47, 115, "Text"],
Cell[446191, 10216, 3072, 97, 277, "Text"],
Cell[449266, 10315, 2643, 92, 155, "Text"],
Cell[451912, 10409, 7073, 235, 522, "Text"],
Cell[458988, 10646, 705, 22, 78, "Text"],
Cell[459696, 10670, 16, 0, 39, "Text"],
Cell[CellGroupData[{
Cell[459737, 10674, 1148, 28, 195, "Input"],
Cell[460888, 10704, 800, 23, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461725, 10732, 429, 12, 67, "Input"],
Cell[462157, 10746, 349, 11, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462543, 10762, 608, 19, 63, "Input"],
Cell[463154, 10783, 442, 14, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463633, 10802, 363, 11, 77, "Input"],
Cell[463999, 10815, 390, 14, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464426, 10834, 462, 14, 77, "Input"],
Cell[464891, 10850, 334, 12, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465262, 10867, 1035, 28, 94, "Input"],
Cell[466300, 10897, 575, 14, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466912, 10916, 1112, 31, 175, "Input"],
Cell[468027, 10949, 331, 8, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468395, 10962, 1031, 25, 148, "Input"],
Cell[469429, 10989, 356, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469822, 11003, 1316, 35, 148, "Input"],
Cell[471141, 11040, 192, 3, 39, "Output"]
}, Open  ]],
Cell[471348, 11046, 99, 1, 39, "Input"],
Cell[CellGroupData[{
Cell[471472, 11051, 518, 15, 67, "Input"],
Cell[471993, 11068, 486, 9, 52, "Message"],
Cell[472482, 11079, 262, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472781, 11091, 833, 22, 67, "Input"],
Cell[473617, 11115, 3476, 122, 317, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477130, 11242, 638, 17, 67, "Input"],
Cell[477771, 11261, 170866, 2788, 527, 145095, 2364, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[648652, 14052, 1628, 48, 202, "Input",
 InitializationCell->True],
Cell[650283, 14102, 151, 3, 39, "Input"],
Cell[CellGroupData[{
Cell[650459, 14109, 877, 24, 94, "Input"],
Cell[651339, 14135, 536, 10, 28, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651912, 14150, 1060, 27, 175, "Input"],
Cell[652975, 14179, 1254, 38, 108, "Output"]
}, Open  ]],
Cell[654244, 14220, 532, 15, 76, "Text"],
Cell[CellGroupData[{
Cell[654801, 14239, 1648, 41, 202, "Input"],
Cell[656452, 14282, 836, 23, 94, "Output"]
}, Open  ]],
Cell[657303, 14308, 1482, 33, 148, "Input"],
Cell[658788, 14343, 454, 14, 50, "Text"],
Cell[CellGroupData[{
Cell[659267, 14361, 1698, 42, 202, "Input"],
Cell[660968, 14405, 686, 21, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661691, 14431, 563, 17, 67, "Input"],
Cell[662257, 14450, 437, 13, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662731, 14468, 438, 13, 66, "Input"],
Cell[663172, 14483, 288, 8, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[663497, 14496, 542, 16, 106, "Input"],
Cell[664042, 14514, 1483, 47, 213, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665562, 14566, 938, 28, 94, "Input"],
Cell[666503, 14596, 535, 10, 28, "Message"],
Cell[667041, 14608, 574, 17, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[667652, 14630, 1715, 44, 202, "Input"],
Cell[669370, 14676, 185052, 3041, 541, 170601, 2802, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[854437, 17720, 94, 1, 39, "Input"],
Cell[854534, 17723, 2384, 58, 283, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
