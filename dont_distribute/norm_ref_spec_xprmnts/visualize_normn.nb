(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    618542,      12505]
NotebookOptionsPosition[    604566,      12098]
NotebookOutlinePosition[    604930,      12114]
CellTagsIndexPosition[    604887,      12111]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Visualizing Normalization", "Title",
 CellChangeTimes->{{3.547139824257725*^9, 3.547139830062993*^9}}],

Cell["A graphical presentation of NMR normalization methods.", "Subtitle",
 CellChangeTimes->{{3.547140124907233*^9, 3.547140128682735*^9}, {
  3.5471401699783297`*^9, 3.547140176641282*^9}}],

Cell["Eric Moyer", "Subsubtitle",
 CellChangeTimes->{{3.547139833729444*^9, 3.547139834949341*^9}}],

Cell["Started 27 May 2012", "Subsubtitle",
 CellChangeTimes->{{3.547139839967902*^9, 3.547139847471291*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.5471398550090647`*^9, 3.547139859094948*^9}}],

Cell["\<\
Normalization methods in NMR spectrography (and probably other spectrographic \
fields as well) are typically explained by the procedures that you go through \
to perform them and justified by arguments about the \"real concentration.\" \
Another way to look at normalization methods is to examine them as geometric \
operations on a vector space. This gives a different understanding of what is \
occurring, which can give the practitioner a deeper intuition about \
trade-offs he makes when he says, \"sum-normalize the data.\"\
\>", "Text",
 CellChangeTimes->{{3.547139862175673*^9, 3.547139961290236*^9}, {
  3.547140021256085*^9, 3.547140090613758*^9}, {3.5471503141743526`*^9, 
  3.547150319533565*^9}}],

Cell["\<\
I look at each spectrum generated as a point in a vector space, one variable \
in the vector for each value measured. I am mainly concerned with \
frequency-domain spectra, since it is on these that the normalization methods \
I present are typically used. The normalization methods do not solve extant \
problems on time-domain spectra, so they are not used there. However, my \
points are just as valid for time-domain spectra, since they too are vectors.\
\
\>", "Text",
 CellChangeTimes->{{3.5471402676850863`*^9, 3.547140474189971*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum Normalization", "Section",
 CellChangeTimes->{{3.54714020719221*^9, 3.547140209879217*^9}}],

Cell["\<\
Sum normalization takes each spectrum, divides it by its sum, and then \
multiplies it by a constant. After this operation, all spectra have the same \
sum.\
\>", "Text",
 CellChangeTimes->{{3.547140255131291*^9, 3.547140264629607*^9}, {
  3.547140534722814*^9, 3.547140621495376*^9}}],

Cell[TextData[{
 "If the spectra are interpreted as points in an n-dimensional vector space, \
this projects all points onto an n-1 dimensional subspace (hyperplane) along \
a line between the original point and the origin. In 3 dimensions, it \
projects points onto a the plane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "+", "y", "+", "z"}], "=", "s"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " . In 2 dimensions, all points are projected the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"s", "-", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The location of these figures is determined by the constant."
}], "Text",
 CellChangeTimes->{{3.547140681651354*^9, 3.5471406959475613`*^9}, {
   3.547140770921924*^9, 3.547140855582036*^9}, {3.547140892956802*^9, 
   3.547140993727613*^9}, {3.547141063390345*^9, 3.547141080699884*^9}, {
   3.547141114226123*^9, 3.547141132073366*^9}, 3.547150325936315*^9, {
   3.547304990758165*^9, 3.547305069804627*^9}}],

Cell["How can we see this?", "Text",
 CellChangeTimes->{{3.547141139476688*^9, 3.5471411457860193`*^9}}],

Cell["\<\
First, consider that multiplying a (non-zero) point by a constant moves it \
along a line connecting the point with the origin. Multiplying by a positive \
number less than 1 moves it closer to the origin. Multiplying by a number \
greater than 1 moves farther from the origin. And multiplying it by a \
negative number moves it away from the origin on the opposite side.\
\>", "Text",
 CellChangeTimes->{{3.547141147385028*^9, 3.547141175159586*^9}, {
  3.547145618896906*^9, 3.547145674137457*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xPlusYEq1TwoD", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", "-", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547141252885395*^9, 3.547141300559654*^9}, {
   3.547141537589252*^9, 3.5471416045080423`*^9}, {3.547142210245225*^9, 
   3.5471422209708843`*^9}, {3.5471433024178123`*^9, 3.547143453267515*^9}, 
   3.54714551168288*^9, {3.5473052214608*^9, 3.547305270898307*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"yEq2X", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Blue", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471415783926497`*^9, 3.547141591548118*^9}, {
   3.5471416246544447`*^9, 3.547141673527576*^9}, 3.5471418890719557`*^9, {
   3.547142204740473*^9, 3.5471422068217287`*^9}, {3.547142262492856*^9, 
   3.5471422658793793`*^9}, {3.547142389810174*^9, 3.547142390770712*^9}, {
   3.547144733799*^9, 3.547144739646644*^9}, 3.547145511683155*^9, {
   3.547305153157874*^9, 3.547305170513158*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptX3HalvesY3AndProjection", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", "/", "2"}], ",", "3"}], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"2", "/", "3"}]}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Medium"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", 
        RowBox[{"Darker", "[", "Magenta", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714168006174*^9, 3.547141719704781*^9}, {
   3.547141768927044*^9, 3.547141787089158*^9}, {3.54714202150038*^9, 
   3.5471420306007233`*^9}, {3.547142113270247*^9, 3.5471421266363688`*^9}, {
   3.5471421704905167`*^9, 3.54714217578865*^9}, {3.547142272496965*^9, 
   3.547142285318091*^9}, {3.54714234509508*^9, 3.54714236665021*^9}, {
   3.5471447451479273`*^9, 3.547144750372863*^9}, {3.5471448821963453`*^9, 
   3.547144900705575*^9}, 3.547145511683342*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"firstDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xPlusYEq1TwoD", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Constant sum surface\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Spectrum\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"3", "/", "2"}], ",", 
              RowBox[{"11", "/", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Darker", "[", "Blue", "]"}], "}"}]}]}], "]"}]}], "}"}],
         "]"}], ",", "yEq2X", ",", "ptX3HalvesY3AndProjection"}], "}"}], ",", 
     
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "300", "}"}]}], ",", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714178902284*^9, 3.5471418310216312`*^9}, {
   3.547141879108432*^9, 3.547141882302959*^9}, {3.547142036570444*^9, 
   3.547142070537751*^9}, {3.5471421834856787`*^9, 3.547142189015986*^9}, {
   3.547142300656996*^9, 3.5471423124001207`*^9}, {3.547142380518396*^9, 
   3.547142498330698*^9}, {3.5471426515745068`*^9, 3.547142657910717*^9}, {
   3.547142712617209*^9, 3.5471429125192623`*^9}, {3.5471430778815613`*^9, 
   3.547143110504135*^9}, {3.547143465248744*^9, 3.5471434837149267`*^9}, {
   3.5471436268941517`*^9, 3.547143648446703*^9}, 3.547143856228594*^9, {
   3.547143904330501*^9, 3.547143979443432*^9}, {3.547144014076792*^9, 
   3.547144109029076*^9}, {3.5471441448632727`*^9, 3.547144145375992*^9}, {
   3.5471442167831573`*^9, 3.5471442495488977`*^9}, {3.547144331187319*^9, 
   3.547144335358005*^9}, {3.547144367271785*^9, 3.5471445103343353`*^9}, {
   3.547144540485724*^9, 3.5471446496300507`*^9}, {3.547144686554137*^9, 
   3.547144720330497*^9}, {3.547144754121471*^9, 3.547144858472582*^9}, {
   3.5471449348656187`*^9, 3.547144947175726*^9}, {3.547145172647348*^9, 
   3.547145195816874*^9}, {3.547145248487441*^9, 3.547145317295732*^9}, 
   3.547145511683733*^9, {3.547149206811069*^9, 3.547149213441887*^9}, {
   3.5473053103536587`*^9, 3.547305379677505*^9}, {3.5473054176853523`*^9, 
   3.547305484881413*^9}}],

Cell[BoxData[
 RowBox[{"firstDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "firstDiagram", ",", 
    "\"\<Figure 1: Sum Normalization in Two Dimensions\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714178902284*^9, 3.5471418310216312`*^9}, {
   3.547141879108432*^9, 3.547141882302959*^9}, {3.547142036570444*^9, 
   3.547142070537751*^9}, {3.5471421834856787`*^9, 3.547142189015986*^9}, {
   3.547142300656996*^9, 3.5471423124001207`*^9}, {3.547142380518396*^9, 
   3.547142498330698*^9}, {3.5471426515745068`*^9, 3.547142657910717*^9}, {
   3.547142712617209*^9, 3.5471429125192623`*^9}, {3.5471430778815613`*^9, 
   3.547143110504135*^9}, {3.547143465248744*^9, 3.5471434837149267`*^9}, {
   3.5471436268941517`*^9, 3.547143648446703*^9}, 3.547143856228594*^9, {
   3.547143904330501*^9, 3.547143979443432*^9}, {3.547144014076792*^9, 
   3.547144109029076*^9}, {3.5471441448632727`*^9, 3.547144145375992*^9}, {
   3.5471442167831573`*^9, 3.5471442495488977`*^9}, {3.547144331187319*^9, 
   3.547144335358005*^9}, {3.547144367271785*^9, 3.5471445103343353`*^9}, {
   3.547144540485724*^9, 3.5471446496300507`*^9}, {3.547144686554137*^9, 
   3.547144720330497*^9}, {3.547144754121471*^9, 3.547144858472582*^9}, {
   3.5471449348656187`*^9, 3.547144947175726*^9}, {3.547145172647348*^9, 
   3.547145195816874*^9}, {3.547145248487441*^9, 3.547145317295732*^9}, 
   3.547145511683733*^9, {3.5471492177403812`*^9, 3.547149234357081*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[1, 0, 0], 
       LineBox[CompressedData["
1:eJwtlGs01HkcxlHbRe3kslNrUIipWbrJ0NnkKytqEOsSdpVOuZSUtGkLbVHE
LjVrZSttplW6Tyk6aeWrTFYyJzG143LGpWnWaMx/YhhmxvzWntOL5zzvnhef
c56P/Y6U0HgTIyOjoKn838+32fcQQuGOu1yKEALMMXbgoXEKLXUM5lo9gbxC
To1CRaHA72rMoXECgbU//NbRRyFTUvNCoSLQZtXo/6CBQvncd+UdfQR6RUn3
Ek5RuD+JHfWggYCeU5UlpFH4k1NnfcIpAm4e/o6ltkq8ULq4SEgj4I3mPX9a
KJDXk5fy7WwDrOBduxT61SB+2RoWzKJPQvHlirySgAFsDgnzfemkh5JQzoCf
rwwDWE4HFzvoID2mJrAsVorr+DEVr1ZoQUcXMuNC+9Hwc4KlK2sChqlNzk82
9+KE5srZbUvG4fcNjrszu7oxwXwTo8ddAydMDQmRTWK8nI0ddNcxYGft25et
FWEQr7SU5zUK7Wsqm9/Aa2Rvvn1gNFgNEWXpjtN3NeOHsDMnjYJGgLuyvlHf
+QwtZojPxX4/DBlGq45tjqzGWWYj/x6M+AjWp2+aWdLP4pqbPoHh4SrgS40v
z04ph+o+Kn7eCyUEz5n5aHC8BkoWkuv99Qo4v/y8Z16RAL6r6lBt7RqEBVYX
/eTNLfB4Ioq/QTgAEu+j7Zn72uDX2PUlT5tkkNxA17q5vgXOwtHs9zIp1Mvi
2F/4dwKvIOh9Wnc/BEfZJpbPl4A4LDWQr+6FIwJjhxx5L9B+1P816iKBZcta
GYGqfqi4GtucuKgTDJ7ttD0iKUzPje5nRb4F1z9WFdr2yeDi84vvBevaQNXN
7FsrHQDvgrgMs5QWaGkIWXlfMAitqlovjyEBzNG9mV0rVMD1JSGVi4pqILHj
jMS2Sgnc3SYLHOquQEXAfkHaRhUcl1vYpNoW4cvQxm3MgI9wzyVeEX+/Co/d
eTiW7TkM43uqqxdIn2LcPVEYy2cE7E5cvcQxb0bxjEJ+hrsatlu7PVZ2tKK5
0Ew9jTkKvm7ftM47J8LMtc8Mb1hjoBqapYu8Jsa0yc9nhttoQDTqYROS2o28
xFMi68Xj4P2KdsPDrxe561sKrJwmpvbPWa3m9CMt5ZbPFFKwkWzJyXWWYp3v
oycPGTrIzN+fsZctw8m9se5baHrQdtUl37YZQOOZbeedJ/VgQruyOlIrR/eN
B55xjAyQzJWePGukQG337QH6sAHUNdGvnaVD6JvcxA0aM0CemGtfqhjCQt27
NTlaAzA0f6eajg6hHcM6X20y9Qs3dwv5Z0r0j8xntVsSOM23CKtYosTi1/FJ
XDaBpeUvRXZ7lLi8caHC9AiBmIJ1YvqwEg9HfF3sc5SA6ubBpTlaJT6VRnim
ZxHIfnHrsNqEwvBphQXyfALXZzCs2i0pzPDWuTRdIDB2fCyay6aw6fE/e3Nq
CXDT7naZHqHQgjNCf1JPwLFY5pyeRWFMB61OLSDw6L5tpjyfQkqzgRYnJCCh
frFpukDhfHYV30dCwCVp19acWgq3C15tSe8nUJ9XdkctoPBG2AdDpYxA6LW3
kzuFFHoecAi2pwgclvpe8pFQmGvspYkaITB3WqayUkZhKze6jKshwLN/4GVP
UciwS/Nv0k15xHvwNFdD4c5P3mr85LH/AH2ko8c=
        "]]}}, {
      InsetBox[
      "\"Constant sum surface\"", {0.6, 0.5}, {-1, 0}, BaseStyle -> {
         RGBColor[1, 0, 0]}], 
      InsetBox["\"Spectrum\"", 
       NCache[{
         Rational[3, 2], 
         Rational[11, 4]}, {1.5, 2.75}], {-1, 0}, BaseStyle -> {
         RGBColor[0, 0, 
          Rational[2, 3]]}]}, {{}, {}, {
       RGBColor[0, 0, 
        NCache[
         Rational[2, 3], 0.6666666666666666]], 
       LineBox[CompressedData["
1:eJw9xX1MFGQcB/Dj9XEsMze6lQrzBYhwDldpUpPvT206LcJ0AoKhvIpEQKx8
gTDFzsruGC+1RSTIH0wZTCdOmJooqXCNxDkoxuxATlDvUDnujnsEgqv2e3Z/
fPZZkpq3LcNbo9HE/Of/n7+fe3Jr3p5oPj/6ePpr4XfCosF/iNvPhrMNnpNh
u7BBn+M5FyVax6Jdng+jq3PLyHbPpcg7tf/3WM81aNfrr8R4Pgs//wJhyT6n
vobNX6XoLsa1qjvReijDVH+3Td2N/sRPIgsO3FD3YP4mQ2Y7dar78FJvRvPb
SV3qe1i2OKdBl3pHPYg1pk+71lXcVQ+hferIB73VPeoHyLpmNLaV/KkeQVXa
6QUv7+lTP8KKhCHXbEa/2oIBR2w3bb6nHoV98NWV2h0m9VOUNRbujY8fVI8h
bN6cmIPV99U2tOQfaSytHVKPoze0UnxUYVbbEXKsJ/zjqgdqB6K2Dr5VWz2s
dsKUr4s26EfUE2iO2jn3VvlDtQvauM7+M7pHagmYNeW/ff5Y/RxV2qy5YQct
6kmU1Oz7ZlW2VT2Fk90/dZTmj6qnUZxbaQsqeKL+B6Mp4a/sTH2qnsH3M1bf
gcxn6llcfrJp7MXEMbUbf4WuMb8TYlNrKOv1tMjKeht4DbXHJRWtCx4H70Vv
JlgbAuvGwXtRzrGNfWsX2sF707eZc6a8Ku3gvelqUIrbGugA70OXZo/7RJQ6
wPtQ94UNVsN8J3hfurU4s0Nf4QTvS1+37qgbCpgA70e7lv6dnGSYAO9H0y2R
C5cLF3h/+tLH8sePh13g/UkbEpUSqpHgBR3IjXMGHJLgBS1anW4MK5LgBV2f
+eyX9cUSvKAAg+G9wqMSvKCaxps/WL6T4AV1PH5jlfFnCV5QYNq8/bpfJXhB
lyKCttS1SfCCku0RwVevS/CCzhzd2OG8KcELevdUsTb9tgQvKNU02rJ+QIIX
JOonTyTfl+AFNeWI3YVmCV6Qa3qpaH4owQs6sSAxfsmYBC8o0rx3+dpxCV5Q
b8MX7gSHBC8oOKr8dJmU4AXd0NQWNU1K8IKyjE2xxmkJXtALZZeXDc9I8ILO
xxul2y3BC/oXbzRR4Q==
        "]]}}, 
     GraphicsComplexBox[{{1.5, 3.}, {1.5, 3.}, {0.3333333333333333, 
      0.6666666666666666}, {0.3333333333333333, 0.6666666666666666}, {1.5, 
      3.}, {1.5, 3.}, {0.3333333333333333, 0.6666666666666666}, {
      0.3333333333333333, 0.6666666666666666}}, {{
        RGBColor[0, 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        InsetBox[
         StyleBox[
         "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> Medium], 
         5], 
        InsetBox[
         StyleBox[
         "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> Medium], 
         6]}, {
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        InsetBox[
         StyleBox[
         "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> Medium], 
         7], 
        InsetBox[
         StyleBox[
         "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> Medium], 
         8]}, {}}]}, AspectRatio -> Automatic, Axes -> True, 
    AxesOrigin -> {0, 0}, ImageSize -> {300}, PlotRange -> All, 
    PlotRangeClipping -> False, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],"\"Figure 1: Sum Normalization in Two Dimensions\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547145309986032*^9, 3.5471453180521*^9}, 
   3.547145511683803*^9, 3.547149238662257*^9, 3.547305277521377*^9, {
   3.54730531496458*^9, 3.547305357110805*^9}, 3.547305486309402*^9}]
}, {6}]],

Cell["\<\
The point at which the line through the origin intersects with the surface of \
points whose sum equals the target sum of the sum-normalization is the \
normalized point. Figures 1 and 2 show sum-normalization in two and three \
dimensions with a target sum of 1.\
\>", "Text",
 CellChangeTimes->{{3.547145562244855*^9, 3.547145593306345*^9}, {
  3.5471456864467897`*^9, 3.5471457210290194`*^9}, {3.547149581268351*^9, 
  3.547149600562848*^9}, {3.547149683045044*^9, 3.5471496867804728`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumEq1ThreeD", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", "Red", ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.547305653534075*^9, 3.547305800606991*^9}, {
  3.547305830727653*^9, 3.547305837778078*^9}, {3.547305898689085*^9, 
  3.547305964609899*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yEq2XThreeD", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", "Blue", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "2"}], ",", "0", ",", "3"}], "}"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "2"}], ",", "0", ",", "3"}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Origin\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.2"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "3"}], ",", "0", ",", 
         RowBox[{"2", "/", "3"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.5471495704037113`*^9, {3.54730596745403*^9, 3.5473060663645973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"secondDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"sumEq1ThreeD", ",", "yEq2XThreeD"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547149570403741*^9}],

Cell[BoxData[
 RowBox[{"secondDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "secondDiagram", ",", 
    "\"\<Figure 2: Sum Normalization in Three Dimensions\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547148102046866*^9, 3.547148119923295*^9}, {
   3.547148385478323*^9, 3.5471484105255127`*^9}, {3.547149333549288*^9, 
   3.547149402974711*^9}, 3.547149570403777*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[1, 0, 0], 
      Opacity[0.85], 
      Polygon3DBox[{{-1, -1, 3}, {1, -1, 1}, {1, 1, -1}, {-1, 1, 1}}]}, {
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      Line3DBox[
       NCache[{{0, 0, 0}, {
          Rational[3, 2], 0, 3}}, {{0, 0, 0}, {1.5, 0, 3}}]], {
       PointSize[Large], 
       Point3DBox[
        NCache[{
          Rational[3, 2], 0, 3}, {1.5, 0, 3}]], 
       Text3DBox["\"Origin\"", {0, 0, 0}, {-1.2, 0}], {
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        Point3DBox[
         NCache[{
           Rational[1, 3], 0, 
           Rational[2, 3]}, {0.3333333333333333, 0, 0.6666666666666666}]]}}}},
     Axes -> True, ImageSize -> {300.2629681393381, 432.}, 
    ViewPoint -> {2.8449534536648784`, -1.810962179339618, 
     0.2768678953612902}, 
    ViewVertical -> {0.7011121767154426, -0.5713974341174561, 
     0.8522683193990057}],
   "\"Figure 2: Sum Normalization in Three Dimensions\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547149407009749*^9, 3.547149570403864*^9, {3.547305818619281*^9, 
   3.547305841858737*^9}, 3.5473060692827873`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probabilistic Quotient Normalization", "Section",
 CellChangeTimes->{{3.547150113963293*^9, 3.547150123581194*^9}}],

Cell["\<\
Probabilistic Quotient Normalization (PQN) (Dieterle 2006) is a method that \
is more resistant to large fluctuations in parts of the spectrum due to \
factors other than dilution (such as treatments). Unlike sum-normalization, \
which normalizes each spectrum independently, PQN is designed to normalize \
several related spectra simultaneously, using their commonality to improve \
its estimates.\
\>", "Text",
 CellChangeTimes->{{3.547151802331935*^9, 3.547151867460561*^9}, {
  3.547151898339778*^9, 3.5471519206995068`*^9}, {3.547152260891184*^9, 
  3.547152261621705*^9}}],

Cell["\<\
PQN starts with sum-normalization. Next, the spectra are binned to take care \
of small peak-shifts. Then a reference spectrum is created. The original \
paper mentions several methods of creating reference spectra. However, for \
simplicity, we will choose the method that takes the median spectrum of all \
the spectra being analyzed. Then, for each spectrum to be normalized, the \
reference spectrum is divided by it and the median of the quotients is \
selected as the normalization factor. Finally the spectra are multiplied by \
their respective normalization factors.\
\>", "Text",
 CellChangeTimes->{{3.547151910238988*^9, 3.547152058749381*^9}, {
   3.547152106312064*^9, 3.547152258965447*^9}, 3.547152308258853*^9, {
   3.5471528738397007`*^9, 3.5471529206481743`*^9}, {3.5471529893927917`*^9, 
   3.547153010479535*^9}, {3.547153047624489*^9, 3.5471531343946333`*^9}}],

Cell["\<\
For the following discussion, we will assume that the initial spectra have no \
negative values. Negative values result from noise or special acquisition \
methods like dephasing the water signal and should be removed during \
preprocessing. Though PQN is well-defined with negative values, their \
inclusion unnecessarily complicates the explanation.\
\>", "Text",
 CellChangeTimes->{{3.547153163841505*^9, 3.547153301245123*^9}, {
   3.547153356493964*^9, 3.547153405823414*^9}, 3.547296335988079*^9}],

Cell[CellGroupData[{

Cell["2D PQN (the canonical way)", "Subsection",
 CellChangeTimes->{{3.547153710904858*^9, 3.5471537155820103`*^9}, {
   3.54729612429014*^9, 3.547296132204031*^9}, 3.547296338247633*^9}],

Cell[CellGroupData[{

Cell["Sum Normalize", "Subsubsection",
 CellChangeTimes->{{3.547221736512328*^9, 3.547221739656698*^9}}],

Cell["\<\
The first step of PQN we've seen before, we sum-normalize. In the diagrams, I \
sum-normalize to 1, since it is easy, but everything works out the same, just \
scaled a bit differently if you sum-normalize to a different constant.\
\>", "Text",
 CellChangeTimes->{{3.5471614958910217`*^9, 3.547161555374159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"orig2D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2.172454345958343`", ",", "1.7744919345405104`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.675301724350803`", ",", "1.359406145521423`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.87830990460933`", ",", "1.4709889319173473`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.8813454193984884`", ",", "1.073276896492814`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.3606473361385762`", ",", "1.7882842580601983`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.26005835257858`", ",", "1.7655977040112563`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.398151988227432`", ",", "2.097238014713233`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.0861624358478528`", ",", "0.9274842729247682`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.255768229218814`", ",", "1.8706253682049265`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.6917625635090703`", ",", "1.2898265639379862`"}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547159479445242*^9, 3.5471594971325607`*^9}, {
   3.547159608984823*^9, 3.547159612130081*^9}, 3.547160204004696*^9, 
   3.5471609689527607`*^9, 3.547161262639394*^9, {3.54729856994198*^9, 
   3.547298571324485*^9}, 3.5472990518051023`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNorm2D", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", "orig2D"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547160301710615*^9, 3.5471603283489027`*^9}, 
   3.547161262642583*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thirdDiagram", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"Darker", "[", "Blue", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "orig2D"}], "]"}], 
       ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          ",", "orig2D"}], "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5471598662264*^9, 3.547160104879672*^9}, {
   3.547160335177816*^9, 3.547160346330387*^9}, {3.547161024190194*^9, 
   3.5471610625535383`*^9}, {3.547161144522626*^9, 3.547161153551978*^9}, 
   3.547161262642654*^9}],

Cell[BoxData[
 RowBox[{"thirdDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "thirdDiagram", ",", 
    "\"\<Figure 3: First step of 2D PQN: Sum-Normalize\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161155778019*^9, 3.547161226824782*^9}, 
   3.547161262642714*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{2.172454345958343, 1.7744919345405104`}], 
      PointBox[{2.675301724350803, 1.359406145521423}], 
      PointBox[{2.87830990460933, 1.4709889319173473`}], 
      PointBox[{2.8813454193984884`, 1.073276896492814}], 
      PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
      PointBox[{2.26005835257858, 1.7655977040112563`}], 
      PointBox[{1.398151988227432, 2.097238014713233}], 
      PointBox[{3.0861624358478528`, 0.9274842729247682}], 
      PointBox[{2.255768229218814, 1.8706253682049265`}], 
      PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
      LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
      LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
      LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
      LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
      LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
      LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
      LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
      LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
      LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
      LineBox[{{0, 0}, {2.6917625635090703`, 1.2898265639379862`}}]}, {
      RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}}, Axes -> True],
   "\"Figure 3: First step of 2D PQN: Sum-Normalize\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161234422071*^9, 3.547161262642786*^9}, 
   3.547298576671081*^9, 3.547299054955244*^9}]
}, {5}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reference Spectrum", "Subsubsection",
 CellChangeTimes->{{3.5472217577756367`*^9, 3.547221761264093*^9}}],

Cell["\<\
Next, you generate a reference spectrum by taking the median of each variable.\
\>", "Text",
 CellChangeTimes->{{3.547161561218967*^9, 3.5471615916008368`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refPt2D", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Median", ",", 
    RowBox[{"Transpose", "[", "sumNorm2D", "]"}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547161686979788*^9, 3.547161745407681*^9}, 
   3.5471623243637466`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6153821371488181`", ",", "0.38461786285118194`"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161731438332*^9, 3.547161746942959*^9}, 
   3.547162324364176*^9, 3.547223110129066*^9, 3.547227411129094*^9, 
   3.547231697124165*^9, 3.5472914091316833`*^9, {3.547291776552536*^9, 
   3.547291805599752*^9}, 3.547292195681592*^9, 3.5472922762440023`*^9, 
   3.547298596172872*^9, 3.5472990620470123`*^9, 3.547305156248396*^9, 
   3.54737647859179*^9, 3.5473765994427156`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourthDiagram", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "Green", ",", 
       
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", "refPt2D", "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<Reference spectrum\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.025", ",", "0"}], "}"}], "+", "refPt2D"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547161614449*^9, 3.5471616561965446`*^9}, {
   3.547161755130888*^9, 3.547161789570849*^9}, {3.5471620647540607`*^9, 
   3.547162251470367*^9}, 3.547162324364464*^9}],

Cell[BoxData[
 RowBox[{"fourthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fourthDiagram", ",", 
    "\"\<Figure 4: Second step of 2D PQN: Create reference spectrum\>\"", ",",
     "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547162273031047*^9, 3.547162324364779*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}, {
      RGBColor[0, 1, 0], 
      PointSize[Large], 
      PointBox[{0.6153821371488181, 0.38461786285118194`}], 
      InsetBox[
      "\"Reference spectrum\"", {0.6403821371488181, 
       0.38461786285118194`}, {-1, 0}]}}, Axes -> True],
   "\"Figure 4: Second step of 2D PQN: Create reference spectrum\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471623055433273`*^9, 3.547162324365074*^9}, 
   3.54729859818176*^9, 3.54729906369809*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reciprocal Quotient Spectra", "Subsubsection",
 CellChangeTimes->{{3.547221774607359*^9, 3.547221783056197*^9}}],

Cell[TextData[{
 "In the next step, I make a change to the procedure that makes it easier to \
understand. Rather than dividing the reference spectrum by each of the \
individual spectra to get the quotient spectra, I divide each spectrum by the \
reference spectrum. This leaves me with quotient spectra that have the \
reciprocals of the proper coordinates. Because all of the individual \
coordinates are positive, this just reverses their ranks. The median element \
will still be the same. So, I can just divide by the median rather than \
multiplying to get the same final normalization. In the case of an even \
number of points, you can't get the reciprocal of the average by taking the \
average of the reciprocals. Thus, if the center two reciprocal quotients are ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the reciprocal quotient median is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    FractionBox[
     RowBox[{"2", "a", " ", "b"}], 
     RowBox[{"a", "+", "b"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5471639391715307`*^9, 3.547164040357667*^9}, {
  3.547164080635233*^9, 3.547164236886691*^9}, {3.547164676990178*^9, 
  3.5471646964190683`*^9}, {3.5473061384359293`*^9, 3.5473061472666807`*^9}, {
  3.5473063772566338`*^9, 3.547306470025505*^9}, {3.5473066700767527`*^9, 
  3.547306713955553*^9}, {3.547306764930867*^9, 3.547306768743227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"standardQuotientTransformPlot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", "t"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "u"}], "}"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"u", "/", "1.1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.025", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547164733906971*^9, 3.5471647595590563`*^9}, {
   3.547164830970419*^9, 3.547164931665399*^9}, {3.547164968136445*^9, 
   3.547165011121571*^9}, {3.547165162027791*^9, 3.547165257955388*^9}, {
   3.54716529804185*^9, 3.5471653016882668`*^9}, {3.547165332686492*^9, 
   3.547165336708681*^9}, 3.547165377464015*^9, {3.547165411249199*^9, 
   3.547165431912196*^9}, 3.547165501607873*^9, 3.547168240044064*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardQuotientArrows", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "Small", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "#", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "-", "#"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", "#"}], ",", 
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "#"}], ")"}]}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{".9", 
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "#"}], "]"}]}]}], 
               "}"}]}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.15"}], ",", 
            RowBox[{"-", "0.06"}], ",", "0.06", ",", "0.15"}], "}"}]}]}], 
        "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.5471661047819223`*^9, 3.547166187435761*^9}, {
   3.547166227353311*^9, 3.547166284736493*^9}, {3.5471663217221737`*^9, 
   3.5471664171426573`*^9}, 3.5471664761436243`*^9, {3.547166545333894*^9, 
   3.547166572827833*^9}, {3.5471666272346687`*^9, 3.547166821096075*^9}, {
   3.547166858818624*^9, 3.5471668888344603`*^9}, 3.547168240045233*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fifthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "standardQuotientTransformPlot", ",", "standardQuotientArrows", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Sum-normalized spectra\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Quotient spectra using standard method\>\"", ",", 
           RowBox[{"{", 
            RowBox[{".9", ",", "2.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Colors give correspondence (note reversal)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.9", ",", "2.36"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], " ", "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547165506400021*^9, 3.5471659055469217`*^9}, {
   3.5471664801811*^9, 3.547166485239188*^9}, {3.5471669557029667`*^9, 
   3.547166967367653*^9}, 3.547168240051927*^9, {3.547299337017605*^9, 
   3.5472993576971493`*^9}}],

Cell[BoxData[
 RowBox[{"fifthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fifthDiagram", ",", 
    "\"\<Figure 5: Standard method of creating quotient spectra\>\"", ",", 
    "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547166970768332*^9, 3.5471670255156927`*^9}, 
   3.547168240056696*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kx83eJuE/wcQdN6j
      "], {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> Automatic]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[CompressedData["
1:eJwt1WW0lVUUBdAHCJIS0t3d3V2iotIgDUp3tyDdJR0qmHQjjXQoSjcKKN3d
zjOGP+bYe63zXQbv3XPvS9e8U42OkSIiIjJGjoiobr4QJvGZXNCsZ942O5j/
On/PvCC3MYeYTc3HZifzR+fFzENyK7Or2dC8b2akhv2q2c4cYzY3n5pfeF0G
+y/heRrY75rv8KH9kjmcPzxXQT5l709j+0MzN7XtN8zxfOS5l+ZkCnFFrub8
L/uX/CQXl/+wdyMTNeVr5lgG///72GBvRFyqy5fNEfzpvKJ82j6APHyse2VO
oTBX5Z8p4bk/5e5kZoguk25j+P8Tj8O6Sroz9oHk5RPda3MqRbgmL6Kk5w7L
PcgSfh5dZt0mexPic0RXgzf2ryjKdXkxpTx7RO5JVobqsug2h/eSBBzV1SRC
P00uxg1xCcPIqt+ia8a7HNPVIpJ+ulycm/JShpNNvzW83yTkuK52+Of1M+QS
3JKXMYLs+m26FiTihK4OUfQz5ZLclpczkhz67bqWJOakri5v6WfJpbgjr2AU
OfW/hjtOEk7p6hFVP1suzV15JaOpTzRnc/RluCevYgwNeNvZXH1Z7surGcun
RHc2T1+OB/IaxtGQGM7m68vzUF7LeBoR09nX+go8ktcxgcbEcvaNviKP5fVM
pAmxnX2rr8QT+Rcm0ZQ4zhboK/NU3sBkmvGOs4X6KjyTNzKF5sR19p2+Ks/l
TUylBS35jM9pRWva0JZ2tCee13/vte/xQt7MV3QgvrMf9NV4KW9hGh1JEL5T
9O/zSt7KdDrxrrOf9B/wWt7GDDqT0NnP4buDN/J2ZtKFRM4Whc9zpHBh3QNj
Fl1J7Gxx+P4gEjt0s+lGEmdLwuecyOzUzSGXfof8OUk5retOUv3S8DkmCrt0
c8mt3ym3IhlndD1Ipl8m1+AtduvmkUe/S25Ncs7qepJcvzx8bxGVPbr55NXv
ltuQgnO6XqTQr5BrEY29uq/Jp98jtyUl53W9SalfKdfmbfbpviG/fq/cjlRc
0PUhlX6VXIfo7Nd9SwH9Prk9qflL15fU+tVyXWJwQFdad9Tei2ws0BXU7bd3
IA1/6/qRRr9GrkdMDurK6I7Ze5OdhbpCugP28EcuLRd1/UmrXyvXJxa/6crq
jtv7kIPvdIV1B+2dSBfuhvyPOZJLzivLZ+2DyMcAXTrdOnsDYof7K/9tDuV3
5+XkE/a+5OR7XRHdb/bOpA/3LPy9NUdx2XkV+Zz9C/KH37N805zAQOfp5fX2
T8PPZL9jxgmfD/tFcxiHPFdePmnvRyP7AzNXuBf26+Y4WtifmT94vqj993C/
zS7h3zfvmRnC3bZfCXfHHG02M5+EnyH8jry2qnk+3F1zsNnEfBTeC7NAeO/N
W+FumBPNluZzs4s5yOv/A4h6EDs=
         "], VertexColors -> Automatic]}}, 
      VertexColors -> {
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168], 
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090753084431745], 
        Hue[0.008922109451530515], 
        Hue[0.02751680794121024], 
        Hue[0.04622099992694738], 
        Hue[0.06410704162395528], 
        Hue[0.08256639870941393], 
        Hue[0.10113524929092998`], 
        Hue[0.11981359336850345`], 
        Hue[0.13906525283452767`], 
        Hue[0.1574987620118227], 
        Hue[0.1760417646851751], 
        Hue[0.19469426085458494`], 
        Hue[0.21252860673526558`], 
        Hue[0.23093626800439693`], 
        Hue[0.24945342276958568`], 
        Hue[0.26808007103083187`], 
        Hue[0.2872800346805288], 
        Hue[0.3056618480414965], 
        Hue[0.32415315489852164`], 
        Hue[0.3427539552516042], 
        Hue[0.3614642491007441], 
        Hue[0.3807478583383348], 
        Hue[0.5661552581179933], 
        Hue[0.5847880082426421], 
        Hue[0.6026026080785619], 
        Hue[0.6209905233029324], 
        Hue[0.6394879320233602], 
        Hue[0.6580948342398455], 
        Hue[0.6768112299523882], 
        Hue[0.6947094753762018], 
        Hue[0.713181036188466], 
        Hue[0.7317620904967876], 
        Hue[0.7504526383011668], 
        Hue[0.7697165014939965], 
        Hue[0.7881622143980972], 
        Hue[0.8067174207982551], 
        Hue[0.8253821206944706], 
        Hue[0.8432286703019568], 
        Hue[0.8616485352978938], 
        Hue[0.8801778937898881], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.02268051342213563], 
        Hue[0.04170519845315341], 
        Hue[0.059679822249245285`], 
        Hue[0.07776393954139459], 
        Hue[0.09665328316819129], 
        Hue[0.11495638745245541`], 
        Hue[0.1342966290175636], 
        Hue[0.15305063124013926`], 
        Hue[0.17121839412018233`], 
        Hue[0.19019138333487282`], 
        Hue[0.2081143113146374], 
        Hue[0.22614673279045938`], 
        Hue[0.2449843806009288], 
        Hue[0.26323578906886563`], 
        Hue[0.28252433481764655`], 
        Hue[0.3012266412238949], 
        Hue[0.31934270828761063`], 
        Hue[0.33826400168597387`], 
        Hue[0.3565990557418044], 
        Hue[0.3759712470784791], 
        Hue[0.5613368240641906], 
        Hue[0.5802900672341202], 
        Hue[0.5981932491691239], 
        Hue[0.6162059246001851], 
        Hue[0.6350238263658935], 
        Hue[0.6532554887890696], 
        Hue[0.6722923775468929], 
        Hue[0.6902792050697903], 
        Hue[0.7083755260887452], 
        Hue[0.7272770734423476], 
        Hue[0.7455923814534173], 
        Hue[0.764944826745331], 
        Hue[0.7837110326947122], 
        Hue[0.8018909993015609], 
        Hue[0.8208761922430571], 
        Hue[0.8388113239496272], 
        Hue[0.8568559491522548], 
        Hue[0.8757058006895299], 
        Hue[0.8941142872656807], 
        Hue[0.013383164177295771`], 
        Hue[0.03235310246028484], 
        Hue[0.05073680140074134], 
        Hue[0.06853426099866528], 
        Hue[0.08736885787743326], 
        Hue[0.10561721541366868`], 
        Hue[0.1246707992845515], 
        Hue[0.14383387665149172`], 
        Hue[0.1619468927835061], 
        Hue[0.18086513525016787`], 
        Hue[0.6991397456826131], 
        Hue[0.7179865462881867], 
        Hue[0.7362471075512278], 
        Hue[0.7553128951489163], 
        Hue[0.7744881762426619], 
        Hue[0.792613396101482], 
        Hue[0.8115438422949494], 
        Hue[0.8298880491458841], 
        Hue[0.8476460166542864], 
        Hue[0.8664411214435327], 
        Hue[0.8846499868902463], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.020262366162598335`], 
        Hue[0.03944729771625642], 
        Hue[0.057466212561890294`], 
        Hue[0.07536270995738494], 
        Hue[0.09441230010682193], 
        Hue[0.1125277844944314], 
        Hue[0.13191231710908158`], 
        Hue[0.15082656585429752`], 
        Hue[0.16880670883768595`], 
        Hue[0.18793994457501673`], 
        Hue[0.2059071636043233], 
        Hue[0.22375196518349064`], 
        Hue[0.24274985951660033`], 
        Hue[0.2608136480878825], 
        Hue[0.28014648488620547`], 
        Hue[0.2990090378150941], 
        Hue[0.31693748498215524`], 
        Hue[0.3360190249031587], 
        Hue[0.3541664590623346], 
        Hue[0.3735829414485513], 
        Hue[0.5589276070372893], 
        Hue[0.5780410967298593], 
        Hue[0.595988569714405], 
        Hue[0.6138136252488114], 
        Hue[0.6327917735371602], 
        Hue[0.6508358160636816], 
        Hue[0.6700329513441452], 
        Hue[0.6880640699165846], 
        Hue[0.705972771038885], 
        Hue[0.7250345649151275], 
        Hue[0.7431622530295426], 
        Hue[0.7625589893709983], 
        Hue[0.7814854418430197], 
        Hue[0.7994777885532137], 
        Hue[0.8186232280173502], 
        Hue[0.8366026507734625], 
        Hue[0.8544596560794353], 
        Hue[0.8734697541393507], 
        Hue[0.8916181836281426], 
        Hue[0.011152636814413143`], 
        Hue[0.02993495520074754], 
        Hue[0.04847890066384435], 
        Hue[0.06632065131131028], 
        Hue[0.0849676282934236], 
        Hue[0.10337623235229934`], 
        Hue[0.12224219632652747`], 
        Hue[0.1414495647430097], 
        Hue[0.15972282739766439`], 
        Hue[0.17845344996767148`], 
        Hue[0.6969246105294074], 
        Hue[0.7155837912383263], 
        Hue[0.7340045990240077], 
        Hue[0.7528827667250415], 
        Hue[0.7721023388683292], 
        Hue[0.7903878052497895], 
        Hue[0.8091306315466021], 
        Hue[0.8276350849201775], 
        Hue[0.8454373434781216], 
        Hue[0.8640448283707133], 
        Hue[0.8824139403400673], 
        Hue[0.9016025981782949], 
        Hue[0.0066915820886478865`], 
        Hue[0.02509866068167294], 
        Hue[0.0439630991900504], 
        Hue[0.06189343193660028], 
        Hue[0.08016516912540425], 
        Hue[0.823129156468764], 
        Hue[0.841019997125792], 
        Hue[0.8592522422250743], 
        Hue[0.877941847239709], 
        Hue[0.8966103909032188], 
        Hue[0.015613691540178401`], 
        Hue[0.03477124971982214], 
        Hue[0.05299470213763833], 
        Hue[0.8688374145163521], 
        Hue[0.8868860334404255], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.019053292532829683`], 
        Hue[0.03831834734780793], 
        Hue[0.05635940771821281], 
        Hue[0.07416209516538008], 
        Hue[0.09329180857613727], 
        Hue[0.11131348301541939`], 
        Hue[0.13072016115484056`], 
        Hue[0.14971453316137667`], 
        Hue[0.16760086619643774`], 
        Hue[0.18681422519508867`], 
        Hue[0.20480358974916626`], 
        Hue[0.22255458138000622`], 
        Hue[0.24163259897443617`], 
        Hue[0.259602577597391], 
        Hue[0.2789575599204848], 
        Hue[0.29790023611069366`], 
        Hue[0.3157348733294275], 
        Hue[0.33489653651175116`], 
        Hue[0.3529501607225997], 
        Hue[0.3723887886335874], 
        Hue[0.5577229985238387], 
        Hue[0.5769166114777288], 
        Hue[0.5948862299870454], 
        Hue[0.6126174755731246], 
        Hue[0.6316757471227935], 
        Hue[0.6496259797009876], 
        Hue[0.6689032382427713], 
        Hue[0.6869565023399818], 
        Hue[0.7047713935139547], 
        Hue[0.7239133106515175], 
        Hue[0.7419471888176051], 
        Hue[0.7613660706838319], 
        Hue[0.7803726464171736], 
        Hue[0.7982711831790403], 
        Hue[0.817496745904497], 
        Hue[0.8354983141853802], 
        Hue[0.8532615095430257], 
        Hue[0.8723517308642611], 
        Hue[0.8903701318093737], 
        Hue[0.01003737313297183], 
        Hue[0.028725881570978894`], 
        Hue[0.04734995029539586], 
        Hue[0.06521384646763277], 
        Hue[0.08376701350141877], 
        Hue[0.10225574082161466`], 
        Hue[0.12102789484751547`], 
        Hue[0.1402574087887687], 
        Hue[0.15861079470474357`], 
        Hue[0.17724760732642328`], 
        Hue[0.6958170429528046], 
        Hue[0.7143824137133962], 
        Hue[0.7328833447603977], 
        Hue[0.7516677025131041], 
        Hue[0.7709094201811629], 
        Hue[0.7892750098239434], 
        Hue[0.8079240261724286], 
        Hue[0.826508602807324], 
        Hue[0.8443330068900392], 
        Hue[0.8628466818343036], 
        Hue[0.8812959170649777], 
        Hue[0.9003545463595258], 
        Hue[0.0055763184072065725`], 
        Hue[0.023889587051904283`], 
        Hue[0.04283414882160191], 
        Hue[0.0607866270929228], 
        Hue[0.07896455433339943], 
        Hue[0.8220026743559105], 
        Hue[0.8399156605377096], 
        Hue[0.8580540956886646], 
        Hue[0.8768238239646196], 
        Hue[0.8953623390844497], 
        Hue[0.014498427858737086`], 
        Hue[0.03356217609005349], 
        Hue[0.05186575176918984], 
        Hue[0.8676392679799424], 
        Hue[0.8857680101653359], 
        Hue[0.905346753634602], 
        Hue[0.0033457910443239433`], 
        Hue[0.021471439792366983`], 
        Hue[0.8745877774144403], 
        Hue[0.8928662354469117], 
        Hue[0.012267900495854456`], 
        Hue[0.031144028830516195`], 
        Hue[0.865242974907123], 
        Hue[0.8835319636151567], 
        Hue[0.902850649997064], 
        Hue[0.007806845770089202], 
        Hue[0.026307734311441587`], 
        Hue[0.8978584427219878], 
        Hue[0.016728955221619716`], 
        Hue[0.8880040567155151], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.018448755717945357`], 
        Hue[0.03775387216358369], 
        Hue[0.055806005296374056`], 
        Hue[0.07356178776937766], 
        Hue[0.09273156281079495], 
        Hue[0.1107063322759134], 
        Hue[0.13012408317772006`], 
        Hue[0.14915851681491624`], 
        Hue[0.16699794487581365`], 
        Hue[0.18625136550512464`], 
        Hue[0.20425180282158775`], 
        Hue[0.22195588947826406`], 
        Hue[0.241073968703354], 
        Hue[0.2589970423521452], 
        Hue[0.2783630974376246], 
        Hue[0.29734583525849345`], 
        Hue[0.3151335675030636], 
        Hue[0.3343352923160473], 
        Hue[0.35234201155273226`], 
        Hue[0.3717917122261054], 
        Hue[0.5571206942671133], 
        Hue[0.5763543688516635], 
        Hue[0.5943350601233657], 
        Hue[0.6120194007352812], 
        Hue[0.6311177339156102], 
        Hue[0.6490210615196406], 
        Hue[0.6683383816920845], 
        Hue[0.6864027185516804], 
        Hue[0.7041707047514897], 
        Hue[0.7233526835197126], 
        Hue[0.7413396567116365], 
        Hue[0.7607696113402487], 
        Hue[0.7798162487042506], 
        Hue[0.7976678804919536], 
        Hue[0.81693350484807], 
        Hue[0.834946145891339], 
        Hue[0.8526624362748207], 
        Hue[0.8717927192267163], 
        Hue[0.8897461058999891], 
        Hue[0.009479741292251173], 
        Hue[0.02812134475609456], 
        Hue[0.04678547511117162], 
        Hue[0.06466044404579403], 
        Hue[0.08316670610541635], 
        Hue[0.10169549505627232`], 
        Hue[0.12042074410800947`], 
        Hue[0.1396613308116482], 
        Hue[0.1580547783582831], 
        Hue[0.1766446860057992], 
        Hue[0.6952632591645032], 
        Hue[0.713781724950931], 
        Hue[0.7323227176285926], 
        Hue[0.7510601704071355], 
        Hue[0.7703129608375797], 
        Hue[0.7887186121110202], 
        Hue[0.8073207234853419], 
        Hue[0.8259453617508973], 
        Hue[0.843780838595998], 
        Hue[0.8622476085660987], 
        Hue[0.880736905427433], 
        Hue[0.8997305204501415], 
        Hue[0.005018686566485915], 
        Hue[0.023285050237019957`], 
        Hue[0.04226967363737765], 
        Hue[0.06023322467108404], 
        Hue[0.07836424693739702], 
        Hue[0.8214394332994838], 
        Hue[0.8393634922436684], 
        Hue[0.8574550224204597], 
        Hue[0.8762648123270746], 
        Hue[0.8947383131750654], 
        Hue[0.013940796018016429`], 
        Hue[0.03295763927516917], 
        Hue[0.05130127658496558], 
        Hue[0.8670401947117375], 
        Hue[0.8852089985277911], 
        Hue[0.9047227277252176], 
        Hue[0.0027881592036032854`], 
        Hue[0.020866902977482657`], 
        Hue[0.8740287657768955], 
        Hue[0.8922422095375272], 
        Hue[0.0117102686551338], 
        Hue[0.03053949201563187], 
        Hue[0.8646439016389181], 
        Hue[0.8829729519776119], 
        Hue[0.9022266240876795], 
        Hue[0.007249213929368543], 
        Hue[0.025703197496557258`], 
        Hue[0.8972344168126034], 
        Hue[0.016171323380899053`], 
        Hue[0.8874450450779704], 
        Hue[0.9072188313627556], 
        Hue[0.001672895522161972], 
        Hue[0.8909941577187581], 
        Hue[0.010595004973692486`], 
        Hue[0.9009785722689103], 
        Hue[0.006133950247927229], 
        Hue[0.8959863649938342], 
        Hue[0.015056059699457747`], 
        Hue[0.9059707795439865], 
        Hue[0.0039034228850446002`], 
        Hue[0.9034746759064485], 
        Hue[0.008364477610809858], 
        Hue[0.8984824686313723], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.018146487310503195`], 
        Hue[0.03747163457147156], 
        Hue[0.05552930408545469], 
        Hue[0.07326163407137645], 
        Hue[0.09245143992812377], 
        Hue[0.1104027569061604], 
        Hue[0.12982604418915977`], 
        Hue[0.14888050864168603`], 
        Hue[0.1666964842155016], 
        Hue[0.18596993566014267`], 
        Hue[0.20397590935779847`], 
        Hue[0.22165654352739297`], 
        Hue[0.24079465356781293`], 
        Hue[0.2586942747295224], 
        Hue[0.27806586619619444`], 
        Hue[0.2970686348323934], 
        Hue[0.31483291458988166`], 
        Hue[0.33405467021819546`], 
        Hue[0.3520379369677985], 
        Hue[0.3714931740223644], 
        Hue[0.5568195421387506], 
        Hue[0.5760732475386309], 
        Hue[0.5940594751915258], 
        Hue[0.6117203633163595], 
        Hue[0.6308387273120186], 
        Hue[0.6487186024289671], 
        Hue[0.6680559534167411], 
        Hue[0.6861258266575297], 
        Hue[0.7038703603702571], 
        Hue[0.7230723699538101], 
        Hue[0.7410358906586522], 
        Hue[0.7604713816684571], 
        Hue[0.779538049847789], 
        Hue[0.7973662291484102], 
        Hue[0.8166518843198568], 
        Hue[0.8346700617443183], 
        Hue[0.8523628996407183], 
        Hue[0.8715132134079439], 
        Hue[0.889434092945297], 
        Hue[0.009200925371890845], 
        Hue[0.0278190763486524], 
        Hue[0.04650323751905949], 
        Hue[0.06438374283487465], 
        Hue[0.08286655240741514], 
        Hue[0.10141537217360115`], 
        Hue[0.12011716873825648`], 
        Hue[0.13936329182308793`], 
        Hue[0.15777677018505287`], 
        Hue[0.17634322534548716`], 
        Hue[0.6949863672703525], 
        Hue[0.7134813805696986], 
        Hue[0.73204240406269], 
        Hue[0.7507564043541511], 
        Hue[0.7700147311657881], 
        Hue[0.7884404132545587], 
        Hue[0.8070190721417985], 
        Hue[0.8256637412226839], 
        Hue[0.8435047544489774], 
        Hue[0.8619480719319962], 
        Hue[0.8804573996086605], 
        Hue[0.8994185074954492], 
        Hue[0.004739870646125586], 
        Hue[0.022982781829577796`], 
        Hue[0.04198743604526554], 
        Hue[0.059956523460164654`], 
        Hue[0.07806409323939581], 
        Hue[0.8211578127712705], 
        Hue[0.8390874080966478], 
        Hue[0.8571554857863573], 
        Hue[0.8759853065083023], 
        Hue[0.894426300220373], 
        Hue[0.013661980097656101`], 
        Hue[0.03265537086772701], 
        Hue[0.05101903899285347], 
        Hue[0.8667406580776351], 
        Hue[0.8849294927090188], 
        Hue[0.9044107147705253], 
        Hue[0.002509343283242957], 
        Hue[0.020564634570040496`], 
        Hue[0.8737492599581231], 
        Hue[0.8919301965828349], 
        Hue[0.011431452734773473`], 
        Hue[0.0302372236081897], 
        Hue[0.8643443650048157], 
        Hue[0.8826934461588395], 
        Hue[0.9019146111329872], 
        Hue[0.006970398009008215], 
        Hue[0.0254009290891151], 
        Hue[0.896922403857911], 
        Hue[0.01589250746053873], 
        Hue[0.8871655392591979], 
        Hue[0.9069068184080633], 
        Hue[0.0013940796018016431`], 
        Hue[0.8906821447640658], 
        Hue[0.010316189053332158`], 
        Hue[0.9006665593142182], 
        Hue[0.005855134327566901], 
        Hue[0.895674352039142], 
        Hue[0.014777243779097417`], 
        Hue[0.9056587665892943], 
        Hue[0.0036246069646842715`], 
        Hue[0.9031626629517563], 
        Hue[0.008085661690449528], 
        Hue[0.8981704556766802], 
        Hue[0.9081548702268324], 
        Hue[0.000836447761080986], 
        Hue[0.9000425334048336], 
        Hue[0.005297502486846243], 
        Hue[0.9050347406799097], 
        Hue[0.0030669751239636145`], 
        Hue[0.9025386370423717], 
        Hue[0.0075280298497288735`], 
        Hue[0.9075308443174479], 
        Hue[0.0019517114425223006`], 
        Hue[0.9062827924986788], 
        Hue[0.004182238805404929], 
        Hue[0.9037866888611407], 
        Hue[0.9087788961362168]}], {
      Thickness[Small], {
       Hue[0.46538213714881804`], 
       ArrowBox[{{0.46538213714881804`, 0.534617862851182}, {
        1.3223157659616696`, 0.71942576104728}}, {0, 0.13500000000000004`}]}, {
       Hue[0.5553821371488181], 
       ArrowBox[{{0.5553821371488181, 0.4446178628511819}, {
        1.1080337230650301`, 0.8650526552954024}}, {
        0, 0.05399999999999995}]}, {
       Hue[0.675382137148818], 
       ArrowBox[{{0.675382137148818, 0.324617862851182}, {0.9111614052256475, 
        1.1848327121403865`}}, {0, 0.05399999999999995}]}, {
       Hue[0.7653821371488181], 
       ArrowBox[{{0.7653821371488181, 0.2346178628511819}, {0.804019465937922,
         1.6393375089907156`}}, {0, 0.13500000000000004`}]}}, {
      InsetBox["\"Sum-normalized spectra\"", {1, 0.2}, {-1, 0}], 
      InsetBox[
      "\"Quotient spectra using standard method\"", {0.9, 2.5}, {-1, 0}], 
      InsetBox[
      "\"Colors give correspondence (note reversal)\"", {0.9, 2.36}, {-1, 
       0}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{0, 3}, {0, 3}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 5: Standard method of creating quotient spectra\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.54716703508914*^9, 3.547168240063203*^9, 3.547298625085485*^9, 
   3.5472990757226887`*^9, {3.547299344836932*^9, 3.547299359459889*^9}}]
}, {5}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"linearQuotientTransformPlot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "/", 
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}], "/", 
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "u"}], "}"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"u", "/", "1.1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.025", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547164733906971*^9, 3.5471647595590563`*^9}, {
   3.547164830970419*^9, 3.547164931665399*^9}, {3.547164968136445*^9, 
   3.547165011121571*^9}, {3.547165162027791*^9, 3.547165257955388*^9}, {
   3.54716529804185*^9, 3.5471653016882668`*^9}, {3.547165332686492*^9, 
   3.547165336708681*^9}, 3.547165377464015*^9, {3.547165411249199*^9, 
   3.547165431912196*^9}, 3.547165501607873*^9, {3.547167655012796*^9, 
   3.547167686323903*^9}, 3.5471681200291777`*^9, 3.547168210626031*^9, {
   3.5472987358262873`*^9, 3.547298748471684*^9}, {3.547299106231627*^9, 
   3.547299107923362*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"linearQuotientArrows", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "Small", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "#", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "-", "#"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "/", 
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "#"}], ")"}], "/", 
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
              "0.1"}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".25"}], ",", 
            RowBox[{"-", "0.15"}], ",", 
            RowBox[{"-", "0.06"}], ",", "0.06", ",", "0.15", ",", "0.25"}], 
           "}"}]}]}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471661047819223`*^9, 3.547166187435761*^9}, {
   3.547166227353311*^9, 3.547166284736493*^9}, {3.5471663217221737`*^9, 
   3.5471664171426573`*^9}, 3.5471664761436243`*^9, {3.547166545333894*^9, 
   3.547166572827833*^9}, {3.5471666272346687`*^9, 3.547166821096075*^9}, {
   3.547166858818624*^9, 3.5471668888344603`*^9}, {3.54716771067766*^9, 
   3.5471677114266977`*^9}, {3.547167768530044*^9, 3.547167780388905*^9}, {
   3.547167872105948*^9, 3.547167914542306*^9}, 3.5471682106262693`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sixthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "linearQuotientTransformPlot", ",", "linearQuotientArrows", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Sum-normalized\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1.1", ",", "0.1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Reciprocal Quotient spectra\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2.29"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Colors give correspondence\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2.15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], " ", "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547165506400021*^9, 3.5471659055469217`*^9}, {
   3.5471664801811*^9, 3.547166485239188*^9}, {3.5471669557029667`*^9, 
   3.547166967367653*^9}, {3.5471678066025743`*^9, 3.547167848549383*^9}, {
   3.547167938251989*^9, 3.547168075882759*^9}, 3.547168140445486*^9, 
   3.547168210626327*^9, {3.547168692324882*^9, 3.547168721306837*^9}, {
   3.5472994011803427`*^9, 3.547299514655484*^9}}],

Cell[BoxData[
 RowBox[{"sixthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "sixthDiagram", ",", 
    "\"\<Figure 6: Easy-to-visualize method of creating reciprocal quotient \
spectra\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547166970768332*^9, 3.5471670255156927`*^9}, {
  3.547168147163466*^9, 3.5471682106263857`*^9}, {3.547168724991063*^9, 
  3.547168727242344*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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

      "], {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> Automatic]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84, 85,
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 149, 143, 
         138, 134, 131, 129, 150, 144, 139, 135, 132, 151, 145, 140, 136, 152,
          146, 141, 153, 147, 154, 127}, VertexColors -> Automatic]}}, 
      VertexColors -> {
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168], 
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168]}], {
      Thickness[Small], {
       Hue[0.36538213714881806`], 
       ArrowBox[{{0.36538213714881806`, 0.6346178628511819}, {
        0.593748363970561, 1.6499958118084888`}}, 0.1]}, {
       Hue[0.46538213714881804`], 
       ArrowBox[{{0.46538213714881804`, 0.534617862851182}, {
        0.7562490183823365, 1.3899974870850933`}}, 0.1]}, {
       Hue[0.5553821371488181], 
       ArrowBox[{{0.5553821371488181, 0.4446178628511819}, {
        0.9024996073529348, 1.155998994834037}}, 0.1]}, {
       Hue[0.675382137148818], 
       ArrowBox[{{0.675382137148818, 0.324617862851182}, {1.0975003926470652`,
         0.8440010051659628}}, 0.1]}, {
       Hue[0.7653821371488181], 
       ArrowBox[{{0.7653821371488181, 0.2346178628511819}, {
        1.2437509816176635`, 0.6100025129149067}}, 0.1]}, {
       Hue[0.8653821371488181], 
       ArrowBox[{{0.8653821371488181, 0.13461786285118194`}, {
        1.406251636029439, 0.3500041881915112}}, 0.1]}}, {
      InsetBox["\"Sum-normalized\"", {1.1, 0.1}, {-1, 0}], 
      InsetBox["\"Reciprocal Quotient spectra\"", {0.4, 2.29}, {-1, 0}], 
      InsetBox["\"Colors give correspondence\"", {0.4, 2.15}, {-1, 0}]}}, 
    Axes -> True, AxesOrigin -> {0, 0}, PlotRange -> {{0, 3}, {0, 3}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 6: Easy-to-visualize method of creating reciprocal quotient \
spectra\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547168175514007*^9, 3.547168210626486*^9}, 
   3.5472986628808126`*^9, 3.547298751672412*^9, {3.547299092964314*^9, 
   3.547299113037181*^9}, {3.54729940971076*^9, 3.547299516037085*^9}}]
}, {5}]],

Cell["\<\
The standard method involves three non-linear transformations of the spectral \
space, one to create the quotient spectra and then another to extract their \
medians, and a third to multiply the corresponding spectra by their medians. \
My method involves only two non-linear transformations - extracting the \
medians and dividing by them. The creation of the reciprocal quotient  \
(r-quotient) spectra is a linear transformation. Further, my method of \
creating the quotients does not flip the axes. This makes my method much \
easier to visualize. You can compare the two methods of creating the quotient \
spectra by looking at figures 5 and 6 (these diagrams are created using the \
reference spectrum from figure 4).\
\>", "Text",
 CellChangeTimes->{{3.547167112202626*^9, 3.54716722675627*^9}, {
  3.547167261266342*^9, 3.547167262677088*^9}, {3.547167294770259*^9, 
  3.547167415948337*^9}, {3.547167549225038*^9, 3.5471676289273252`*^9}, {
  3.547167725828884*^9, 3.547167747732733*^9}, {3.5471686721793756`*^9, 
  3.5471686753793077`*^9}, {3.5471996367262573`*^9, 3.547199645578714*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Median Reciprocal Quotients", "Subsubsection",
 CellChangeTimes->{{3.547221831853545*^9, 3.5472218401872797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z", "==", 
       RowBox[{"2", "c", " ", 
        RowBox[{"d", "/", 
         RowBox[{"(", 
          RowBox[{"c", "+", "d"}], ")"}]}]}]}], ",", 
      RowBox[{"c", "==", "x"}], ",", 
      RowBox[{"d", "==", 
       RowBox[{
        RowBox[{"m", " ", "x"}], "+", "b"}]}]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547306890857984*^9, 3.5473069357507687`*^9}, {
  3.5473069907552*^9, 3.5473070313728123`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{"m", " ", "x"}]}], ")"}]}], 
     RowBox[{"b", "+", "x", "+", 
      RowBox[{"m", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547306939172286*^9, 3.547306997079895*^9, 
  3.547307032222084*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z", "==", 
       RowBox[{"2", "c", " ", 
        RowBox[{"d", "/", 
         RowBox[{"(", 
          RowBox[{"c", "+", "d"}], ")"}]}]}]}], ",", 
      RowBox[{"c", "==", "x"}], ",", 
      RowBox[{"d", "==", 
       RowBox[{
        FractionBox[
         RowBox[{"r", " ", "x"}], 
         RowBox[{"r", "-", "1"}]], "+", 
        FractionBox["1", 
         RowBox[{"1", "-", "r"}]]}]}]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547306890857984*^9, 3.5473069357507687`*^9}, {
  3.5473069907552*^9, 3.5473070313728123`*^9}, {3.547307233271678*^9, 
  3.5473072445925617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"r", " ", "x"}]}], ")"}]}], 
      RowBox[{"1", "+", "x", "-", 
       RowBox[{"2", " ", "r", " ", "x"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547307235542062*^9, 3.5473072459197273`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"r", " ", "x"}], 
   RowBox[{"r", "-", "1"}]], "+", 
  FractionBox["1", 
   RowBox[{"1", "-", "r"}]]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "=", 
     RowBox[{"refPt2D", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"r", " ", "x"}]}], ")"}]}], 
        RowBox[{"1", "+", "x", "-", 
         RowBox[{"2", " ", "r", " ", "x"}]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547307054323945*^9, 3.547307056787364*^9}, {
  3.5473072718633013`*^9, 3.5473073017711687`*^9}, {3.54730745278102*^9, 
  3.5473074969298353`*^9}, {3.547307531595605*^9, 3.5473075335295477`*^9}, {
  3.547308254761554*^9, 3.547308263007531*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
pPE=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 2}, {-2.6250063523120595`, 1.0136797674339761`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.54730730272731*^9, {3.547307454845627*^9, 3.547307497458591*^9}, 
   3.547307534117464*^9, 3.547308264095767*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXAl0VsUVfgiIO2CtuyzKJgjUBWVTFhWoAtqqoIBLjAtYEURbl7anrR6O
WAQEUVwRETG4Ii6oyBogkEDYdwgECAkESEKAQEhyO9/MvS+T33nv/7Po6emp
5/jDzNz33VnvNnfoFff0wIcHxz09KD6uQfdhcUMHDop/qkG3IcNUVfVqnldt
oOd52xp4+Dupv/KP/m8Qfjzv7/ijBqozrQqveimhKmVVpukM00T79x+hgweP
6tIT0ckPHz5Ob7yeFI38TCafPz+NliTt1KXBkWM6i4leH59Ex46d0KXHgzGF
PHvfYfpoyopo5LWZfMZX62l72kFdukf/1lE/RZQ5rQude05DatK0KTVV/zdq
2ZeS8lRTfgo92DaOUvKLKWfRcLq750AaPv41evGxOBo+74D6kk6KzrW4uIRe
G7sIf3r9dF1tKjm8mkY9OJJS80v0N0VHM+loEf6SSytnraTcouOUPukZemVV
PoGicMcbdF3rv9Dao+SFsKzDLLduPUBffrFOl27juoJtE2jYw/EUHx+vIPBb
Xf0+TiNW5zOF+T2RPYde+ed7lJpX7J3CdSX7ZlDHS2+hxLxQ9nWZfPIHqZSV
aWDNiGtQcc5ieqn/4zR5SwFGZLidTIV7ZtDohOW07/B+Sh7dhZr0TqA9J8y0
1gSPPWWhsTnGvrpIl/pz3ZHVz1Lra1+izcdkFDWpMO19emjKDPp4/EgaPfEH
2nqkREbo6vnZDLV82W6aM3urLvXlLp7I+pZeHrOM8lS3S/bPpBsa9aSFeSTz
VZw5g+LGbqJjmm8gh98wOU5MXt4xXerDHEoOr6M3B/ahwS+NpzHP9aU+Lyym
3GJ/jihnHvWoV48a6+3ZnDoOTaX80K0nzPLyCmjCG0t06dFg8nOYfPZPWykl
ZZcuPYJf+4j+lokw+wUF5og+HIwp5Hv35tPE91KikZ/L5NO/XEcbNuzTpYei
k+NsjXolkU6cKA4jP4/Jt28/SAkfr9Kl+GDy85n846kraWd6ji49GDkfQlRY
WEyjRyVSSQkTuTEvYPJ1a/fS1zM26FJcMPmFTP7euym0T0k5lB6ITn70aCG9
OmZhNPKLmHxZym768cctunR/MPnFTP7mhCW+grgvcj6ECGph3NhFpURuzEuY
fNHCHbRg/nZdujeYvB6Tj39tMR06ZI7PgOjkubkFutdRyOszOQ5A8lJzAPoH
kzdgcgzzyJFCXeoXOR9ClJ19hN59J7mUyI3ZkMlnztxEK1cYqXdPMPmlTP7q
6IV60VHqpn+hdmJRaUTHdkylIf2G0oixI2hovyE0Nf1YmIwUlmZA5kR3Z5ZR
9VnhPpreqxXdl5irpH8J5SbeR617zaB9xaEK5TLHpHTkuorosxq6rpaahaXU
r2kH+iSzWPMrzpxGHZr1p+R87o6tehoxEHS4CD4z7p9ptZMEP3cedWnQiWbn
8IAOzqZODbvSvNzQ4QonzPD7E5fpUg+us5Wcz4aHMc0fRoIaxoDSYbjZNGbI
H77f7M/qTfo3UNn5HIv30Ve9Wpeu44J7qXXvqOvYRKZw3GJ/Cm9kjqHKryYd
T0+gYQOe1Jv0yQHDKCH9eNgmFU72FN4ZTN6UySEEV68yJ/cO/NonuRkTwTiV
s/bHYEwhP3DgiBbfUcgvZ/K5c7b5yvcPweTNmRx2BEQtSrdHJ4cgfOvNpdHI
WzD5wsTttFBJZpRui5yPK5gIghW4KPUOxhRyiG2I7yjkLZl86ZKdNEfNCUq9
gslbMTkGhxlHqaeDPI3plKWgrQYy+9mGgCjHDoUm7+kPehu3fvvNRtq1K9f+
sDU3rV+3VzejdGsI77ffWurXMcTvuAmmxu7debp0iwNCeoE+isdzSlkIjGwc
+xlhED/N2qIdBAviSm5KV8bOtARjH/0+BILdPhviKm76SvlYmzZm61IPB8RW
pjt+vIg+mLRcl04tC6HmX6+DsvUNhF6HLdwKgwETbn14NTfBHZz0vsHsHsIb
6rjEKCqBuIabsOPgBKDUzQEhvSgsLPJZnWYg2nATjoWYKAa2NhUdTKbpEwZT
o7qNaPCE6ZR8sMgARvcwnXLVNRkR3UAXxD2XOuilzg06W3ro1Aq7nNIFezK5
C9dyE5TLrFmGUMRcrGrb7mqsbuhma2/J4pxuunQdN035cAVlZh7SpasdrIwH
F4NfupE/hu26kR2WCF7wDORABvOK3VeV4bE1abNsy004wOLgyHGinLkRLKM7
rZtktZSyhjePkon7eO246ZuvN/hbz4igGmqbJ9HkF5RJ0LQHLcglmcxyOLDC
eP68NNq0Kdtm3J6bbDXcOQTinbdLpykCIienwLfJXRCyuFCwkz8wG8nEsbwO
3IRQFjqJUif8aiG1gVthWsHZtD4UuxXOcDZ7dDeE8GZt7YLA/paN5YKQXsBX
+2Taal0yITPvem5CGOzTT0zT9SEQiCJlZeXbEMyRvvlmA61da9RwxxAI9r9s
iE7cBPmUn2+MmA7+JK7j1h07crTlT0QcTPM/hHCTwEYHB+/1TAcNIx4aQ/B6
a3Pvu2/NbLd3QEgvYCyw4ub4mteFmxKUqkzn+EC7EIjk5F2+UomAADqWUi1p
KAR6IGYLQ3TlJoQHJMLS1gGxlukwD3KWTTiNbfDq2tRbvChdl67z12ENt2KW
JAzCH97ETTCxZXtcG8Lb3swREJCSiCkhhOOCkF5Aan813cyHCdd5N3NThjKc
PpxsRtYmBGLqRyv92BtDsI7X1ndSkpmBaxwQq5kOmk52g4myiaVRJlRzdQjE
mtWZWm87IHCwMRe+xtDrsIpb4XQXFRXbH4p3uHNnrlZtKF3l4L3KYiBukYn6
iZ1XJvZxZQgEwqNbNu+3IW6xOgjHC6X6+vesGCwfZyDCpf+kB/ZmiuiBhIfV
NPkBmFCjp5xxiZWMCU/js0/NvjKRTjH89WYUnSGB1YoYPTHHKgK6+Knqnnhn
3EX2i7TNkrhguy7VC2MdLYyhLaHljADxJHLIxGfFb9PGWAZ7N5eEMSxnQGMF
Y+HkiiqKYA2vCBFROBM+a8si8lmXM7IhrG1jjFmzc6u1vPjcJuIaYCHFHuVI
ZWgIQxhgKJngtn/PA2UD8wOlFiEQ8CLFjGIIDgxoZ1Q8RB1A0GJoGbdCYIvn
dn7ZD7EFMNnKbpLIQxneslXggop5xBAc8tCmGSJtcMIvD4HgCKQNwUEWbY6L
bdPMASED2bbtgB9hMOF5E/vxTMARE4lS0xAIzAPmw4K40+9gsn8J1sQBkcJ0
tkd/YVkIIMvebeKvQzK34jZTdC9/eBc32TuvcQhvexIZog83rVLmkcQ0Gjkg
ki06mSmzyfnizNzlyKm8LAQCilM8SIa4m5ugauXG4VIHxFKmA83nnxl5fHFZ
CLgwUAlqMkMhYMzhvsyC4Pi71uqi9Bv665DErdCpIveMhJE4v7YxERBBqYGD
9xKmgyktsSWGkMtNrMHy5Rm6VN8BIb3A0ZMlNzJdLjz0/GZk5FlNbggE/XA9
5YDAThwzOhGTGQrBNrkNwZc65mBzdO0SB8RipkMP0JPSAcs1knYIxbu92F+H
RdyK0YuJzB/ez03z5m7zT/pFDt4CgQgc1qJ0veQWTftR4u5eGAKBnSAZDBEQ
2ONwhtR24rBTbXKYPgawgoGhhcwLByKBI3nmakluG/Va4s4Ua2mikHW09guw
g2IJEIX1BLJNwmHcE74mpcwV46hru16WWXS6bRbxRASbPyfLxEbGhbRdMp9b
oeQkGmQEgNz9ag0gsteo4nCjJ5ashYhpSGRWEIYirbkXfGGtPS9Y3yjFYgmV
N8dhAfOB7yBizMhjuZHXbr6I6urShRCLKNbkB2ENfYrJtlg/wk04MBL5Drv0
qcFzX45gkuwA2IAy8EZluUNgIKCkpJNY604IGFuIR1gQnFChFcyokQv0edJu
mZZKc7kVgWKORLEq9gZyE9SKSMSzHbznMR00iGgHhhjETfYGruuAkF5AIsmd
rTFGvMe4CcpFZF6dEIgvvlhLe/YcsiH+xE3YvOLR1nZAzLFmSm7EjFUlWVva
YxLxelYIBLwaOUYREBCv0AFqMxkIvQ4/cSukgHi+xig0WWjWHoBcPtPBezbT
QQVI5I4hnrBG9u+X52vD9wwHhPQCAUWRRca69YZwE/QjIkGwU04PgYBxLiYR
QwzlJmwoDAThg9McELOYDj66RAuMmc4cK+yuN+e1r4w6q8+9w54WS+ZUxyha
VwGvyys33Bbchcpc60gaJYYqIcoLGLcyGRxGEPrwFY1+mA1eactAgjArV+7x
Ayb6OkcfzpZVw6R5JcfaIpbvQ67H+Ljqe08JKV/ES1mZzJhqZimNWpQgkg4d
VVUASc7czwNUlbfEJKMJmkHC+LUc57lVDP104btWPZYxu1bbdcMoq8o3Lbok
SW7lTSqqFnwoYwm2NYuBJoptKtlb33+/SbtDhjhkNSrOKnRhQmBdCxPlPpa1
nB7RilTjJRu/s0K5WbEsU4hh3iwGmjDjXfK/cM0hqfIuqzryxJSXj2uiYxlf
8AK5+cjqwAaGXYKSKITy5rNFLk05Q7jNYqBxOTWSIIasGOgws7VClqSc+C0r
OJ4Wju9cl/syX7Cbd5eJwFcq149X43Sej3JEtZuHtEVx8SRvEZeYknKh51Tb
Eq0qDnx5+YfRIuyTQEaiZmC/Swi9Hn9SgTxINvWeYVQ4QHCvtqcddMYBZjId
3FFJHTSz5j1rQcAgzVA+lMuj/o7pcDsgWezGHvee445CVeJeX65C8d/3/BkC
+3KDyZ89zxOJqBScYTU1+EL6ikighJdNlon3V26CT6u+0AykX4jFStKTucQ0
p0J3Ix4/vHNdft4plahzOSq/Nh4MFcQxqrp//w1j+2Xxavh1W7fsR6ynqrtj
LK3/sV1nZg2hD+y83NwCl3X//40XfQrlhaCSvr/ixnNlypi6mn6dLG5eXoEz
LSYYw9k1fUcnYVTXBXGFunuyXWd1+ZgrCyfWHouqRtqC3Dm5rtO5x+Z5ba0y
PcF/0LO4OINa+4whoWQl0tfG+lxvBmOr6FHgbc/+/Uc+5c9mfrfJj9Hbn0V0
SKxMqEdwycrK96ZxHV74SgD22mAINnB9nZyRkeclcB3KEq4KgRBbFNoel4Lp
6TneVK5D+kmZbDM3hPj8OB0wWdLSDnhTuA4RzLI5b06IWtaMg3z9+r3eZAsW
84PL9XaRqyCrj4wx8cQmcR3CwJK80C6Ytzg/iN7LG7uJXLdmTZYfc28fDCER
CFxdynPed7nOTu/uEAwh9j/SD2E3467hHa77WfalG0IecONZJpYS0eW3uA7X
ImVzQK1JlA+RnCY5jhO4Tuefcjzw+mDe8oYaGxeZEDhGr3Od5HqVZsE6IeRN
NE4UnFAlfrzxXAdTF9AohUDI42NsGZjtajK9cVyHLAy5n+8UDCEvcrHqEiIc
w3V46SK7oXMwhCSTYT+iFxj3KK5DzFzuFbpErsM5FtE484jNG8l1uHWQK4Ou
wbzlvS3OHcRZZuYh72Wuk/tk3H3cGAxxnk9epC/jMIkjuA7PguRWhyEe5/Wv
6gtyeYeLvAo5U8O5Dk6+XEKZ9FS+4vpFLsjlzS7OD84VBNGLXAe3R15O3Gz3
pPxhUhdref+LvY8jlJWZ7/2L6/BoQxRetwjWlbwa13aFDBuXspDJy1J2e//g
OshFSVHu7h52VVyIS84j0tAg4ZEt+jeug5Qr+/aytAtVcCFen+lwn6tnXmnn
57lu8+ZseU3DWbl8CqrsQlyCbziDGGTigu2+6w/pgHMJ7iad1nmMJY6MHYob
ZQXl/ZnrYNmJhrg1GEJe9SI7DoJDKVPvKWteIA0A0dOC0ILMfFhDGxXYokjy
U4Ry/YmgBCQ6lrNXMHt5IgpXD+wVS/8eF5sfV9GYhN7BEE25I9jDuH5Hcof6
RO7DceMhCYi3BaPIkyhcG2lLTZ1CudiHYoXBh9LtwRDNuSNYUGTAIyajZkTS
OqCwsM7Jybs4O9KazRYWe3gfaj78xBh5xI+luSOYfUtmDz7QYFBBR48WPmDN
MLS2MsU5p9GJIs8ooYtg6M2fl+anfCGTFXlM2A93BUPIA0ZkI2L7qKPkJ+GZ
3IdkaGlOTXRCXGVtLigH9ESdTklmlLEgSeDuYJRrGAXpBtgZ+F+Zy3dY4NAy
0DxqSPdErkkbpoNgxlaGdaG+kfxaSAgsFWyY/sGdaMsosFJh5H3x+Voo/Z5c
bR51LdfgqhMDgoHa8xew4NAd5B6orSFPBnDrAn8gW83JfcEoHRkFGh4LAQmv
1lpebyCUi0GtSM3gVDknyg2Mgtgp9hn8GGWGdOFq5R3oLmLDqEHFBQMZE6um
9mIwM5ihpMXpeotJV2GeAg1HUM1/fOQ6dWEMOBapqRmaFhkViJvK7MMqxF7E
mVSC4uHgHt3MaDh1oIYYxh0QgnlXWW1wJXRvk0xvHw2G7MGfIVEcq4YO4nMY
0FdwG6QXjEnsdOwHdN5kBbHeqdLXG0YhnKx3AbY/lAd2Am5VVE8aczNWBQ4i
5gCiCym0aqymQ37KTlW+6TByvpY+Fgg1Q46CM/7EP5AC6XUJ00CWQMbgWIMG
a46EVazGkOAulu/fnZDTjmA2jEPlJ6lWtd8VDhjCHcQLHLUl6vLYIYARcIeb
hxgLDgcOCfqJMSlxxCo2vH/l/Hcr+lo7CQcQig/iTfVS0asJ8kxmF9YZpZro
kGde4WL6UKdHJsRQezhPubkFbJjENJ+xvhcR9QavV4IYL0SwqYK3IVn2Iar0
mw9Gq9i/7aYL/C/JedX+AxZjHRI=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      FractionBox[
       RowBox[{"2", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"r", " ", "x"}]}], ")"}]}], 
       RowBox[{"1", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547308380930311*^9, 3.54730846194984*^9}, {
  3.547308601034618*^9, 3.547308606054801*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r$$ = 0.924, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`r$$], 0, 1}}, Typeset`size$$ = {360., {109., 113.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`r$3161$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`r$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`r$$, $CellContext`r$3161$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{2 $CellContext`x (1 - $CellContext`r$$ $CellContext`x)/(
         1 + $CellContext`x - 
         2 $CellContext`r$$ $CellContext`x)}, {$CellContext`x, 0, 1}, 
        PlotRange -> {-1, 2}], "Specifications" :> {{$CellContext`r$$, 0, 1}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {154., 161.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.547308608105587*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"r", " ", "x"}]}], ")"}]}], 
   RowBox[{"1", "+", "x", "-", 
    RowBox[{"2", " ", "r", " ", "x"}]}]], "/.", 
  RowBox[{"r", "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.547309046328525*^9, 3.547309061091929*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{3.547309062196207*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{"r", " ", "x"}]}], 
  RowBox[{"1", "+", "x", "-", 
   RowBox[{"2", " ", "r", " ", "x"}]}]]], "Input",
 CellChangeTimes->{{3.547309106030465*^9, 3.547309117744681*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{"r", " ", "x"}]}], 
  RowBox[{"1", "+", "x", "-", 
   RowBox[{"2", " ", "r", " ", "x"}]}]]], "Output",
 CellChangeTimes->{{3.547309110088826*^9, 3.5473091182951612`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"1", "+", "x", "-", 
    RowBox[{"2", " ", "r", " ", "x"}]}], "\[Equal]", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.547309165702836*^9, 3.547309303860793*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[NotEqual]", "0"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   FractionBox[
    RowBox[{"1", "+", "x"}], 
    RowBox[{"2", " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{{3.547309182873329*^9, 3.547309194615893*^9}, 
   3.5473093045219803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"r", "\[Equal]", 
    FractionBox[
     RowBox[{"1", "+", "x"}], 
     RowBox[{"2", " ", "x"}]]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547309350065503*^9, 3.547309365466971*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "r"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5473093663860083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "x", "-", 
     RowBox[{"2", " ", "r", " ", "x"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"x", "-", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}]}]]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547309433310916*^9, 3.547309466085739*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", "r"}]}]], "Output",
 CellChangeTimes->{{3.547309459950184*^9, 3.547309466557254*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"2", "r"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"x", "-", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}]}]]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547309475637491*^9, 3.547309498032165*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "x", "-", 
  RowBox[{"2", " ", "r", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.54730948902859*^9, 3.5473094984876003`*^9}}]
}, Open  ]],

Cell[TextData[{
 "After generating the r-quotient spectra, the next step is to take the \
median of the r-quotients, that is, the median of all of the coordinates of \
each spectrum. The r-quotient spectra lie on the line between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "r"], ",", "0"}], ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{"1", "-", "r"}]]}], ")"}], TraditionalForm]]],
 ". This line is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      FractionBox["r", 
       RowBox[{"r", "-", "1"}]], "x"}], "+", 
     FractionBox["1", 
      RowBox[{"1", "-", "r"}]]}]}], TraditionalForm]]],
 ". Applying the reciprocal median formula above to the points on the \
r-quotient  line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"q", ",", " ", 
     RowBox[{
      RowBox[{
       FractionBox["r", 
        RowBox[{"r", "-", "1"}]], "q"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "-", "r"}]]}]}], ")"}], TraditionalForm]]],
 " we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{"2", " ", "q", " ", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"r", " ", "q"}]}], ")"}], 
      RowBox[{"1", "+", "q", "-", 
       RowBox[{"2", " ", "r", " ", "q"}]}]]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.5471975748960457`*^9, 3.547197592175139*^9}, {
  3.547197643493672*^9, 3.5471978648037367`*^9}, {3.547197901058646*^9, 
  3.5471979532156067`*^9}, {3.54719800877719*^9, 3.547198081874114*^9}, {
  3.5471983358347816`*^9, 3.54719842826193*^9}, {3.5471985482233973`*^9, 
  3.5471985692296247`*^9}, {3.547199518378127*^9, 3.5471995293994617`*^9}, {
  3.54719960252917*^9, 3.547199606380126*^9}, {3.547308750971302*^9, 
  3.547308812020582*^9}, {3.54730884220995*^9, 3.547308869185907*^9}, {
  3.547308942288823*^9, 3.547309002137504*^9}, {3.5473095776827307`*^9, 
  3.547309581653508*^9}, {3.54730980486635*^9, 3.547309842903023*^9}, {
  3.547309924717206*^9, 3.547309924811638*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rMedianAndRQuotientCurve", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", "q"}], 
             RowBox[{"r", "-", "1"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "-", "r"}]]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"r", " ", "q"}], 
              RowBox[{"r", "-", "1"}]], "+", 
             FractionBox["1", 
              RowBox[{"1", "-", "r"}]]}]}], "}"}], "+", 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{"2", "q", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"r", " ", "q"}]}], ")"}]}], 
             RowBox[{"1", "+", "q", "-", 
              RowBox[{"2", "r", " ", "q"}]}]], ")"}], 
           "quotientLineUnitNormal"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", "0", ",", 
         RowBox[{"1", "/", "r"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rqpt", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rqpt", "[", "q_", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"r", " ", "q"}], 
            RowBox[{"r", "-", "1"}]], "+", 
           FractionBox["1", 
            RowBox[{"1", "-", "r"}]]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", "q"}], 
             RowBox[{"r", "-", "1"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "-", "r"}]]}]}], "}"}], "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "q", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"r", " ", "q"}]}], ")"}]}], 
            RowBox[{"1", "+", "q", "-", 
             RowBox[{"2", "r", " ", "q"}]}]], ")"}], 
          "quotientLineUnitNormal"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rMedianRQuotientArrows", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"rqpt", "[", "#", "]"}], "]"}], "&"}], ",", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"refPt2D", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], 
            RowBox[{"{", 
             RowBox[{
             "0.125", ",", "0.25", ",", "0.375", ",", "0.5", ",", "0.625", 
              ",", "0.75", ",", "0.875"}], "}"}]}]}], "]"}]}], "}"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5473107151456633`*^9, 3.547310843866932*^9}, {
  3.5473108783840733`*^9, 3.547311090649839*^9}, {3.547311249085258*^9, 
  3.547311265375798*^9}, {3.547311378310196*^9, 3.547311402621615*^9}, {
  3.547311617010564*^9, 3.547311674762067*^9}, {3.5473117696027517`*^9, 
  3.547311804197371*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineLeftEndpoint", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "2", "]"}], "]"}]]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54722535705967*^9, 3.547225382853983*^9}, 
   3.547229709457631*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineRightEndpoint", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]], ",", "0"}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547225393229892*^9, 3.547225409952771*^9}, 
   3.547229709457706*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineUnitNormal", "=", 
   RowBox[{
    RowBox[{"Reverse", "[", 
     RowBox[{"Normalize", "[", 
      RowBox[{"quotientLineRightEndpoint", "-", "quotientLineLeftEndpoint"}], 
      "]"}], "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54722523255466*^9, 3.5472252805683603`*^9}, 
   3.547225647688549*^9, {3.547225684686095*^9, 3.547225698608755*^9}, {
   3.5472257366007853`*^9, 3.547225740035652*^9}, 3.547225908143572*^9, {
   3.547226535464799*^9, 3.5472265634310637`*^9}, {3.547226668644137*^9, 
   3.5472266708818398`*^9}, 3.5472274424443893`*^9, 3.54722970945776*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seventhDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"rMedianAndRQuotientCurve", ",", "rMedianRQuotientArrows"}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472265888683357`*^9, 3.547226651702548*^9}, {
   3.547227542977453*^9, 3.5472275549610777`*^9}, 3.547229709457896*^9, {
   3.547311694275868*^9, 3.5473117213341827`*^9}, 3.5473121153456373`*^9}],

Cell[BoxData[
 RowBox[{"seventhDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "seventhDiagram", ",", 
    "\"\<Figure 7: Median r-quotient as distance perpendicular to r-quotient \
line. \>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547227585016399*^9, 3.5472276112806387`*^9}, {
   3.5472295584134207`*^9, 3.547229589070476*^9}, 3.5472297094579487`*^9, {
   3.547311878858325*^9, 3.547311889008466*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJw11H0w1HkcB/Bl93IeunRJubrztEM6DS4x1Hn/ruk8dFZauiNHJrWlK+ch
FBFdW7sknQiTjfau7jh3CePaomQ9bXSRx6xn8hBtu8suG+pWM7/vzHe+85rP
5/Oez19f04M/Mw9rUigUhvouv+TZTXen1TbTiNsTDfwaXwLOflKZaRNpb2y+
lDNwVkQ6GDqzE/e315MOh0jIjSh7RDoJHiFN/fxS0lfgzvcSJOeQLoCryb4w
HKIRuu36idm0u/DX6XGSyqnEDaf36wvcBbh8PNnNnEsloswljKt3qzG0vupm
qCmVEBlrLFUb1sGzLDzwZYkmsXLAfqTLVoTuOteAETdNgmqw0vEF/yni6zPv
G3ZqEKFeYY/0KK3YsTqWFcjSINxPjiWaarfBuD3e1+IdhaB02EZ/6dKBz9jz
v9HTKIRNtq5WEaMLDv9kb7tlTiG+ow5/2sh8gf6d1ywjT70HUZSyT/yLGMkf
vb5Ny3mH4lLh1pD0PrDucYqu1y9BpvjPfbB+APFuBhG8kUVkyF799E41iOZj
jS11tEWM5ThoNCwN4UDi43K5/QL+CJyyS1k3ArOwooAUn7cw9zlacvGLUVh6
dV+wSFZBj+X15Oz2lwjQUZ7cwpvHFOOrm24+Y2jev2Nxf9UcLrD66zz8xpF0
vUErbVqJtLwZtmvUBELu7ey00lHCm9p6NSF+Epw6TasmBwW0URx0PvEVJllT
BlePzMImR1rLzp5C3KhQWHdhBvpmS6ce86bhyRxSLpbLESSKbJwTvIZXnmT6
RqsM/G/H2pdaJEiLo585IpeCLze1cel4g0888tPtzaTgBIVkVMZKETe+prk7
SYKNvUb2sQtSBH8elbxXPA3rXXvKc8/IUBlvHrrOZQpyZ6dzgo/liMko6yxN
mIThbq3YmFQ5KrhPPX8Qj0M6zhXYGs2A6dTg3rp2DJtuSM04vBnEiHYzfMNG
IXbpPOZmPAv9c8bn6c+GsSssnEIrnoXeTBvxRG8IuhWSykAbBdZz6Xryln5w
Lpk2lFcp0JIXzH/7jRhJjLY7UR5KcDTA4wm70GkR+uhZkxKEpV0hM7kdw5fL
Nlr5z6Gkari6dL4FnquGC4z75hC82bvNw68JdnHp1MSgeRDxxpKDg7V4GiUr
e/FK7QAx8fu/D1DPdkx9fkIFgpPWlvX131jjn/DjhnAVKEycyW8sRrC1cMuh
SLU3yuiFPsVYeO7VoohRofqOb0xl6F+wNWGtNUpS17s2GI1kFSL3fmb+gQy1
LYqCbCW3cPyNrGy6Qu0P+TwIahzZ2wRkXh5WXEv4PvGBCkkf8q6jYIe2alW1
2h/yctHBNXHZKiLzsuBC39N4WkzmpSF1LjO3pk/tkuX5VHQ/6TmmO0juw0VU
BGslb5ScZ+PPhwnM6tfkfAIUvwrNtaVqdy/3n8bOw9qKvXKyPxq9ulnZI0qy
/wSsBnqOWqvU3rRcP4yYUhPn6AW1ryzXA1HLZuk+XCLNwGr/4t4VlLcg/7H/
AQGLXkk=
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
A2jV4Wo=
        "]]}}, {
      RGBColor[0, 0, 1], 
      ArrowBox[{{0.20312581801471954`, 2.2749853413297108`}, {
       0.5193875525910301, 2.4726509950939377`}}], 
      ArrowBox[{{0.4062516360294391, 1.9499874354254663`}, {
       0.9764569820138291, 2.3063695081566395`}}], 
      ArrowBox[{{0.6093774540441587, 1.6249895295212218`}, {1.361010984280648,
        2.094765404697359}}], 
      ArrowBox[{{0.8125032720588782, 1.2999916236169775`}, {1.660499081949212,
        1.829994554182873}}], 
      ArrowBox[{{1.0156290900735978`, 0.9749937177127328}, {1.859297281321092,
        1.5022918583064075`}}], 
      ArrowBox[{{1.2187549080883173`, 0.6499958118084888}, {1.937705863213608,
        1.0993448636615066`}}], 
      ArrowBox[{{1.4218807261030368`, 0.32499790590424427`}, {
       1.8705276551839773`, 0.6054051725781671}}]}}, Axes -> True, 
    AxesOrigin -> {0, 0}, 
    PlotRange -> {{0., 1.9380744290643892`}, {0., 2.599983247233955}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   "\"Figure 7: Median r-quotient as distance perpendicular to r-quotient \
line. \""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547229593004534*^9, 3.547229709458009*^9, 3.547298779434237*^9, {
   3.547298813682805*^9, 3.5472988395567217`*^9}, 3.547299134825918*^9, {
   3.547299165215502*^9, 3.547299177646183*^9}, {3.547311882110387*^9, 
   3.547311889916273*^9}, 3.547312117467767*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Move Median R-Quotients", "Subsubsection",
 CellChangeTimes->{{3.547229882993054*^9, 3.547229891327001*^9}, {
  3.54723011455107*^9, 3.5472301264890823`*^9}}],

Cell[TextData[{
 "The median r-quotients in the previous step are displayed attached to their \
corresponding reciprocal quotient points. But they should be attached to the \
sum-normalized points. The next step matches the median quotients back to the \
original points. Substituting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    FractionBox["x", "r"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " into the median equation above yields ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
      RowBox[{"r", "+", "x", "-", 
       RowBox[{"2", " ", "r", " ", "x"}]}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}], 
       RowBox[{
        RowBox[{"r", "(", 
         RowBox[{"1", "-", "x"}], ")"}], "+", 
        RowBox[{"x", "(", 
         RowBox[{"1", "-", "r"}], ")"}]}]], "=", 
      FractionBox[
       RowBox[{"2", "x", " ", "y"}], 
       RowBox[{
        RowBox[{"x", "(", 
         RowBox[{"1", "-", "r"}], ")"}], "+", 
        RowBox[{"y", " ", "r"}]}]]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.547229949963725*^9, 3.547229954213456*^9}, {
  3.5472300908227367`*^9, 3.547230208811603*^9}, {3.547311990975381*^9, 
  3.547312063919002*^9}, {3.547312212416731*^9, 3.54731221500848*^9}, {
  3.54731234034552*^9, 3.54731247721067*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "==", 
       FractionBox[
        RowBox[{"2", "q", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"r", " ", "q"}]}], ")"}]}], 
        RowBox[{"1", "+", "q", "-", 
         RowBox[{"2", "r", " ", "q"}]}]]}], ",", 
      RowBox[{"q", "\[Equal]", 
       RowBox[{"x", "/", "r"}]}]}], "}"}], ",", 
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"{", "q", "}"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309894278715*^9, 3.547310015209132*^9}, {
   3.547310046007867*^9, 3.547310046420391*^9}, {3.5473120513383827`*^9, 
   3.547312055784575*^9}, 3.5473176358843613`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
     RowBox[{"r", "+", "x", "-", 
      RowBox[{"2", " ", "r", " ", "x"}]}]]}], "}"}], "}"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547312195394025*^9, 3.5473122062857943`*^9}, 
   3.547317635884602*^9}],

Cell[BoxData[
 RowBox[{"sumNormAppropriateMedianCurve", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "-", "x"}]}], "}"}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
         RowBox[{"r", "+", "x", "-", 
          RowBox[{"2", " ", "r", " ", "x"}]}]], 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, {
   3.547312129012969*^9, 3.547312172914791*^9}, {3.547312523893662*^9, 
   3.547312570117124*^9}, {3.547312647770303*^9, 3.5473126690748377`*^9}, {
   3.547313177569745*^9, 3.547313183875668*^9}, 3.547317635884653*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxV2Xk4Fe/7B3DSok1ZKsoW2mRLssYdiZKEKClaLC1CoShZivhYkhBRlmxF
ElJ2pSSVlBb7TtazzJk5o7L1u/vj+8fPP+d6XefMzDPPPHPf7+ey9qS7pdMc
Hh6e37w8PP8+//8fAZVSaubLYsxh01i75QNeAo65P93if/s4/Lm93s6AjwA9
LZ6OI9HnocJrIiFoPgEx++i6lVGBkPatNmvOUgLceoL4IsKiIbTPV5wSI6B0
c99C18A0OP9Efk/yVgIMPtVKr3IrgD9xb7aucCYg4IX+PUH6FWTwOmwN+kyA
0tNuXf+JerCPHzk6rsCBunHHxFCrL6BuoeKVE8SBzPzTCQou32Hn1+GNmp0c
aIo9tuvp+lZojwpPi9hEgrQ4FX92dSfU5qdVOXuT0HbZL3rRQA8oDSqczqsi
4ccwdeVvTh/Eh6cGx/0hoa+rsonPdwDELB4p66hREDzafWRG+ifYrzD9OOpI
wVUHE6m/RUPAJZYMf4qi4GTe0fP1h0cgwk3R6NZzCpI0b8S1HBuBlo/egUIv
KIi/fpbz02kE5v0nfegOWnhS3JrHYwTkSKe2xBIKQqKmazaHj4C0WL5KShkF
BQmXpO3KR0Cz5d7auCoKXvWaO29aPQp1bmPv1N5ScPzzSKVDyyjImf75Y/SN
grnWH85Vd43C8kNCvWVof8UCBdHBUTgdoWim8J2Cb2VrO+uJUajvU3+97AcF
U5nvJyQXjUHdr838Tc0UeL6LmJuyfQya9+zn0W2nYMsKgYahtDGwJ+OMynsp
iK7UN5F9OAYbBVqEJfso2FCi9cP+yRhEHfA9dQ294PFSwW9lY1DU9fyBUT/e
b5eTRMHXMXBcFXT84wAFrwM/Xdg+dxw+b/ozVTVEgVb+SfNk53FQM6jfZ8yg
wOPEVGzKuXFweWuyMwkdPvx7NMVjHISL/tYw0Mv3VjXc9x+HJRqNttFMCu5X
ZZ+9GT8O1fH3fjexKDjD/cDRrxuH2dnuNj0OBTbSy31/yTHgkdJgWzWN/j2n
vV2eAYa1wl1zJihcX/K7q1QYQDZ0nTJCd1CFFgHbGdBcvVSkAf1gcePK3wcY
sP6C19umXxR0OWZZVl5nQMpZwWt1fyj44W/VEdXDANPbH3msZyhgl6S7EIMM
2HF7rmUI2sC9cIPFGAMsvkholaAzbCpkltMM+BJRV79qloIlPooywYuYIL3p
HeMbemv64FbDbUw417ZFT5OHC8xuvUt3tZmg0nF+5CRa0XzuwDgwQd3754ab
aErMVyfahAkj6YbOvWi/Jy9/Nh5jwu4r+T3XeLlA+DUvkQtnQvlMfUXBHC7s
L/o6fvYWEyynbIq//zO3jyqIY0JpgIf+b7SH6oC/dioT7v5cKabHxwUhlpD/
zmImzLWYqKxF899WEVDsZkKJbtynqrlciM1Q93IeYIKjfM7CDnR/CZc3dYQJ
5Kqktl/oqkr9uKUUE5RODKqpzOOCk1fl7d4FLEgxGW25h07sE+my28KC8/fl
6uznc0HUV/vxH3UWBPrpiHujj6+0vhy3nQWXekzJKHS3/B+Rd8YsOCS0QbIK
Xdc0ZiRtz4LlGiqewgu4EHI/W7DYgQU1KjHvNqBDn17qMDrDghgz/3s6aD++
AZczXixQeVBZcwL98Uvz1fRwFoi3Gc1/hOaektJVimYBr5a7dSk6IiRpqvQO
jrezQLYeLbq5xONjGgtCDhnrDqFhmfTmA9ksYHQF/MdFa2uY9LU9ZoH2/ETL
OfxcONl33mjwBQuIIDUHcfStNDX6VCULWr2TcjaiIyV2PxirYcEjk0duaugt
yQyC0YDjeXbdywQdU2EYd+4rXr9Z9bkVWvHzFbXxFhZUci287NEpPQIuP/tZ
kLAu0/U8uq55K++JERb4PS9/6INuKqmN7WCywEp7wfFAtCedKWNN4Xy6+saH
olVmS558+s2CdfMX7o1C22/vU9s1y4KbZQ/84tDiK+eWVvCxoVpbQykJfZzJ
p7FlIRsKtSuOpqL7pGoLswTYYHBaamEmevOCjRvFRNiged5666N/4/8tlBQh
xgbdGbOOx2j1XacXzEiyobdkhucpelZr8XlXOTbcMTqQWYi+K9XzrXMTG4r3
6b99hr6h/U51rzIbrrqXOTxH837MjixVY8Mi0ycBL9AiS0/0yWmzwemagFgJ
+qZmm0o0sMHjcaPyP88GklcmDdkw7dDz5t/vy1dEv3QwYUOegeqPf+cbWHtn
9uN+Ngh1lToUo80bBjW2WrMhsc7RvQidpXHSJdGWDXHRG37/G6/OdeLu7DE2
qHwgZ/LQmnUer046sSGQpzQwB+0r1tD39iwbvKpPB2ah02/2TG84z4bWyInp
NLSASrRg2EU2HCMtJ+6hvy+skRq9woZYT/dz8ejPUtYbdgeyoT9G91g0OspD
eWP2DTbEfMlvDEPvqzBYcSwax5O8Q9b33/3R257Z38H5WJgU74nOcBhwsUti
w+RN8wSXf9cDAUWbTDaMJmTtsEWb2hzdZpXDhiwPhVHzf+OdmmezP58NtkJ9
ksbol0JLGQalbFDXztyiigZRHTudKpyfxfcENqCvf3AaUX3NBgvVaJ81/563
mqWpVAMbjvMZUf/Wu4Yd05jZg+f7EnO9Ad+Hp9KnQroH2aAaqFxXhY7Rkupu
HGVDja1LfD46g3e8NY9iw9yO6M4otOP63Ol8zBGLygxn96B3rI75K4s5Yo5v
ZJYGmj+zLOouPwEjX4Xb5NC5txIsAjFX1NoWDs5gPbg+H06brCJg+aLWyFx0
HvfbxwrMGTZ1DXFx6H1XdlcoiBOwcvWDjf5oJcU03aVrCVA9U0rtR6vNlDbW
yxOQe8F8JQvr03H/P7fUFQngviJ8v6MNlco6M5TRestdy9FKdTdE/dQIEPW8
zwlG5yrwisrr4fiFEq6LoN1ujGyN20HAmGa3wb96eFiL1T5jQABZvjOqDT1/
k9yHz8YEtBtp1d1H680f2uxmQUDw0StlEmiXdWvIOEcCkhhP0hdi/V1a7PhK
/hQBO6/smerDeu1jHDn31RkCipe8eV+GttyiwRpxIyCFK1h/Cv3C33iX2mUC
JPXO7q7CfpBXmsUtuEmA2XkbEzPsF9cH/cT0oglQuHf9jwTavkXr2YcYAgRu
Rksw/1IgpyK5qz+BgP4B0dowtPVUT++idAJUHsuEVWK/6ky4Mqb/ggAC9v1c
gP2Nv3HzwbpSAmQvmnc0TlMQp1y7zaSCgBc/tHfdQR+dPGtu/oqAqJQbXtJo
u8/fONYfcL7d1UFligLbRNkWo24C+ras9N6G/VVz4m1F9TwOqAa08jRzKXAT
V5NYz88B1o31RZHouoEcOnIRB74oXm03QD+ScF98eBkHXm3kjX5CUeCr9qx+
TJQDz2pqI6+SFJhIF13lbsbvC1+/5CEoUPkZa59mwQGZgPTUB2MUXHwgGzRx
gAPsNUIixuiejgZx04Mc6FO/NzM+iud3UXxK23KgPLRCWQ3N13rBzMCRA2qX
AgSqhykQ1z10puYSByJ7HB6VDFJwJSo2/eA9DjhrpfTod1PgkH7D1iuZA+nD
H8W7urD/x/Qk3E7lQMqFEz3e6AmXhPQPGRxQCYzmPu6kQNXnyYR6Hl6PjrMT
6KBglZt01O9KDmyvHpSsbKFAdI6SlFQ3B3x+Pear+EJBuf7UWcVeDrg1FX83
QhdJRmvr9OPxu29s+vqZggHFTkfrIQ7cjtxtP9xIgWL2zcEgFgc2uY2Qiz9R
kLPsS/D7WQ7szF1QpfueAjJInzEhSULdG1WfnTUU+AgaxUivJeE/caew4lcU
6LyyyNwjS0J4fMr8dWiLk9pLkjaQIP6533DuSwpWmnqOblUhofXn18aKSrzf
klsf9uqTUJlrt3BZKQWZBbufLnYgQcWGStuVT4FlDs9zGSc8XrxNMPMJBdza
RDmtUyRMz0lj8KJPUpv0HV1IGHoX0VPxGI/37XB95kmClB+3dGMO5rsew5Bt
wSS81m6QH8rA9RhYoFmfSYLZLZFo9l3Md+fvSOdmkyA/L0jUGH34yPOgiEck
FHkpiKckUED5n6swzSPhWPpEnEk8BWoacuz6Z3j/bt9NkmPx/LtEjjx6TYJm
1vKKTZj3GR7Heub0kuAsyzXuvo7r1SJW6HsfCeUhhWvWoQXVt7zMHCAhhWg9
7XINn/+p88GGwyTwKWx2nwig4PH2E1V+LBIurDCQn+9HQe1+hc7maZwv88P7
lnhTMM+c6yQrRsGzB2U9RWdxPeSldbWvpuCso18V4wwFpxQVvt4Wp2CTqbTo
enS35aMts1IUFOt93JlwCr/PzK3/sp4CZ/nNnp64X+mIu2pih/sYhf2l64Tt
KWh9LaItvJ+CTz/rLrHNKVDP1lYtx88XynN/iOIn//nLWcctKRA6bpuvj78z
c+afeWxNwTlZ0a+39+F41drdth+lYFGkcedmEwru7iszN8RxqLb1sYx2UvBl
nc0jNs7DktW/Hopuo+DXjSW2j4JxnQk+z5LAcbzS3uZ6PISCIbvhuTJbKUiR
TCxpDKMg77z98MYtFHyNSWvPiMZ1bBCprayI71+e5R6VFBy/aMRCyXUU9Gt8
2tWE6yhvdWpdkAgF6WM5d5Rxn/C7Ij/BhUPC2dbVVlm4T+CZCm45QpCwLcAm
eDWbgsXUhrC9bBLuTk9q8WFdIITu6G9iknDdWvb3J8z57QWW87pHSLBqUira
jXU3/8V/HxTwOS+PkM7/KoZ1Pfhzp30jCRtqroSqr+HC28W3NHQ/kZB2LOtL
ojgX/Kck56xpICHqyeYieynM8ePuQ9/fk9DJ0i7ok+PCdg+RMf23JFyB/eEN
ylzoND3wmaeShF38m3dt24V9ZFNwmmAOCeCVsiPDCHPBqv18tQ9J4OZYRC/f
jeP5fLj8Iq7jaW05hVETLixy6pBrySCBUah6IMacC5mDxqO3U0hoaHlqWnuE
C61rrkkMx+Lxlua22Re4kF2WmLbMnwRCRen5rAcXGsQ+n8y7ivvjh49PHPTi
wnqhzEu7fUmQuKDylM+bC5d7W2L8fUjYv09g9cGrXLB6K3yv34OE+qOXxNtD
uCA9pNEahu/p6XVr9OzvccG5ycrdypyEQOrU66T7XNjIFyrdb0bC0USB+83J
XChYIrzBfR8JaudW7TdNw1yfPbQ11ISE9RdbC5WzuHBVT9fkqSEJi3xX2TTn
c6H0xMNDPZokzNY3x6fXcOHoWKVjtTSeb9XplPevcV9xf2uiuhQJQszK3+w3
mIN/uErnS5DQG2yXpV3HhTG1tvX3VpMwME+l890H3HcY6gu6ipDQrV75pOYb
Fxgxv/cQC0gIdms0Vf3JBYN5J0o8sS5evzG4YcsQXl+rlMthcCBfZvKM8jAX
bLkCie7jHCh+3C0jP8oFs9KLK8+McOBAxEMnUSYX6pfu7LfCuuvjN1e6lYvP
Y/xR/rJmDsy0vWIO8NEQL+WdJljFAUmdhaGf59KglMJz/2oFBxT+rr1RPo+G
ogDb6aEyDjDE/J9GLaDh+A/N8bIX2OdGOOXKi2mQXl0YYFPAAcM7e5KthGgw
KRL08sG+MTaiKbxJmgb7LiGBnWEc4Kd3HxVeS0OnxsHUS6Ec6BrWYEyjhS/7
eOfc4MDQy4O9n2Rp6GbOTC25zgFZ0RWrTm2gITUg7MDHKxxYMeSWe0mJhsRX
fhvXneOA3Y70uoXbaeDwDL0zNePADt0f1Z1oNVNT/jOmHKh/zzuVr0uD5Ia8
yGATDlQMjupZAA3fuiePlxlxICnSiYw0oEH91c5tq4EDr+UvU727aVwvHO9S
ZQ4oUSWlk1Y09Ac4vXJezgGvixaxOdY0WC+KEr0pwIHujMB3hw7SwNhh+qFo
CQcuaFluLzpEQ9uQjvY05gLBJQ+sj9nSoNBetyeUF+frctu2pGM0WIZ5r/Qn
CRD2uCQbc4aGk3PndTG/EfBwR9cihbM0yHZM6v9tIqA+wmnPW/R5JaHZZV8I
8N4Z8ZF2oeHyhLWvcgMB83X/9pm50VC5fP5/zrWYy3ZKGfV50PDCJqW1uJiA
/zJMjoX40uChU/6hKY4A54G1Z/iv0jDrmL+qFXPV7xN7GsPQWCtedmHu+jq4
PTfcD38vKy0zHEnAh57U7OAAfL5vJ+TJYAJYnKS0w0E0FMi16Y56EaCdce1g
Ezr3Zaf6Tw8CLjqEOO8OpiHmzGxY73kCZCSS49Ru0JA0Yab34xwBAesG188L
peFJ1sKuF5gjw/W5QqHheL/LePttrTAnbio8wUUP9rZ7mloSwPP74MITETRw
7ybb65oTEBe3zEEzEp8Hf7SehCkBP/VE9Hpu0jB6mH/9j514PzNHry29TcNp
Z83r67Zibl3Q/mw8noaGRcFDxoIE3DOXurg3gQZft9YvtAABXpmv3XLRjM5w
Kn0J5mbV6kXOd2moTs3sm1yAOdzuTf+3RBpczzZUGMywQSbl43TYfRrq7zQG
3m5hQ2jnYs0u9Gtj1z3fv7LBzEQ4VzmZBj+bpIAVjWxQcxZU/Yp+NPl1a2wt
G9gRM41LU3H9r5Z74VvIhtx8yfXHHuD4FtrQPBFsIN5+rMlCh7p+8ZcPYUNB
Z2bMOFr9S5qH5TU2vMjw/OaVTsOD+it3k73ZsLEnv9EvgwZ9kbMt0o5s2G8z
vLwaXa3z54ku7gsL4q6GzqALR/WZNrhv1HWyFrySSYM8rZwVbo77pC/DcWey
aFBM+8Rt384GBaaidwaaK+CzeFyDDTsu8dzsRO85qBP2R5UNbvv6LU2zaeBz
1ykTxH3x94RKQ5mHNES2nv6ptIINs2ptOQ8f0XCkMnaHOO7zBXROlzeh4UKo
5JkRFmgmRq+a+vd985M7xQMsKI8/VLI3B+dfZtjMuJ0FIk5O4YPoypOHR468
Y8ElIecZ/lwadjurRCS/ZkGxilWlAjpib//brioWzISnS3igcy3k59gWs7AP
Pnbhoh8Ox9zWf8ACn5QKHeHHNNyo/Y/lfZ8F252XHNqCbpr+25eXwIK6I2Lu
LuiLWm8jhKJYcEA51yUUfTCsUn9nGAtkpuWepaPLP4be9AhmAZl9TaYFPezB
+NlwhQWTApomBPrVuBL56yILLIOvVfLn0djXE2LXXmBBRfClQA10fJPCnfOn
WMBKDAmKRIumZkTNHGDBDgPPmVR08F1LkNjPgk8+hjVFaMf8D0E6Jix4LKC7
vhmdv/nUO88d+PtMzXdD6LS/W+tu6rDgrlpN4QR6xfvVNtnqLAiIWOsg8gTf
3/oQtW8KLNA592mTDLpItdh/eAMLhK7maymj103tPTIpw4J9L/NjdNAn5WU+
LJZkQb56qZoxerxm0cc1YjifPcVSluhtlW128iIsMHwWdeAoOmuJw3WNZSww
Kbx2xw2tb8sN2DePBepVbhmX0D2rM20O8rAgo6T3jx86sNTutd0UE+L+q7kb
jN7ER1c6TDDBX2QqIBz99o3u7tMcJhht9356Cy1RudjRhcGE3V1SG+LQQ9mq
y12HmWDW1D2UgC7VCDF17WdCPCuZlYRetqZd9FwXEz4uMNZLRhtM8F4808qE
RYw3P1LQoaeajjt9Y0Kv82xxKvrXPPHOY41MMNjR2/HPQSeeD9m8x/NtP2Dy
z9ScC4HmtUwoEtfn+Xc820Umx+glE74nx87cQ0+vTD6uU86ErMtqBoloR+/i
bKXnTFhSut/3DrphNvPBs6dMuDe+oSMaHXJ+2Zh6LhMuZqWdiEA3s8oDSjOZ
0HQhWeAGWj7G7aRmKhMGW3j7/80X4zTn9otEJpCHCzsuojO8FwlsjWOC4cVb
U+f+zW9pYPOTKCbIpAfoO6A1JdaMrw/D4w84PbFBH4pI25sSxITW37KwD93R
0/JL2J8JNpMpEzvQF5mh7FAfJlRXln3biu686q066cGEo6mHmtehn5m6vjrr
yoTI6SOzK9H5giqJbaeYMHZpXfW/9fZgjYZ80VEmlCgXWv9ENyfw9685xAST
JBWhb+gE75qBIAsmvA5O+PMYXXmCr9bMCOfHZ5dcAnrcUiy9cAcTGHxentfQ
ey6qvBfSwd/H9fgfQG/O8+V8VmbCh8F+bR30j4Pbyc3yuF4cqNUy6Db7VToh
ckzw2FtvxMT379fObZnbxJjA0ltlchl9xLriU8AcJhg/OCxri86Vm+RvnGaA
jUuNlDba6U1Q+OpfDPAhI6/9wnrRORR1LH+cAUJfB3+eQvt9Wb+35jsDlt6T
/aGPFnC1L+L9zIDc6pSh1ejBagH7He8ZwFL84f4B61VWEftaaRUD/m5bJiqF
VmXupWOzGbD92swKEuvdnqj+y3VpDHjcpLutFv1KS0L/VxJen9ZrcULfjo+N
P3CLAZpmi7NTsJ4GeIgc+uXNgMNnpqyGsP4mzdROju1mwOSk2J6naMFUz2an
nQyobfG67I1ubk6S79FlgEeBf9Q8dGLwbZ1PqgzIy98eKor1vuXyt8l4cQbI
7JRNEcP+cSROobaXPQ7xvg9NmrG/XAzKXr5zbBxa1w1siUFvPnjra8bgOHQu
kSpYgE6UHnt+vG0c5rCmTo9i/3racYZ+93ocyKmvL0Kxv20czVAwvTMO9ass
+DTRC1IFy+7cwvO/mflvGPvjD6/Okq6wcdCZGwiG6BDyzeIz/uOg8t3zIDeJ
Bp2ICwtcT+H1I0+vVMb+u441JCOvNY59QkFFIIYGG8fQm94dY9DzcfjaQ+zv
8dHhT/N+jMGvpHDBHehJd7t9vZ/HQKZ645hbNA0lmsVTBrVjkM2v6P8miobo
rxyJibwxCHT1Ed+NeeJnFmkm7D8G09scwqsxv6w1uS+8UWoM/mO9Owvoc9Ok
pYLYGKh9Fgl5eZ2GP7Ni/MrCY3B/0XzXqms0qPxe+U15wRg0xaf8eYr56OwK
vyFJ9igMWh/97Y55SzX5ZGtR9Si0u7T32mIeO96pGlNwdBTKlysveHEB5+v9
vk0z1qPgcWSOwXJ0Gq/zqPH+Uewf2dwadxo8E28PtOiPwhErd5PVrjRkvx0t
7Vs/CtPN+vdTTmGeHFhTcJ8YAcWTL/5wj9AgIi8llH99BCrmW91q0qdB73tU
hMqDYSg6JtH1dwfWo/smnQFJw+AcXHlQEf19ujD4U+wwhFUv/3RDjwbblLwO
h5BhMGuWeqOgg/Vso/v9qy7DUJa7o8pSjYbtIX+07LcNQ3x41+bZdfi+Pa09
0/tuCBLseumG+TTwyDPTvw//hJV7DLtPlHBhjaRwScrYACh46h3SPoz7q/0H
n1k290G0WMLSC7i/TX/pXFBxqwdsfFJ81nhQEPt4ycuQ5nawe1zXOzBKwqFi
tsTfzc2gkXwr1N2KhKVaGvNMDjfBLyW5oB+pHODdX+lQ//AdfLBzPXDsJwGn
bXapLblTBg3+khcm+jD35p54dm1LGUgE92yM7Cbgqf7Vb72fSkHudqHTsxYC
IL5w5Mj8Utjkf1GA856AH25i83ZdegHELavxjfmYu+8dpXosnoHoqrdGYRcJ
KLIXagYiBwQD9bSoCwRwea1cb8jmgOzi4uojbgRYjIg5Jh98BNbkk2sbTxHQ
0xxwwLAyGxj7YvsKbAgwtvU773ojAxZ15jdf1SHgiP/6HFPJJHg9Ntr1WYOA
QDVhfomAuyBnesNrrRoBQXdE4HZPPISc4Zq9UiDg5qzilGNqLFQLWxcxJAjo
tv2z4fy2cJAUUlNSW01A9L0PGns5IVA7mqZxZSUBI/7/CbjmBUH2rBbJu4yA
YzJuGgv1rwCxkJO+czEBM5ESytwiT4gJ39sbhDm3LjU4rsXoLDypF8h9zUeA
q3KM5ss9tvC//7P/7z/u/wdmnmMi
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.3548887814431656`}, {0., 1.2521278254959864`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547312572154689*^9, 3.547312669802268*^9, {3.547313184667417*^9, 
   3.547313213924827*^9}, 3.547317635884718*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXHmYVdWRf4RG3FCJDsZolIZW0KDgCoZdjUsUzWSBEYkzmImDThhxmS9O
Jp/Jxx+oEyMqa3CLaAy4EHADNxaBbuiGptllp9ma7ga6Hw303jXnd27Ve6eb
e++pB+H7+EP8utv7Xv2qzlJVp06dOnfQ8CdG/Grk8Cce+uXwjrc9NnzUiId+
+XjHWx95zHzUulUi0WqE+bmzYwL/T4mE/LL/HsIvfsjg//vZP2dTzfa36ZGh
o+iZF5+hUUMfobeLawK+VQX0QK/hVFDVQCXTB1KH87Lpsi5dqIv5yblyCOUl
KdFJzSN4bKoupk8mPkyd2+fQqDdX08HGzHhUb5lKox54kp6b+BKN/s8H6Y+5
FdRImfCop7JPn6Khw/+Xnp/wAj31q1/QHz4vp/oUj7Oo4UA+zZw0knJMG0dO
mkn5BxqOakeInM7cBD88ejgvC2amr/1zDlFjGc0cdBXdv7CSmsx/lQvvp+6D
PqAy02VqqKSiz4uo0nBvOrSK/vTAH6mwqslKajhSQkcaKNuyOV3L5luWvDVR
5Xwa0HEAza+UMVG2pLaE3vlRT/rdmiO2FXXbJ1Cvq39H66q5JUo2B4toZLfr
afy2OmYziXp2+y9aeZg6h7QwaPVpaXhdpIiECh89ns2np62Z0aU0tEtveqek
0ZI1lkyn3l3vo/wqSmSxqPryufTcH16lwmQji4/HpSahahn9+8VtrJV/y/5u
TYkzetDE7XZUEh3VvAzNwSU0pOsAmr0v6E5T2SzqnX0bfWW6n50Jn+QiurNT
H5pVJnxmUp9Od9KiZPjQZil4h+FOCRm7ri2G3pAP7NifvqwIbIsOfEn9s2+y
8DaWJosaK3Lp6ft+TVM3VRs9oGwFNOgp5DdQ+fzJNAPuI92yTmoWoFlAt5x/
If18YgGVHSqlxWNupAuuepY21TqDruHTUEYf3Hs59X0ml0oNn9xn+lLXIbOo
tMEz6DG8w3Btw0ctQuWnp6ZympnKYXYqZdoOr3qSut/wNG2sOVq9wnCtLY2Z
tYb9tHDyNNq8Z14L/xOPT43UoRU0oltPemHKo9TvwjOoXfbtNDq30q4Pmnak
+DRVUdGL91H/Ib8xa8RY+u29/WjI84V2rdKoeRjvMNypIePVcriNv5w1qHva
mX31C+p+d+DMWrOu1u/9mJ4du4ySZraa9s2mfjl3wSKzFSyyUnOeT1PGjqNr
L2mu5jHQ9GAlafGD19Hg2fsw0NRUs5fWbq1qPugaPslc+nFOb5pRyoNXOoP6
5NxDi13fUjHv6EGP4R2GaxM/ajz+5wXIdIhlnrqwmtYWT6PHhj1ql/5Hhz1G
04pruTWnmIVjLU0eMZhGPj2exv7PEBo8OpcqG3lAw6HirUwzqGr576nHRQPR
0M4KaY0VefTiyMdpzPjxNObhu+n+CZupmmKltXZ0fNWkh+n+/36WJkyeSM8+
MYz+Y1wRmQWPbS7LBDJ5NHW0Gc4ut2OpaBPDtnMcJHJYYgbb/v7JyfF9u+Aj
8+8+/GoVjTrtOD47/Rt+x8WPP6PGxib5/Lhk/KPbF6yv36jNSczvqwXbTrr2
faM2Jz2/iRPyqLa24aRqX4zaXHUCP9u9O0nvTF8VSvf96CYdCj6j119bRhUV
1fZpqJ+8qqqWXnm5wEd+mMln/n0tbdt6wD7d6ydvaGikcS/l+siPMHnu4mJa
umSHffqXaPJqJgdnSMDTED/51q37adbMtUeRW+oaJnr1lQI6dKjWPg2O5ink
Bw4coalvFPrIa5n8b28X0d4Sm8dL/NxPXl1dT5MnLfGR1zH5nDkbaN26Uvv0
Mz+5WeXppRcX+8jrmXxF4W5aMH+rffppNHkDk08Yn0f19cHkxASJQr59ewX9
fcZaH3kjk0NlZZr+2U/uTlMMeROTv/3XIiorC0zkx37yI0fqaMqflx5FnqY2
RB99tJ62bQss555onkIOvZ40cYmKvBVj5s/bQqtXldinu5WYJtMJOF8NRvJq
y5fvpkWLttunQR5Ma8ZABhQOT3cpMRs3llud1mAkV/jnyUuxkNinO5UYeNwZ
769RYdow5rVX0wr4IyUGWvjWmytUGEkE/fWtFbRvX+BP73AwaUgqZXS4LuXJ
7/Bwb8uYGTPW0I5im91K3K7E1NWlNdOHkfTM559vSnmm25QYaMv4cbkqjGxc
luTtSC0gt3owHC7QOOMCRTN/qMSsW1tKX5g+aTBnMAYOEWOHp1uUGHjFWbPW
uZjACI/vxKl1lNwzWa5rRTcHchPtA8LjO07xi961K2nV0hV9KvcsMgUedlJg
ra5NSpAMKRw11lU83dScf3S2NyIdHtmZdixsz56D9O67q8OERSc6w3LAkZLO
YmLELfAAeBrYXFJ0ds+T/vQKxRo5fdpKV2ignseU4YsUdzaLc33ugEBcpAUJ
Zv/+w3Y512DOYczUN5ZTMhmEeP2VGITc4tt9mPaMAb2E6v2UmIMHa2z7NJhv
MwZRJ8YBT32VGIwzthItMWnIuUxp9iqpYKmPh7tgEDFhNjUY/oLeM3ZUUnLQ
PvVWYmpq6lNrog/zT4zBFgdOCE8/UGLq6hro5Sn5KkwHxnxg/PrOnZX26UYl
BnKkPz7M+YxBZCN7jl5KDBykzL4P8x3GQA8kUumpxEDL3vjLchXmAsbAmisr
A6u5wcGkIUIJGxabvMHD/buMeXNqod0T4+l6JQZx3TR2gz7MhYzB6MIK8HSd
EgMre49XEx/mIsZgXYAV4OlaJQbxsGyUfZjvMQbLqkQ31ygxxSby/Pijr1WY
ixmDyET2/FcrMZs37bMRqAZzCWOw7W4KQpdEDweThgjlypUlqd1QDw/3jk4v
5IvuSsyCBVtp7ZrSjDCIa8Uv+TDZjPnwg/Up/3eVEgMNE3/hw3RizLS/rUzZ
8ZVKDOiB02Dk5PIvry9PWUA3JQb9F81kTMKu9HQcRVpZUVJzWCpmSnYinOk7
vsqjNj6J2JMt/GpbM4n/mNoaG8ylo28ZWFfxr0gLPPZyksguXsoS83KLafXq
vS0lHmMthVccfIbkghxxmRcQREq6jCXNnr2BduwI4ofLWZLdOoTF3hEn5F4h
cOkSqLGQSOPpwhgsUWLYXZUY0MtOwofpyhg4HFkKuigxSCkhTabBXM4Ynk77
5DtuF8yXX2ymLVv2Z4Rxx9rFpCFXMCVCIAlSLvVwFwxCMwkefJjvMwbWKg4p
R4lBAnLRwm0qTDdHjnzRWYmBe0Z6JBMMlgEsBxrMlYyBlsnGupMSg22K5DB8
GD7maRZwZCsx+fk7KX/pzowwkCHpOx+mO2OQwijnLV5HB5OGCCW2s9hutqQM
494jpOeXKDFI8i1ftisjDDSZNc2LuZoxSL8mk4Evu1iJKS2tSlmaD3ONMwby
xfeUGBzGIBGZCQY+RgJCH+ZaxsBiZKtykRKDpDJOPDSY6xjDWmmfLnQwaYhQ
YunDaV5Lyjju7pbWh7meMfDGcob1XSVmzZq9NubIBAPtl229D3MDY7CxlTzm
BUoMzp9kI+TD9GTMKy/np774jhKDVAA2xZlgYDVyAMgYfao7+lJDZFKxF8t1
154g/ZFRqju6Xt8vGjst7LVd0d5Ut6YgvUXwLdOPfIg45xbyogNwTS12ZE9v
DBnkDqE9DQnENTXJXslzv9xMmzbuC5McHZNrCnO9kmGckttiyZrkeERBaqS4
H7A4d/MYpCWjbU4wWEWLVuzJCIOIW2IoH6Y3Y+BHZYU/T4lBDLnh6/KMMIjv
sGJrMH0YgwSZfHGuEoP1ZzenSFxMGiKUiB3efWeVinvfkBZ9W4l5/73VKY+r
xeBwSpIcPky/kLa1V2IwIxI/aDEbNpTbhJcG058xvILap3OUGHcPqcWg/KGw
cHdGGCTupQDFhxkQ0p+zlRgcXshRj4tJQ4QS+gs91nAfyBjendqns5QYjLD4
JS1m8aLt9PX6sowwOEqQ1KAPcxNj3J19OyUG/ZGjcS0Ge7QVrDFaDJYP8WU+
zM1O2+SLM5UYHCbK/GgxSHcjk9ISk4YIJfI6EtX5uN8S0oszTiDmk4+/pr17
qzLC4MAOuZ1MMFj5ZMX0YX7IGDfqPl2JgQz4mUwwmElZZbUYZJI++nC9i9FH
6tFXhyMjnFtZrjvHQcFPRpF69JVYv2ievmai9ZF6zJXPFpH6LY48McoW8hSR
esxtR29PsT0s5oqw8J7GReoxt/68kpEuRbQeIlkRqcdcffNKxhZfDJQlx0Xq
mvtfkTJvY5luIBVUvEUbnmDcgECLcQMcLeazTzemqgK1GCzXcgqqxWDJlv2o
D3M7Y9wQJKZAX4VJQ4TSnRUtd4ywbG60GCyJEqZpMXl5xakaSi0GO18Jo7UY
pHCxndBg7nDGQL44RYlxx1qLQXVGpphjaRuH6idcThQmDRFKhIKS7tNyxxGE
1JdpMbM/2ZAKirQYrBniL7QYnDrLAZkWg7Sq5HIywaxaWXLSYqSiIxNMpuM2
d+6WUMzRWoaZlBo7LXfUJ5eXH84Ig2opOVQ7kfblxm1ajLvKajHuCnMi25aJ
HPHn8BpSncb+PIhujvktPZGFLCISN8Tmzd3iipQ7Hcf62pnIgEpkLnZ2MjEy
Ne9TkRqX3buSCfmXlixRIyIXqUbWCIypcQlwWVYE1A+qzg41NGDMoH/RBS5t
Uz1Ccg4bOhzAfTpnI9Ko0bvrlrIzfJ9E2DwG451lfRREYfPLU5lK7yDCkuII
jhUFlsE7FsI0N4vpsXWG0uKeBuKzZLImIJKcJIrCsDw6TQgzvrbMD6soVm0c
7S4r2GUv1VsKyVbj/Hbz5v0+fqcxP+wHwQc3qVAAYvgHRHLgoAz1z2R+OA1C
P3E289lnm9KzLsdFyu3G2UfNXoE9BMU/OQ7G2Eol7mnRrNpz07AhQ/4fTUNV
kFleAiI5ykcKFsUPHn7nMT9kxnEiD36YYtOcgEgKNpAEkxrBGH7nc1ehnFBG
/IiiSv2L66JdVpbTBdwg0TU0CA0zDQykSD0UWixX0mLyMhcxP6y/OGYAP9xL
Ss2lFPrhqBH5fg+/S5gf5hJjgkMljHVKd6XgU5mfymZ+orvQDfA1C0RAJCW6
bv1XTI4sh/lhTYPOon3Nxk9KpRGUSCATw0/eR4PxAx/wa2YLUqju1ibE8Lui
xfhhmAoKdqbHj0G2ckl8SUxetJszfjhyAD/Y2Lq1pQGRXNdwi1xj+HVnftA/
vKkB+oI9lWlOQCQ3e9zrHzHZ52uYH8iRToWv4/sgAZHcuoJyyrYiht/1zE+K
1eDrcE8i5YvDLiHGZPt7MT/USaKf8O1I3xr9CYjk4hgaL/faY/j1Zn7Yh8PQ
0QS48ZS+cNOkzOioI5jg7O0Uu5zBScIgwATezkyK3IZG9b1k4WIOZwYwN6gH
Nh9QD4hGqsD4ULmkjtnh8CHu8Olmh9sKVjackLACy51+qJocNcZwu9Xhhkot
cIJ5QY3NZ0nmhgUQh1ZEsQd9dzA3rG84TRHvC6diPtvP3ORKO+wt5kjzLqdt
OP+GpmOAsLkys1DG3NAu2W/GcLvHmVNs5wLDL7CKYRRtD3ND8Y1ku2KOgn/K
KobzFSyZ4IRtmZnExI6UijXQC88vst2MOecezKzgbCAZrHDgC2+5jVlhSsQw
Y1jdy6xQroJqQLCCvzaGldjErBA64gIunmIqA4bxcCH+AARqhjoJFI6aDq1j
bqhskyq6DtHc/pW54UgO5QyYRvwgF2kGfxVzQ+wm4eP5DjfL7AFnAmHZyP7I
WFVUVBcyD6RS8MoJjHpMVdODzlC9Z4cq346+mdBEPrNC36Gn8EMxhVgPccNg
wKhaRqPwA9dtgvbFDrfn/7TQqkhM+divmRu0fv36MhucwlvANxtns8Dp5gtj
F1luMYVyo5gbyHGODE7WhozvMd36grlhEcYtbnjImELAx5kb7LuoaI91MuCI
RKRp2xxRCjM7cCTGucWVL/6GuaFmFassOGEacLyQTFZ/yNyQF3nXX6j5W/u7
rVUPXCWC3oMb7Bzewzj8xPvMUo4SjB3E1b8+5WgtnCP0HxOLkM90dzpzQ8QG
Ozd/42p1RztTgdUN7gw/0F+jhW8xN4wE5hzt5apkObc7nvfthu3oxnCL4Fnw
BgcoBvqHJhiNeI1bhLALFmW8ptSKq/IEGd4v/z9uDSwSY4LJg99Dy0wLJ9uv
s6zuQd8wr0aDL41uUNjLVdPXzZ9jcQg6EIdCYfEDK9m5s3Icg7HEwjLMuiBX
EcJkRbxTNKyfL7Giwt+jn+gjBCP7g4UJVvMci8C6Cw9kXIlc7AiTHvZ+zTDR
E1k0VBCuF+oHq8NfrKoI4MZwT1C5i+9QH2zG/IoW0vUvmgxryBT7+1S7ROLa
D4xVzB9jgsjcOMDfc1sQgyHIxNyYtnRzzSLTVzGGNed1HhdYMryPbJDxF+5n
b0lV4klL08YGjqBBe7A5xDoTc5nuTe4p3DlCV9gW2ML9wMyxGhpn9yj3BeGk
SN+woTzmHuQ0Nje0Bw4XSQIsibALBNFYiaDbaN8Ibjs8LZwX1A2xtFmd4q6O
vs8i0HYkujAUYA0REAWRuFeJNejfWARWEpgntBrfmz1C3K3eD1kELszD1LAU
Sw/gbmH82LtjCR7ME4ttJdwxhhDRAgcAMTet53Dj0BHEGFiZsdibThgtMrI4
mAfX0tIqjjzb2hUdEyR2AomI4GGiMRfi57E4dAoBEjrB0YoRZ5psJhpjhGQo
NN1MQ39WE0CwWmGWYAzQA6z8CLuMsQyIFhq8gqWdtW3EDdBNKBicOkZJNqX4
DJEqRhv6AR1wN5wYHyRt0AJDbxqMZge3S7ArqKqqbfYyFduKIPg6166U8Gvo
AqJG2HUgvCA1XWgQGgJ/B+eCUUD34Ovg+xEnIfXTgVUDG2bsZGA99tqSoUce
FCrCpmIaiaZm2c59wW+xMXxiXhMkJXXIqmL9QyCPVmM7ABtFd8ENeoxWQxr+
4jNWByPVPBnusqGTH2wIQIde4xkKLW4WvYf54XvYB2wKw41SSpin6W3Ma7vs
75PkZbG+7xOt/h+qBSvq\
\>"]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNormPointsPlot", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472315073400793`*^9, 3.54723153098685*^9}, {
   3.547291708384388*^9, 3.54729171230812*^9}, 3.547291849024194*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ninthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"sumNormAppropriateMedianCurve", ",", "sumNormPointsPlot", ",", 
     RowBox[{"Options", "[", "sumNormPointsPlot", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547231558731024*^9, 3.547231583003787*^9}, {
   3.5472316750222387`*^9, 3.547231693053355*^9}, 3.5472915105811043`*^9, 
   3.547291715461149*^9, {3.547291836013537*^9, 3.5472918490243273`*^9}, 
   3.5473127374537373`*^9}],

Cell[BoxData[
 RowBox[{"ninthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "ninthDiagram", ",", 
    "\"\<Figure 9: Sum-normalized points with their r-quotient scaling \
factors above them.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472915137778053`*^9, 3.5472915576132193`*^9}, {
   3.5472916477569313`*^9, 3.54729168424542*^9}, 3.547291849024382*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
q3KM5ss9tvC//7P/7z/u/wdmnmMi
        "]]}}, {
      RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{0.5504139634968043, 0.44958603650319584`}], 
       PointBox[{0.6630719771133087, 0.3369280228866914}], 
       PointBox[{0.661787109323564, 0.33821289067643595`}], 
       PointBox[{0.7286019218118642, 0.2713980781881357}], 
       PointBox[{0.5689771649740721, 0.43102283502592786`}], 
       PointBox[{0.5614136729040614, 0.4385863270959386}], 
       PointBox[{0.39999885193102036`, 0.6000011480689795}], 
       PointBox[{0.768917311307553, 0.23108268869244708`}], 
       PointBox[{0.5466682166788871, 0.4533317833211128}], 
       PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
       RGBColor[1, 0, 0], 
       LineBox[{{1, 0}, {0, 1}}]}}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{0., 1.3548887814431656`}, {0., 1.2521278254959864`}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   "\"Figure 9: Sum-normalized points with their r-quotient scaling factors \
above them.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547291679984372*^9, 3.547291684882041*^9}, {
   3.547291840344864*^9, 3.547291849024444*^9}, 3.547298867032872*^9, 
   3.5472991888671083`*^9, 3.547312760647628*^9, {3.547313195612541*^9, 
   3.547313222429434*^9}}]
}, {8}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"x", "+", "j"}], ")"}]}], "-", "k"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], 
      RowBox[{"x", "/", 
       RowBox[{"(", 
        RowBox[{"r", "-", 
         RowBox[{"2", "x"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "k"}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547376214111416*^9, 3.547376270854889*^9}, {
  3.5473763207942467`*^9, 3.5473763227080307`*^9}, {3.54737641733848*^9, 
  3.547376456778967*^9}, {3.54737649126721*^9, 3.547376526325053*^9}, {
  3.547376647748825*^9, 3.547376715281465*^9}, {3.5473767572305393`*^9, 
  3.5473767660811663`*^9}, {3.547376885573278*^9, 3.547376962482526*^9}, {
  3.547377073846541*^9, 3.5473770881992807`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5473764802348967`*^9, {3.547376514820343*^9, 3.547376531982819*^9}, 
   3.547376603523369*^9, {3.547376705974482*^9, 3.5473767161922703`*^9}, 
   3.547376767076635*^9, 3.5473769631948223`*^9, {3.547377078462484*^9, 
   3.5473770886026077`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"r", "-", 
         RowBox[{"2", "x"}]}], ")"}]}]}], ",", 
     RowBox[{"r", "-", 
      RowBox[{"2", "x"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "r"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547377109487732*^9, 3.547377112331205*^9}, {
  3.5473771472816267`*^9, 3.547377205979145*^9}, {3.547377259850582*^9, 
  3.547377270050213*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
ZDdm3eWc65revJ/vzzxRdOGxC9MjvvBMA4k/lX/tm+KqSZoejIlb+mmPq99I
/oNGA7nyTD+m6u9LzVPNeT+fXXhz0e1FPoz7s7QHo5bx5xHphw8f+O6RLzN0
fJfxfex4ebXHT90MzH2ZxZde2F6R48+B12zYa2d8ii9T0kRit6Inj79iFi5c
p+zPfNzaX63zcf48oj+xUzZ2cfBl7v4zbLT7BF7+2sVOExU8vzKt7BPXX5zO
v8dbeu+eNLMNYg6VBBYEKfD16LzL8Iyhl74xC08UPpq+gz+3J2T3xxPj3AOZ
wX2eRkmiePlvfSuYX3MDmeyYCdOulPL73xWnv+n6u2kQk+TpOve6Eu8PHyf6
tzK2CWLO+gwPDg3l6+Ple1dulN0OZHzKXxaZT+blnzW1nGvYr9pPfPXmPerD
17vxz0e5nwwLZZqUdGx/K4Cvp8/WLpD/uCeMCbrddNfBI7z8RpX17mx7ZHJ3
Yg/Zc85Lk2zmsfW0seLw5bJ40RzfdB3VcOZ8jPXFUF1+n7jimhV/2HL+BGmd
lJV/O3B6o8R50Uzy4sMdlmfz9fpy6dfZLTWjmFLDscVTDPlzY0ZOdzu3vFs0
88hXot2tAb//+ov7qUq7vGjGWW3Qk+sp/DkwHumTXwcXxzHmQ/f3+ziSbwec
HZPyRsicTyI8J2TIrkehrtXthBCft6lzylaZc882ei981ljvmprwfBKUOy7+
ldZbmXNIfOOWTZM9v5r0cWbnyd3q9C8Vh1cF95M5jxp4m7GOkdtlzg8Rno9x
qrCriew5IbSuUvlQZIzMuWd+Hn2/9+rkXec8kLVrVQqMZM6FJnuDnE/1lTnP
meTPx7cc5u9fB//15N/P39i8d0TLOTK48NyJl92UsquqIuuc1xGittKWxSGf
az++ePHVut+DUIj4M9W1IKDOuRxDJ6zuInsOs/C8BVfLTWv0D9U9T6Pfhvn1
+jbl6/Wa1lvSXtare97y874DJ/7bOcyzRr1zkMVR/iZVY4W2o4Lr4BlFzn7/
dp7GqvDnanEyuFD/T+ptWsqepwFcS0E7f7bMvuZt2pPHs+2P8LsPYeb18kco
htY5Z2Pndd1RsucqC/t9pz/Nmrhc4tsTu85mjtrd656TfN6rkfO/nZ/8p+Ga
X7I4ylcNOja3l1V4Hfz23ml//u28i6WrGqu6yODC8y6qzrHrhfj2B/irm1Ob
yp7TtVfhgtfsf/m+w+K4mx57V0fWOQdj4goHRvY8ZOoXMrQ7bJM5r5jah/vz
t483rPtdhgW9m+jKnjshPOdBzipwjuz5EsDllZ/0kD3/Cv5tkL/1pOy5E13P
KtR8h1N4HkXFzDmDZc8ZBj72x9fFLjLnBgNfcVz3nez5EsLzk3W1Ww9j12UJ
8RttfvZg8wTgT+xMV7Nxl9FFHzfZ844al1Zd2LjbnZkYWK69dUoQ2Rtuv8v+
wz1PZpW9QuDIMB7PPqw6z6m/FxPk96TKpRXfjk1aPCr52uH3TOkO16H2Pnxc
9yCo94zVif7MpwkB4Z4W/Pk/XYaaP2D1cFB3OSd7LpBN8pZt9X59Yp59y5xk
lMS3MwaXUve4Df3CzCx7Pv7qdL6d2RO7z7vstB+jHrK+dUGnWJL/rvd2Z5u2
1fJ7v4cOTeXbh3qmRzux7cDOszEtfn7l48PhquZ++64EM3J3R6puPsHX0/n2
yc4NB4Qw+WnnP/Yaw9fTLr4qUVvnBzHNViS9zu2VTPJdJig1TlMOYTKXTHwW
cUymPpYMC9C5HM6819Sy8sjm69f70l2nWfuLB64tlT03ZkyDe+1PtItgOurc
cFvUhY8/q142urDYJ4IZKb/xROYHvl78UXBrOvJPGPMm9PyHsse8vMf8kZXD
N0UzY4b2lszvyffj7ULtzdl4dcPyoR1kz1cZ7ht/ZvOHaEazu5/i1Rt8HGvn
cDhLf2cMs/eOZelcPx4f9vJzwprf0cwbpW3GQfWz+X4hfN+w6oaM2dvCwfi9
TP9+puGrM2w88Od8eLyhTP9+QXPlq3uGL5grzvNjylfy+PlXe/WPLLarjleL
9RZ+4+Nk28GqK92qyy359ax4tsy5pr8Ke1zqs9+V6ZN3Vmn7dG/Cc0yTU60u
OzFPej8qej3eh/B9hYtUO053YnpEXdBVy+fPO+04dN3ddg5vGI+FJtabFPl4
u8PJ1hXsulO1P4mfZc9H3TBIe/WOanxj4MnD5jL1S/Nqv+ds/JBX8H6a7Dmo
8+T2jgp484E5df+gXCv5AMKbN790iu3H74yev1M2DzI+nXRuwm1vZvn3VVua
PePrXf4Gt+Sac72auHyQPY80v2Ov9acP+jIXkkMudz7ExxW5jPH8AXe9GdNv
D2/OyuDlOyXEP85q482EqUwru7CPjx8uPR/mcGCzF2Mde6/T7vthhJv2PBPO
6tm1Q4Ct7Lmm3+MVlrHxhs+vK9my9frg3/TimvNVdC4lyMYV/eSMjFP7VsdV
za36L6vi45NHWlrjPtoHME877I1sfprPI+yUMoe5ffrK2FkaL7PQ4vOFO956
CjW8m7mWzZY5p+vq6GPtc799ZmJM9FL36fPtwOypEyfbeQcyZud6bEs05eOT
kIgj6v7HvjDzJhvnhNjx8hN22m9LfxXAdN6xMXxaez5+mByrfvpI0wBmb97m
Zd0dv/P9V1GDdmz8MMngWYrs+aIzfMousPjo4D5K22TO6dp8RrUvi6/Rj28q
ey7K6gFDEocPDmFcvxlvLm/J47GhWR8X5YUwA0PPvD8czOMRbY7WrI+MvfRg
s2w+G+K000jNMJRR0brYR0kG71Xa7h7rZ05dda7Lnuf54OWOY5UNQ5gDp1a4
9tHk2zHrgu7fem8PY578fufjsoKXn3PXrdOahSFMUC/Dnl228PJnJu6ZMeln
CDMqTPHC8658+3ZkxlBrz7shTPrTLn3/6PFxRdWiLn3YuOLJkuHN5eR4PHN4
wgYWt552bTCLU5zsKRnG4jY+43vLxhX5Du5Ky19EMM2e9NoR+oyXn5DxY+j6
OZGMhd6u4brHZOIKrWct2HhgWvPyM7J5fVB9h+Mvr0UyV+zKJ1S05vETywdL
avZxNJ5gJ3s+p1zKlCZlCVGMYvf2CyZW8vKPTx838LoayUwKKL6j/YiXN0wf
stpEP5IxKW6UfTqBz7/uLx/sGtI8kom42GjDqE48Hhu1VYXVc3dAv56y53wq
ebqbsnh79QWasu254c8vWjXnCAfcGSsbtwwJLL98tSKGOeuUu6bvah4f/ujp
+UWTYxnrUTO+FIzg45aO2xu1YeOQPKtxtrLjGOsWKOey/cinZwPcZc/nvDJ3
7VW/xDgm6cwuB88oHh8wr96rUVvjmPZnbHqZtuXjnB82rwrY8nXSOl6UjWfa
fip4wuLGf/aPko1n+hhYX2Tr1R7/S8tl8bD9jT29mtQ9N/uOe5/U3jLfVQSO
9fmt9KyXvZLpp4CfXfAwi+2vqD8y2aNVs6/MTe2BnMy4ln3JhviBMt9PBE77
kZo3vFFZJSE8cdViea3vrnXO5W5iU7XgRjenOudvD2/Xx0/2O4nUfnJ2rgmY
ckRWHrjzvVMO12T6I+D2Ci5FvTZ9rpO3vlltbTPwp0z5p8fkmJV51Dknc9zR
0at1d7jU0fPvIu2Izsw70XM1369vvHTrukCSX6JlZevbxrXOeZsrGtfv8Xqs
ex1ce/fqGb1fe9Q5V3xaq56pb2W+8wiczjk/q6z5b+fzz34cUXFNpp89XvZs
7uax7+uc5w/eT8sdCZ/4lO83X48vH//UjT+HE/iHjZfGzcnwqnPuN953/7ds
XlMXvzUxqqtsv1nvQo/02f+S10N+6SNm4TYZfKrNzooP7T7VOW9zm5tvzJ2e
PnX0edri27sn3euez2kS1+P71i4+dc7nHOd4xbnzTr86uOPLdmt7bPCvcw65
tpak2799R3JCtJGVLE7jNpzf9B/kve/fvoOgnLd1vOw55PAD+15d9ZXVeRzv
60rmqCmWc/nn9rYvaea42K/OdxY2lFQ87qxY95zPkycNEyLDvtQ5JxzPVbRd
eOXf8OeDTRbLnsM53+O40/oxdb/XcHa77aEdTN3xB5ST4qtbv/5QHu9qmPDz
3LJvdfTpNtn+kPPEwDrlrx45xNij67c653+mD+qb5rSw7rmg+m0vDZ7nFVTn
fLbJpbMG/dv3K02NW+nJ4pCnc3J1ny2RHW8HPqi3z1jZ+AT19l3/jsdWLOLl
A3YO37dMJajO9yzoO0Qp0ZuGpfFxiNqck02fXQqrcz653dWOOdGnQ+qcQ07n
b4/Ymvxv+D9mjLdsXrapU1sFp8V1x0Mgr93S/67iI5l4Zn6zLt1ehNc5FzTP
Y2jnpW51z0W3m7zDSGd03XNEzwc+rrzoEFrnHNHpTdV9RsXXPV9U13HaGJeV
dc9Ff3Ls37+naduoz2lZHPJ0bkDuoJ2y8yDAO7xst0A2XsJ7eTTl5m3Z8g+E
DNrjkhRW5/sgqP+tlro7dYni46KSzlcD00vqnn+O9mXdi4v1ZOMf4Cfd0qJn
y8Q/wBUmrugukePHc5omlqi/aBRT53zRIcs0HDtNrHuO+uBCpSOjo6NEzyPt
pNav6JQinxfPXXrxg8v1qDrnlFY57poVu7ju+aUFGe82nW9c93z10mbWdrLf
96R4jGu/LrbXtvy376RcNnm0XjZOu/jM/OrH7Og631UpaHpAS/a7nDQux7WD
Birr067JxGMqY4YXOlfHM2eSFiu4ycRLf/++OOMic56nMP4xMQ0I/zKcj8fQ
/z4tep69JeEz4br/nHzcqsCLGbyt6eN2OoF1+oV+py86Wobx/RTGjfPa6IUo
N+X7HfVxb2bmG3yp0x8dN2rQb8US8fMn3bRLO3XuyOcL6HfdXthU3pvP14ul
TdWiZ/tH1Klf9d2D78ie3yh8Xw0ThsU9Hcjj/rrnzEtaxNZ5728attrFtuND
4w3mycbD+dmxLlu96n6PI7vnh13OiyLr+O1LxcIP79Lrnp//+cHXftbWL+rE
yZgXCdK8UumRzM8nLgt/1GZB0Yc6cZdbj9cHZM8NAC42/iM2HyQ2LiQ2HyQW
54vNq/7X+Fxs/khsPEqMT7FxLbF6IVaPxObLxOqjWHwuNo8slkeIjYOJ5Sli
42li42Zi+YjYeJrYfJzYOJvYfJxYHiE2n/7/8gthHiE2Ti62zkFsvYrY+J7Y
Ohax8T2x+USxvENsPYBYviA27ic2/yg2Hig2/yiWX4itN/h/+YUwjxCbXxBb
ZyK2LkhsHFJsXZDYuKLYPKZYfiG2/kEsLxAbhxSb9xQbnxSb9xTLI8TWV/y/
PEKYL4jNy4it5xFbTyU2/im2nkpsPFNsXlUsjxBbByIW/4uNf4rNw4qNi4rN
w4rlC2LrTP5fviDMC8TmrcTWU4mtTxMbdxVbtyY27io2XyyWR4ithxHLC8TG
Y8XmncXGacXmncXyBbH1Of8vjxDmC2Lz12Ljw2JxrNg4s1g8LBY/i81XiuVx
YvOeYusBxNZH/df8VGz8X2zdwn+ddxBbFyE2r/Ff8xexeROxdaRieZPYvLbY
eIjY/LjYuhSxdXf/dVxIbD5LbB3Of51fE1vnIzZ/J5afiq0TFpsfFFtvLLY+
Vmx8Umy9hNh6KrF1m2Ljq2LrwcTmZ8XWlYnNC4vly2LrTsXGk8XWuYnNU//X
cQmxeXCxdeli4yFi62rE5gXE1ueIrTMUW1f8X+dHxNYniK2H/K/rIsTWW4qN
L/3XcQ+x9Rti+xHExrvE1mWJzbv9v/k14fyd2LyP2DpwsfkpsXUgYvNcYutJ
/ut8lti6VrH1J2LzI2LrxsXmccTWl4qtDxHbDyK2/kRsXavYujWx9bFi81Ni
61L+63yT2PpYsfUtYvMaYuvhxeZfxNaviq0zEdsXI7aORWzdrNj6PdH1tyLz
SmLrW/7r/JHY+luxdTJi8xdi6/zF5lPE1p+IjTOLrWMRW68iNi8jtg5EbB2s
2PoQsXWwYutGxMaxxdbZio3Pi+0LEFvnILYuQmz9g9i6fbH5erH9O2Lr+cX2
6fzX+XSxdbli+7nE1v2KrQcQW1cgti9JbN2C2Hp+sXlzsf1EYuv8xfYN/df5
brH1xmL72sTWM4vNy4vN74vtkxJbPyC2/l9s/lps35PYvgCx/U3/dd5ZbL20
2L4/sfXYYvPjYvPsYvu5xObxxfYjiM0vi81Hi807i+2rElsX9//W0QnXy4mt
uxbbzyu2rltsX7DYPlOxfWFi6/fE9oWJrScXW78ntn/z/63fE67TE9uPJrae
TWwfh9h6NrH9GmL7c8X2g4itQxDbRyC2DkFsH4HYvlqx/Qhi60vF9imLrV8V
2+8stp9XbB+Q2LpZsX1AYutmxebxxfZdiq3rENtnJLbeQ7o//xXNR/vY3po1
x6yQ27fvSXhCkzzlkQppHO5PePOJ/ZZ4rMe5FUH03QDLlmVt2XxCiocRntA/
vrksjnLGJPkOPfYVeBTJ921/qREvH0Xybre9r4dsAx5H8kWhX+R5+UTCq2qd
uxFH5Tx+YP/IdBgvDxz30iv/nbG2U7/94cvhz0E39r7s4uYGPJXkY5pu/s3L
p5J8zNxerVTPAE8n+R9j/inm5dNJvtWO8uNJOsAzSf7J6ZlFvHwmybdo9HZY
/9HAs0h+de6cAl4+i+ez84/3M9sDzyF5Q6Mbebx8DslvdQt5WFaewOG5JH+5
c7dcXj6X5CfZ2i5dmAr5V3XaYbwX+s7mzfab9fT49wJc+F6Av0xeFOlsxPMM
fJia93Ff0pM/v1wxb3bCwTsJxBvwpkYqfdK0Eogf4AfH/Hpc2DaBeAD+wOqv
r2dCPNkLfKdeUoNJDvFkL/L79kfvrXAxSuXOzfAnfMKAbmVGsT/Jz4GP7LAp
IedpEvktcI3ifna2tjw/wIX8APfr1XWcQ1ueH+BDwj4GblrN80Pfjzqw8MfE
r/HED33nbfIBkyc68cQP8BVXHy4z/x1H/ADXe2Rv3vFpHPED/NqH+sfebYgj
fpB/K2jn541QCOX48awzTgj7gAvtBe4+Mf+xrW0C2Uvfj01pEZLzNJ7sBW48
36H/k8Q4shd4+xfJjRtMiSN7geu3skj/4xFL9gI3ClZL7r44luwFfstzWEO1
3zFkL8a7zs322GWm7Ef2An9r8PmmskaOBPYBF9oLfHy4xV3TYby9wDee/Kdr
dGQc2Qv8iV+7QX9DYsle4J/yHJX3NIole+m7jk3OardYH0P2Ak+51nNu/9ho
she45uKdLiZbosle9J9LO7vdKGgvIXuB+/wdE8qeXyTF/euM/8Nu4EIegN/N
uv8n6ko88QB8qtrpAR7JscQDPffT4tbu1jHEA/ABX7ecL7aJJh6A2xQOfm0U
G0U8ALe+f+LhqYlRxANwjxuWpWedIokH+o7K9oxmCfFOxAPwQZkjHGxtg4gH
4LlnXR9UVWWRPwAX8kDfk181adzllDjiAbjise7HV0hiiAfgrS9lnMpSiSYe
aF5JpeDJ8WZRxANww4y1ffr0iSQegC/Verdg9JYI4gH4qen6ezuEhhMPmHfr
YnNgVrDOS+IBeM+tQcPWFvgQD8DbubHzsbHEA/DafCQTLr3neQDetf6eovZr
o4kH4F8kA1//vhBJPAA3XDHNWW10BPEAfFk7L7WGw8OJB+Bb93TpcVY3jHgA
zjz2+ODmFko8YNzPTH/gsG2xj4kH4A9yrZ7EOr8nHoA7rBxanc8EEQ/AhTwA
T5q2NrudewzxANxAb9tp9vti4AG49q0JrUouhxMPwOvbLZ+poxhGPAA3tAsY
lFcQQjwAZyy2zTzVPoR4AL7J6nnCZL1g4gHz5km6lavk5O4RD8CfrDt/trTR
G+IBeKM3v5dW52fEA3AhD8BdrnTRrsm3OR6Ad1bV3dHpbDjxANxCcd1KM+VQ
4gG46Z75ezudDSYegFesrEi6vCKIeAC+vqLNh8X534gH4Dq+s1pMuPyVeMC6
iPntu2Vra1sSD8B/K2l3/nbZlngA/uCm8qoOa12JB+DyAh6AH1zwY5pHcgTx
APzJHoXmQU4hxAPwtnl3LcN6BxEPwF3PtTYOLAogHoCn3Xq6a9CDz8QD8GBL
lQFXcv2JB+D3l+bE373rRzwgb7pp0ObaLavzxAPwnvV0DArb3yUegBdrtnBu
7/6CeAAu5AF4/aduCuw4O3gAnjvrnmnYlK/EA/AroXtNNcz8iQfgjGXKAJ0j
PsQD8F19PCey3xUBD8AHDJy89VLxB+IBuMenforbYj2JB4xXz5S8ax86Yz/x
APz0vNLIR29MiQfgh6LLgtJeWhEPwFsIeABeLyPl1rbYz8QD8NEXVeLXFnwg
HoCXX1qptea5O/EAvIfSyg3rVN8SD8DDdW3TU3Y5EQ/A5+l9D1ho8pp4AL7+
7JD2fXo7Eg/4Ttyb6br3HJTGeoAH4OdbfHRcMnqOB3gALpfx/OuCd8s4PIjw
z5vuW7cs2+ABfoB/8lxSKZvfATdTfR6w8relGvihcsYsm/FztYka+AGe3aGH
zcK2J9XAD33PUKX9Q8WBxmrgB/i5MwrbunU9qAZ+gBdUMsptd+9TAw+1rzjH
L4qZMyOwsr+GGXPcWtVYswWfF7ffzSb+JxlhXrxeJM/dZeo/ql51+cJ8tkEw
OwH5nFHd837m+5t8fqps+u7LjtjHTPKseeEnL/J56PQafe4zi/YnqZle5fPN
T5V+GzyMbjOKd5Uv3bzH55XNavQ0Yxb5+M71d/1Odu6vaR8+1MkTtYJfV2mY
vamTvz8VyRNHdLwbwJYjzBPfzthoVfN9wIB5TVq35u06nqkVwH4naMdqpdVX
ovg88dqM+E3seGPbBkpjLrnyeaLNff0qc2VXJnFkfDMVOz5PdKwquMmuW+/p
96ZJpj2fL39cdWTU3Gr9ew89pnvAjc+L8+7v1VPW+MxcCGLtQJ4Yx/SsyZu8
6+TFPbl8qvb4RjLHw+c6eZ+Uh0/MHnev6T3283mflIfq+GLg1XqKiry96nsG
6rHjk8s3jlu34Quf9/nfzx0V5+zD6DcbsrfYJp7sXVjzXj4yu7bpB7a+yOfF
0TXzYN6Mwr03lj3O8Hnx6Jr6HszYuVr1/KWKvC+RCRDJ71qtvmDFygvzuyW/
co6x45l5n2Je5vry+d1N0wV6GmZBjIVeW4fkwXw+G9fbUbPmO8/2F1Z09OLz
O6m935j4/EWNRxzm81mpvV+Z4MutlqXO4/PZRTX2BjDfgi0bFajw+Wx+zXuM
YD5U3Co3eOFHdpmI5HFSe+vmcVJ7w5kHX3TsFvzh8zipveHMGuPoN18G8nmr
1N4wRse7idr7m3weJ7U3jGmqN91502g+b5X6TyiTvHHB4cX5MWTXxppx6RDm
yZK2Ppof+bz1RfO2x41iY5jfsSOuVHhIyK7pXL4j9EOpvTGMonrQXztrPi+T
2hvDpL4s3KHZgrdLam80k/g2cLW8PJ+fSu2NZtZFvT7B/g52Se2NYjaeT1dq
7R9NdkntjWL05uRGH97G56dSeyMZy5Gt7yWM5PNTgz2vrNh2wdPXoEHpdGfq
Z6X2JjARzd40PlI/hOz992syx8N3pmx6a8n+ND7vkPKQwNxr28t9dRGff0l5
SGCuez54ees5n39JeYhn3t5s1d7gC59/SXmIZ7baPwtePJzPQ6U8xDGLTW5E
6HtFkr1SHuIY/YMZy/bv5/NQs5r+JYkZElSwrPqe7FpTK2/i7ap95e26XzN/
nsQEjFtd2fken09JeUhi7BsbZ9zsEkV2pdfMXyUxNo6bnDTbR5JdUn4SmZ0/
vBue1Y0guwbVzPslMi9VHrf3TA0nu6S8JTIpy8zbhFzm80ppvauOXy7vCnxb
8JjscufyDqFdUntTmQ1PGj8fG8XnR7WvUWSX1N4UZry/dflxtQiyS2pvCmPj
nX5hUedwsktqbwrz596jXTcWh5FdUnuTGR2d4mtrAkLJLqm9yczNRks8Z+3g
88T5y6YXzTZLZwI3jWrCftcSdnTh8gihXVJ705nDaefe7tfk8x2pvenMvj3h
7S4V8/lO7WsY2SW1N41ZmNXAYppPCNkltTeN0XoXfGFAaTDZJbU3jdmrG+Xv
bBRMdkntTWUWFqg+1G/D533S+pXJjE+3qZTNd6T2ZjIxqwevHXuQj+cPcPmC
0F4pD5nMqvqTWjgqRZK9Uh4ymW6218f1nhVKdkp5yGTG3dwcUaQaTPbWvgaR
vVIeMpgLwzt30t/1jeyV8pDBTFv0wunP7q9kr5SHDObPqrinISEBZG8zzyQF
M+Vspl0XawfZvEbKQxZTqGNf6T/GhuyN4PICYT4r5SGbeWcdtXF0BJ+/SHnI
Yvwetr23ZV0g2SvlIYtpKh+ZaH3yC9kp5aG6Xbn367PF3E9kb+2rP9kr5eEH
0+fxtY1Jk/zIXikPPxiVVgp2AQG+gnb1J/Os3xdN2fxFysNP5kLqMPlKhysS
PEfKQw5zbqVby1IbnofRXF7QQMCDlJ+fjOT0x1er5gYQD1J+fjKHCzusXDzM
h3iQ8pPDNB7r9XOlphfxIOUnh7n0qL9RqwYfyH4pPzlM4ZUzyZ8XeBIPta+e
xIOUn2zGvMmxrX+jJMTDxwHH+sU65zFNIs0i5QzGEQ96NfzkMadXnjxR32oF
8dC0hp88ZsrFMe47eh8nHq5yeYGlIE8ZVcNPHpNqMt3GVe0h8RBWw08e02PD
jY1TRz8mHqRxdR5zZIZEf9yrJ8RD5xp+cpl/5mzpu0LJlnhwq+Enl0n0/Mdb
kvec7Jfyk8s8O6f0pEWOHfExh4vnXcrL5y7ISSQ/alYljf9N/pxZyc/3BTGb
avKR+8yRjYnfz/8jg3N5RGnzy5U8HsY0r8lHbjP3rpe9Oa/O49O5fCTVwmr9
pGP8cx24+Pz8IPUHm7xTqPxeNfGAGxMx09HWdJjMPCYX58/xOR3J42HMyJr4
2ZWpTFiwVqlLEuHXuHyhtKN6AdvvgQcdLh7e3MfreFBAIZUvbQ99mcQtw3r7
7UwlfDYXb3ulfjfi8TAuHvBhlinEZZZM5PXx5OL2BoWH8+bYJZO9s7k4dum+
tS+anCwQtGf8OA7uE7l4uCzQ0oDHwzg9vzHF+5y+nCHewhhrLq6+trWia7Od
fD8p1fMr47/lio65XxLhOlx8vvVzmwlpWsnEjzIXf3aZ2ktFTg7fQQvi6mMY
o1pZX1tPL5f0tObiW/+ZBlP1CQ8TXPl+TIeLk5/4mBxk22Po046Lq5fcKbxV
egB2YZ4uklnS0v1G9jtfqqeJXDx5Ysef4KqqFNJT2s5EM1kBLY/b2paQnjpc
vPprt8WuF4SHcXZFMVceftvd7toPwttxcW+/0nq3Xihmk55BXJx81NN/Cduv
Qs9ELq4bM8nm631TD9LTmosDX4fJvbtvGkHtiQ4XN87Lf6B3RreU9Je2q/GC
/DqI00eIh3H2xjOOBZrDFrXLJ/2DuDg2fuPp8nO+BaT/RS7uXWiu/Fc1EPzH
MbO5OPngUfPfF14mk13fuLhuwO14l2VH+PmRIVwc2Hxk8IIi1UCy6wIXN9af
/mem4iXhe+HXswHP5OLP2ngY1y8kMl2DVr8JnfKb7JrJxbEltj16n9WtIruk
7zGRMWx10eN9PT4eqT3OyI/DSPFk5mh66+V7glPI/y9wceCGCRYps2kc25/T
M4VZ172niY5SBNkl7e9SGFX9ghtLtX8SPpOLP9tVXbTVJhzvK6XO+IlU/2Rm
5q0d+76XppC+6/51PiWOw1OZ460ex7+zTyP9M7l4z704Z7y7nxvpP5OLD+X8
PlnNNgsQ+Fsas7P5yPCvAXGEP+TizA7LGzbg8TjuvaQyGnkbmnfJTiM9Pf51
vgPziRnM+ZWPtAbecCR9HnLxW4XnnOf9P36g50rzoAzm02y2HQ0iXPq+MhmL
eSsn83gYp38GE6S34sxRg3TC13Hx5D4tjYOtGsAPE5luXHwuHH8+VPNeMhiN
TsbzAouQX/hzclmM3eqJh5ducSJ9pHlNFuNz/OXU7n68/uu4+M21QRefboQn
M1E1fvKDGddYb8o6iwgqfx0Xz9w60tHeiOabgrh4O4d5H/1l/po9DoR7cHFR
9vRxN1cTHsbpk8P8XL6iWYvkD4R34+KrJTa3fw7u6kH8v+fih1ZttK+EfbtC
5T+vifdymWlD/mSrOZgT3pWLQ05f7uypSngYM69Gz1ymr0/As8TNjwg/yMUz
e/tmh6XTuHcqU1ijZ3VctjGq9cArbuQnWK9y/XGPSbL+g3WPbb5OHBbYhu+n
vLhxPNueT7Kf26YTn5A/aHnM9W4r9HdBhE9XDfnJxy25zONvY9aN1TjJNJm5
e2KPOH6dTKua6yumftv7N/c35cc/sT7wcemaR7PbFBKfQdz4W7rt4LsGJzJJ
HuuOT/oMuFBVFUXywGMtm7taWfFxCPCjNX7OxwNYt7DDs778c9ssKh/rcLPC
3h72HPCV3hfm/fvpGlySk0P5YbR+u9jzw7JrJ7IIx/x4TtEAU/57Op60X+bO
ve6bXyiGU/nCfY4oB3jMKEsFuePF1D4D76bSRktbm7cL87BblI/H8d+pjKJ1
0UGblg+IOJdF5UD+5MJmC3k94whv6b2gn0dyCvkD9pvMfmh/vHd9Xn/gQ8YN
ni/bbmM+9HCivGm1v5I+kO8dF1BVdYzvZ4X7cyEPfJ3vhcRryiWkJ/DdxW9P
KH9Ko3Kwbnnfq3Nt5rap7wl9MC+5x35rtLY29Of36ec0b/1RwTuf2meU03tw
11/D5/D9O+SL9ugP7XQW/WMy1z6kMsUTunmH34ohfbBfe3CPLU1Gq6TRc6Xt
8w/mQW9LuXpyYYR7cPmsyWe95FjnYNIH5dg6nHCoOpZD+mCe8W9Ly4yYsfDP
VK6dzGD+6W/dTlMSRu8d++JPW5/x/nHwF5UPfMRGybVZbcqpnLE1/cIPpnDU
6r1ej4KpHMxnjdXY9vLjCPTvqYxFjV3ZTNXUgmXPbTHvls61VznM/E1RLzUl
H6neSfuFXKZU0jJ55Oa9xMMGC8acbSfrx0558aepDfkP8BN7Vh07eP0V6Q/8
pHvZr3dGfiSP+aYP+j1WLL5iTPNikLcUjOsCH2W+4MDFl56k/wKufT7kNbpZ
0VrML+UKrvz8lS+XFxf8sSpj20Xg0MfAV//1qct7uPkvT2oPR1ecjs44WEH+
g/cb5qtuFOeM9SHJ5A/Kt/NCGitFkf54jybRq7w0V4UTjnWzu+5sz09MC6L3
C9wjpixgyRB/wsHDxatn/V6rvSH70P6/3+HkaE55Rxi1k8sPtT4TOzaT/ATt
YX57/U/LjvDxlTQfec445lw/HDyDjxstVm378q4aP6a3eULIDD5/mTPMZVN8
dR56oJXD/sDYGAnwfww6pLPtk0fi2K+VVai/nlx8+Ik5eY6to5VUjnTdexBT
eem036TASIF8sCB+9uT2q9bFpfFSOPNrw/GHt6x+UjnSfU/hTNdtvQysCPfn
5KMF5fgz5UyPInYeQYhL45AExnS/5EnYlHwqx7lmXv87M/2CVt7JiTmC8lOY
6am9Tw3sHUq4dJ17KqPbIO/ar7loTxKZjf+r7LrjojyCNpZEk1hiibH3XmOJ
scUxlliisUTsNcbejT0aS2IviSXWaNRYYseG3ffEdiLigQcccMBxHMd5nCcI
doWPu93ZZQf5fd/nP/d7H5d9Z5/dd3Z2dneG9+9QMv4DuhSp7LE39FUnpX2r
uyB4q/GAze/Jf2d8cEH4AfygqrcfdwIce7XI837kgZ2P3QhV/5ty/3vhJ/GD
pl45b8GNnakzpkSnCd6Y3X4TCnY6eC9I+BP8YCDfh7r95ahqTcPjRb8z+yoY
up9peyx8RZSoh/Fwn8wjel5/ECyZOmBP8iW57mZ+nlA4VGzu/iPZ7IFxfJ+o
SZQ96r8lIeK9TG8/hLNjTaFvlt8X72Xrl4fQp/3iqXnEel/P7fxQWLZw19CX
q1+L9zI8HLo9+CXrO04VvLH6I+C0T/Afct7U8/ojcqxn2fgJh7GmqgHZ7RM2
TiJgkt1/1esD0u/B3hsF/QqU+sWjj/G9zE7OWl8Pujvl32zrayZPNHRLuuE8
euSN0M9MnjhYtHtUq2NF04SdcMirfywwcUjDWQMr4TrCwHErbD5aZWAeYZ8Y
+fi0wIlTdTO+qSD9CV29+i0e/rjY5VzfsDy8vSZuR8VD4Tn79oV0kv4ENl/H
w/H+Kb4S18MHXv1mhRvVa93vutEk5GF41vw2tt91ybORx3mw5rBD2Dxlg/Ol
PP6Jp+K9TA8nwO+bYoNkPxp5/Xb4qHnxe69Wo31r4nomSw8eGDwsKOi5qIfZ
aYnwWeHwmPvZcKbP7VDFf+eYzEwfLo+Z2wl2qFjm0lGjDvvXzHlLhDfXlpy/
NlLqZ6bPHaAr2jrQNCtGyBPO7QTaXman5cSv8X0HVV+Z+DxCcTNvbxJcCI48
NW/3IyHnY29/JYHf0v/a7k5KFnh5vt9x+bf2oWWSUwTOxo8Dpp9od8rZQZ4n
b8btk+qmqU3y+jwX7WLj4RF82PLv03my4eX5PsKmUg1v7NieKHCmD52w9FSe
DjsFbub8PIKp1/3ubaj+VMjznZfnRzCkbNN/MjJfCpz1uxOCb5/QTYx+I3Am
Z3IOf4WJ+/lr3zKcr9P1mXgv6y8XHFu75evt1d8KOVP4uq9puS6P1je8JHA2
TtwQ7lvu1rpseDj3ky/6vn/5uFW7BF7xnfmYBw/aHrPSKnAz/94fw+D077/L
7yP9Fax/3TAzZs7oadFyv7g5twNr82fEf+TzS1kFRx6ewIdPfArMEet0M+j4
vFO2beA5qzgX6ifWs2dM41dlX8/i/bVeT/MXDM42X+C92yZFwSdrHIl68B7Z
5LBNqxY3QftflyPOBuJ4r9198Pgpn2z6HPExn1UJqGDMEPLg+vHIvs97+vjI
eQ3vWe4JP/8kuz1A45kw3CDu+Y7ZEzvcxydd6DEavwXLI/7vE5/WR4U/Vi/i
1TjTrvw1svQrofdoHBssj+vTEX/9ZPF//FSUp3FysDzGbei8umDq+U/dojyN
w4M4vW/LcKPA54/OYxlc8IXQV7hubXpm9jH/x3LexPvFrWJ+W3D0iA+vxyTw
fbs/nCv1v1Hg4UMfrvxiLepPY464TFg/xkOY4Ni51sfHIb4XxGO9Caqlnqf3
XhHHe7uZYZWbVjQ+F+Mc8Qb90+bp38l1JcYliNR+TSxQGvPLynhrf1jCv8jr
k1eH5XH91TV57sq/qkt9Nf+bn/093/Xtu8fCUjqcEd8p4jXIfTFcj+haXK7R
usEGcf4Q47zOnZv+ICSbHX6h1G8Z06MPQrvYH5tcnPxIjH8aNwbLYxyASf3e
fvrpF7Fi/DN7zACxwVu2tW0m7QdWPgRK3vyowU8LXwgc/TZ/Vp21vdCNl0Ie
/B6H2de9rfLigRiHbSMWR3rK1xy4qrX08+hzxCPC/prh1QNm+GfW6/53pkv7
kNknViiyYP5v2f0qzI6ywsjCp2ceOSLPK4Z6x78Vbm5eli5xK583rXC72cGm
8n6KSYyfXVUbxUp7wAiNveM/CfSvtj27/dot+hfjtv1xOKlFu+3Sn4P3o5se
vZoo5zuzwM+3CqjnPzldyNOcz0e+ww7Um3giVOAHvfOIC66XmPB54REhYpx0
T/pkmmd+sTx0Lzn6W7gYV4hX489Yz2Y+jxy2zW6RR+yzWyE/n0fSr7eudKbS
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
h3Zaun1A+8N/4P1ojLNhg9vLPtUVz3dQ4Kj3am5LPL3Vsk/0435+vv1AnXMN
d189JHBcv6yeE9z51TfSvmL6Jxn21VpaQK53DNyOegz/TffYh3KdgnZXsdft
X2WNQzGe0e9UYZ89JhZOC55Qf17vP+Lq/Hp470Av/LpXTnR1F9iI/jELP1dJ
42NY+Ll0Ov79IMNrJ8TDlDHDjq0/fErwU5/fQ0nJqFMo7sVxgTP/cwJsPFKz
/JlaR4Wex3X3N5fLF2g0VvY7WxdEQNLV8t0tUyXO7HMTNCo3ymfWFnleGv0P
W8IGnvfxeSTai/q5/JTyj9s2k+evWP03oN6leaFBQRKf4a500LMOOpvRzPd+
kNTb7b361h8WDhlRs+fybPMdvwd64/NisDlC4vje+C+edniQJnF23yqL/7/3
hHX6XOpV9h3dhK6B+c0SN/PyQfDZyT+Ptz4u+6X2e+P2mPn52xDoOXBKuxHP
JY7rr9K3R15/8kbi7Jx2KLScfr7SD/nke9l3aoS/p3Z/trlyvBhXXXi/XJnZ
wTqgvLx/6nXPZq1PzVmDyH8y9i/ax/jPIHAsf95TPBrXC3pSXp5Dw/LR3vpx
nW4g5aX9o8qD5zqMpLy0A7H8FO8L0E4zkfLSX62Wl/5htbxL4Gp5aUep5fEc
gpXgT0V5tZ7HorzKJ9ZjI/WkC1wtj/XbSfnnAlfLYz0OUv6lwNXyWI+TlH8t
cLU81uMi5d8KXC2P9bhJ+QyBq+WxHhy3AfCn93ejnN85zsaPPJ+MOONfnmNE
nNWPdqOR4Gjnm0j9CWScIJ5E+h3xZNLviD8h/YtyppJ+RDyN9Bfiz0i/IP6C
8I/4K8Iz4m8Ez+y7vQfsc/QXPCO+2ft3+wTPiNfwdstNwTPi7D1ynaLiUYJn
xL3VVI8XPKt4ouBZxR8JnlX8seBZlTNF8KziTwXPKp4ueFbx54JnFX8peFbx
12Q8hwIbzjfJeA7l43yfmO8Qv8D6hYznUD6u7pHxHMr7N4yMZ8RjyHgO5ePf
SsYz4nYynhF3kvGMuJuM51DORyoZz4inkfGM+DMynhF/QcYz4q8Ez2wch8Mk
pgcEz4ibmN4QPCO+h3WM4BlxNv4DBM+Id/MKECJ4VvFIwTPibDxYBM8qbhM8
q7hD8KziLsEz4pu8cqYInlX8qeBZxdMFzyr+XPCs4i8Fz1HsP/jvQ8Ez4meZ
/SB4RtzA7BBAnhHfxuYBwTPi3b183hU8I17Ty4NR8KziZsEz4kx+q+BZxe2C
ZxV3Cp5V3C14Rpzpn1TBs4qnCZ5V/JngWcVfCJ4z+L41+40QPCP+1vv7QPCM
+EvvryZ4zlD2v/dcQZ4RZ+tvneAZcbaPYxA8q7hJ8Iw49zsJnlXcJnhWcYfg
WcVdgmcVTxE8q/hTwbOKpwueVfy54HkDGx9QlY0fwbOKGwXPiHdk41PwjPhK
btcgz4inKHa4SeBXFHvbLPBYxa62EFyei0Z8qmIn2wieKHhW8UeCZxV/LHhG
XLVjXQR/KnhW8XTBczWm7/iv9Nsg/i3Tn4JnFQ8RPCO+lts1yDPiIxS70SRw
h2I3mgU+U7EbLQK/pNiNVoLHCp4Rj1HsRjvBkwTPKp4seFbxJ4JnxKcqdqOb
4GmC53Ns/uZ6WN57QnwCswcEzyoeJnhG3MjtGuQZ8f8Uu9EkcD/FbjQLvL5i
N1oEvkWxG60EjxI8I/6dYjfaCZ4oeFbxR4JnFX8seEZctRvdBH8qeO7M6uXj
U57zR5z9Sj8w4utZuwTPKh4qeEa8vGI3mgQ+TbEbzQLXK3ajReA2xW60CnyG
YjfaCB4jeEb8omI3OghuFzyruFPwrOJuwTPiMYrd6AeR7Dvh9luS4Blx9ivv
bSF+mn2ngmcVDxc8I/6TYjeaBK5X7EazwC2K3WgR+N+K3WgV+PeK3WgjeKTg
GfFait3oILhN8KziDsGzirsEz4hvVuxGP5jI9D7XA/KcG+LsV8aNV3F5vgjx
cG7XIM8q/lDwjPgxxW40C9xPsRstAv9PsRutAu+r2I02gddV7EY7wc2CZ8T/
UuxGJ8HtgmcVdwqeVdwteGa/uC9F444g7hA8q7g8t6Di8nyLilO/fwr5ezPB
daQ+xPGflZYXPJP6Bc9EHsEzkV/wTNoreFZxec6Z/GrYDu735HY1jgc9X1cf
5Ljcb+X+DrJeNkKCt56dvDzO7ybYx+2MaGV+N0OAF18KTA3j/I7xBPa0YXHV
cH63wseK/KmCzzQufxdlHWGHh1x+tg5+Jvg8zeVn64kXgs9q55n8TNxXgk8r
l5+tl6VfiLXzOvdL4D0+er5CJ/hkfF3l9ct799xPx+uT+7ls3r3I7UOL4PMS
tye6KvO4mX+fZznP0k+7g9vZkxV71cr16XWOS//bh4r80r+6gMvP3iv9qMlc
/o3KutgJg7n8jGfpFw3k8jMepP/zKy4/+2/q5wzk5c8Kfvl4JX57ei5Fnjvi
/npej7xXy/rlFq9P3n+pye0J1f9j5uuKG7y89HNu4XZ2tGKvWmErl5/xIP1v
Pbn8/sp6wQ4FFPmln/Mal7+Lsi52wmwuP+NJ+jkbcvnZe6WfM5HLz3iQ45nx
EMLlv0F4DiF+Zj2OYxzXgmfyK3hmPAbzv5PnKKZye6K6Mo+b+XwcxPmxCZ7j
uJ3dRbFXrTCNy8/wZMFzdy5/lLJesENtLj+rX/rf8nP5mf6R/jeNy8/ql37O
OVx+tp6Tfs6GXH7GJ/VzhvN1SZDgeTJfV5xV1gt61L/8u5fxK/g45nr6tuCZ
/AqezdyeqK7M42b+9+h3lX7OzdzO9lfsVSvHwzku/W/TuPxdlPWCnfMfxtsn
/W+1ufysHul/y8/lZ/xL/5uFy8/ql37Oy1x+xj/1c0bx31DB8wa+rqiqrBf0
XL5ICOLzGPLM3hfJx91lwTMfx5y/YMEz+RU8M/4jeP9LP+cFbmdXV+xVK8ej
OC79b5u5/P7KesHO+Y/k8j4RPHfn8rP2Sf9bbS4/q0f63/Jz+Rn/0v8Wx+Vn
45H6OeP4r/S/nePrignKegH9QrHQgc8PyDObX2NgN5ufBc+sPTG8fbcEz3wc
47gWPJNfwTPfT+X8Sz+nmcvPcOl/u8Dlr66sF+yc/1jOm/S/TePys/LS/9ad
y8/4l/632lx+Vo/0v+Xj8jP+pf+NPcdz/1y04HkyX1dEKusF9CfHc/5vCZ4Z
n/GwlNtByDOTwwK9WL8Qni28ffcFz3wc47gWPJNfwTP5FTzzfWten13wbOby
s/c7Bc/duPxMXrfg+QKXn5VPFTzX5PIzntIEz5u5/GxeeiZ4ZuMT/YLS/8b4
T4B3ip9Zz8dtAl8vBwueGf8JEMLtI+SZ8Z+1Dmf2puCZtcfKx8VNwTPXy6in
Bc98HJNzArgPZcNxLXgmv4LnKVx+9ncOwTPf3+Xvdwmeu3H52bwm/ZwXuPys
vPRz1uTyM/6pn9PO9bD0vzHe7VCFfx/IMxv3iZz/h4Jnxn8i+HH7CHlm/CfC
Hr4OQJ4Z/4mgYwIJnrmdwfkPEjxzvYx6WvDM9TLqacEzH8fkPAaNN2sXPPNz
GPzvnIJnM5efvccteO7G5Wf8Sz/nBS4/879RP6eD2xU2wTPj38H5l+fSmZ3n
4PybBM+M/yS+b/JA8Mz4T4IRfH2APDP+k0DHGiB4Zvwn8fn8huCZ2xlodwie
uZ2Bdofgmetl1NOCZz6OcVwLnsmv4HkKl5/9nUvwzM8xcFz6Obtx+Rn/1M+Z
zP2c0v/G+HcSP7Oe8+6ETnx+QJ4Z/06ozO0j5Jnx/4jzf0fwzPh/BDqvPOj/
wf2+R/AFWzcJnrndzPmXfk5uN6MdLXjmdgbaHYJnrpdRTwue+Tgm54tofF3p
5+TnivjfST+nmcvP9hOpn/Mx93NK/xvj/zHxM+s57y7+K+8lMf5dfH8qUvDM
+Hdx/g2CZ8Z/MqQo+4Zmzn8y+Hg/vKWCZ8Z/Mt+3lX5Ovg7keKDgmdvNaEcL
nrmdgXaH4JnrZXIOB88JIK9JgmfyK3iewuVndp30czL8ifh/5JmN+yfozxE8
c7tTzm+cZz5Pcz9fjOCZ6R83768wwTPT/25uH94VPDP+H4Pd+3tS2BmM/8f8
fIL0c07l8rP6rwue+XkjLmeI4Lkbl5/VFyl4vsDl53aT4LkGl5/xkCh45vvf
fL57JPhEP5G6XnZDVTZuOE/v5Pjn7WT7sO9EPcjDO64PsDz5FfVM5Dz8peg3
LJdCxgP61/CfPB9u4Pkg6H1/C8+zEFn++LumZ/IJ/G+ep6D72CGz/PwzRL/v
5/Hke9Qrt/6tP9q3GDcmEUK/H55ZuAPGZzNyf6AdMmoU2jR2TKaQE8/NUnnw
fD69v//+/Ho584PjezHeHY1zgueoX//qiefwRoxbjP9Gy+P9OBrfg+bJRZzm
sUX+2X2Huznay+Ko0HgRen6PgN5n9wMjz8NyuXExqNX1HSDO4mNfhMRFhSZ3
KZ5XlI/neUwob6y/ouHf9lX2ZA1E+b177z9Gw/qrQ09krSVFeXYvIC6XuBY5
4xyy8+c07h/eb8oZD3AEj/NP+ZzP48ZT/DC/zz5zcd3J/06W8RjxntqnDyod
KeAj43jgPTXaLzQPNfKP984cY39vUzBTrsvw/hcdb3i/hrYX40v0qlzh4q8Z
ct7H+0G0npq3J+b36Dk6Hsa3PfjSs26h42H3s1YlPHG8KT9dG9/608MPLX9+
TdLrSP9bOXgYW6ex9X3x0JbfePTzpiycylMwwPrxlPfEN4tI7v27B6fj5HGW
6XE+x/drgjkjayx6X78bfvuqtMc+ofKPqLpjdlyO9urg+eCBvTzrZypnvv+m
N5hQhuoTPQRH/DjZo9+onG+GfBCUU8/oIWgHzPes22n/dmv+TYpnXU/xvrV+
GeLRkxQ/snvMnX39aVwRE4zsVaiM5vMoR5ylckt+8X1fP77o4+7j+d4pD2UW
3rq8MYee0UGN9N3F39e/o0r2vrHhPf1b5qsJX70vrl2pt8VfRfnnjFdTJKJq
ozHzafyZLDutY/EiOePDGOBoUd+ULhup3jBAs/GPpw7qnVOff/Fvpebvi8di
PXP1Mw9Ox1Wt8c9fdHlPPKuuc3saPDgdbwW23PD12Gn/t+8rd/7fz2du31Hu
4/b933tu4za3fsnte8xtPOfWL7mP5/frq9z75f3856YHcvu+ch9v79czuX/X
79cPuX1HuY+r93+/uevJ939fuX8v/9/v4v16Jjf9n7tezU1vvH++yG3eyU2P
5abnc36PGLcC5d1Z7LjxgxGnr6l5pv2g7vil5e5Mp3mX/WD5tG37PHn31HvD
aC9bSP5dP/itV/ErnnyCV5U8TH4wZHaRlStWxAl7UdQzuLmp17A4ETcB8SYF
3A/S2sQJexHx1g3aNvipSpyI94H484nDp3/9cRyo7c3SK+dKBLZusJe0Vwez
m7kue+5Vqe3VwdaRH6cVG03bq8ulvTpYsqfAsnJTaXt1cHziX5dq5qXt1cGJ
Xxoeb308lrRXB6/K/nWx0fhY0t6s8TKsgDa1cSxprw4OBVx+58obK/Nfcly7
3mP0yugYwoMeiu/cfGSBe/M1tb16+GPgw0GBB2h79dzvG0faq4d5w+o+/K00
ba8edvavHOs/OZa0Vw//1vns7gJnDGmvHsp91WLr4qUxpL162NovrGjxhjGk
vXrI3ze8fk2HmbRXD80/qmbqdtxM2muAikUrJv3wx7prav54A5zdcqelr28i
ybNugPsjNg+sNdtKxoMBkrXPW3nuA6r8GHLhxwCF9vmOTD4XS/gxwFdjVwzY
dCeG8GOAwGeblg0pQfkxwOFXA2r2XG4m/GTp6f5LEhNLmgk/BijmP3D+xfPR
hB8D9KgytLVhfDThxwjTin58b9LPy64dU/JoSn2u8maEntqz77f+4CC8GeFW
+t6RDTYkEN6M8HPkxHyzesUT3oy58GaEJjU73TjXkfJmhD7nbw6bVYjyZoTk
ZT49N1Y3E96M8FnQxtRV06MJb0b4eFD6tcoJUYQ3I3xbv9mBalOjCG9GeNy4
UfOIIlEi3hbDTZC2ZnfBdwa9pvJpguuDxscOrLaY8GmCPvUy9ubxSdGqK/c/
TVB8dP1BGZn5CM8m+HpH7WmdPn9MeDbBP5MWNuxdMpHwnFV+qrvlaj3l2ZQL
zyb4blvzDxZdjyE8m6B1m8OrO7QwE55N8EWj/CMqlY0mPJtgwuYT51a1iyI8
m2B849uTfv0rkvBsgiabfGb/+kkk4dkEHf9pO/X+dhPh2QxJm3pFlFl+nfBs
hkXh7Ss2vjn3mopb4N2QzSVW1f+Z8G8G7cfEscXyxxP+zbmMczMETjhyyNkh
jfBvhhUBr545OyQR/s2wPK9l3tVROfOoZLyXfzP02359aWitGIJb4LP1xavd
mW4m/WKGFvk+WxDSKZrgFig5Q390TcMo0l9m6Jl/9OuKTyIJnmWXdqlhXbXL
RPrRDGW6r3rhdlPcArMf5l3iySOp9q8ZfML2fFG7tongFrg/yfLPli3hpN/N
8OOX9X+fsiqC4BZocKzR0sKJYWQ8mKH4k1EvrxeIILgFFiRFDfX1DSN6zAqD
l9waUDV+8jWaN+/9/FthZ+OI5BbrKZ9WiCq+tfTEOBPhzQqfbK3z7akSEYQf
K3SbdNhvSGAY4cEKr7a3iQkNNZL2WuHfIsOLvChmJO2ywvJ8DxbPmfOQtMsG
P27etLpGvbGkXTbu/6TtskHcRzeHpsyIIu2ygf7FqRKzekWQdtkg4IbflTnd
w0i7bPBz1z8KH7M9JO2yweAHZQM850nUdtlgiLbl2O2ioaRdNjgyoFjmL1NC
SLvssOb2r38s3DTymiq/HV5/ZapzrmAkkd8OF9aOfOQ/OYzIb4eKu7/4eFmL
h0R+OxQ91sd/56UQIr8d5uw3fdrokIHIb4ePj1T4p92JB0R+O3SZkf/EvXHB
RC85YNC0iVcezdtN9JIDms/umfpl0EDSXw54xftLbZcDAiteGVup7EPSLgfM
rvBH20I3DKRdDtgTOOV80rxg0i4H/Ddue+WmvkGkXQ44NazFi3rXAkm7HFBl
XEtXw9/vknY54ZvvfsjT4+Jm0i4nxC7ueMYc05voVSc0rrj/6sBKR4hedcLh
RckHC7kvaapedcKMbwsv/+xKkKby44QX7x3PTggqVfPgdxeNhDcn6C9ueXCv
joHw5oSikx74zN99j/DmhFajQ4qsOaknvDlh9pturyecuE14c4LWZlDruS1v
Ed6c0GHA2wYVK94kvLlg+ZEu137tuIrw5gL/r5ucO1XpW8KbC4INtgKvFv5D
eHPB1f3T4p+kniC8ueCLPkPaOuZd09T5yAXhvzR86dkvVucjue5TeXZB6nvH
oQvG+W1aMeKJnvDpApe72syF424SPl3w5tq5yhXjrxM+XbCrkDW58Zc6wqcL
Dn8SXODnj68RPl3Q6c9ZAzt2vEL4dMPUfYfLePKHqry5od3F9i3109cS3tzw
2bKRqRF1dxLe3HD84/7rF3Y8THhzQ559X48dWOkS4c0NB3rVXDc8NYyMTzfE
v3d8uuGv4Pwp5eveJny64YcqUU2N31wlfLohYvm6k5Oj/Qmfbnjb5a61xfoz
hE83fB/ZpszQmacIn25oU7pJPu95HYVPN5Qc/OKjlflO8P0MzGvqBweb5mmz
YnWCyDeP+LrnI/qPOhEv8rIjPs1nqPWjJIvIa454dNP9fT+aY+F5JmSe8Lo7
a/3r8Q9gPmbE/7y5zLvex3zGiN8I+su73sd8wIjPqtjG4FnvY95cxHe1W+Rd
72N+WcSHLNjiXe9jvlXENxYZW+PPl7EiHwnDddDjQPmenv0ujGeHuF/o+mvB
iywi3hPirQLW1Mt7MVbkJ0bcHL+4wIUZsSKPL+IBnww52LNlrMh3i3ilTYcG
rv4oVuR/Rbxcl/wJdeNjRB4UhuthbHC1iiOeWkR8KMSnPqs3NeCfGBEHCvFO
oXsq5P02RuTTRfzCybwJpd+aRX5ZxHs+me6od80s8swx3ADDniSX+a6TWeSH
Q/zKd5EfnY2LFvnbEO85r3OH0WuiRX44hhthRS0tY++pKJG/DfEWk8MWt/s2
SsTrZ7gJkkdW0TYlm+BHRQ9YwPfjzL93br+o/afogSw7v/+2RZ44nJVJPJ02
5eNK5/V5qQWRuGa74wZMzrIFedwcGafs2rF8Uz35TTqSOErBE2fX9sTLovnR
P+f2Oc0vjnY4zc+N9jbNY412dXgu9nOzXOzkP3Oxh6et8cThQ3+cFSqOurQ6
61lr5I0Hd13gi8ebDu6Zf1c75OUzUOCnveujBO1THocIcZxHgng8OMQfetdH
TzmfUQJf410fJYo864gP8K53IkWecsRbetc1ESKfN+K9vOuXMJH3GnG2TjGK
PNCIs/WIUeRFRnyUd93xEPx5vCeG26B7jUOZnv39hjxeHuKFYwoUuv29UfuB
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
t3tAJphwad+S/D4Z2oVSv2VMF+NO8snOkea876meD7RBkW/iG2dm5iVxJGT5
1Lc1kpduzXl/51njcbDs05z39L/v9WGzn+vcyTF+6gf1uF+l9I0c9U/2C9+Y
vX8RX73z8ZDs4wrxNRWqTmwx6T3xT5Ietz6f7V4M4oervPhkcrbzuoivil+9
YFO2e6yIF6v3eND77hff/22IMTuO5We+nPH7+76LWqFPF/jWlX4DxLfnfTir
RrZzkmL8/13nVPb7Poh/VOybarNq4LkmeR9tjKtG2vv4Gfv4dG+fS1IPoPyR
jV8XyB5XSsQvKvf7wovZxiHizcoV7P++fvl16pH50yDnPbJXGxZWkvpH8rP8
x+9aaZ/kvCc1Z++gn7LHjRH3nn4/EnjJnlNftYuu/0fjbPcBEV9QqcqLbtn0
BuIVP56xrlr0pRz4T9Fzu124eydHu2DD9nLDU2/lGLeRDW7M+iQe821KPZOU
5n/nfffphoQdbWvOhmP50EFX08M75RxXy49vc0f+Lv3YiM//9fWG991DX/BB
rfDsuBgPM0eGjliRU48teXeizZRsegzxdTVaXzHVz9kv69+c+iZlnNwPxfLO
KNPyzU9y3udaeffQ0uznZv+3/srtO81tHOb2neY2PnPTJ69i15rnlNPnaNfZ
8MWf5Ml2b1ro7Vz6MTc9kFu/5KbHcvt+c/suctMnuenD3MZDbvoqt/7NbTzk
9h3lpudz02O5fae56Zncvrvc5qncvq/c9G1u4zm3eS03vZHb957b/JKb3s5N
D+SmV3P7rsNWLckbkM0O+d/mx9zmi9z0bW7zWm76fJxyT9wPCnYY4+3Pjcq9
Sz8oeu6oN4/PMSXulg5q/fZyfvfCeM4zXuDOpWnX/14ax+tJEPinPw0tVaxY
HI/7Kv083w88e8Naz8LjecYL/MrCGgu/7B/H608Q+IiKxytc+TuW1y/z3Fap
n1GqaNFYfl49Xoz/XqPPR3viCYcr8XYM0Pds9z+318X4wIkCH9jo7zefDY/h
9ScJvNjZ8rM/DzDzc8Iyj0klb/z5OP7eBIGz+PMxIq8n4iz+vJm/N0ngH4St
71k5Ipq/V57bqd4yb8ToZtH8vfK8yg1v3P4Y/t5Egc/0xu2P5u9NEvgQb9z+
KP5eeV5lqDdufxR/rzyvwuL2Y7xWeX6D5UdAHuT5DZYfIZrLkyTw77z5ESK5
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

   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHn8FtP7/++ld/c94555d08bopQ2aUMLJRRKq4hUhIrI0mJNWQoRWfNB
1qxRKFv2XZR938q+K0tky9bv9ex1vo/fH/M415w5c+bMzDnXua7X9Tqn+dhJ
+04s5HK5UaVcrqh0UJTLLcznct2UDlXGPMk76GiuQlco3V7HCzq66/hC5S9W
uf9JbqP0snIu97HyKkr/p+MTyYnS23T9ah0f6nwz1bmpjmE6X6p7lijtofTB
NJf7Ttdb1OZy51GX8lsr/UDPfV/Hl7p2teqqUXqM2tpM5e5W/n26b57y6yj/
aOVvrbzndW8XHRfoOYt1/q2utVN6t/J20XF4ksu9obz2qv9y3fup5FTpfB0N
JB+reubp2lKV7aP0MT1jnfIf1331VWemY5CuPaL8X5R/m+57WPIPkluqXY+o
kQ/oem+lLeNcbrae/YjqeVRlflSZtirzuOT1ku/Wva1VZo7KPK4y3XQ+WPk3
qQ3vqsxqycfpuWU9s1R0+zdReg9t0/GN7vtVZXbXcYfu3UHpRbp3R+Wv0vX+
Ov7T/b8p/2mlJ+nehwt+nw9U/19KVyh/F7WhgfJPVxumFCy35N+orY9JfkJl
d1X9B6n8nap/g+75W/KLSk8pugx1/aVyQ/N8UL2v8hbl/Z4HKt2g9FAdI3Xt
ID1ndpbLNdW9l6jcKF0/VfId3KvjH5UZy7sqLejIS35FzzpU8gjJdZQWuSb5
NeXfqPoektxXaUe9y2Wq80nJHdT+JyQ/pbIfpa6/u9KKjrqSz9O9qZ57rsrs
qfOdVf5SnfdUelnR95aVf0xV7610R903Wmmk42g19V+d76DnXa13aa7yW+k4
RNdu0bP/UHqY0t4qM0FyPaUzdH6n7ttC6XU6b6j6v1EbOut5T0p+Wnl7qI5G
klvpnlN0/qLKH6wyQ1TmTF3bXulh+gfb0peVVlUmkXyFyvyko53kRGV6q12b
qZ6z9awX9e8mqZ66ko9XXhMdnVVuUNFlqItxt4Xk2Urv03k/HT9xj8qcrfyd
8u6v/M9/VWaDjj70B+U9r+f+KflPteWeovslfXIT5Y9hzMb+nmuVf5TOc7Hv
pY7fKu7z63VvpvyHJW+u/O9UdnXBfe4vldlH6QRdH6O8ko7N1J44cZ+aqP+z
KrVMXjM96weVqVGZT5Q/XfnPpu6Dawou97HOJ+fcB9qq/M/Kj1W+omcs5Lre
62rl/6H8q3JuT0Od/5OzDvtS50MlN1BbT9J9zym9Ufk76riYd9f17kVfW8c4
1XEG34hvqfxFkku1lusqXZn6H81We47Ku3x96lX6m45Gkr9Um7ZW+p2etbvu
+Vv5Q1T+28T9ZRPl7atv8b7KXaM++VnqZ9I37sq7nvN1fnLe3/AiyZ+nTm9U
meF5f3PekXdtFN53terbRtd+1HNn6Hod5X+u/LnKK0p+T/JApf8V3P8axpYb
KF2buH+latuFQY+tUfkf9dwXlI7W9QN1LJe8h8r8pGd1UvlWkcuWQ/kbwr3N
aKvqTnVcJ3mZlH9npWOkb5vEbs9a1bG75BrJv0r+sGBZnyT3Wt51okvp1/Tv
XpLHIYd+9U/ivv+A0h/QPyrzPfpD6YE6Ih2fFKyL0cPrUrexl9Kt9Nzdlfcn
fTu1TN77SmvpZ/RXXbtQaT2lnVRPUrT++T319Uf03C1jj7mzwhxST2V207Wv
+K5hDvoldRnKtqX/Uoa5ueB5ivmJ51YlD8z7HvJ7o//zrnNA3nqb/71xDBY9
z3Ev/4B/wfccpTY9r7x1St/RcR7vq/91r66fXvA/2F73X6/zAUqfQ6cXbDNg
PyBfhUyfVHqE+unOavcNBY+dJpHzT1HaTHnTdFwZ7p2uY6Xqvx+bgDlO6Ui1
8Szlqwkbn8m/VJW5+Xnn98y7T+6lY07edsEZBdsGF6sNc7hP77Es72dth62j
/BuYR1TpP0pHUafSVepbIyVvrfQSlbmA5+je/ZgrdNyoMu/r2n4q857Si1Tm
dJW5PLHeR/8frsY9qnS4ylSU3ho5fUHfdjrvqeN69E6N65+pdIXyzlT5bkp/
1vnTSvcJ6VEFzyWf6Rlb6byFnlNPeafkfT5J9d6l619rjrg0dX+7QWUf17WD
wnutVF0HSP5A6Ya8Zdr6r44Rko9RemTJ33W0dPD5ete3C9YFtWXnc/1v1dtb
eQvraa7iv/J/Mo+1DgWPjX8TjwXGBP2lU+gz3dQH5jFH656vdG3LvPVhqcZ1
7qb6/+S9C7YJdleZiUrrK31YdX6p8f+dnvtq3nYe45pOMQU9pDJXFaxP0aXv
8o913lfp32Wnu+i5n+pZTzA+lL5Zts6MI5fvRp06n6z8xUq/Kdk+wk46R9c3
L3hOZT5l3p4c5u6zytZpf6v812rnf2rnr/Xct08O/a1NsJ/nKH1FbW0jeQ3f
Cb1SdP30/6nB/m6bui9PUzo1sv5rFNlmeF1lzuV/VWzPP6z0nsj2AzbAeSrz
psq0RV8oPTG04VkdJxU8rqapzY8r/UX3t9IzWjPXqD0T9E9nqo4j9E/LKjue
NmFzpNaXe2L/6tsdofzvlXbk+6ueTkrfxEaU3ETpEarjSPRv5Pn26TDnvqVr
01TmGepTf+jIXKO2HBd5rmrIXKD8kuRnsPdj229PS26SetzU6Fkzdf4ctkTJ
cxX9dI3yTtPxlPJ/U/6pkp+U/Kvk0yU/Lfl3+njsb/Od8o7UcSNjUflnlq33
/pI8WO18MOd/xBz3ltq/Vs/ZU2WOQD+pzO6SD5d8r+SDJV8q+U3JC1PbBa10
73s63ta1K/Q9t1O7Z+M7KO8Y1TWJuVLp+zqfp/xddf3dxPP2MmzXyGP3dd2/
h47xyr9P9X+Q2E55XmV20T1XSu6gvL68j+SlKlPDXJuzLd0CHa96DuVboxOY
y6k3sW37pOr5Ss9qnLc9sZ+OmdSvet5WmZd1fnlm+6VHsGdu0/e4VOUv0XF+
2X5WoWxbA7uNMTlbZV8t2I5hHGwZ+uH5oa/SZy/P2xZlTL2sdrRgTtMzj1dd
92CP4OulHo9dlJ6s/AewKUqew8eEefzognUi+hB74YjQb3cp2vaeia5EHylt
oG92M/pPxx30XfXj0xibSpfwzZmTaBt+mfIijYmn0OvBDrlQbXiHfqh0F7X1
Nsm71dpW412/Uv5rBY+px3TtZr5F3uPtVuYkHa/wDdW2WyRfqGOI5Hd0T3vm
AdUzS2kzxrLqeh1XSels6sWmVro68rtgP5+h42zJTZV+nNievVT/69qivyf9
+Djl3Y1tq+/2eeL5ojvjVPk3SP5I+ceW/S5fSP5I126X/KW+wSeSP9W1s1Tn
h+F9uyqdqWvfSO6Zel5kfuR7bqnzU3V+gtKo1vmx0kN0/0GqZ3t9z8Myz1s9
JB8seZjkzpKflN4com++QOlY5U9U/k7KL+j+zqqnqPTwzDq6p/K/ku7rr2ee
rvYcqfc/XM9dpvY/WHLffrZsXYPOuVRlHilZX71Utm/3VMHlPo18/onSMar/
cF3vWrUvgU8xN7HPhx47Jmf/9Hv6cmq/j/n+dqXL1Z5dsUckz8rc16dL/iOx
3bZW8srEuvV/+L6px+Q4peN1rMVeSO3fNWburvV8yhzaUPIEXftdZTYo3adq
HVnI7D/i6zFf3JwaZ/gbXZ1YN35HexPrvVclv5rYP6ur9NfEevg15X+ZuA9/
ndreYCxchR+fGXd4Unmvp7YNfkqtp9BX12H/MMcU/L221bdaXrDtNUzt/EL3
7qU6uij/BeVfrfzHwRN03FU0XvFQwb7iKtW1OX2bd9X3W4l9WDbO8EjB/uEH
kW3bRczV/Dt0jtI3Utv+vyfGk8CVwLtuKRuTeUdl7lbGZ8pvSbvLxqPejIwj
4T9svD/y/b8p7ZF3G8Cedsy7TnAqfJD3JP+qMi/n/d/VbXPHVt3ONRXjIo+G
NtdJ7OOCY+CfPRd8tC61ltHnr5ac947a9UHJen5V2Tqafnq27l1Z8vf7UPnd
av2dV+j6qsjPuVf5nytvKbqXeajW8kOp20V78O271/pfvKj893Tv9ugn3TtQ
7b9e6Q9Kt1aZ+1TmAZUZrPOblf+b0sMZ08q/Jmc87P7wrEG6dgPfump9i46t
qI5jM8/xxytve8k98W9VZjvJPSS3kNxJ8o6St5LcmflGcnPJe2TWU90lD8+M
P/aV3EfyUMkdJXeUvL3kZpI7MNdKbiq5veTOkreUvKvkwZK3lbyL5EGS20lu
J7kt9oXkbSV3kryF5G0kt5G8ueQRmTHEvSS3ldxa8maSd5C8s+SWkg/IjIf2
k7xnZn26o+QDJS8sG1dsJXkLyY2U/5+OXsy1yt9AmySfKflfyV0lz5D8j+Qu
2KmSW+veLSU3Vl5NeJcLlE+H7Yd+xjaXvLfkDiozKLNN00fygMy20W6SR0nu
pX9xiOR9M89ne0oemnm+2UNyv8xz7S6S98489+wueWBm26u35P6ZbaxdJffN
PMf0kryb5CGS20veXfI++PmSe2S2Ubap2pabxtyf2seslfxc6nlnC8kvpbZz
wEJeSG0jNZS8XHKsesap/UeltpfQOztJrip/gvKPTW2DXaO+tyg1boZfcHRq
+xM9D743UeXHM4bUnsmSp0jeWfKJkl9UPXepTH8dL+Xt596T2PdAt2PrgheC
0T0o+S3Js5S/V2pf7gylo5gfJR+Y2tYCwyxTT2q8+k2lTyTGaMGeH0vsi4M3
t1EbWqk9m6o9O2a2/9pI3imzDdpWckvJTSQ3lNxNch/JrSR3z2ybtq5az4Op
gosuTzzuwaS78r+knz6q2h7AJ22p/J2VfyhzYGpsFIx0sNI3EtvhYKpgxODA
A5XfQuUzPau+6nk5Me7WTde7KH+U6hkG5qQ6PlX5FtjiqeV3UmM8HxeM8+SV
dijad8On61g0TlXAJiraDwRb6xjKlPBR8vYlt4/tW3SJbU9jVz8T2a9vV3S5
98q2b7Fzt1Zey6IxQ/A9YhVgmu1iY2DtlX6la02Uvz/zUNHy6JzxZuxpbGkw
a/zUw6rGsakXTO/7gmXq/w9biPsSY8itipaZw1tLPkzpHantt3lKuxWNk6BX
sTnnBzv29Tr262fJNhqtd7lE8huaB1ro+vK8sQ6+1XX4qHlfo0zjyPjlpuEd
wSnBK5sGOxl8DSwmSW07fRra2Ca0rUv4ts/pme+nrmu1+s1OtcaePpL8Sdn1
bRq5zvnBTr4xtd89puo4EG0YGr4v3/n+sv9np/BP8anxb/FtsX12D37xBsl7
hvzzdPQt2q6urbX8c+J36lV0O26V3K/osgMCLgRWWa/W9jXlm6a2+Zdowv6o
bCziG7W/puB/wPcvBpszX+u5rqvkE8J33r7o/tQ49fc+LrWdu3OwgevU+no+
1LHd/9UZ/hG4D9g97fpR7fmrYF8FP6Vu6jjKh6ljDNid2JzYnsj8j86x+9dT
Zec1D/nEWIi1/Jdzv90i9OHVOraUPBI7Rfc+ousnxy5P/iE5Yyj4bVNS48tg
G8Qs/lGZXYu+p3fRMr4H6W4hH5lr9OO2sfvakrK/V+fw7q0LxubAuKK6sjF0
XlZ6adkxw7hs/7JSsI9J2y4tOGZEyjntnFO03QVeuUbH3IJ92qkBMwE7eUnj
ZaLKTtV4KSUeu4co/8myvxvfr7ne8R7de7/y1ynv8oL7/DZF41SM2z1itwf/
B+wQDBGs8tdQ/lh8D3ScztunxtauLBgTBG/Bv8W3fa1sXx6f/unI16PI/4P3
4n89qucu1HEvtnVkTAmMYn+Nn2+UDs7sU79ScOykfq3lPnq/NcTFcvY9GRf4
kvsq/1yVf6nga/clxufAsM9WuZck/1MyDsxYxp7+JnX53mBTwU8EF1qt/DeU
v3difAl5Rc44IdgI+P7PkfPAYSZVnT80sQ/6csF+KL4P/jp40illj+OfS/YP
GT9lpesr1hMH4Xsy5gvGw5fo/BU941rm+aIxiLeUv1j5CyS3Cz7Q7QVjbQvy
LgNGsTfjsmCM+pDE735a6v+5qOB/2jXYtOgCMO07C8ax8Q+IQRMzHhhbv7yg
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
IuAnsmYffAOc4/8BQqUfEA==
         "]], Polygon3DBox[CompressedData["
1:eJw1nAncVdP3xs+9t9s993bPue99mxBNlBKNaBRKKiIaDIkipNGQeaxIGdJg
ylyGKGSekp9QSVRmITKmaJJkKPo/X8/5fz7v/rx7nT2cfc7Ze+21nvXs2+CM
c/uMTgdBMD8bBFX0/5ooCI7S/5m5INhZDoLb80HQThV6poLgROUvU70/lO+r
aw2Un6cUqW5e/wtK7xSDoJba7xEGwWa1v0j97Sd5kur8Kvko1XlN7Qeo/T7K
Z5QOlrxE6VDVGav6R6v+LOX/Uf27VF5XdS9S6qD8xUrrqwbBCv1fqbRY9/lN
bffNBMGBhSDorGt91fZp/X9GabjS56r/qv4vUOqh1F3pE6VPleornan225S2
6AVMkRyo/Vb9/01pD6XdlS5QGqN0J7LG0kv3C1Vvlt5JL8kZte+m/Asq7yC5
t+RzlB+l59lDXV6muuv1PG/o/ahaUEPjXid5lOqsVd0j1KaG8lcq7ZQ8VGm5
xjNW8jVKK5RfqXRNrPemuhXqo4fyZ6jfidxb4xmi/LOq21blW1TeSfmzdI9h
Km+o/AdqtE197JJ8Lu9M167VeC7X/78kn6WBXaA+xyhfqfz4yiB4T/VHB/7m
VfUeb1bdx+lb9ytJ/ljyR0q/qt7WKn4nvJtPNYZI5YvVX0ltT9W3eUT9vRP6
XsyfR3SPV1R/VOBveIbkn3gfSn+qr7+UjtX4Mqr7va5NUL6r/ndRelPpLaXq
Sv3V9nuldaofSz5e+ReVDlO+m9LLyh+lPnZj7jIeja8a81Dv40bJ3VR2kuoM
Vj7UGCLl/+YbKH+Jvt/+Gt+NGudvepdpXRsk+WeVn6b8Lj3PMcofo2sHKz9V
/Vaqv5FKrZS/UO2bqmyi2m9R++N17Q3Vf1DlBb2fKnFyb/XVSe/nQz3DVZKr
qfwG1b1D19srf7SunaT8Oaq/VfnTlR+r+her/2bq/wbmrPo/V9erqv4Qpf56
X4t0/UqV72A+quxiXftU9/hM6RLlW+raXJUXVX+M8ker/0NV9ydde0Z9v69n
+kfySKWiys9XyqvuZZJrKb+f7jmEurpPZ41nqfqsyfPqez8huY7KmyTPv5/k
t1ReTXIt9fuzyvZR6iH5AZW3UXn32O/nOD37Qn2f3zTO7SmvUdbqTJWP0/13
8R5V3lTtT1L7uWrfQe0Xq38NO9hN/W9Q2Qmq917KayZQfrQK6yh7Rc73v1D9
Xany3fQs16p9Y13rr/JHVd5W8kjV313yJTmv13Ml7yn5Ksm/SD5W7VaqfRfJ
F+ne/xT9Pg7X/Z9W++dVfwP96d6fabw7VX6G5MNUPkvlg3X9Y7VvqfGFyp+n
+nuhh3MefyOlfpJnSz5Y9cdqvE1U90jJb6q/RepPf0Ht0ONppnSm5GdVfqjq
L1FhzPpV+TDJTVR+ouQ5Km8v+SUVPq/+PtZzbFTZvrwzlT+m8nYq78p31fie
Rkcpv7fKu6v8fuVbq7yh5CMl3ye5leQGkrtJvldyS8k/6nn2Udu66v9syZdq
PKv0TT9Xukz5xnrmRomOQ9cdp/Gs5nuzvvV85ZLWrtbrfrq2WX2tUZsD1f/N
ml/z1N9pqv+Lygap/2skX67/ZT3POF3bU/kaGo8ePbiQsaN/VL8W60ftZ0ve
mzWo/seqzb+659W6R89kPu5Q2z90rSPPqv9tlH5EvzKX9b+Z0t26Rxfaqs0L
utEZZesD9MKVldax6Nr/KR2t/IdKTdW+rv7XU5qh9oeo/XbmjPKL9Mxf6t2s
Vlqs/Gca7w8q/1PlSzS2FaHXMuuxWt56Gn2NjkRXrmGOqt+NPKPavqlretSg
Zuj9Z0+lgyRP0xiaaXzfqPwIyc1V/qTkvVR+sOTpKt+f76V7HiD5JsnbVLYw
tP5pqHfWUh0vCH0v9OsDGktPfa9LVfa32ryjtvXL7v8etW+h/jbqfn0lt1W7
mZI/1Ri/Vdu/1XaT6tZTaqfy21S/ucpHqHy4+s+rfJzk05lvkneo/fWS60pu
q/q3qv4Bkifq2UP1d6nqNFd+m+q1V/54jamrxruDPULl17DmVL6swmuTNTpI
ff1b9PrpEnq9TdL9O6r+nbr/VZK/LnsdsB46qSylZxyq+t1Cr6e05HMkHxla
H72Y99z6jv2BjV/lZ+vfEaHX19VFz/XViX31mK5/zvtU+kf5r3S/11U+UvUO
Uv13dS1W2evqc77G0V9tvpDcXWmG5EUqz7PfKr0s+QXGzf6pe7ZX/s3I9U/I
e36+pfoh81N1XlL9guR7JLdRmqb8Lt33LLXtGlofTlK7Vbxvld+g/G9qM0/5
SUpXhNaD6EN0Brqjn975JXr3L7LGlL8n63exVOX3Kn+ExvOQ8q3V14Xq/2j9
R1XP0bVeeX9/9mL25LLyR2t+Pau+AsYs+SulTWqQ5T6Vnn/P8K1VZYPGnlZ5
P9V9QmPpqPJ/9P8W9mvVmRB6jTB/70v237Eqf0Byx5R15nO6fqn6/0L9TZH8
bdH6rUXo9fOd/j8g+UHVb6W6p+r+i9X30+rnEMqL1o8tQ6+n6rrfaNUdhp5C
/6v+26q/Wvf4KPb6rsAWS/Zr3sfbrDeVT1X+DpUvk9xO6TfWrK6dqbKLJY9S
/ia9h4Xqb4xSn4LnHO/77eR9bip6P2kXej1+pP81VDZCabHGfIy+xxKVj9f1
XipfrjG9hz1JmeStus7rZwzHqL9Zkj9QfqZSC8ar9otVPk7Xj1b9swtu35Bn
Un6t+ttb+R9UfqfKtxS933QIvX8cpz4+Yj9Vuln3vC22LbO75C/U95OSH8Ee
Ul8Xqf7movfr9qH3m+Wh7c0nlN5S+1JsW3qI+i2wH6v8O/YGPcT+6uOHou2P
1qH1DcZ5b/37VnVOVv77ove7VqH1y2dF66cmoe2Zp0LXra3+mqi/fyUfFngN
91P7R5X6a7znJPbk48yRtPeEkcrvrvFdovwFyo9Sf8fGXvs71c8VkvvGHu++
6vtAydfr/2u615NKlyu/PGvfBRv6Pezwovf3jqH358nsy5I/w+bWPbYWbS91
Cm1vYWNWS+bPB9KNT+dt32Pnz8NW0f9VKdufxaz1IPrwhZT3q2dD6/oFuvYl
NoT62II9q1RH9Qfr/rXS9lFOVz4Ve79k35yk+0/T/2aSD1N5b+VvVWojubP6
PAB9Ivm4lPdI9soJan+g8ptV/pLmw3i9g5d4F0onJfsRvlj3tNc0dgb2Bj4D
vsNNRfuF+Ic3Kn9v3r4XPhj7N3Yx9jE+JL4kdjn2+VJdG6/6k4v2O/A/blb+
So2ho8Zyh+r/JV19leROku+U/Lfknjk/H/vLUcpvVj+blN5h71EaqNRCZfur
zoP4UuqzkeR9NJbtaj9H+9Phun8Of1X5b6vYNm/EO8zaDmySvL/uyvfIOc89
uTd2F/ZXDfY85S/X+Non++sf6v8KyR0k3y75T8kD9b+26l7PHpKz/YY/8zu2
S4X9T3R3f3xoyf9oPDt5Jsmb8Td53pR95KE52wTYBvhg+MfprMeOTY5tfnXe
Y3tQ3+8Sfb+O2EPUVdur9C4e0P0uVHk7sIUK+5T4lkNVv0ZV75lgE4ureC99
Fh9H5bfp2hTl16t9U+V/1vucUWkfHl/+HdVfpvSL0o8p+5D4ksdIHz+nvnPs
Acrfoj7q4e8oPa/8Cuxvla1Tf3PU3w61OT/td9wHPxo9kfYeiG/QV+/vEeUP
ZFzYU2q/B+8XX1vyy6F9yZOVUrr2amh7diA2neS7VH+E6teX/K36ukrv6PmM
9+yv89YH8yQ/qzoTCtbHzDW+P2uriuTZqjsVfap8U11rlTKmMhl/W8+/VulF
jf2lrO1O7M/uCVZypuqcgf2k+g/ji8ben7qDBbF+NabLdb839b0eljw977nM
nN47tI+Prw9+sFTy+Lz1AXrhSn2v2Vn7PtRnLVwce/4xD5fqe/fVN3hFz7cO
nybyeOgLTCKr/HV5zzXmyDPKd87bPkSHoEuwV/ZU/nZda6J8Y6WWKV/DfrlC
99tL+XfRLZV+Rp61mIwXfcN+dHze9uaLoW39uhrTAXrfXxSND+wfer2fzvNI
Pk3l1avaR8ZXrsAmxX9WmxtUPkPlFyh/mJ7pXuUvVP6xSs8T5sty1blefR7E
HiJ5dWB7DDsJe+k1yZdLPkryDMkPq49L1ceJSqfj3yb6EJsX2/d+nrlgfYru
PlZ1HtI7PlBjvjMZy6O6f159PqGxLmbOJP2Tb620H2tZ9c5U/avV/g3JB+r9
zFP+PNU9C/tG36u/yndX2bmSt+n/ZyrP6Fodtd0SOj9d/TVS2dUFz5/bde2a
gjFAsEBsFmzFLrr2sOTHVH5ZwToCXdFF6VDlT9D471f+ooLXIz744TnrTNZf
St/g2ZS/yaIqtvFZH9gqA/Af1C6v9qco9VB+CP6v6j+Zsz/5t8bbNeU1xn6L
zN77DT6Z+hiKflR/w1R/jDKnFKw70CFXKt8Tny7lNcfaO0jvZ4LKzkj8zyP0
v5/kWSnjL9M0/s/03P3U/2zJT6nfacn+BmZwsMZ3OfaGykZjL5SsD/qEXn/1
9D2uRt8l77+V6o9T+Xm6z0OSj4o9F3Q56An2VfD3AgMCCyrqea5Jxv5gpb85
3/5xjWeF8pmqxtawkd4G79N956b9jNjHLWPP3V34Jmp/e9H7AvvDbUXjR/ep
/Cy1mcfzxraHsItuSPz3J1Q+XNeeYn1rPCMC+yZTK60P8e+vwNattL0C1sYe
dSW6Wum8tHUMuuZkPcdVep4Uayhvff554D2CveIYjWm7nuM7/HTldyj1wX5V
u8fVf8287bNbsOn0fFUlD0n8kWWSh2g8g7DlVH4GY0OvS94j5fr70j7tPYT9
iPlwR8o+Bb7FLOm4v3X/n3X/2/GFJR+QNXZ3Y6X9CPyJRRljSpfl7bvOUvsl
yi9k/SvflD0rb8wD7KOmro1V/l61qQ4+J/kDbCk913mqu0DpOuXnVhirXsJe
qPw7edvXN+ja1kRHD9L/CSm/z5vy3lsfS3TmIH2fOeznvNtK44crVF6P+aG2
L0t+QeWfqHyKyjtp4o1X+V58J8kHlPx9eoT+vk9g86nty2qzKvFnLlT5Prp2
Y8E+Hb7dVOWfYj+PjUfOS+zn6yPbwuDKI8EDIu8V74In6/kWq95M1T8Y+0H5
U9S+r8ZznOoMiG3PHq/8fHw+lR+sa3NTvvae+jpR431DbW9J8Ke2Kn88ZZ37
gcq76/qAjG2Y04r257eqrLquNVLZ/Lxt6TLPxBrTOI+V/Htg/Bj/ZKfytTK2
+avofm2Ub4/vrPu9pva9sOd0rbGudeD9SD5IckflXy/+F74IyurnJ/AMCcNV
Njnl/aSB6nRj/upaw4L9F7Cl3SU3lbwmayzpZl37Ous9Ltaa31DFex/zDX9q
P9U/uGC9h/7LZry/4FPhW+0BZlewzkZ3vxfY30bfYp8WdK1ewZgF2MVzKdv7
PXVtUMY+y6e610DJYxN7DN06WO94pOReyt+rG7+Zty/FnsTe9IX6mIJ/yzeQ
XFPvb2DGOvyfyHske+WXgfc37M/5yh+ma50L3gPYCz5I/BHmC75RW13rpLIb
1ccFqv+qxp2ptP5Ed5+g8iMLtkeWoVtZrwWvJ/bqczL2WZlzzL1s2v46+HoZ
e0/y3Lz3Mfazl9Xml7znyyTWo9Kryu/M2fbFBr5ObX+VfLbk97FRJdcveX2z
zu9nfWg+ZLOej9jW2BnYGy+p/0tD4zPoOzC7/srvW/J6Azt4QO3D2FgSOvh9
nh0MUfJa9GDi309MxgtGgM+O7/5MyvbfOSqfovLW+KDYaoCRkh9Q2hh6fweL
2R+bjbkl+RbmZmBMepTk6cn3zxVsL7wgeXzGNif7GvvbC4n98HDOWBOYExgj
9hb2zST1t1xlr+kZflN+J2tf4x+u8qkJnpRhful9jc56zjP3pyi9qfK3MtY5
7WJjC9gsH6mvu3MuRyeAob6i9m3xLVXnnKJ1wEmSy1WtG7Cfn1TZjczvyPoU
+5M9gr1iROT46bnqd23Z7z+t+j3V94hK20zYTindb7OuHVey/zs+2a/O1P/r
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
oC9+E4nfP/0/JaLp5w==
         "]], Polygon3DBox[CompressedData["
1:eJwt2HmAz9Uax/Gfy5gZGcwUImTLNloQCdkpRdaRNWuRnWQJlQihsqRuJcmu
kltS3VIjERFyr8otSSm0KK1X+30999sfz/zO8z6f55znnO8553u+U2ng6C6j
/pZKpb5naWx9Vio1PCOVejc9lVrCr8dfx4Zh72D3Y3X5a9lN2EFsMVaHP591
wJrlpFLZyjlsKeuFvUY3ia4K/5MS2i6qLXaPTjfyH8Z70OXTTaCrxL+N1cOW
YI2wz+gnYBWxaVg5bD9WrVgq9bTySaxiZipVnX+EfWNg6UVSqW30nbNTqU20
x/RXEJ/pdzF/svYuFXuv2M601YqnUs3ZWuxT7GasBf8huuu08yp2i7qK/HvY
tVhz4z1b+Rx2B6uPPUjXhO6EPu7FOmIt6Eoql4r5lN8guaazmgVTqT/5w+Q4
iz+bLS6QSvWlW8H6id2lvRnaq8FfzQZie7BZWC6/JzuoPB+vKr63tqZjV/CX
010dz1gud2JNscexa7AfsD9jHPpbgW2KdvlPymeledqprWlsqPam4bXVz6O7
UOwHYgdiHyovwnPp+tDVY335B+iWauMJbXU0h88b5yqsuzmtze8mdp/Y2bRV
xPYSd4x2p5jP+IfwLtgGbDe/Hqstz+9iXXh+ddmPLId+gd9HYh7EbNXHRO1W
jjUVfSunIjfWk78KH0C3m+4uVbX4K1l/7E1sJlaTf3usDewBrDF23Hifinj9
7dLWdHaT/AazAcp1jKuqMZ5FM09se7FNPfPiyiXYGjYIe0t7s7VXm38f64S1
pCutfC571n5Ybjw366+xdptobwHema4VXRnlsmwSq4xN114F7R2gL0x7vhwu
kku+2OFyGxFrk24CHZzaRjcSK4lNws7CXsdGY6WxqZhiagc2KtYrdivGTW33
5xe5/cy6sKqexxm/d9G1oysY84yly+MF/Hk2lHXEsuKZ4dPM32a6Rqyv/PJj
vWUkezD24lb+mJgL7DZMSOoN/bainYOlMpJ1E+unKTaR/zXdZqwZ1gybiv2A
vYq1wZrH+sV+xPKxtlhL7E7sF2wHdg02hdXC7sZysf/o91asJjYHq4UdwvpI
qpPyZTGGMP4yunlxJtFdhbXErtXH02JrmPjSnsuvWGvsbqwA20+fJ66OuRlh
Xk7HISz+Pr9X0S2hKcY+ggfTjWcV+JNpymJ75TKXNaE/zd/odx5/Il0lutvp
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
         "]], 
        Polygon3DBox[{{4277, 1465, 1295, 1296, 1387, 3669}, {3927, 2700, 1935,
          1936, 2701, 3928}, {4275, 1451, 1805, 1454, 1252, 3513}, {3665, 337,
          1294, 3199, 3147, 4571}, {3466, 2123, 2650, 4464, 3341, 
         3342}}]}]}, 
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmXf8T9Ufxz/x1fjer8793hMqIpEWSmnSL0mlXdo7MhoysjcNTZS9NaQU
Ctl7J6uQZJS2FqE99Hu+Hq/PH/dznp/359zzuffcc97jdSs3ad2oVYlcLjeU
j5K0bye5XLmCXO6zwlxuP3w7fALtdxw3wMfQbivO5b6mc6uQy83BtoRjKsdc
fium3c65e+DL4EDbR+fTfyr23vBu+B34GfhneA58ZJrLPUD/+Yz9MuMeozH5
fRCcwPfy+2C4CL4PHglncBP4kCKfW4v+H2M/H/5c/wk3gjvR5xX4WLgp/Cpc
Hm4Gz6ZdzPE2xxExl6vBWO9zDfMSj7+j0PfbAPtj/H4z9n7YL+X7S5z/DnwZ
/Dr2I+GP6f8GHOCt8IX0GQ5/whh14WGyw+8mvpePCn2+xrmcdhR93oQf5fcB
HL8zP4sK/V8jsV9EewH9BsJ38nsdeBB8FzyQ+yqE76HPD3y/BC6i/ZGjAVw6
8fhbGbMJfWdhW8QxmeMo7q0uY23m2t7i+8wCX4d+V7+POWdE8PNtzBiLGetk
+GeurW3w89VzfhT+Hr469frQOrkSfgT+Cr4CnlHgdaN7XsI5p9DuY5yW9PmS
Pg3p0w7+Ab5G6wL+DL4Ubg7vhC+Bm8E74PpwU3g7fDF8P7wNrgc/BH8OX5Z6
TnVP9bnP2XAleDf/uwW+ED6UdibHcfA32GfBFeFv4XM4/0V4E/PzMGN+wZiX
Y5safP26j8Gaa+wz6D8Hey3sD9JnCPafsM/E/ib2E7C3wD4Rrgw3h0twTQ/C
Z9J3YX7+V3POKPpE+H76DOW3PdhmMc6S/Dr/ENv0/DOaxPEn3xvTnkL7CUc9
rWvarRwXwYdrj3D8Dz6MdhrjnAo/wPh/8P0++GTaF7EfAb8Mv1vgfTIlv1fE
ozjO5pwXaDcyJ7XhAbqeYq+jV+GW2kP5+zoLjvBDcG34WPhRuA68IMvlJtD2
4twTsHfBfgnfj4If1v/A5eF2cF24CtwVbgCXgVvC58BV4W7am/D7ief2B+aq
OvYn4Guwfc9RH05oV/C/M2if4n8r0Kc99gv5vjSxr/iSc8/C/ix8E7ZZ9B9G
24X+yxL7kK/ocyZ9noFvxHYa/Dh8tdYR3AH+H3yB1gG8hXNz7LWK/LYEviTa
F+gahjHnOfo8VuzrqgB/zfhjsJeCH8f+J9cQOHcu/FL+GclPjoUPg5/EPiXY
hw+AJ8FHwc9rX8Nl4H7wa8H+6hl4WmK/sanQY8n3fq77Su3rNtBnQrBPexb+
hWvIcQ0z4PHYS2N/Gp4Ml4X7w6/DKfwc3AL+lHXbgPFOlR/FflXitau9s5//
GgsfCq8v9F7SNXwBl6L/XXA1/Q7fDZ8EF8B3wicm3ivaM9MKvI8Us6pgLwnf
AVeFxyWenw3ypfDh8AeFXt+aww/h8xVj5JO55jrab/J7cJ9oPyvfmNDej706
501MfI+fcO6L8J/c4xL4BfgPeDE8IvEzXQ0Ph//D/h68nTncxPcxjFnEmE3p
U4PvGxPvxwP0+Ru+Ea5A+w/HTfBxijP0bw6fLh8Pb2HMKfT/le9XYy9L+1fi
2Fee9izupb/ul//6je/XwOVof+G4Ci5De4DjSsWBxHH/CjjSbuA6l8sfcO5/
tLdiP17rhf9tAp8Gl4abwTXhgxy3wJUU2zkawsW0/3LcDFdMHJvlu0rQ7uW4
HE5p2wf7z2u53g7BPvM6uGOw37se7kS/9fBo7vcY/rcP516hPcnxAfaX8vF0
hHwmtu6aU+wTsDfE/kaB4+xTiWPKK9i7aS3C4+HOumd4LNwD3gS/AR/NOb05
tyG243U+fH3imPcJfYbQp1qR5/mWxPFtaj7GPZ44No2gT2X6PI3tBmyPJY5T
w7CfWOS9pvzipCL70lvlEzk+os8kPV/m4R7sfZiHv4LX4ePws4lj3Ov0KZna
Hz6jmJLafz6tHCm1732K9rnE8Wsi/WvzX6OxN9U6Te2rtYdqFTlvaay9pvit
vU/7b/Da6wv/E/zcn4RPKXJ8vF3rKnif9sZ+cpFjxG3aH8Fr5jHsB4L3dS94
X/A+7QH/HLx/tQb/Dt4XT2DfH7zfe6aOEfK3jRLHvcn52NeT75u5rzcL7RPk
DxTv+yb2P+OwP5k4fxgDLyjwc1I+cnF+bbTl9+cT5yFv0acYe2f9no9lik31
4Qvh8fAjifMKrYFB8mOp4+QY2rPpMwZuptgLT4Bbw/0S50KT6Z9i74S9nmIy
/BrcCj4XHge3gM9Trgk/oH0Dvww/CJ8Dj4Wbw5XgvvB1Gif1+tc+eCJxjjSK
/zqC722xn6/9rTy3pHOheQWeR+UR8mPK5abRvwO8Fh4OD0yc102Hy3FOL+0j
bB051mEfiX1Q4pztXXh+gfME5Q6H0b817bn83j9xTvg2fcpi76nrxNYu8fUM
xt44eD41r+051sBDCz2e8nTNbz3l3LRt5MvhNvB5iWOx7r2JfH6wn++L79oT
7Lu6MzcfBOfDLeGF9KsG72H8SYoZ8Dr5ltRxaiDtsalj+iDa8qlzicG0x6de
h1qP8zm3Kvxjfu3NLXD+9op8Me2yfKxRjFgqP5A6rxii69EzhnOKJ6nXmNZa
hLvrmdB245oPcO6N8Dr6nY39X8ZZr3UAH4SLUucb/WnXyO/Df2PfoPUE/wdn
qXOkF2h7MOavjHlz6uevdaA8/7ngebgL+/NwAXy37hU+BL4Dfk0+nb4rGXO8
4hO8An6WPiXoc6fqLO1h7Mu174L73675C+5/m+Y1uM+tmu/guboFfivxOGs5
tyv2/dgbaT7gX+Cb4AX0OZE+P9GnC/Z92G9IXY9qX0/U/k98zWvo0yd4/rXG
F8nPYt+rXF0+Hf5O+z11bjlAfka+Eh5K+31wLO6s2io4FneBfwyOa13hmkXO
8e5hvDOKXOvdJ98THGcfpc+u4BjdDv4Gvg7uCO8Ijr9t4W3B8fcLzj29yHnI
vfDW4Hjahj5bguNma3hzcK3dCv4iOL63hzfCl8pHwT8Fx+Vu8Prg2vBheJye
cd5fvR+cGz+UOjdTjD5Evgr7tXAH7IWp8/DnaVfwW3X4V+Ztte4Z/hM+T/U2
PJJ2Lfba8D/YRyZ+RvPyflI19JHkVh9hr0ufUvLfHHXgAtpa+Zp3BO0ZeZ+m
/b2S32rAvzHOqMRrYz48OvEeWQC/p7mjzx/ye6lrjeeUf6aul4crZqWuo4fR
Jqnz/360YxKvsYWcuwquif13jR+coz6BP/k98ZwcTfs29qO1p7DfxP18nfj5
3gh/lfi5N4K/TPx8lWMr59zImHvJr3bz/R3O7Rdc7/eA+8O/wd3hAcH5ZE/4
hfwali/Zw7nf6v+x38z43yR+7rdGj6l1dXu0FqB1eyf8U+K1em90zqeYe0v0
OHq+d0TrBVrb18O7Eq+3u6I1Ha2f26LrKOkqd0fncPKrTwXrOd24np7BOk9n
uBf8LdwJXhe8HibApTmnhfxOsa9La/VI2pDPQ+QDVet0hC/CPjlx/bIzHwsU
Y1SHqpZ6kvZazXV0fqz6qGzquLAILpc69i2Gj0odjxbCa7ieM+HxcF94L9fZ
Fe6d1zTkK86Orr1V96n+O4h9ldZ8sI99DXsZxmwFL4A3BPvn1+GVwevwFfg6
xvks8Z69Bt6ZeG/Wh6cn1qMujq7HpFM1i64BlOM1jc7plTvdH73+lAc+EJ1z
Kx9rHl0nKF9qEZ1zKzcbGlx39OEaGkfXCcq72kfX2IoFD0XXS8oPH46ur5Q3
to3O7xVT6kb7eulvdaL9u3S5C6LjnHSnVtG1gfZay+j6TbnoI9H1m3LINtE1
j/Zau2hdQP62dXR9Jd/SK7r21t7vEl1Lq17uHa1/ybd05T93cV+vKuePrtul
Y1wN70gc36+Ctyf2ddfCnyb2k5dGa3zSYf4XHSekazWI1jGlydSLzgmkvVwU
HZOkN14Jb0vsJxtGaw3SeY6PrkPacZ3dovUIxY7u0XWv/EyPaI1A/qdjtA6i
HKNTtMahHKNztB6hHOO+6DpNeW+T6PpNeXXXaB1E+UOHaB1EeYL0S9Wwd+uc
aO1DeuZpqffIGnh15pin2nx25rpUa35m5tpVe1axRzEoo70humaTbTl93kmc
Uy3LrBdLc5iTudbV3l+ZWUeTJvBhcH7yBrwpOA+ZCH8UnPO8Kf0hsy7cHn4/
cy4lvWJt5vxMesI90fXkNLhUap1qtnTUzDpyR3g3Y16MfSq8Nx9DVUfMyKyl
yv+syqzrSff4KvM6kS96L7MmKH1jSWZfI73lIOPcxjgzVf/maxPVR5oD+fxd
rL3PgvXDKfSZzrlPy5fCD0bXzNJJfqfP9cqxVYMHa+nvFltHkQ88g347g+Pg
ZOxTM69vraXPg/U6+fm5mbUSxYVFmbVm7evFmfUIaUfzMusdiiPzM+sdih2f
MM4FjPMW/GWwHqi4sz045k6CF2bWsnvDS+EpiePd4dE13mqdm3lPye99nlln
fLXYfaX/fKp6NnWNsAp7Va17eAVcJXXOvxIerRyI/XsV7dbMuexI7IcqPtFn
Fvxx5nx3BLwlcz4xHK6UOk9W7l0hdYxYiv241PXUMrhm6lp7PXx66lxd+UP1
1LXSWuw1Utfy6+CTUusJusfDUuuoc+CKqWvA5cXOKxfkc8tqqTWB9zS3mfPs
Udo7mf2DYsrOzPnNOK35zHn5MMW7zPFaa+bHzDmDnvtnmfXZl+EfMucPei67
M8di7ZdvMvsx7alvM8cU7aldmXVexZqvM8cXxaB9iddwZdrvM+chWgNrMufQ
0gM3Zs51BmufZs6fhsCbM+d2QxW7M+fN0hXXZ34HoJzng8y54ED408x6+kvw
jsz53Fj5gcx52yB4W+aaZ7TmOVoj0ByqZlLtpPcP50bndqojKkbrPtIPD4mu
dfWsS0brKXouNaJ1DdUI0pKlSW5hHf6Wuf7UWjo9uvZW7VAzus5XPfVr5ndI
2uMXRtc20qKHBMd67YUZwe8CND9pdO0tPW0e9ioFfqZnRNe3qqdOidYapF+d
Fq03ySeUj65p9Z6ierR2o5plVnANonmuEF17673GcdE1tt53nBStJemdyH+Z
9S/lMwcy6/7yJ8dEaxl639Q6X0dLozoxWkvSu5gq0dqW3rOcEK2R6V1GpWj9
S+9Z/s6sfeh93D+Za3XlNn9l1iyUs1WL1rD0rqdytI6m9ywlojUy7cGDmbUz
5WC1onUE1XdVo/UavQ+Shin9Ru/YykVrJdJd2wS/q1Jc2J/5/YT859HR9b/e
o/2bWY9QLvd7Zi1AceGPzHqH9u/Pmd9fKi6UidZupPEeG6076D1R2Wj9Rfp8
iNZupHufHK2hSJMsjtZl9I5jeXANonW+FD6twOt8YXBdKT/wXeaYqdiZRNdy
8jmrgmsl+cyi6FpR/mdFcK2hvX9mtJ6iurh0tB4nP9YpOOdRvLsiWi+Whrw4
/x5KdZt0Zfn5krSnRutf0k4Lo2tU5QClovVK+eFFwe/ytB/Pi66jVPufFf1O
S3X6+dF1kXSAQ6M1Svn22tHvt1TXx2h9Su/IpBlrTn5hD+7L7IMUuy+Pfnci
PbkgWvdUXJge/L5DPmR+cF0vn39OdN0ozWFm8Ds7+aV3g9/TyZ8od9Y74s2F
jr3K4WfDy4LrU/neucH6jGLHgmDNR7Emi9bX9A7rneD3Dnr/8H/4KVbE
         "]], 
        Polygon3DBox[CompressedData["
1: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
deCWWb8uydw4HX6Yelt4IvXt4PO530LwNO7/PPdrkfX4Eozvo56jvr7vh/qn
1Jehfpr9lno/6jV8LNwKPg1+jfFXwHtz/wp+DD4E7gD/wvW3wGuon7jfu/Cg
Kub7MOpd/D5VzJ9r4K7wzYzvpH5j/DuMfwjeAl6U+nfwBVXMp+Hwuoy/gPrC
1F9j/ATqT8C94I7Uf4NHw+up/6h/4v5XxXq6IsV8H0D9H/gV6s9QH8jvO5jx
q2X9OiDrz1Wz/jsv69VVsr7cD/6b618s4vtcWMX6uJb6en6/7MfWyPrwEj5v
cfhNxr+sf2H8DMaflWL9Hsr4kvrrRcz3Y6nPpH52in6wGfXR1Lcso3/uW8f6
eKGI53dxfj9dGX+s+qqK7zcK3szvl/3amll/b8V97lVvq/H4+/nZH3bK+vYo
rn+N6/un6G+Dsh/smPX2wXXo9ZlFrL9D6tD7s4pYn/vXoacnFbEeZvD7h8D7
ptifD6hDf08uYn0eWIc+n1LE+jsIboKnFrE+pnP9lfA+XF+rT6rop5en6GeD
qDfy5z3H8z2jin56WYr+tU8d/WNiEfNvMOMXY/wc+CXXP1zBb8GvwHvX0V8m
FLG+BlL/F34VfpZ6nyr2kwtT9LdT6tD3reCe8MQq/PDrKeZzP67/jPEPcf0j
LcNT6i31uEOq0GT2anuIvUTNpnZTs11cxXf0uzqHRlVxD+/1uRoEvipF77Yn
2BsepT4G/gIeUIWH1kv/Dg+twmPrtfW4V1SxhlxLasybq/CUesvV4eeq8DB6
GT3LM1X0UHupHv7VKjSuWlfP+2QVPdPeqUd/pQqPo9fRsz5bRU+wN9izX3At
pOh99kCzEZ+ZvcAe4rPUM+ud9VTjq/DUems99dNV9HB7uT36pSp6nL3OHnEj
fFuKd+k7de/QQ+ul9czL1aHp1fZqarW1mY1aVc2q17Rn27v3s0dWodnV7nqC
pevwCHoFNf4SdWh8tb4af6k6PIne5Bg1WB0ZjlmOnmXxOjS92r45fIvetAzt
qIZs1LEHuBfY4xapY447111jetcxKdaia1Iv/QL1GfCi8K1V9ETXrmvYbMc5
7Fx2zYyoIoMxizGzmVpFT7Q3OuevraKn29vdkxaqI9Mx27HHvmZ2Uebe0xR7
hXuwe7F77ItVeEK9oZmD2YMaVC2qhn29Cg2rllXjznR+qTPtFfyze6tYU66t
HmrUKjSz2llN+0b+/WrR1vn32kPtpfYktYQZxEdF7NlmE+7Z7t3L5OdlJmD2
ZQZjVqAn0hu5pt+pwoPoRfRYH1ThKfQWesopVfS8Wfn5q1XsiTPz83e+6VH0
KnqaD6vwPHofPcqkKjyX3ktPNC2vB7OpDfP609Pp7fRs71XhAfQCerbpVWgS
tYma5eUqMg2zRDMasw4znj9y3eevxp+b62Y5/VtEL7Fn2DvU8Gp5NfgDVWj8
efl5PVTFHuZeZs+8qwoNrhbXA9xfRQ+1l+opRleRGZgdmBE8VoWmVlur4e+r
InOZm8c7n80EzAbMHB6twgN8kN/vg1VkTl/m+/n9n0/Rrzrk76eGmp/7l9mR
mYrZipnDI1V4tK/yfDR703PqPfWUH1eRmZmdnQG3q8PT6+3NaMblz/swz6cx
ub/MyOvX/mrmavZqBvyLWg1uSrEnvF2FJlAbuOeaJbmndszr236jx9Zr68HN
gvTgenE9tlmFmezGuf+4nt3T3dvVHGZtZryb5H5m9mtGu1mKjNTs1ox40xQa
z+zYjM0sWQ1p9qaH18vruc1S9Oxt8u8xG1QDqYXU7GZvavaVc78ya1QzqZ3U
TGZpeva2uZ+aNaqx1FpqLLNDPfJKub+alalBOuV+ZfZmxmDWYAZhljQ/RT9W
U3+X+4/vq3/ur2aKZrlqXLNGPZHeSA1kNjhIjV6Epp7L3N+xDm91v/sFf7+p
Di/+oP1Yr11GFmsme6vZC38fxvVv6jHg8bzfl4vQlMO5/4t6xiI0xp3wwBRZ
jpmO2dPDLeP6t+CTqsgM18390yzxMeqPF5HhXGR/07MUoRnVjmYSxzL+tqbI
KtR8XfP+4n7h/tEl7y/uV2O5/o4iMqZ+8NvwT0Vo7gnwF3AzvZQaSO0Hf1JE
pjW2it+rZjQz6ZX7s9c41n5s5m/27xnBu1Vk7p4tmKGYxZth+/xGNkX2/bsZ
eIozjcXgBvUtUmTcy9bhIR8rQlPrLdXULxWhadXaP3F9+/z+/6kiE92mDE9i
VrqEGjJFBrFRHZ5zrRQeWS+6qB42RebYyfcJbw6fDpd1ePbbi/C0enk9iF5k
S+qfVOEp9BZ6phlVnCHYrzeC51RxRuJZiWcW71eRORa537t+9Fh6LTPOWVWc
aXi2oWecV0Xm2cj9f3ae763yfuT60FPqLfVIH1WR+ZqlmKl4VjEQPg6+Hd6w
jvm+dRlz3LluZuhZhWcW6h3PTHZKcWbiWYoZq1nrJU1xdrJiGVnz4NwP9Zjb
pDjT0nvqIbdOccait9Qjds/9Uz3QpYxsxYxlrToyW7NbM932eX2ZYZlJmU3p
OXdMceaiF32ziuc6L+sBPc3sIjyTXucMeOcUZ2Zt6zgzOzDFGZdnaT+0DD3R
I/cLz9wWzO9Lvdkd/rgIz3xHFZ75x6xH9dJ+plrEzM7vYoa3QopMw2zPjMus
y4xo4zrOYLrlfrR8HZmuWY2ZjVmiGs+99cEU2s8e4Vp7JEXvcE91r3osxV6r
5nfveTSFF3BO3wFvWsZc95n6bNcp4zxADeRe+VAKLWhmY3ajhza7d444V1Yv
47xqtTryvQ5l5P16APfyB1J4AzW0e/X9KbS1mtG9/+4UWtI92L34iRTaQk2u
lpySQqurAdzLH0+hDdzj3evvSaFl7Zn2yrtS9FI1p15ndAot6jO9E96sjGdt
z7P3bVRGfmjG9WT2Sz7fVevwm6uVcZ7RuY78ce0yzj9cg+5lX6RYm+6h7qWL
lqGVzcAezv7Jfm0GahZqhnBC7udjsv+yf5vJmP2Z6ZjVmDGYrZkpmT3oYfWy
elyzn/taRK9VE6gNzATNBvWsZr96/tF5vpgFmAGaBep5zZ71tE9lv6jXXbOO
vHOtMs4jzOTM5sxcPOvRI5v9mYnpndeoY652LuO8xR5or1yzjN7oeu+e17Pr
34xybPaXnn3qSfUG16Xwqno+veDkFF5wfa651d5TRl7c1T0VXq+MvEgPp3eY
msLb2VPsLe3L0F56Ms9X2pXh1dwT7NXLl7FX6CnsrW+k8BquMc+3Vihj7enJ
PL9qXYZXs8fZ65Ypw+vp0TyfWqoM76YH1ivenMIb60ndy2an8Kq+Y9/1gBR7
t3usWqdZGXvvEXX0Dj2GXsM56Fy8JMXadw9XG4xIsbfbY+xd41L0Hvd09+Yz
U+z17tHu/YNT7N16fL36kBTeX09vdjA0hV43Q9C735IiW1CDqkVvTeH9zVgm
Z79oNuqe7t7/Qoq9Xs2sdn4uhdbXI+gVXk3h3dTseutXUmh5Nbne7uUUWl1N
rZd/KYXW1rO4d01PkSXo+d3rXkuRBag5nP+zUmiRdXl+N8Prl5HvmDG4t05L
kT24Z33aLDSbe1mrvN9dnfWPHsVs4JkU3kWPYFbxbArvoMfW69dleG81h1qj
KkOLqBnt1S3K8Op6ds9Dly7Dy69Uh7ZYpYzz1FXqyKNWLeN8U89jFjE+hRfS
05iFPJ3C6+gZzDJeTOEl3Mfcf5plHWWGZFZuJmq2ZGai1ngrRZZiJmY2ZmZm
Vt0879+D8n5f5vx/8TK0zFXw2U2xR7tX+509C3bO+1uG1rF3u2e7dw+pY627
5t27/U2e3foM/vutdWgjPYRe4vKcD+sx9BpX1/Fd/E5qC/f7PfL+rt67og7v
oefQe1xTx16t5lB79GkRWlpN7Pq6rA7vosfR67TNn79cGXu9PcTs2Xdgb7HH
e3btmrf3qwc9R1PD3wxfX4cWUjOrnT3j6Z31qHrDMyHPhjwT8izQjLVX1itm
r575ePZjj92kjp62X9Zb9jrPmDxrco/x7NM9tEfWV+6tajC1yCZlaDMzULNQ
91zPLp3zZpvuWa4Fz0Q86zJj9KzEMyrPqjzj8qzMM8vh2T+ox3u7pzRFpqsf
8QxsRPYbnn1uwX97pCnOCPUvw+rQemostZaZo1nQyBRZ5JF1eGM9tl7bzMks
q3kZWZSZsGdfnsmZFV/UIvqNHli9oSZX2zfK0OpqLrX6Dym0mJn3qOxH7H1m
6GbpZtpm/WbaZttmtp4VmNlOzPmdZwn/ZRxqsRTZh5mf2nlOiizQPX73rFfd
+82gJ+W8y99qXvp8zl/tpWa8E3I+an6qZ9I7LVBG9uce6f+b4J7k3mkGZta3
SBnZmHNilHOpjLniHuz/G+Ce5N6sp9fb/54iWzQTMEv7LUVWoGbrmfW2Wu7/
+JoTLw==
         "]], Polygon3DBox[CompressedData["
1:eJwt13e8l2MfB/BbE+fU+fVroa2FhllGhZ40UEpkPCoZFZq0tNHSTjtNTW20
pOVpSpPS0PJo0kILDd7X6z5/fF+v+/u+P9d1z3Pdv1Pk1VZ1W2aIomi7yqx2
5oiiiqlR1Dwlipqp93NG0dOJKOpne8aNUfRzxijqmBZFlVlbNpJtZq+zRcb+
wwqrIup8MooelWtje7jcJrnX5H6Qq+QYLfiUTFH0oEwN1VX/qdxOueZyVVh7
9jHbypqwtcYWMfZp3sfYgjKfs1/0N6s67ITcalZIrjbrxfLL/Ue104823xbz
NZZbI1dYrg7vLVdA5n+sIHuK1VId3YPF7Dp2t76p3DVjq8q+q59gvu3me4M9
wbqzOWwXa8naGduHTWZT1AL3ZSm7wXwP8tbmy2rcl+x69gBrxTKz5SwHq8w6
sOzsK5bGHmEPq3ec3zKWYI/q28tlS8TPsgKrzxqoXHI1+Qe2RzmPfc7vHedX
i/VgY9h+1oZ9a2yZ1HhcGN/N2KfketoeK3dArm1afK8KpMbnEc4nkhsvN8A5
1NNXtW+C/gu53/Q5VFL97h7U5r1sjzffQfO1M18d1ptNZIdY+7T4erOb505+
l/rL2B3sQfamfpJjlTduK7ubvRKuj5Vl61jx1PhcwjkVY+tZCfYcG8iKsj3s
UdaaTWcV2V5Wmb0d3n1WKRHfl9Kp8XsR3o8bXO82Vo411o+Tu0duN3uEtWLT
WAW2kP2lv101Yhdd2/fsAbk3wjWzcnLfsftZ0/BusfvYBlaSPc8GseJsAftT
f5t6mV0y33ZWXq5JuK/sXrlV7CZWg3VnedhKlpdVD8+W5WJb2F2sUfi7ZmXS
n9vv6X/P4e+6oet9nHezPcsz+sEzauG4S+SyGns/b2lsFpmN7Hb2IhvCSrJq
qrN+qrHfG/uWsdVZl3Df2Q7WjH1j7G3GvsAHG1tC5jHVIdxjuW1yTeU2yZWV
axjWGLlSMitYHlaNdWW5E/HaFKXG7094j950HZvZnexl/Qi50nJfs5vZ4+w9
lpc9qwbq5zruUcftEp6b+k59Kn8wvAvmqyvX3/ZMucNynezfZf/D5msZrtl8
D4W/P/W3Pp96hv2VFq8TYb2oIvuY+tG4EeobmT/NV1ZusUx/tpT9wgqxGWwk
2xj+LtidbAkbzFaxs6wEm8eGsK/Zb6wkm8+Gsw3sEivDFrGhbB27wEqxBewj
tjas6eycqu5632efsj367HIj5T5gM9lelsZGsQ/ZYnaM5WdTWT/2JTvBCrLp
bBhbzy6y0mwhG8CWs1OsKJvD3mMz2G6WjY1gA9kKdpoVY7PZCPe5aLifvDMr
EtZruSH6r+Uuud/d5JryZWw/yyk3i3WRm8C2ssxsEOvABrNV7KKx3dmbYU1g
J9mtcktZV7mJbBvLwgayJmHdZvtYks1k3eQmse0sKxvM2rBOKfF3InwvCrvP
bxi7mh3W55P7Qq6j3Ci2ga1X5eQ6sdHsG/0159dbrjMbwzayf1gfNoitZGdY
cfPNZd3ZdLYr/E2rSuYb47j3un/P8v5yd+tHq1KsJuvJ7tB/bOxW/bVwHmyF
+SawnSyTeoitZmPZNv0/cuXZSjae7WAZVQb1uOOOY9vDt0TdL7dKbiL7QZ9Z
VWBr2CS2S59FVWRr2Sdstz6rqsTWsclsj/768L1k69kUtjes3+G7xTawzWE9
UVPt+5E/4Vy26reo6Ww/q8m+1W9U09g+9iQbbXuz7Suu7V7zfWX/QXVAzbXv
qH3Pyu3X71Nz2JHw98+267epGewAq8X62l5i+7j5Cphvmv2j3Os73PsneQ92
u76P3CL9UbkjqoqxPdk8dlCfW26csT3YXHaA5WLjWW/2GfuJ5WUT2VuJ+Np/
TsbXGK61l9x8dkguj9yEcC5sE7vM7mHL2E/qkJpn3zH76jmXH/V71Wx2mNVl
O/U71Ex2iNVmu8LvQjWL/cTqhPfP9hbbVx3jPsdYHtY651fMPajKu7Bbw+9Q
uff0n8kd9463lmscvo9sJ0uVm8L+G95Vtoz9IdeXtUrE53A8GR8/nEfrRHwO
J9hu/R7VIhE/m6PJeN0P63/LRLz2H0vG17MzfZ1ckxI/i/BMttnXJhE//1PJ
+P6E+9Q2Ed+j0+z/+p/VO4n4nTiZjN+b8P58xHK73vK8hevIqR+scrL7WDOW
Qz9E5WLlWHOW1DdPxO/skWT8foX37O1E/Bx+Tcbv4f70v8HvU+J1Pazv++x7
X+4Suyk8H/NdCOsaO6fPFd559ntYw9h5fe7wt8H+COsk+1WfoqqwX9i77KQ+
VT3Gfk2/5nDt8x3/OH/OMz+iP6w+YyfY8+yZ8HvS9uzwjntune1vn4j3n3Wu
R/XHwreM5XcPKvF2jpEvEa+nHfWTjP1EfS7fiZ9m2VU1uVPhN3oiPoczyfj4
4Ty6swssT/iblDsXvj3soj5v+Oaz8+Fbwc7qE6oGOxPWXXZGn6aqs9NhzWan
9NlUVXYyfR0fqV/i3L5USxx/qNwtrqMCbyN3s36QysbKsiYsNfxvZGxf/VLj
zrovHcz3HB/KFrCT7AP2evgdx3awFGMnp8XrxsKUeK0Pa/46x31Nbg7bos8k
Nzb9f5cPU9LPLfwe8DzqhfNh8/XHHKOr3PNsGFvITrEe7CU2li0PvxlYP1af
jWMrwrvG+rMGbDxbyS6wAexFNoItZmdYL/YCG84WsdOsJ3uVzWabWUbn/DF7
hc1im1gGNoY1ZJPZGnbZ2KHsZTaFrWVX2LCwTrLLLH9Yr439m/VkV/QFwprG
Loc1kV3VFwzvLbsS1lN2TV8ovLfsavj9wlI8t9LsdXZjWLNVRlaMvcSuC/dO
5WMVWVt2i/5DlYkVZ/VZhvA7VKWyMqwxS9E3UlP161zHVdcxPP17Pi0l/m0Q
fiOs8HybJeLv1eFk/E0L37a+LLP5SvAG5suo76eysJKsIcsUfteqG1kp9hq7
Iayl6iH2EhvGHtD/C8JHXbw=
         "]]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlE1sTVEUhc+r3Hv6+m7qPYISEkLb56mifoJE2oRx0VIdNWIgEemrCeYG
hiSmhgw1EmlCTCQGTHn+FS0tFf8lSkrDt7L3YGetu+/Z++yzzrp31ZGhnmpd
COEoMY9oTkOo5UJoAdfHEJrg7eCuJIQReDd8GN5BUQN8ATFH3UJwrddWwDbn
A6y9kg9hHe8vZEQji6kdAt+xphs+Bc4QA/BfYC81t6k9QM0laleA56k9S/zj
/SlyuVIIZxLrU/QZSuBD3o9T+wjM8TyfnucS66WeB8E32gs+AX4hBuFfwVee
HwPveZ/74CGv7QfbXBNpM8m7afhbsMocP8E65nru+VHwQ2rn/QjeqQ+hQL6X
c3z3fX+kNrfml5ZV10c6TfsarX1CdJJ/Cr70OTXvEmquw5vA157X+ZZ6z2XR
9lbPT+Bmnm+xZks0raX5b3ASjQ7DK+S3+hm3gX9S0/BvalpIkxpYzzlX876L
OS8XQ2iEJ+Qu8rwTXoDP0FPm2h4txHeAWTT/yEcNzgvgYz+jzjrqGr5I7f40
w6xmgO+DL2f9scTm0V2dTGy9tJ9yX70HW6NpXgabiZvyNtiJh/ZKO+7is+ss
Lyx2PaXr7rzxQdZcI1aSu8sdtrq3y+BV8ovI78mbt+STvmi+1xp9T7pvzaDa
NT6DZunwu9CdPHBt5d9Z11zan8iMy/MjmX1H+p42ea169Pm+8mmLz6YZx9wP
4+A3P6M81RPtW9Y3/czvTnd4PLN8F/03en/tc5rnOeqGM/tO1Ef92t0nG6Lt
ob3kwZqfRWeq+Dz6H5Sd6z8hTaWtdCu4B+SLfj+L/gETRfOSPCWfyW+xZHen
OTXvDWJ/tJk1p7SSZv8B5eKf3g==
         "]], Polygon3DBox[CompressedData["
1:eJwtks9LVFEUx88bmnfn5WN8AxlTpKmIRptxkUGrGdG1P8a9iDsRtU36H7QL
oa1LWxZJCCMtalebFrowkhQELSJyIYUrJ/0cvm9x4Pu959zv+Z5zb9/8SnO5
YGY14gbxKjMb5aAzmB2Ax8tmHyOzYfgX+N/YbAlu1PwDrybUgiPyz1OzUDHr
B7+npsHdDvgTuDfZgH8umfXC7xMz1N8k/yioh/fqA3dEuu867sP9tGmZgTfp
N1VQzSe0TvAwCz4nTsHfiDr5Y/hCUZpV8EhQrxY9J8DbnNUTafTAu3Nt9+fa
7uNdqplrQRqu5Z7du9/xu4exeruHI/B+rN7u4St4paxd/QZHFe3rCvyfeIrW
G+Iy1g7XyI0lmvUO+lvkGom8NuE7qXbquxmAl9AbJ9+C34a/JT+Y795nGAL/
idXf3+wM/KIsv8/YzfdM8YvziYJy3m+ae1PEYir9LvAtYgm+S/2PfGavvxvk
19/oQ1FnrvUzVm2xonPP+996nO9yDn5a1A58F+1Y86/D7wW9sb+He3Avk0Hv
9SD/H57f4/5L8g+D9F6TL1T0L33m5bL+nP+9C2pPMu20GrQz3/U1hWRdvQ==

         "]], 
        Polygon3DBox[{{3695, 1410, 1784, 606, 3730}, {3181, 1812, 1811, 253, 
         2371}, {3730, 606, 1782, 1781, 3694}, {2476, 608, 280, 1836, 
         3252}}]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlmlslVUQho+39572M/devisuxQ1ITAw/XBI1hggigoliXKixQEHRQgtp
tDWGUhVRoFKoqStFbJFKobVWBKkWaiXu+xY04h9jDBITlx9uCWIU0OfNzI+T
d858c+bMmXln7p1Y21TVmAkhvMYqY42PIXx+QggTwJE0hA/Ao+BjYDP6x8Hq
fAjPYFsPXpwLYR/ywWwIX2VN7kQ3N2/yEvBn1mTO/YKfO6OdbQQz5SF04LMM
nFQ0eQibw4UQLkF+Hrkd/XfI76Pbn5of+dudmr3O9bC/Cv3mJISlPKbAGs+3
P7FpQL8BmwFwVD6j3a0YmsDJOfOjWNrGhlCLr29LIfSBdXyvAzeA3fjsBMs9
5gT8C/9r0Q2Ai7G7C/0YYujE9jDy7axX+d7BfhScj80R7p0NTmNfxfcrwGlF
i20A/IT9Wuw/lX1iNm8kdp/uVbyb+HYS8tPgCnx1RKtFC+crOdsDnu11VD3f
0R3c+y74IbE+oFpiswJswv5+5YP92IzpDxYsf93I4yrgAmfXlFsOshl75w78
zOLcr+AwOAfdHrCBOL5GngV+FE3+OFpMim0b9uM8ttPBZYnVQpyqLBrHdmHT
y/4mvi8C3wOvFgfAh6jRALpD1OgIdo9Es5/gPieCh+DhF8i95Oo5r7vqX43/
H5D7isZX8VOc/ZHzp0Tj2zr89+P/e/wPofsJ+5fB3/lWA3YWrGaqy3Qwi10s
N94Op1ZfcXU0tZiv464K9reiX4x8h3NPfTCPe+o5uwwcg59+4m3FpgvdpeIc
+q3kJysOUIdaz79y1BatRuv0fuyvAZ/F/jj37leeitYP6osteYvtTeR/wd3+
riHvccWpeJWfEXT/pMZj1Vn8nxEtbzO9zjqr9yyJFs9S8AmXnwS7nJ/dyhN+
ZiKPgGk0DmzMGX/kQ7n5ssLsBxPjtGT56PN6zQGzifWT+CAuipMLkV+vsPwo
TzFn+h7w5mg9WA3u5K6V6Iv4WRBNvgUskPO9+Gil5lXgLnSDYBfrItU6sd5Q
j6wEL4j2lgt9pmi2/JEahzVzmsEWdKuwuSdabVSj9dG4KE7W5GxWLEK3HTzA
+f+y1hfNfnY5uJf9OaoT2M/aiPx3au/9DZse7lrj9q3gQs0LYrjN3/0Ucr36
VDmKNnPao8X5MLie/VngjeDmvPFNvFsVbQ6sjnavOHAyb61j7UT3TWqyYhCf
Z2S8RuI6369lf3202aG3azbO95wr92ewJmFzprgkfiDPBV9yToqb26LFvx28
nJjORd6SM54cx6aRePew5uWMA4PROPAC+KDHr3e0FW3+qAerfCYrJ/s003P2
23Ri0XilmT/F75oKtvPtM3zUqAfz1l/qs9XOE/FlazR/vT7D5Uf+profxf5o
tH7V7+db0X7L3tb7vPc1A5Z7HVu8b9W/x8hba2IzSr+lerPe3pBYL4mHim02
/XMA/pSI/zzn5/ned3q75vGp0X5PTwPv9fzcF+13RXNsATbHyMfd6I/mLNeK
X/mY7rPuSvGVmLJ8K5bsDt2lnnjF58Kw80m82pS3flPdNTM11zTf0pLFoXgq
NbM8h8rlZawpuhfcoZmP/GK03/ossZSVrC90Vv8RNNdvyFjt/wcNuh8l
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtlm1o1WUYxp+j5zzzxH9/z3EVWkEpffFDgaUSZRkZJZno5tq0lcuZL71p
WVIZUTnTJJFyY2Nurdw030p6U7GlkGZSYBTptwiTohcIizChUvpdXM+Hm3Pd
L//n5b6v+37O2LblDcuGhRA2IUXk5hjCOX5vxXgL+AjGq9C/LoTQUgphTR7C
BHy7wBcqtsl3LbaZNSF041/Bd9uyENbVhTAX3IBvMTHzwIuRx8FFbEvAdyNn
0Gfoe/AzyIvodejPgicik8DTsU0C38e6DQWfr6ccwmDJe+sMpznrEWKmBsd/
Bu4lZhr+O8D9fHsZv8fxjcd2ebRd/mZsd4IXIKPArdjawOu5zxTwTeBD3Hdv
dOyPyD7w2tzn62SfVaNCeAXblfhqsa0H/8I343QHxYO3ROeiC/8AeDAan8W2
Fdye7v8YtjXg+toQhrhPO+uvYf1m7vCEcoisxLad/Q8Q/zb6T6w/D/8Kvj1P
Xroy+zvRFxAzFfwVMdcRe1fm8yqHQ+gfp9xuRN4BT+ebfnxvlV0b1ejgiBB2
oregX0D/Bv0/1jsane/94Nd0rlTf14Vz1/IF8LGK+bF0mHN0irs1Rd9dHGmO
zoF0nXkb+H7k+eD95oN3IcWCz7dbNRlhfZbyydl2sMcl2Avc/yzrt+fmh3gy
shrC+/gjPC0h43PfR/VW3Qe4ex+25cQ/h/4tsQPIaPQK+gnw0/i7WGtd5nps
ir7rZqQDvDTpbchD4M5an78F/Aff12fur0PouzNzWrkTZyenmoo7ypFq3Yfc
Fs35lrLrJe5rjZbMNVIuiqk+3diuiOb3bPDRWseKw+LyzDz10jBz9zQ5eYP4
Rt2nzmt+Es0J7dWKPo/7Hqa3VpOzrujeUM66wUvwd+CfjMzNzEHVTfUT9xZm
5l4jti3iY8W1X4v+N/jeND80Y2LJ+wlr7uzN3JPqt/nqafCOaL7rvjvBeyrm
20bNLfCpqvtWZ7w4N2fEHXG2NZ1X/TSRvYbAbUg99tnR/BE/NhBfw12LVXNg
VTSHxQ3VXLU/UXRvakaqHqrP1OieUm+dLDi/mpOal7ejX4P/qejeVo+vjM65
ci+OvMtezblnyzR8v4t7aXZoZo3RfCB+DHU+yf61VceII+JGczqfZoU4K66K
0w9E319cVx1UD/XYPeCLcvfOgTQfFmWez5rTW8GDFddDe2rvxdg24HsVacrM
CXFD51GM+H0wmkPi0ubMvBa/e2p8V/GtD3m47P0WgR9ERqK/mbnOqveeGvNn
jvivvip7Bt8I/r5gPivXmmcTtF7mHPaDtyc+/1lxH6ofO3LPBM2Gq6Pn8XdV
50NrryX+n4rnumrQlNsmn/Y/U/HMejL6jdMsmxLdW+fS2/lvxb0t/SNwpep3
UTNIs0gzR7OniLyH/wByjPjPo+fnCNafofms+YD+gd6QgnvgQ/B5bMejOaW3
+Itorr2M/iX4L/yPpBk8OnfN9pGLYsm1HM55hteY49o/R+8vucby/4bckOr1
K99V8XeW3DPi+/6y99KeDWXXUP0l/jamN19zS/NL+dE8Fn8vZc2fKz5TH7GP
prOq5qr9QnGA736o+n1rTmsp5+pP9alqMTa931pzXOpZ9e6s9BboHdZs0/+G
nsyc0110p97M5xX3epFl6Q3UN9dHv42fJm7pm8Pgl1Lvq19Xg/8HHdAnsg==

         "]], Polygon3DBox[CompressedData["
1:eJwlkj0sQ1EYhj8NV6+0TYnBRIw2XQwWA5ufyh2KEpKmDETb0DuSCE38xaI1
tFVNEYNgkRQDFiFBxGARkQ4GFhKTQcJzcoY393uf857v/N3GUNSKOESkAVWg
K7fIa5nIpSFygY69InsoQb2AJgmnPSLd6IncDewanZLxwMZgW/gcOoCFYV+w
LnwnctL/E553iRxWigyz5j5+nVyI3jbZCXLfsJdqGLmCKeJnrIrMM3wNljN1
31FYkp5B5gwYen21jyCZDmof8+7hS3ibOTHqKMqybhz/Q78kPk0uRn4X30+2
hctIoTr4PLkdeq5Sn5AtogDeRrPUM6onY1l8LRqh3oClDN2vDzZIj3NT91C9
CvC/cpFf1piC5WAR1s2ovaAa9vLoZA7y43vU/ZHL06OXXJM6F5l6+CL+A7WJ
frtW2INX70WdKczYNipxnwG+K4wvI7dD38Gmuiv8G9l2WMbU93cHu0UJWBE2
BDtTb23oc6jzWC79hu/MPYLP4ceRj7rZ0G9gmfqfUf9OHDaNSrzZP9zLV8k=

         "]], 
        Polygon3DBox[{{3742, 626, 3161, 3188, 1430, 3703}, {4270, 1677, 3195, 
         3174, 156, 3608}, {3684, 94, 3154, 3241, 1709, 
         3685}}]}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jssXmEYB/DH7XOnK01IEengsggLsWOyuHQzSNzbRMQtiIWxBkRETKQR
I6NJk84urfulU43SVIdO/Z1Ivvf7/Z8n7+W8J+dd31jnaFpErBrz6RFJrmaj
sMijgog3eq3qb3K5fK9/KtfJt2zhEzv4lx+YVRiRMgblZ/PfylNyFZdZy3U2
cjfZn4fs4FfWF0WsOHMgI+JM3cVddWZOxHmyP78zxR/M5gX/5NJ5l/J7edWa
K/lAntJfV+8xx/xr/Rl5Q2+fuXo3epvqPPlWzucdC3jPQj6wiI+ss++W+SOe
76e6m1/U/e5xmtQ8ZhsP2MIdNnCNNVxiJSdZyhJjQM5gb3In77Sdv9jMG9by
hGX8Z16zM3ucXazu5LZ6IdtzqudoSszSkphmPieZxwm6RozTteITPxp+Meov
xWFmcYiZfLHg0jtzVPy2qMl5yvisXyE0pL1+T/8BVRxFQg==
       "]], 
      Line3DBox[{1571, 1365, 4309, 1280, 1366, 1282, 1434, 1249, 1439, 1440, 
       3187, 1285, 3224, 1368, 1553, 1367, 1536, 1535, 4289, 1534, 1571}], 
      Line3DBox[{1579, 1449, 1251, 1444, 1373, 1442, 1372, 1446, 1579}], 
      Line3DBox[CompressedData["
1:eJwl0/trzXEcx/HP2IY5dMzlB5K2H0hyWfKTEikpEv4BzOYHl61RZptG5r7k
ln+BJZGslEuj3WSYLWHLXGZrbTtrYcOIPD754dnz9b58Pud7bjn5xVuL0kII
7XiRGcK2jBAmYjuycBM96SH0J0O4JVcnQrjNq/BGv1TdyJVcoFdvr0k9yLvU
KZ7Cd9Gn/4B3I4k9yMZ+Z7umhVAnD9g5qn4sn+N6XosO/TL1Ez7GH+wX6z9V
H+DZMWNY3coH8c5rz+VSXHBmHrfjq51X/Brr45660e5zPqxujc/A89GF485+
1+uW79srUVfJC+MMl9WLuBdj9vr4o71+ruNN3MLvzdpwJj4HV/NSdJtdccew
/Ef/G59HXnxuLMcP/DUbsftT/oUVuIRRvYTv7qI8mbOwRf6CzXhkvox/O5/i
IZzFEpzCVa99mj/ZW8wn42/AHZNwQn7p3AS5yXxjfG/YgAUYMevgTlQiF232
qtxZLlcgB2XIdMcz+4fi58Fj9jq5Rb0Oc+KzqZt5Fmrc8dn3XCKXyzP5Ohfx
VHel7DbIM7AP6XoZ6HHvXnWz+Xj1GvkeVsdzOOKOXrO39u6oa1GIBPKxM36O
eGg+zvlsTMcOvQbn0uSV8g331MTfnb1r8f+Q/P8f+gcV+H2J
       "]], 
      Line3DBox[{1753, 1467, 1254, 1462, 1384, 1461, 1383, 1464, 1465, 1295, 
       1753}], Line3DBox[CompressedData["
1:eJwl08dOVUEAgOFxISsX+gg+gF3sXRHsgr2iWFAQsFfsvWHvIFhQEbH3gr0X
Et25UhM3JlYSNVjiN3Hx5Z+5Z87c3DPn1s/IS8utFUJ4yemEEE6xtE4IJ7VM
K/R13RAKjE8Yl3M8XuMYRznCe2tK9TCHOMgBSihmf1xrj3f1QigyLmQfe9nD
bnaxkx38tN923cZWtrCZTRTww/WNusCeG3Q961jLGlaziu/WrdQVLGdZ/H0s
YTEPXV+kC8mP+/HKZ/N1HnOZw2xmMZMZTKfUd7/1e6YZTyWPXHKYQrV9svWb
ZulXnayTyGRifF72mKDjGRefnfkbe2YYj43P0XyMpjOaUYxkBF/sN1yHMZQh
DGYQA+Pzd+8ATeOztanan370pQ+96UVPPllT4p4e8cw0RZPpHs/PPEmLtJt2
5aP1heZdjDvTiY50oD3taEuldW20SlvrB20Vz9+9LeM7oC00kebxfTBvpi+s
a6pNaEwjGtIgvoO1Q/jrepXxH30ez959z/QpT3jMo3jGPOC3dff1Hne5w21u
cZNfrldquX1u6HWucZUrXOYSNdZd1Auc5xxnOZPw/z/0D6+gfXk=
       "]], 
      Line3DBox[{1769, 1486, 1262, 1481, 1305, 1394, 1225, 1392, 1304, 1349, 
       1303, 1480, 1396, 4351, 1484, 1485, 1308, 4352, 1769}], 
      Line3DBox[{4282, 1785, 1320, 1503, 1502, 1409, 4318, 1499, 1315, 1354, 
       1316, 1405, 1230, 1407, 1317, 1500, 1269, 1505, 4282}], 
      Line3DBox[{1792, 1522, 1276, 1518, 3220, 1421, 1551, 1420, 3246, 1520, 
       1792}], Line3DBox[{1800, 1431, 1336, 4297, 1432, 1338, 1433, 4326, 
       1556, 1549, 1800}], 
      Line3DBox[{1561, 1560, 1559, 1558, 4327, 1557, 1281, 1572, 4328, 1570, 
       1569, 1568, 1567, 1566, 3208, 1565, 3223, 1564, 1563, 1562, 1561}], 
      Line3DBox[{1805, 1289, 1452, 1451, 1805}], 
      Line3DBox[{4284, 1819, 1257, 1472, 3212, 1474, 1346, 1240, 3192, 1348, 
       1478, 1477, 1259, 1299, 1256, 1469, 4358, 1297, 4284}], 
      Line3DBox[{1833, 1310, 3249, 1488, 1264, 1312, 1267, 3217, 1495, 1496, 
       4317, 1353, 4292, 1243, 1351, 1493, 1491, 1265, 1833}], 
      Line3DBox[{1847, 1322, 3251, 1507, 3205, 1271, 1324, 1274, 1514, 4361, 
       1515, 1359, 1245, 1357, 1512, 4319, 1510, 1272, 1847}], 
      Line3DBox[{1851, 1330, 1525, 4306, 1524, 4364, 1851}], 
      Line3DBox[{1855, 1283, 1436, 1435, 1855}], 
      Line3DBox[{1869, 1371, 1219, 3253, 1369, 1218, 1237, 4365, 3254, 1284, 
       4366, 1438, 1286, 1370, 1441, 1250, 1443, 4367, 1445, 4368, 1869}], 
      Line3DBox[{1875, 1456, 3210, 1340, 1458, 1343, 3190, 1238, 1875}], 
      Line3DBox[{1881, 1529, 1362, 1531, 1364, 1247, 1881}], 
      Line3DBox[{3188, 1894, 3222, 1533, 1532, 1279, 4308, 1552, 1429, 1334, 
       1427, 3259, 1332, 1248, 1235, 1428, 4369, 1236, 3207, 1430, 3188}], 
      Line3DBox[{4290, 1862, 1863, 1864, 1865, 1866, 1867, 4301, 1868, 4310, 
       1287, 1856, 1857, 3189, 1858, 1859, 1860, 4574, 3197, 1861, 4290}], 
      Line3DBox[{1577, 1576, 1575, 1574, 1573, 1374, 1580, 1578, 1577}], 
      Line3DBox[{1748, 1747, 1746, 1745, 1744, 1385, 1752, 1751, 1750, 1749, 
       1748}], Line3DBox[{1760, 1759, 1758, 1757, 1756, 1755, 1754, 1397, 
       4315, 1768, 1767, 1766, 4304, 1765, 1764, 1763, 1762, 1761, 1760}], 
      Line3DBox[{1776, 1775, 1774, 1773, 1772, 1771, 1770, 4353, 1410, 1784, 
       1783, 1782, 1781, 4354, 1780, 1779, 1778, 1777, 1776}], 
      Line3DBox[{1790, 1789, 3245, 1788, 1787, 1786, 1422, 1793, 3206, 1791, 
       1790}], Line3DBox[{3196, 1888, 1889, 1890, 1891, 4370, 1892, 1893, 
       1895, 3260, 1335, 3257, 1882, 3258, 1883, 4296, 1884, 1885, 1886, 1887,
        3196}], 
      Line3DBox[{1341, 1874, 3256, 1873, 1872, 1871, 3255, 1870, 1341}], 
      Line3DBox[{1815, 1814, 3247, 1813, 1812, 1811, 1810, 1809, 1808, 1807, 
       4313, 1806, 4357, 1470, 1818, 1817, 3248, 1816, 1815}], 
      Line3DBox[{1829, 1828, 4360, 1827, 4359, 1826, 1825, 3250, 1824, 1823, 
       1822, 1821, 3215, 1820, 1489, 1832, 1831, 1830, 1829}], 
      Line3DBox[{1843, 1842, 1841, 1840, 4300, 1839, 1838, 1837, 1836, 3252, 
       1835, 3218, 1834, 1508, 1846, 1845, 4362, 1844, 1843}], 
      Line3DBox[{1363, 1880, 1879, 1878, 1877, 1876, 1363}], 
      Line3DBox[{1853, 1852, 1437, 1854, 1853}], 
      Line3DBox[{1803, 1802, 1453, 1804, 1803}], 
      Line3DBox[{1849, 1848, 1526, 4323, 1850, 4363, 1849}], 
      Line3DBox[{1337, 1794, 1795, 4355, 1796, 1797, 1798, 4356, 1799, 1801, 
       1337}]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktOU1EYwPHPcHWAJpoUF2BlA7ABdaYjiAvQpFEUpA/nNo4c2TgixtQ+
tVZA1KA4kIKPmdoKPkDYgNUNVKf+Ggf//L5zb3Jyz8k9kcmfzx2IiFt6k0R8
HIlY5xNljkbsWxf4izf5h3d40Psqx7jCk+xwkl32dMb8m9P8y4s8dCwix+Ms
cpwl1vmc73RfG1rTpcMRFV5mlTOs8QrrvMoGZ9nkHB/wGuf10Jxlizk+Yp5t
FviY17nIs0ciVvleS9rUK53ybWVO8DbTvMEUs0x4gQNnnGKfP3Xa/IETfM00
l5kanpEJSxy40yL7rNjrqedvtWfd4Us9G434Yb3CXS5zh4v8zja/scWvbLKh
L+Yat4d7c4tlfuY99niXXS7wE8+5hxfJ///hH6oTUjc=
       "]]}, {
      Line3DBox[{3261, 3656, 3711, 4309}], 
      Line3DBox[{3271, 3659, 3505, 3713, 3643, 4274, 3644, 4574}], 
      Line3DBox[{3281, 3448, 4596, 3280, 3447, 4595, 3279, 3446, 4594, 3278, 
       3445, 4593, 3277, 3444, 4592, 3276, 4646, 4375, 3275, 4645, 4374, 3274,
        4644, 4373, 4591, 3273, 3443, 3926, 3925, 4780, 3272, 3442, 3798, 
       4590, 4428, 3766, 3875, 3874, 3767, 4589, 4427, 3764, 3873, 3872, 4766,
        3765, 3506, 3923, 3912, 3924, 3795, 3936, 3825, 3922, 2589, 3826, 
       3575, 3824, 3712, 4290}], 
      Line3DBox[{3282, 3796, 3896, 3507, 3827, 3645, 3714, 4697, 4446, 3579, 
       4265, 4310}], 
      Line3DBox[{3291, 3453, 4602, 3290, 3452, 4601, 3289, 3451, 4600, 3288, 
       3450, 4599, 3287, 4650, 4379, 3286, 4649, 4378, 3285, 4648, 4377, 3284,
        4647, 4376, 4598, 3283, 3449, 3878, 4767, 3879, 3881, 3880, 3771, 
       3509, 4751, 3768, 3877, 3876, 3769, 4597, 4429, 3797, 3828, 2592, 3829,
        3581, 3861, 3911, 3910, 3635, 3646, 4698, 4447, 4298}], 
      Line3DBox[{3292, 3510, 3580, 3511, 3717, 4742, 4449, 3745, 3660, 3512, 
       4275, 3513, 4329}], 
      Line3DBox[{3303, 3456, 4605, 3302, 3455, 4604, 3301, 3454, 4603, 3300, 
       4654, 4383, 3299, 4653, 4382, 3298, 4652, 4381, 3297, 4651, 4380, 3296,
        4781, 3928, 3927, 4782, 3295, 3520, 3519, 4700, 3294, 3518, 3772, 
       3517, 4699, 3897, 3293, 3516, 3770, 2215, 3862, 3863, 3662, 4731, 3515,
        3830, 3514, 3831, 4285}], 
      Line3DBox[{3304, 3521, 3582, 3522, 4732, 4450, 3746, 3663, 3523, 3719, 
       3524, 4733, 3720, 3664, 4291}], 
      Line3DBox[{3316, 3458, 4607, 3315, 3457, 4606, 3314, 4659, 4388, 3313, 
       4658, 4387, 3312, 4657, 4386, 3311, 4656, 4385, 3310, 4655, 4384, 3309,
        4768, 3883, 3929, 3882, 3930, 4783, 3308, 3913, 3529, 3801, 3528, 
       4701, 4461, 3307, 3527, 3773, 2224, 3800, 3306, 3799, 3526, 3832, 4748,
        4430, 3835, 3747, 3864, 3665, 4571, 4743, 4312}], 
      Line3DBox[{3318, 3530, 3583, 3531, 4756, 3317, 3833, 3834, 3584, 4660, 
       3667, 3666, 3319, 3668, 4277, 3669, 4358}], 
      Line3DBox[{3331, 3459, 4608, 3330, 4666, 4393, 3329, 4665, 4392, 3328, 
       4664, 4391, 3327, 4663, 4390, 3326, 4662, 4389, 3325, 4784, 3932, 3931,
        3324, 4769, 3884, 3919, 3921, 3920, 4779, 3323, 3914, 3915, 3774, 
       3898, 2665, 3322, 3532, 3638, 4734, 3677, 3676, 3321, 3674, 3675, 3585,
        4744, 3673, 3672, 3320, 4324}], 
      Line3DBox[{3334, 3534, 3776, 3885, 4752, 3460, 3775, 3536, 3592, 4715, 
       3461, 3591, 3682, 3683, 3593, 4448, 4716, 3462, 3723, 4268, 4351}], 
      Line3DBox[{3353, 4675, 4399, 3351, 4674, 4398, 3349, 4673, 4397, 3347, 
       4672, 4396, 3345, 4671, 4395, 3343, 4670, 4394, 3341, 4464, 4669, 3933,
        3935, 3934, 3340, 4770, 3916, 3917, 3899, 3900, 2668, 3339, 3537, 
       3639, 3805, 4727, 4462, 3338, 3803, 3804, 3590, 4459, 4714, 3750, 3337,
        3686, 3749, 3687, 3589, 4997, 4579}], 
      Line3DBox[{3355, 3538, 3890, 3918, 4772, 3473, 3778, 3539, 3640, 4460, 
       4728, 3474, 3779, 3807, 3808, 3597, 4762, 3837, 3475, 3838, 3689, 3839,
        3690, 4618, 3599, 4317}], 
      Line3DBox[{3363, 3484, 4624, 3362, 3483, 4623, 3361, 3482, 4622, 3360, 
       3481, 4621, 3359, 3480, 4620, 3358, 3479, 4619, 3357, 2132, 3356, 4702,
        4400, 3602, 3540, 4757, 3809, 3478, 3601, 3691, 4737, 4454, 3726, 
       3477, 3752, 3649, 3600, 4453, 4305}], 
      Line3DBox[{3364, 3889, 4401, 4771, 3901, 3541, 3781, 4773, 3891, 3485, 
       3780, 3542, 3641, 4729, 3650, 3486, 3727, 3692, 3693, 4625, 3603, 3651,
        3487, 3728, 4318}], 
      Line3DBox[{3372, 3494, 4631, 3371, 3493, 4630, 3370, 3492, 4629, 3369, 
       3491, 4628, 3368, 3490, 4627, 3367, 2142, 3366, 4749, 4403, 3754, 3753,
        3365, 4703, 4402, 3606, 3543, 4758, 3810, 3489, 3840, 3605, 3697, 
       3696, 4745, 3729, 3488, 4280, 4294}], 
      Line3DBox[{3373, 3902, 4404, 4775, 3903, 3544, 3783, 4465, 4704, 3892, 
       3782, 3545, 3785, 4774, 3893, 3894, 3784, 3811, 4434, 4763, 3844, 3841,
        3843, 3842, 3607, 3698, 4738, 4257, 3733, 4361}], 
      Line3DBox[{3380, 3498, 4635, 3379, 3497, 4634, 3378, 3496, 4633, 3377, 
       3495, 4632, 3376, 2152, 3375, 4676, 4407, 3374, 4718, 4406, 3612, 3611,
        3845, 4705, 4405, 3610, 3547, 3699, 4717, 3609, 3654, 3653, 3734, 
       3546, 3732, 4746, 4321}], 
      Line3DBox[{3382, 4408, 4677, 3381, 3548, 4409, 4706, 3812, 3549, 3787, 
       4466, 4707, 3895, 3786, 4753, 3550, 3813, 3846, 3847, 3613, 3700, 4739,
        3551, 3858, 3848, 3850, 3849, 3614, 4271, 4322}], 
      Line3DBox[{3389, 3501, 4638, 3388, 3500, 4637, 3387, 3499, 4636, 3386, 
       2163, 3385, 4678, 4413, 3384, 4720, 4412, 3619, 3636, 4709, 4411, 3620,
        3554, 3383, 4708, 4410, 3618, 3553, 3737, 4747, 4455, 3617, 3655, 
       4288}], Line3DBox[{3391, 4414, 4679, 3390, 3904, 3905, 4776, 3392, 
       3906, 3555, 3788, 4680, 4435, 3393, 3815, 4436, 4759, 3814, 3556, 3394,
        3859, 4719, 3615, 3860, 3616, 3852, 3736, 3755, 4456, 4710, 3557, 
       4306}], Line3DBox[{3402, 3503, 4640, 3401, 3502, 4639, 3400, 2174, 
       3399, 4682, 4416, 3398, 4681, 4415, 3397, 4721, 3623, 3622, 3396, 4724,
        3562, 3621, 3561, 3395, 4754, 3816, 3560, 3851, 3559, 3741, 4711, 
       4457, 3756, 4341}], 
      Line3DBox[{3404, 4417, 4683, 3403, 4418, 4684, 3405, 3563, 3789, 4685, 
       4437, 3406, 3907, 4438, 4777, 3790, 3564, 3407, 3818, 4439, 4760, 3817,
        3565, 3408, 4463, 4712, 3566, 3853, 3567, 3857, 3702, 4296}], 
      Line3DBox[{3416, 3504, 4641, 3415, 2186, 3414, 4688, 4420, 3413, 4687, 
       4419, 3412, 4442, 4686, 3629, 3411, 4726, 3627, 3642, 3626, 3758, 3866,
        4725, 3757, 3570, 3856, 3569, 3855, 3410, 4755, 3819, 3568, 3854, 
       4370}], Line3DBox[{3430, 3633, 2348, 3429, 4696, 4424, 3428, 4695, 
       4423, 3427, 4694, 4422, 3426, 4444, 4693, 3632, 3425, 4441, 4692, 3867,
        3869, 3868, 3424, 4764, 3759, 3760, 3628, 3710, 3709, 3423, 4750, 
       3708, 3865, 4326}], 
      Line3DBox[{3578, 3441, 3577, 4713, 3270, 3440, 4588, 3269, 3439, 4587, 
       3268, 3438, 4586, 3267, 3437, 4585, 3266, 3436, 4584, 3265, 4643, 4372,
        3264, 4642, 4371, 4583, 3263, 3435, 4582, 3262, 3434, 4581, 4426, 
       3762, 3433, 3871, 3763, 4580, 4425, 3576, 3432, 3870, 4765, 3761, 3794,
        3793, 3574, 3431, 4723, 4445, 3634, 3658, 3657, 3637, 2063, 3744, 
       4289}], Line3DBox[{3631, 3630, 4689, 4443, 3417, 4421, 4690, 3418, 
       3571, 4691, 4440, 3419, 3908, 3909, 4778, 3791, 3572, 3420, 3820, 3821,
        4761, 3792, 3823, 3822, 3421, 4458, 4722, 3704, 3624, 3706, 3705, 
       3422, 4741, 3707, 3743, 4297}], 
      Line3DBox[{3938, 4251, 2930, 3937, 4890, 4160, 3939, 4891, 4161, 3940, 
       4892, 4162, 3941, 4893, 4163, 3942, 4894, 4164, 3943, 4895, 4165, 3944,
        4896, 4467, 4785, 3945, 4897, 4166, 3946, 4898, 4167, 3947, 4899, 
       4168, 3948, 4900, 4169, 3949, 4901, 4170, 3950, 4570, 4994, 4171, 
       4252}], Line3DBox[{3952, 4468, 4786, 3951, 2945, 3953, 4902, 4172, 
       3954, 4903, 4173, 3955, 4904, 4174, 3956, 4905, 4175, 3957, 4906, 4176,
        3958, 4907, 4469, 4787, 3959, 4470, 4788, 3960, 4908, 4177, 3961, 
       4909, 4178, 3962, 4910, 4179, 3963, 4911, 4180, 3964, 4912, 4181, 
       3965}], Line3DBox[{3967, 4471, 4789, 3966, 4472, 4790, 3968, 2961, 
       3969, 4913, 4182, 3970, 4914, 4183, 3971, 4915, 4184, 3972, 4916, 4185,
        3973, 4917, 4473, 4791, 3974, 4474, 4792, 3975, 4475, 4793, 3976, 
       4918, 4186, 3977, 4919, 4187, 3978, 4920, 4188, 3979, 4921, 4189, 
       3980}], Line3DBox[{3982, 4476, 4794, 3981, 4477, 4795, 3983, 4478, 
       4796, 3984, 2977, 3985, 4922, 4190, 3986, 4923, 4191, 3987, 4924, 4192,
        3988, 4925, 4479, 4797, 3989, 4480, 4798, 3990, 4481, 4799, 3991, 
       4482, 4800, 3992, 4926, 4193, 3993, 4927, 4194, 3994, 4928, 4195, 
       3995}], Line3DBox[{3997, 4483, 4801, 3996, 4484, 4802, 3998, 4485, 
       4803, 3999, 4486, 4804, 4000, 2993, 4001, 4929, 4196, 4002, 4930, 4197,
        4003, 4931, 4487, 4805, 4004, 4488, 4806, 4005, 4489, 4807, 4006, 
       4490, 4808, 4007, 4491, 4809, 4008, 4932, 4198, 4009, 4933, 4199, 
       4010}], Line3DBox[{4012, 4492, 4810, 4011, 4493, 4811, 4013, 4494, 
       4812, 4014, 4495, 4813, 4015, 4496, 4814, 4016, 3009, 4017, 4934, 4200,
        4018, 4935, 4497, 4815, 4019, 4498, 4816, 4020, 4499, 4817, 4021, 
       4500, 4818, 4022, 4501, 4819, 4023, 4502, 4820, 4024, 4936, 4201, 
       4025}], Line3DBox[{4027, 4503, 4821, 4026, 4504, 4822, 4028, 4505, 
       4823, 4029, 4506, 4824, 4030, 4507, 4825, 4031, 4508, 4826, 4032, 3025,
        4033, 4937, 4509, 4827, 4034, 4510, 4828, 4035, 4511, 4829, 4036, 
       4512, 4830, 4037, 4513, 4831, 4038, 4514, 4832, 4039, 4515, 4833, 
       4040}], Line3DBox[{4044, 4938, 4202, 4042, 4939, 4203, 4046, 4940, 
       4204, 4048, 4941, 4205, 4050, 4942, 4206, 4052, 4943, 4207, 4054, 4944,
        4208, 4056, 4945, 3042, 4058, 4946, 4209, 4060, 4947, 4210, 4062, 
       4948, 4211, 4064, 4949, 4212, 4066, 4950, 4213, 4068, 4951, 4214, 
       4070}], Line3DBox[{4069, 4847, 4528, 4067, 4846, 4527, 4065, 4845, 
       4526, 4063, 4844, 4525, 4061, 4843, 4524, 4059, 4842, 4523, 4057, 4841,
        3041, 4055, 4840, 4522, 4053, 4839, 4521, 4051, 4838, 4520, 4049, 
       4837, 4519, 4047, 4836, 4518, 4045, 4835, 4517, 4041, 4834, 4516, 
       4043}], Line3DBox[{4072, 4529, 4848, 4071, 4952, 4215, 4073, 4953, 
       4216, 4074, 4954, 4217, 4075, 4955, 4218, 4076, 4956, 4219, 4077, 4957,
        4220, 4078, 4958, 4530, 4849, 4079, 3058, 4080, 4959, 4221, 4081, 
       4960, 4222, 4082, 4961, 4223, 4083, 4962, 4224, 4084, 4963, 4225, 
       4085}], Line3DBox[{4087, 4531, 4850, 4086, 4532, 4851, 4088, 4964, 
       4226, 4089, 4965, 4227, 4090, 4966, 4228, 4091, 4967, 4229, 4092, 4968,
        4230, 4093, 4969, 4533, 4852, 4094, 4534, 4853, 4095, 3074, 4096, 
       4970, 4231, 4097, 4971, 4232, 4098, 4972, 4233, 4099, 4973, 4234, 
       4100}], Line3DBox[{4102, 4535, 4854, 4101, 4536, 4855, 4103, 4537, 
       4856, 4104, 4974, 4235, 4105, 4975, 4236, 4106, 4976, 4237, 4107, 4977,
        4238, 4108, 4978, 4538, 4857, 4109, 4539, 4858, 4110, 4540, 4859, 
       4111, 3090, 4112, 4979, 4239, 4113, 4980, 4240, 4114, 4981, 4241, 
       4115}], Line3DBox[{4117, 4541, 4860, 4116, 4542, 4861, 4118, 4543, 
       4862, 4119, 4544, 4863, 4120, 4982, 4242, 4121, 4983, 4243, 4122, 4984,
        4244, 4123, 4985, 4545, 4864, 4124, 4546, 4865, 4125, 4547, 4866, 
       4126, 4548, 4867, 4127, 3106, 4128, 4986, 4245, 4129, 4987, 4246, 
       4130}], Line3DBox[{4132, 4549, 4868, 4131, 4550, 4869, 4133, 4551, 
       4870, 4134, 4552, 4871, 4135, 4553, 4872, 4136, 4988, 4247, 4137, 4989,
        4248, 4138, 4990, 4554, 4873, 4139, 4555, 4874, 4140, 4556, 4875, 
       4141, 4557, 4876, 4142, 4558, 4877, 4143, 3122, 4144, 4991, 4249, 
       4145}], Line3DBox[{4159, 4256, 3142, 4158, 4889, 4569, 4157, 4888, 
       4568, 4156, 4887, 4567, 4155, 4886, 4566, 4154, 4885, 4565, 4153, 4884,
        4564, 4993, 4152, 4250, 4992, 4151, 4883, 4563, 4150, 4882, 4562, 
       4149, 4881, 4561, 4148, 4880, 4560, 4147, 4879, 4559, 4146, 4878, 4254,
        4253, 4255}], Line3DBox[{4282, 4626, 4283}], 
      Line3DBox[{4284, 4661, 4573}], Line3DBox[{4287, 4262, 4299}], 
      Line3DBox[{4293, 4292}], Line3DBox[{4301, 3508, 4311}], 
      Line3DBox[{4316, 4352}], Line3DBox[{4320, 4319}], 
      Line3DBox[{4331, 4266, 4332}], Line3DBox[{4340, 3558, 4364}], 
      Line3DBox[{4345, 3463, 3724, 3688, 4736, 4452, 3595, 3836, 3464, 3802, 
       4432, 4609, 3596, 3465, 3806, 4433, 4610, 3777, 3888, 2122, 3887, 3886,
        4611, 3466, 3342, 4612, 3467, 3344, 4613, 3468, 3346, 4614, 3469, 
       3348, 4615, 3470, 3350, 4616, 3471, 3352, 4617, 3472, 3354}], 
      Line3DBox[{4575, 3681, 4668, 3588, 3680, 3722, 3679, 3335, 3678, 4735, 
       4451, 3587, 3535, 3332, 4431, 4667, 3586, 3533, 3333}]}, {
      Line3DBox[{1899, 2200, 2294, 2201, 4580, 2512, 2551, 2205, 2514, 2206, 
       4589, 2516, 2663, 2210, 2553, 2211, 4597, 2518, 2633, 2215, 2301, 2216,
        2597, 2388, 2302, 2493, 2598, 4748, 2222, 2600, 2223, 2601, 2393, 
       2304, 2396, 4744, 2458, 2229, 2460, 2230, 2605, 3168, 3242}], 
      Line3DBox[{1900, 2202, 2511, 2203, 4581, 1901, 2207, 2515, 2208, 4590, 
       2554, 2555, 2212, 2517, 4751, 2213, 2519, 2664, 2217, 4699, 2556, 2218,
        2521, 2558, 2224, 2557, 2225, 2359, 2397, 4734, 2231, 2305, 2232, 
       2398, 2306, 4714, 2495, 2606, 2239, 2608, 2240, 2609, 2401, 4736, 2309,
        2404, 2468, 2248, 2469, 2249, 2472, 2405, 3203}], 
      Line3DBox[{1902, 2064, 4582, 1903, 2695, 4780, 2696, 2697, 2698, 2699, 
       2642, 4767, 2641, 1934, 2219, 4700, 2520, 2220, 2559, 2560, 2561, 4701,
        2522, 2226, 2523, 2665, 2666, 2563, 2233, 2360, 4727, 2565, 2566, 
       2564, 2241, 4609, 2310, 2250, 2312, 2407, 2471, 2406, 4737, 2313, 2497,
        2634, 2498, 2318, 2412, 2475, 4745, 2411, 2320, 2414, 2500, 2415, 
       3157, 4746, 2416, 3238}], 
      Line3DBox[{1904, 2065, 4583, 1906, 2074, 4591, 1923, 2084, 4598, 1935, 
       2700, 4782, 2702, 2703, 2704, 4783, 2705, 2645, 2644, 2688, 2689, 4779,
        2690, 2648, 2647, 2667, 2668, 2669, 2567, 2242, 4610, 2525, 2670, 
       2671, 2568, 4757, 2252, 2314, 2258, 2569, 4758, 2260, 2321, 2265, 2325,
        2418, 4717, 2478, 2417, 2326, 2424, 2502, 2425, 2331, 4747, 2427, 
       2479, 2426, 2332, 2432, 2504, 2433, 4711, 2335, 2434, 3196}], 
      Line3DBox[{1908, 4643, 2067, 1909, 4645, 2076, 1925, 4648, 2086, 1937, 
       4651, 2095, 1947, 4655, 2104, 1957, 2706, 4784, 2113, 1968, 4669, 2650,
        2123, 4611, 1979, 2132, 1990, 2499, 4749, 2141, 2001, 2327, 4718, 
       2150, 2012, 2274, 2353, 4709, 2160, 2023, 2278, 4724, 2354, 2170, 2034,
        2505, 2635, 4725, 2506, 2355, 2626, 2681, 2181, 2045, 2509, 4764, 
       2636, 2510, 2346, 2378, 2680, 2192, 2057}], 
      Line3DBox[{1910, 2068, 4584, 1911, 4646, 2077, 1926, 4649, 2087, 1938, 
       4652, 2096, 1948, 4656, 2105, 1958, 4662, 2114, 1969, 4670, 2124, 4612,
        1980, 2133, 4619, 1991, 2142, 2002, 4676, 2151, 2013, 2333, 4720, 
       2161, 2024, 2336, 4721, 2171, 2035, 2338, 4726, 2356, 2182, 2046, 4692,
        2289, 2357, 2193, 2058}], 
      Line3DBox[{1912, 2069, 4585, 1913, 2078, 4592, 1927, 4650, 2088, 1939, 
       4653, 2097, 1949, 4657, 2106, 1959, 4663, 2115, 1970, 4671, 2125, 4613,
        1981, 2134, 4620, 1992, 2143, 4627, 2003, 2152, 2014, 4678, 2162, 
       2025, 4681, 2172, 2036, 4686, 2339, 2183, 2047, 4693, 2347, 2194, 
       2059}], Line3DBox[{1914, 2070, 4586, 1915, 2079, 4593, 1928, 2089, 
       4599, 1940, 4654, 2098, 1950, 4658, 2107, 1960, 4664, 2116, 1971, 4672,
        2126, 4614, 1982, 2135, 4621, 1993, 2144, 4628, 2004, 2153, 4632, 
       2015, 2163, 2026, 4682, 2173, 2037, 4687, 2184, 2048, 4694, 2195, 
       2060}], Line3DBox[{1916, 2071, 4587, 1917, 2080, 4594, 1929, 2090, 
       4600, 1941, 2099, 4603, 1951, 4659, 2108, 1961, 4665, 2117, 1972, 4673,
        2127, 4615, 1983, 2136, 4622, 1994, 2145, 4629, 2005, 2154, 4633, 
       2016, 2164, 4636, 2027, 2174, 2038, 4688, 2185, 2049, 4695, 2196, 
       2061}], Line3DBox[{1918, 2072, 4588, 1919, 2081, 4595, 1930, 2091, 
       4601, 1942, 2100, 4604, 1952, 2109, 4606, 1962, 4666, 2118, 1973, 4674,
        2128, 4616, 1984, 2137, 4623, 1995, 2146, 4630, 2006, 2155, 4634, 
       2017, 2165, 4637, 2028, 2175, 4639, 2039, 2186, 2050, 4696, 2197, 
       2062}], Line3DBox[{1920, 2295, 4713, 2296, 1921, 2082, 4596, 1931, 
       2092, 4602, 1943, 2101, 4605, 1953, 2110, 4607, 1963, 2119, 4608, 1974,
        4675, 2129, 4617, 1985, 2138, 4624, 1996, 2147, 4631, 2007, 2156, 
       4635, 2018, 2166, 4638, 2029, 2176, 4640, 2040, 2187, 4641, 2051, 2348,
        2349, 2350}], 
      Line3DBox[{2052, 2188, 2340, 4689, 2041, 2177, 4683, 2030, 2167, 4679, 
       2019, 2157, 4677, 2008, 2148, 4775, 2674, 2673, 1997, 2139, 4771, 2672,
        2687, 2686, 1986, 4772, 2130, 2685, 2526, 2243, 1975, 4752, 2120, 
       2649, 2524, 2234, 4667, 1964, 2111, 2562, 4756, 2227, 1954, 2102, 2303,
        4732, 2390, 2492, 2389, 1944, 2093, 2451, 2366, 2299, 4742, 2385, 
       2488, 2384, 1932, 2083, 2450, 2364, 4697, 2297, 2382, 3189}], 
      Line3DBox[{2053, 2189, 4690, 2042, 2178, 4684, 2031, 2168, 2676, 4776, 
       2675, 2020, 2158, 4706, 2571, 2267, 2009, 2656, 2655, 4704, 2531, 2261,
        1998, 2654, 4773, 2653, 2530, 2253, 1987, 4728, 2529, 2528, 2527, 
       2244, 1976, 4715, 2121, 2307, 2235, 2399, 4735, 1965, 2603, 2602, 2604,
        2228, 2599, 4660, 2394, 1955, 2370, 2456, 2369, 2455, 4733, 2221, 
       2453, 2391, 3198}], 
      Line3DBox[{2054, 2190, 2584, 2284, 4691, 2043, 2179, 2576, 2279, 4685, 
       2032, 2662, 2661, 2536, 2275, 4680, 2021, 2660, 2659, 4707, 2534, 2268,
        2010, 2658, 4774, 2657, 2532, 2262, 1999, 2376, 4729, 2375, 2315, 
       2254, 2408, 1988, 2611, 4762, 2613, 2610, 2612, 2245, 2607, 2402, 1977,
        4716, 2374, 2465, 2373, 2463, 2236, 2461, 4668, 2400, 3202}], 
      Line3DBox[{2055, 2286, 2585, 2285, 4778, 2678, 2543, 2281, 2577, 2280, 
       4777, 2677, 2539, 2277, 2537, 2276, 4759, 2573, 2572, 2270, 4753, 2535,
        2269, 2619, 2618, 2323, 2570, 2617, 4763, 2264, 2533, 2263, 2616, 
       2615, 2317, 2409, 4625, 2474, 2256, 2316, 2255, 2614, 2496, 2311, 2403,
        4618, 2470, 3217}], 
      Line3DBox[{2056, 2191, 2483, 2377, 2345, 2445, 2508, 4750, 2444, 2044, 
       2180, 2547, 2546, 2583, 4755, 2582, 2033, 2169, 2541, 2540, 2575, 4754,
        2574, 2022, 2159, 4708, 2273, 2011, 2149, 4705, 2621, 2266, 2000, 
       2140, 4703, 2259, 1989, 2131, 4702, 2251, 1978, 2122, 2652, 2651, 2684,
        4770, 2683, 1967, 2112, 4769, 2646, 1956, 2103, 4768, 2643, 1946, 
       2094, 4781, 2701, 1936, 2085, 4647, 1924, 2075, 4644, 1907, 2066, 4642,
        1905}], 
      Line3DBox[{2290, 2381, 2198, 2291, 2361, 2485, 2362, 4723, 1897, 2588, 
       2627, 2292, 2691, 2589, 2591, 2590, 2632, 2383, 2449, 2209, 2351, 4698,
        2365, 3177, 3244}], 
      Line3DBox[{2344, 2440, 2441, 2342, 2439, 2438, 4722, 2337, 2580, 2581, 
       2544, 4712, 2624, 2623, 2679, 2430, 2622, 2431, 2334, 4710, 2429, 2503,
        2428, 2480, 3246}], 
      Line3DBox[{2448, 2379, 2380, 2358, 2486, 2063, 1896, 3165, 2631, 3166, 
       3224}], Line3DBox[{2484, 2446, 2482, 2447, 2343, 2443, 2507, 4741, 
       2442, 2481, 2436, 2625, 2437, 3260}], 
      Line3DBox[{2548, 2587, 2288, 2341, 2287, 4761, 2586, 2545, 2283, 2542, 
       2282, 4760, 2579, 2578, 2330, 2538, 4719, 2329, 2630, 2629, 2352, 2419,
        2628, 2272, 4739, 2328, 2271, 2620, 2501, 2324, 2413, 2477, 3151, 
       4738, 2322, 3150, 3205}], 
      Line3DBox[{2549, 2550, 2199, 2293, 2637, 4765, 2638, 1898, 2204, 2513, 
       2639, 4766, 2640, 2692, 2693, 2694, 2682, 2298, 2552, 2592, 2594, 2593,
        1933, 2387, 2595, 2214, 4731, 2300, 2489, 2596, 2490, 2491, 2392, 
       2454, 4743, 3147, 3199}], 
      Line3DBox[{2708, 2931, 4890, 2709, 2945, 2737, 4790, 2960, 2752, 4795, 
       2975, 2767, 4802, 2990, 2782, 4811, 3005, 2797, 4822, 3020, 2812, 4835,
        3035, 4939, 2827, 3050, 4952, 2842, 4851, 3065, 2857, 4855, 3080, 
       2872, 4861, 3095, 2887, 4869, 3110, 2902, 4879, 3125, 2917}], 
      Line3DBox[{2710, 2932, 4891, 2711, 2946, 4902, 2738, 2961, 2753, 4796, 
       2976, 2768, 4803, 2991, 2783, 4812, 3006, 2798, 4823, 3021, 2813, 4836,
        3036, 4940, 2828, 3051, 4953, 2843, 3066, 4964, 2858, 4856, 3081, 
       2873, 4862, 3096, 2888, 4870, 3111, 2903, 4880, 3126, 2918}], 
      Line3DBox[{2712, 2933, 4892, 2713, 2947, 4903, 2739, 2962, 4913, 2754, 
       2977, 2769, 4804, 2992, 2784, 4813, 3007, 2799, 4824, 3022, 2814, 4837,
        3037, 4941, 2829, 3052, 4954, 2844, 3067, 4965, 2859, 3082, 4974, 
       2874, 4863, 3097, 2889, 4871, 3112, 2904, 4881, 3127, 2919}], 
      Line3DBox[{2714, 2934, 4893, 2715, 2948, 4904, 2740, 2963, 4914, 2755, 
       2978, 4922, 2770, 2993, 2785, 4814, 3008, 2800, 4825, 3023, 2815, 4838,
        3038, 4942, 2830, 3053, 4955, 2845, 3068, 4966, 2860, 3083, 4975, 
       2875, 3098, 4982, 2890, 4872, 3113, 2905, 4882, 3128, 2920}], 
      Line3DBox[{2716, 2935, 4894, 2717, 2949, 4905, 2741, 2964, 4915, 2756, 
       2979, 4923, 2771, 2994, 4929, 2786, 3009, 2801, 4826, 3024, 2816, 4839,
        3039, 4943, 2831, 3054, 4956, 2846, 3069, 4967, 2861, 3084, 4976, 
       2876, 3099, 4983, 2891, 3114, 4988, 2906, 4883, 3129, 2921}], 
      Line3DBox[{2718, 2936, 4895, 2719, 2950, 4906, 2742, 2965, 4916, 2757, 
       2980, 4924, 2772, 2995, 4930, 2787, 3010, 4934, 2802, 3025, 2817, 4840,
        3040, 4944, 2832, 3055, 4957, 2847, 3070, 4968, 2862, 3085, 4977, 
       2877, 3100, 4984, 2892, 3115, 4989, 2907, 3130, 4992, 2922}], 
      Line3DBox[{2720, 2937, 4896, 2722, 2951, 4907, 2743, 2966, 4917, 2758, 
       2981, 4925, 2773, 2996, 4931, 2788, 3011, 4935, 2803, 3026, 4937, 2818,
        3041, 4945, 2833, 3056, 4958, 2848, 3071, 4969, 2863, 3086, 4978, 
       2878, 3101, 4985, 2893, 3116, 4990, 2908, 3131, 4993, 2923}], 
      Line3DBox[{2724, 2939, 4897, 2725, 4788, 2953, 2745, 4792, 2968, 2760, 
       4798, 2983, 2775, 4806, 2998, 2790, 4816, 3013, 2805, 4828, 3028, 2820,
        4842, 3043, 4946, 2835, 3058, 2850, 4853, 3073, 2865, 4858, 3088, 
       2880, 4865, 3103, 2895, 4874, 3118, 2910, 4885, 3133, 2925}], 
      Line3DBox[{2726, 2940, 4898, 2727, 2954, 4908, 2746, 4793, 2969, 2761, 
       4799, 2984, 2776, 4807, 2999, 2791, 4817, 3014, 2806, 4829, 3029, 2821,
        4843, 3044, 4947, 2836, 3059, 4959, 2851, 3074, 2866, 4859, 3089, 
       2881, 4866, 3104, 2896, 4875, 3119, 2911, 4886, 3134, 2926}], 
      Line3DBox[{2728, 2941, 4899, 2729, 2955, 4909, 2747, 2970, 4918, 2762, 
       4800, 2985, 2777, 4808, 3000, 2792, 4818, 3015, 2807, 4830, 3030, 2822,
        4844, 3045, 4948, 2837, 3060, 4960, 2852, 3075, 4970, 2867, 3090, 
       2882, 4867, 3105, 2897, 4876, 3120, 2912, 4887, 3135, 2927}], 
      Line3DBox[{2730, 2942, 4900, 2731, 2956, 4910, 2748, 2971, 4919, 2763, 
       2986, 4926, 2778, 4809, 3001, 2793, 4819, 3016, 2808, 4831, 3031, 2823,
        4845, 3046, 4949, 2838, 3061, 4961, 2853, 3076, 4971, 2868, 3091, 
       4979, 2883, 3106, 2898, 4877, 3121, 2913, 4888, 3136, 2928}], 
      Line3DBox[{2732, 2943, 4901, 2733, 2957, 4911, 2749, 2972, 4920, 2764, 
       2987, 4927, 2779, 3002, 4932, 2794, 4820, 3017, 2809, 4832, 3032, 2824,
        4846, 3047, 4950, 2839, 3062, 4962, 2854, 3077, 4972, 2869, 3092, 
       4980, 2884, 3107, 4986, 2899, 3122, 2914, 4889, 3137, 2929}], 
      Line3DBox[{2734, 3139, 3140, 4994, 2735, 2958, 4912, 2750, 2973, 4921, 
       2765, 2988, 4928, 2780, 3003, 4933, 2795, 3018, 4936, 2810, 4833, 3033,
        2825, 4847, 3048, 4951, 2840, 3063, 4963, 2855, 3078, 4973, 2870, 
       3093, 4981, 2885, 3108, 4987, 2900, 3123, 4991, 2915, 3142, 3143, 
       3144}], Line3DBox[{2916, 3124, 4878, 3141, 2901, 3109, 4868, 2886, 
       3094, 4860, 2871, 3079, 4854, 2856, 3064, 4850, 2841, 3049, 4848, 2826,
        4938, 3034, 4834, 2811, 3019, 4821, 2796, 3004, 4810, 2781, 2989, 
       4801, 2766, 2974, 4794, 2751, 2959, 4789, 2736, 2944, 4786, 2707, 2930,
        3138, 3145}], 
      Line3DBox[{2924, 3132, 4884, 2909, 3117, 4873, 2894, 3102, 4864, 2879, 
       3087, 4857, 2864, 3072, 4852, 2849, 3057, 4849, 2834, 3042, 4841, 2819,
        3027, 4827, 2804, 3012, 4815, 2789, 2997, 4805, 2774, 2982, 4797, 
       2759, 2967, 4791, 2744, 2952, 4787, 2723, 2938, 4785, 2721}], 
      Line3DBox[{3186, 4661, 3180, 3148, 3200}], 
      Line3DBox[{3187, 2363, 3197}], Line3DBox[{3191, 3190}], 
      Line3DBox[{3193, 3192}], Line3DBox[{3194, 3169, 4997, 3240}], 
      Line3DBox[{3204, 3149, 3183, 4626, 3185}], Line3DBox[{3211, 3210}], 
      Line3DBox[{3213, 3212}], Line3DBox[{3216, 3249}], 
      Line3DBox[{3219, 3251}], Line3DBox[{3221, 3220}], 
      Line3DBox[{3257, 3176, 3258}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
aHEKrLtyhXlNPAGuqk2cake6wPnmTYljQhRQ7CrZItD7FUKSazL39HZB4T4G
7nhuCmx51f8e46SEWSdwzsa5YANflwLGyZ5v86kYV7r3z/WoI1xZe116SSBc
HZ3LOotxOMLTIj6EcKhXa+OkjHAoeK9vAeP2sFzTxiGE27G6k0zAuDrOtdSl
wzEvjH7sZMS8oHxt+YBzGzM7WzDGXVEunybCIbH3yTE1jEv+f/FLXE/pqq39
JrnvX3x7/Yv3u//BP0z8y4dzp7iNQjW6QdE1pz29qAV4kxr+BJiQ4PCtuLeY
N2814rMQj+Dsr2JRvB+b2ON7P07WQJ/nzTsKgV0wr2uf88qWDAW97FMJhmXo
PL6VNVd0A6vTyPigDxmG1Ov3W9MKIXaDwR6hNz1wmz2xiS+ADPu6q7yNn+SB
svXHxi9/e+CcgL/jii8ZJDfIkLDu2XDuNr1zzrGgIovxKdY9LvWCYayTQjJ9
txKQTj6OEAtuRToZ/6nlyDqkq94VXZJaSFez/4RxpSBdlR3g0sQ6LNnbJFiL
dHgdWSQ+GOlw56DaB6zbLfKfM7Fuv6hSO8iJdFujcl0+1vlGZ62pWqTzh36p
/gKk84fawv/RSz1DQyGkn0TxZp11F5Ge/o8ee/2j04Skx796rbrvxw27TWNQ
+fGJqAS1Diqy6rLvTo9D3L96f/w/+v9fP9ATFhhkPNMKMtrLFreXusEXoreQ
xEmgxx4XlfG4Do761YqrlfbCz12zm43ekeBCnthl7CfuM2cWkb9ApMGmK3if
Gz476mvdKYI/ufM7rPn7QUe4NYZjnAQhEvlr0gbzwK/KdZL1Zj/czz4Z7oD6
BVmeqwL9yMc1RlPyLpu9Kkj89icU+zivhfEi9v0zT3mbrZDvs0ruGo9Evs+Y
/FIP54Rog7DIGJQThu8cW+hHOSFo5ynmYJQrmO/Pr3uNcoW9ZeJQIsoVnHRm
NJxDPiTfiMc55JpspQEvyiGr4fz19MsV7OemRvfvIH8nproq2rDf6/+bL2a8
5ei2fsmXvPFv/vjzOn7Rq3YcElesJqWR3rZqnN084TgK7ok3J50j+sH4um1K
uWcPfDz4YP96u0nI+TfvmP4n//w3D2ndeO92500deMizG3pJDqJcCLdifKdh
yilJvGO2DAzSb/Lufob0ydF4M+fINESXr1croxSCtYbKuOGrQTgqKL6LiYsE
1ecyRYxGc6H2Z/HtL1aDwBgyNvXiNNq/bfBaEsqlYxl/znUv2BbobO24gHPp
WItjGM6x9vpfztGjHCuWsSSGc2wSwwS/Psq9VTe5jJpR7tXbI3Me514bPrZ+
nJN3Vq9zxTlZmmdzUQrKya+0dFRwrt6Qkt2Kc/WWUE7uBpSrszRc6I1QDs/n
n7XFOVxKzkfkMMrhQ17eSzi3Ty4f3dKFcrs7TULWGuX2/8nLu6W/XIxjLpPM
/DdPi3I9Zi2snoATScVCYuwd0FxrcvfY+mEoHNhbct25H25sDI2c/DAIp1/J
7biYOA7fphhMX021QIN6k/i2HcNQke4gx2gyCZX/5n23/+T///YD0TEhu8R2
lUKLzwHj2ovDsGhnFq1ZOgU39R4Jq74vAA+JrQp4nhM8mjbVPNOgLKXAMrI1
B6wMH9VkDA2Bk3SiX7nONFDGwxNxn6Vcn/9tX8HzgqCwglncZ3nCSvh71JeR
vPQNY1Bf1klJ2YP7skcW1uYqqI+LlVWI4EJ9nFJW0C3cx9k1nLxvgPo+j/m1
w7jvK3fmivNEfd9uOY/buE9MO8hFwX2ij3reqDDqEzkyc7JwXzl9oTAA95U0
umtVLqivXA3n/9P/yTIcaHXzaZB8+W9/OKas/xD3l19u2YTro/df3FV3G/ef
6lfuleB+dP2xe6novVBNTvuNnysrU1wPRxrByMzCVIZ3DHI0L1x0cxyHOyES
jJfSy6Eg44ECT/0oxMfuXr4fOwHu//a7T//T/0LQv/3wa/Gwd0ce5cCM1N6P
59pHYPPeRwr65EmQGJ74NEWXAbVlgyfl9Eagwu7WHg/1KagUtLp0D/kPXL+b
sHjgWQFL7ZYafG+wKaTv2B+JPOj+lPKbbedX4qbu5wv4niFO/ucivpdo/z2k
oKpaT8T6Hd+A7yXWsjCeL02sA53d6c88dHsIyfp95BCkS3bJ/rP43kN097Ij
vvf4IyGUyRsxBkdD+zLxPUm3U4UYvie5R/1bkRbcDqMCqXqk5xOwvvgZOfzT
GHFaYHlX3WgS9P17n7HjMJtOwNM+yQf/3neo/FKpuGY3DE9GvDt7isdBxvy6
5MmwLqC7+oa0JN4MN/ivXxwWnwLtMD/BypdDUPBSL3PvoTKQO6HsZWk6CZZi
z+nlF0YgreGNvO/HPJg63P2d6+EEzJE1H5i5jwG3SEXatFUG0CeNyzZbjgOT
QNp8Yfw4UKX/c9/D85/7n//eB3UIZyQPn/8AJte1nQr/jkLMq8Xve3kmwVTh
3n5X0afSZdoBHOhZ0PzvPZh5SxTX7zXW0lIvVXyfy2YRgzvLp/C9WVPIwVf4
nq2HWmWDc4ib3vNP+J4tb05W4L2tu7TIO6PjDVbtxA8DDUt8L9dJFqbge7yQ
bfbbeAqHiOp7olH4Hq8/6NQjNY330qepD5iGfk8STi6Fky//jICOeoVvgm+6
NP2mThV8TxiwtvjPFqlWmPp3XXdPqQjPZOyQ/nrWuhHf39mTk6HiRZI0WyW9
GL4XeylbOG+wqQGKxnpnTncFSz8PZQr5LoX69h8/CkRXuiB5VvRQUbebtP/j
qFGcP/5+bPlNIN11YcubapB/Ja186qz+/qEpeFwbGnCpeRiYgpL2bWS1kh65
p5gtHzgJwywiXPdtRkGYq8osOsNUms79wNPXDhOgm/jHzSpzDExCW9Txfee/
95/wP/eh9oPiuSUbJ+D4idzgC4fHiesiWy/vvRwGonkNJmL97WCxfkP+9h8k
wlNFiNlFtA3+HCmKyeupgfCFkqbtJyYIf0ffl9Wjo9DPI5G516kIltz/nn1V
N0CcTrCPXnxMgiG5Q2U5BV/gaLixhuxcM9F8iV7Hz4gK1hAe++IMFYpSk7SY
F1qJM3qvW6/VukLSA0smGB8GxkfmX0eTx4nbemeuL6V1wuWiLU8mynrAeKY2
ZI/gMKHCQdBf1R9H5yHoxERuhvJNwdCe2U5sL/0wukmXDIVuzjShnTR452fw
mEuwlhCV/DvHb5MBm89sl2gtJIFjdul63p4BoqSdf2ztqB1YegV3yFiOgabs
g7mpC8NEIscgvaBUP7TXddFIzwchcNNmg4WqLmJn8avXryUmoSWereIvBw20
F3pkCn6XEZN26yYl95bB8um/3/cfocD5IYGVUIluouEly8mTj5+DTFKH32YZ
Eqi9Vr+QmDJIOL8PSf+UnggnXpB0JBKmYJb1R139jiHCq31mZ8OOJqjNY950
Qn0cch6wcoxp9hCyIsZWrbrD4OUvGXj17yCszRvRjnSqJ64/4+04xDANWdGX
bsubUEEswZZvv0MxwZJrpp1v2gRi7+hVLzdR4Igp66e7DB2ErKvM/o28H1fV
5x3sXPcY3UngxjhuPuQ7QBy9ZLzTgKcQxKYqTOP5psFB2zXO2baH6LFYL12R
3wkXW2Xbc2bHoCBK8IDs90bixPOj9mvSxsDiUl7kx12oD4YmYcajhUSSrdeO
ijNd8Lw5krg8QwE6wR0pO/a0EalLwrVea1f3C0NPDsN7qmQQ6ORgu/C5j1g+
1yRsWB8HMckqsZvYyFACMW930vcQZ+pqCusM6uCaxIdHGsVTcN3uvnCrWDOx
7+cPdUriIBy6bxPvxUACbxN1y6Smb8SD7pMKDSWDsHewkvuLDeq7Uxi3j8+3
EPZuJ50fxdTBm8/mXC8YKUDtMjvXWtNN5GZ5B3Ubx626TsKud5ivlwyl7Xcy
a2O6idN/kyW9Q/Ohh79wtOwYGSJc25QmuVuIG6qfGWuNOsBlbcLcI9ZJOH30
1LNNiV+JXb2Db0S6R+Hjqzj1x2h8/ET8EgsaL+N0pMfjtTtymMrRPD/77P7g
eXa84qmsRvNwj1zqx+/lb4z6i987ucmUzwO9d7V1ujy9KYD3JaNmTI/3tWAp
crsf7avfrY4Nn8NcE810DJ3Dp582OYboHPr8wjTwubnlOcQloHP7wH9iEJ/b
w4w1KficN2p5kvA5N1c0ZJPROUufaEjDdRHxOrqI62IQvPy2BtUlZuC2Ea7j
krUNO67jMbk/mg/rVz/PiF+hdRgnVTFsmzFOQkcfvPJBOOFZiDfAuLr30ZNz
HcJVy9Dw/UqEK6a5/iNfEQ6B5fMvjEOHyKplOoTD3AMRERi3Kc8+Cbog3K6j
C1woQ7i1EK8xwjhnvK76GuO8iW/KQp9ndRwWmh18gnn0bsp3HebRXsabcSyI
R2xMiecw78qKvjYJI95lud6JKEC8y6Kb+I55+sg/8tc7xNPHM8I2mKdfGHpu
YF4vbZsqwbyu8BPobEG8PreN9RXWATGBO2NYByRa9Wh1SAf0UmSTsG7kJ+ze
h3UjWWLz7nikG6utk+SXVYt1KSixLTwP6dLgqTsCgHSJTiXFhhJEguV5prvx
b8ohvnIs4L1+PwzKySmRkb4V7CXJ/ET61ilE2oT1rVeBZacs0kMZ14tHppEe
ZlkExwkgPdRmkDbC+qlycqs8D9LPM1ye32dH7IDz9hYuYaS3dNFOQhxIb18e
7jPfg/T21TJj1uUoMkhZWapQ++vgxZFfzH/vd4L1GWmGDUi39emjd3Qg3XYb
bYnBus2/TpRjEul8vsDVdQJI58eO3LFSRTqvz/1NC/tCnI1LJ/aFWJNTEz+R
L/g9esK1iTIBirVKy0wsY0Ssr5YD4+IXuH3FgMkG+cty4nuujchf2ttlUu8i
f6HFvd7GjN4jNH7Tpy2zHQKtFHZj//BQjb37FfmUkpMmuxzyqfYBTmnsUwd/
bTkliHytIYVX/DXyNTMPJXXsa2t7Q+2/IR80rfCW34F8kPlXOKUK+SC1aFLm
EPLN4WrpLuybrKO3A52Qbx575spRhnx2p/C640rIZ+8L0gdzI5/9squSoRb9
vQ7z2HfbTkyAy99W9a9o3mT6xfQNWXXAM8zj84aFDAP1TdY9c91wd6RO36un
SFpxz5fP+VE04jGtgDf8WcmqeLhsFst/b5kG3FXU9mXdooJAGfMvIj/ew6/3
djusVxKkUxgGzHO4ycTuXaceOsT1Q789P6NFRhNofHx5W/bUNHHux8yuAVaU
QzZ6fd2Izvn78dZrG9A5p8TWH9yEzrmsmFffZmM50tG91S7BI0TKVo2aj2mT
cETwx3j/NgcoV1wjpMfUAFvsLz85jXLQsMNUdGnaKzjv6yutztII8Rw0/owl
KugvScc9/TEN/iVRFh9giAguub3H868TyBanCOGfz7QKni/2z24koso2Rwr5
x0K3wZusuDIa6JwKiN01mFDwaaSQTsm+AFpFPW75a02j3Hn9kQL/MNHz8/vx
r77RUDLSNRLvTIHLxpcFkz50Epn73m3aZmwPglOHTa4epEHPrQa6az6VhP7M
4sTTMwXA8+KJUV77JLzRcdusZzJCaD7zcLgeuvrP1y5/dcgrUZmGrTxHHIdp
Q0RKQRykvP4K2tG5R4/dooLeynwZU1sLweB5P9yFSIZ6qfbi8DYqKMSxyfVs
LCWOrAk3li6sWXX+PBfXmGU/CmQwuJ9n1eskDLcw9pcmBEO/33iNodM0ODnk
CvhcHSJ0eezS1TcVw7rtCmFnh0kwd3ql0uXWALF/r9rLcJUgeB1oehb/HCOs
+afV7kcoh7jmt3jzV8Jextz3B15TwSAxaTFhVxPB5DDtd6OjCFJueY3yDVJg
ZCeXNkkW9ekR8xsSpNtga7NOM8NvMmxn2P08i7+H0Pe+cndvugXc6pnljUa6
rT7hQsmdayPidDK1H1zIApMW4/yKARKcXulJ3KE8QMi+m3Pd+jx+1f2+7H1a
PstAhkRLPiH31/3EVpvAi6XkDODJDbhefJAMf5g+nCM5FRDiL5xLr2n1QeS+
0C6t+xSYPVaf9UOwi5jjevZY8P0HMGMQksf3zfaG34hLNq1Esmntps2a5au+
96D5vlNHF8lQ/mFWInVfD1HO7QM7r/hDiFyuaLE8Gd4YfeaVWd9HHJVxgm6E
E3YWwRLJl2QwqFj8fJK7j/hBR/v58q8fzIga/nP/V1HblNNc0U0svQs7+tGw
DJz36t4/pUeB03YX7ujs7CQ073wREhcuAD/OKI8P6L1OpbbBI69bCP4o+ek3
pOZV1ykVEbYkQ0cB2L2iLv6+m/gxQOK0nUkHN6fs62opZFg4YdqpJd1L2Jlc
jykTW91np3/K0suieT5/fsyG5+lUyg16iebJ+cpshdejQCZND6P1jLyV2eGM
1qP+eMcVPL/8H71lPH97qS2pCM1/me7hFN6vs6jdpha03z+lQerxhqvzJcK3
7p9zy6yLTcHnJkBn8scanVtohbkRPh+Bz3tp2uh8nKYttI6j82nOXX8e12W6
fehHCqqLT76H5l5UF8r4x/O4vsMNR3lxfV8e207Piur7zM+YHePkwLjupQmE
k6YiT6brCCezfWKHcB1/clWew3XsD/Pl6kB1XG2d1b2CtRiHwVtURTEO1bdv
yShCOBQt6adgvCmD/3mMty6LJGMRhLfV5okt/CiOeREn0HsB8yLgtZvEQ8SL
aG3hAsyvfdEyh6YQvzqlOa99RPx6E3WnCvPFy+K1B+aLo0TX8y2IL6Ta3OuY
v+mWa5wwfwUu3KzxRPxd7b0l6gKpWAf0ZCZfYx0w+7suOwjpQKmqThrmu5KV
0RbM98CqB9ZaiO9NvSZlWGcU7DZFsiCd2X5pXLQG6QxdXutXrFfmqUaNnUiv
dj8+33oW6RVD/eXgmJ4pEHLm5dMWLAZS4QdbduVh2EIncBqvM0PYbY/l9lKQ
atL1w/eqHxenR7FeWa/t4sF6xWorMKCG9Oqm3skgNR5UX8n8oA/B/cT+hfjr
F59bwRODwnCswwyBjT8fIB2m5m54eA3pcJvJlAbW1U4h1UpGpKs7NhXOeiJd
Xe0ceKkib7DO5/s7bLuCdN7F/tusJaq7Q5/h4UHeEZA4xOfG69QNL/hPWe5d
GoOfqfEPG46TgRL7JONcXBU0sbDX/9TqgaXyRvV1J6ah+nQuzUVymAhU3VOT
ZJAKJkWduxKQv/RSAv4mIn85uFulZhfyl2xtrTjsR3Sq0YzYj9Rfb6/ORH4k
neV9H/vanlj6fl/ka4rrWEVFka/NHw6dTG0Yhnjt8WCVlEHo77WJ/l49AjIb
NbLw/dzonTiDrUtNUPpu3wf8PYzNLQc5zJFvyv5srY5Dvpl7wND0FfJNm9n2
K1fMRyCqddZAJG2SCOFb9+nt94rVcb57bv0n2gDoBJzWf5o9Bs+OadH3Sg+B
2cmdY+aV02CvvGVUaaIfTMwfu9980QhHqAzuiztQfvt1IHieOg7+NwPD2fRG
QUfuSvN+zg8Q1ule2yIbR7DKTISpfKfBiRQLumMod7BbmUhBmHnBsW73bTiX
nA5uZLdF+WH+yZ1zrig/lFzWv4Xzw/57FiE4h0TNtKTjHJLT2mXSj3KIk/zk
x4s/+8H78KNMKycSsfVP1cvO2FKQNuM/8QLlGeE030acZ9iV/nK/RnlGP7Tk
n/fE/Iln02egSN6Svff+KFoHl2zcOx+Uo+R+76nCOUolLPVJKMpR4SZcyeIP
O6D/QWlGVz4JTnIOb7iW1AZy4feKvm8kpL36U14J5NCAqfNiEjFdCDscKYwO
lgUg4KDL+gnh3WFvX4/IliFQXqNYInY7Wvoac/j3JVEq5J4jjCjKbXD83/uV
E/+5b/nv/csV7/LvJl1G0ofP8JB6mScgrcaD94r4OCTdLO+5jOoomH4yEtfR
/Kq2dASqY2HNfWVJZjXpvMfcE8/n66Ajkygw56WBuvNeYYxP9WbN/a4InzWG
ge4pCJ83t9N6cT5hs7V+gPNJWDQbUxLKJwFPdu+CxxOwonnJXPN+KzC95e/r
VRwB27UCf3Y0ToCSwHvN06+64XhUuGJF2SDc4Xweols7Bgdndy2TQ4dBh+lG
ZsaLXrixS1nQMrMDHGySeL8WjUOykufW0ztHoOzZ60SXk8+k/Y8x3XRMjiFu
hZj6zC7RIPJsuHcfqpsQ959jz51I8PtyFZMSqqvM2osxlzeGwGPt7/XmjWPA
1RR30EpvAm46eShcQH+uWfxiEdc9fqjhYA/6+/QxjBFeiiT4aatl7qXYQ/Sb
cf28/aAFjuhvXlMlSAJq9DWW5Y/NRCSrCGif64VG2sPjeFzJf281HrfZKLSs
hca5Q8/n/DPPt/lBPE93BkvZLTTPPdsHB+27hiBFlzWc++cwhFgYXRwLHgbZ
Xs1Gh6heWOY8SjawnCby5YYqN1a1QaA246f3qhSgT9CWzojtIkTfzkHL0AO4
dpLpQF0QFYKfHK747tpMaG3hU5rMTgC3gYq2F69JMHE8ladBfZAoF74sZ77G
BzIY+cPU2qng5azOVbO1nggPdHabl169P+3+zDQV84oCtzY9sfmV3EnYvFDj
nqmKAmH+xugiIEN/qvvwJ5Z+IkUv7dlVQedV53HnFldf6iXDWhcBiVS/HuKV
WOxjXduIVT+/2jhVUljm0GkK3Lg/Zx1d00W8jT2dw+mbDPNxi7ovZ0jgeXjH
6TXGvYRqeYrpjfQq0GH56LNbhgwtgc3E0q8+YqmoYbCiMBIEZRTre9fi70vI
X3b+200E3MnOgm9Oq77Xr/JGa84+KkwUcz4pJrcSqZpVgmOtaWC3mVvgZxDK
/8LPjhtqdhIH7H4qatp6rTrP2H0x9xqRWogS1W96YUoh3l7qEF2T3woNZjVs
G9rG4eTmPar5j8aJGWnNUQNfN7jKFvDpTkgTNNGPujwrpMDTM4dvzms2AHNm
8pn16POVyz1HCtHne64Ymb9Gn19TFfXOqrQNlqUYMus+UwjrA+6N/VUl0LJp
aeCLMhVMxgKSvga0Eq0RDNs17lvBeLrryWq0nnVjMbF4Pes810WuRevZeXj5
3ma7UqjpahsP0yUR3sXbqI0vBmCh0fvYc/IQDJJSWA0oU4RcQGjv6W3lcLpi
tuWlEg2eXRCscbWvJsgmyg0ridGr5zS+8WYjZ/R5jeND490lhNqG1LM6uunw
6NFVydvCqL/e0fLym24bUflcoemrc8Cq8wwdW1QZlZ6GCP/r5/qlhgn+lKEI
36aEVT+/R8quZ7SGCl95DOfZnRsJFReXpaCQLChgSl1YQHUU3p7K9gTV0bNu
s6nK/1LH9N61JQY/KNCWmGywrNdOkLSez5KtY+C8mYNkvf40vPWv4fyYOEQQ
8Ru+sYQXQIvvoaHeBRK0eR/z3LxjgIj5zlc/ftgNWEl8yh8SpuHY47tuLROD
xMQHze2zy6VgUZvYqp9LhZWigO2U+hqCJC+fEmRUDp4823IwDqf+KBwvQThM
nFM0GEY4FNmt27TvLAVE3pNdt37vIuLPxPQ7G7jCxoPMCu/OUKGG5DRxvbKF
MHPvMdrWn7fqvhot11CP95DgidGFJcsnA4RNfCXvg/qoVT+/ofral9NUEigE
Ph9/8Kef2EIOz+MSSoGNUYcPe8ZT4Dbfhf3SXzsIxZz3ibHRKbB8+3ou5p2Z
WeIHzLtE7rKME/8L7468qf9hLEKBl7MNR4lz3QTlpX9w2rdIWL9xvTvm9REf
63rMa0fvnEv1iNfh9jYCmnvIkGzG06XS00fojx2Taq1b/Xt9HXtDNLBu/G5T
/k6HdKMypvW5FtKNl3tCZa8+IkPNgKjOGF0v8clSkC+Dvxja5rdtZQ2jwJ5m
h0CVZ+0Em0TMLSnbYtjRIyOOdelQ6sYWrEvpBepn2JAucZ68QnvSRIa3N/RI
Dxt7CO7Rhwacj9/Aw6vTjdFHKFB60Zaaat9FVHRLKG8RWX2d/io6vHF+ZOAa
7GRsL+oltrKbmYfbra6fPz5P3zjfSgZRCVMzXbceYmbfHtqXviR47Eu7gset
bPk/4HGtN4cD0tH4BsHBxFuxZIiN3FKv6NJLkBM8lKa2vFl1/muRidvxeq52
k7fh9SjeOCQbhNZTKGF2B+s8g4E3A9b559bqcQ+RznPt0OrB+yWZv/HH+91J
ZynIifYbqlq4jM+nJcgjF59Pk9h9Kg86H6hV48PnPMBwlBmfM9/fJSFA5+yZ
VyGP67Il6l0Yrou2o9b9NFQXw6TrHssWZGDZzsLrC31ERthZb7nQN/D+opAw
xkOzg/t3jIc/NVHaTf8LHm47p60zQXgreFHTW4DwxjAUwZuD8Lba52u0RhUw
zm2S1sdKIZxfYKyy+4hwHuNVW4B5cei2ezfmxaG9fjvYES8abnimYN8cyzBN
xb55I2vi0YX/xTfffOBcwXycsiuqwHxc9/lY1F3Ex9j3t+ljkS8b5uTMLSNf
XnPj46cfyJe7BDJvYL6b1wXvxXyn/7avkAfxXUE6nYb1wTFqzV9OpA8H8lu6
fZA+3Gs/1I115lyeyK9ppDNP3ma1hyCd2XQxWxfrEvctDk+sSwfvCh2YQbp0
QsnhF9axEoMnh7GOCVwFog/pmLT6Dk2se9m/h9Zg3bv/VEJ5U/jq/W/89OkJ
rJ86X8xDl5B+nlvo2/kd6edqnzdmaE/GueX+gk5nJcotiayzVj9Rbrmb7/gL
6/m3i7JFW5Ce188JK79Fej7hepLBBuWfirSO+nqUf9h5D5Qbofyz2vyd96pd
sI9sXkNb7kM+sqeXP8oD+UjNRK4mzlfXIz2ezaB89WJhMoKC8pUQ1cEW+5QX
P+eGPORTr84n7S9CPlXBNW9w2W8aSukDVa40DaEcopHhdjlo1fcOrz/CTgkg
wa9Uu+gXpwaJ/tNq/p6pj2HXWfNIR5QDpZyC1zxCOZDnJ/fVDSgHzg2/L8X+
u9mkqOEh8t+tM9PSJ5H/Rusr72dBfj3N2H42HPm1e11KQAPyaw65HaGlMhNQ
oJBwvWhmjLjG+bdnC1scHC4/kJiN8kAQO4k+C+UBxhcOl01RHjh8G0StUX74
kODugvPDwVvZ7L0oP6gOaltr5lOAjbd5VDe9DVwDyPcUMovBwERR5tnQGLiL
cm9dYsf9hcu6xthv4MKYLZOlnSPN8SZ6qYaPRkQbXzuxf6AOMtMOVR1o64O/
cs8VA4+RiVzjBc1+pwyQolv6VfqTCgmpusFanI3ENqYOubcs/kC5UOqhEU0B
/gCPA/IHOomkq05q64gnMOsgYBG3gvo/y8SbqpxNBc8o3g0PI/xWPecnZ5XZ
cV38pObrcV2utLJL+P0vdck+esCXK4IKlR5v8518mgkFdRr1XmYoDJA8GU32
kqAv4P7JiBlUr2csL3qt/aDioEOfTSsFzm9XYNiyt4NwfekezHTTF6q/H/fY
+ZAKRZx3pcJaWwhDTYaxdeTV/TQwM67GR2oa7NZ1CpzePUy8yZJoL6vIhOnY
X8ZH1Ckw4+yjuOTVRXwuY1YOMLP5P+fn++8CbWQtqLAmJ1zClaGFiDDbTT9n
kAEXTZcvr0H8qrL8bshn2UBk/3z79nNX7ur+8rRa6RU7FaLenPS5FNFGhHzu
8otl+wSR22Fhsz4FFLVCaGeluwiO0eFDWa7ucMRTqF34CwUCTA8E3P/YQYzs
ljIlk6PBd/T1/kR+MtxxfMrq5dpPrBBBgyxGLvCj9Q6H3k4KsG+IZTzn0E0c
bNQpd+51hqtirLnW9ykgs4Y0YSDfRTCct3l9g271OipVX0+uGkV+vb2vt+hp
O7EoJi4j/ykVVPVd+Qe3kGHbJFOOUmI/8T3bqfz+93f/5/NcbbzIv5Gr5BAZ
HFRyWRrZ+omynVxEE9vnVT//QYkx+f0tMjRQPu5VD+wj1vL06J567A9J9/Nn
k49RwCS7V4y0tpsQzhrcZT8RBzftU7YfnyLDeGJ32qRhD1GxYTORNfMGYq9z
VuuifFWn+vGq1o9uIr/kezz1++o5oaZdVSInlwwBbhIHWw72ErQbh09r7XkD
91YiI2y7yOBqd2b/y8Qe4kC9dvA4bXV+tTf/UqFjpMDh76d/7kjrJmwlffe8
YEsGxSKqCncOGUiLL9fCgV6iM8nJ56vG/73vW238WLq5Fn7vyT/70/F7z52I
cHnJtvp93ZSIbwLel4bdviU7tK+APw8CSWhfk9LeOemeZBh+ey8/cLiXcP8R
9zL/5BvY5U2+1G5CgXsqi10/L3cSvHeOfiyLyIEv4tyd+JzHHC6y4nPOTWBf
mUPnzCd0SgTXZb9sjRGuC3Mp47N8VBehS/13sthQ7grqDFa61kdYyb9+IvSi
GERKH2hqa5PBsu7zzPX3fYSGL+3Yt1NOEBc7nIbx4FShsxXjwTRwzeVjCA+r
7esq4bYD4y2YK5Md4+39AR7ZOoQ3YdWqZu1rFLBX2126zhX1BV5Dey6Q/t/h
fGe3XjnmV6EIyynMr2rDB/WKiF+rff7FjyftmL93ChtvYf5eHT6ufQvx92PZ
ghTWgVNldlWeSAf6p9z01yMd4DFjT2dzpsIRnqHDtz83EWcT6Zll2/MhZveZ
eawn+lFm5HtIT2IGbyrOID3Jjl7ewYL05zZzjQzWnx9smrMFSH9WW89duP4D
6+2zAd7FU0hvqUeLO4uR3r40TuNpkES5aEOYrHVZKzH5NXUzc0wcsM4oGmCd
TJW8ycODdHJ+V+DxdKyTLkuJ2+dJYHPXukB/zwAReVWV9TDvi/9n5/y71awE
+0i3yIaeUOQjM+23n25EPhKbcEIR+9GtpMy2cORH788cONxuvTpPz7y5evMC
bQBapTQs1ztME1QV15Zi+Ub46u2jE/djCl5s4t3NlT1M8IXLjhfOeIM6p/Dt
txXTUJbW5yviOETMcjf7kL0s4Ixi+iKFrwnMEtRanwxSiPAqzbbil/Wgv3l4
pSZqGJxp9otXBqaIa4vWD4Y5voAou4oZ9utpi95bQq9+S/7i67pqg/w6Ml5b
NhvlhKuzXHtrUU7Yc/jzU2GUEwQ7Az+IoZwgWH7WLwDlhFSvcr0ulBNu19j2
bBBplP4Q/0wviEwD45gzfxgj0kBdjJYqd7QbPANq4n4HkGFD8bTdy6YKiNtj
9VgJ7ddn76Az3q9wq790KdpvrU+1mmnXNLQxyPOY3Bwi9svapl9Kj4Mvi/r+
3ZpN0rVf29kip2jEtl33TslMpUPHPu2CEpSjtI4ePVGMchRNw9tsG8pRW3uX
kmPRud23HmPnRue29freukZ0bs7MJuaTszRw8BrfsC00u0ChrfDueVoS2A7e
VhJ9YAbP+2JC0jc2QK8LtV1nEw1qKU/FODIm4Ej8jntyd8aIzmPVWnZB6av3
KS2ss/UIn0fDDM6/QPhc+HBOjxHh08w37laHIgkWLlrcE0odJHgUonYnOcaA
o3FF9OFzJFBsmduWGjRIuH4938hxLw0Wm3ri3UJI8E79l4nGrkFCMDL8D3d7
Ajib9kVg3t2TusN7B/FucE7DThrxbn5Nqr6AEQkoJXS6n/YMEpVtJ/crNKye
E9YWNn3D+sPs7HRkPdKfNA81TTmkPzHfQ65g3VNQJrGpI91j0C+cLUG61yvb
qoV1sveQ60OskwZhzqL7kE6qaa2N10N9X+hVy+OfjvYRT9k28NBrJQMjb8va
hldkWIn/Kt7+o5fIOFKarX03DlbqE85i3RZQ01VaRLrN4z1OFCPdtijSF9dJ
I0NdFCvVIq2HmKt4sTb5T/aq648KfHwe+9fHajsB7F8lUp66Gf+Lf92iP0//
Gfn17gsOHdPIr8Vuy69xRH69Ns/xA17/i3RWJbz+3va5zBXNZJAIjVB7kEaB
bTYhky10HUT51t+f8jS/rjo/A6lNda//BCRbNsS9lymAt+8ieE6qjEG7XF7e
3YpJeBJyIprkWAiKev4Rmc0joKBEL4JzjpBcWAjOOeZ1TjtvoZyzZuagKM5X
DinlIYooX6U7VhzxQflKTZf1Ec51zy7fKVVGuU78ZMmjjyjXbbW59wXjR1Sx
bA3Gz5xcouwWhB+jJsswnCfLZdeedUF50sNK+e8CypP7Ns5E4bw67E/cX0R5
NfBb5oMYlFfTngu8xLzb+u3cgDHinU3YyDklxLvy/Qoctig/q302mWZF+dn2
TUUFC8rPpwsSm/kap4AUuELftNIDz7dV5VUZd0F/Xu4c55cRkFK0YW1dGIaK
22XP48MG4emb5qddGwPAm/dEkHeyP7F+1p86/ZsGb9U20I2rjMIZowj5yTeT
xKs/H+Ofu3+F1GGVx5inRiY2aS6jI5K/zZ2eXUU81Xi061c/0gGa9jwv1oGj
YRa8kkgHYmOvV97IHwHX5DgDc+4JyHSG7FTeVriwX3PNkfYM6UnpLpv8RzRI
o6vfE3e1EtL+vZet+s897X/vbSOTsuZC5HrgEvOiFFPIBBGjqPloT8Ug+Amx
MVVu/QY09a6siYVO4l7/eV8NGQqwXpA80KDSDPU8i5kGZ4eIQq+tuoaaU9BW
pEsU6Q/CPI8jkfJ3lDBKi3z0LXsIYqg3NPD31pU75kxkeMeISNmdXfojjcA4
5O9zcWMHNDLu02+07SMoxsH9D+enoClpot5m2zDcCbrM/NdqmFCmSFS+6hqG
R3Tu/Kd4R+Ajl/zx4YkBYs+E70YrnlHIT3m3dPv7BNh67/EIKR8iajI208Wc
6IC+uh9f3saMwLErXyLx9xMsHkx+SDAcA8Z47hL2ihGIEGXOa3FqI7gXmesa
vo1DHv9ZMfzvSP54L+SUe/YQtwm7FvzvTBb/KNnw60+Cj2VWsUxbO1FjGj/9
XH4IymTL11J2ToNZtnTEgcddBFf9pYefW7vhHFthTOm6SXAu7VdtjWgiLC7s
d2s8MQIcMQW3OJvIMHRtQTP4di2x9J4wjpvpAP7on213Y6dg9vNJ14sSecQD
i48/6tuHYSrE9QUeP/bwYf85NN5tR3NoQOMLwb2NOhHIB79l93gcqyaUj12+
WOEwCKMBY4/428mwtlugeyfKIfp89IcWf9VC83yex4OzZMglPbO6YNxGHPLg
rVrY0gbAs29R5joJdopPfprX7SAuWLFaVyd3wPfA7nm8/suCd/na0Pobp8bm
GtD6FYa1SvA5lInvspJF5xDUCRfwOSgW9Q2nBozAxNugRCvhRiLj59Cw2+8J
2Pi99PZpdhLMDUkwXn7QTwTs17E3YGyAVDHaY3zOdRJuVyrQOdsxpb5xQuec
JmDox6o2CXf6/TjCywcIDvuPV/0auuGW6T7WMFTHv3f69fD3Ll58t+fGdVRz
//n0Hzz42s1gPMT+4TG2RHhIX+Kyc17fDekBInn8ep2Ese46q2u+02Dls0QW
1pyAYan+qXe2I4SCu6uo31gLlMceFLBFeOtYo6GL8eY5SyeA8XZ1QkGdUYEG
UnTT7mOHayTP/OcJO99qv6K60MDFbSTzxo5CQsy8xuvSqXyINpXjLEb4L2Ct
Y0lF+A/pZy3IQ/gfJud9wnwRGdss9gjxhaxuvfgY8SWAXW5/ivoY5LTtFOkt
Hifcsrao+z6thYtFCZGhiI+s5z+5YT4KPDX7uhvxcV2lRjT+PtiZJO2644ut
kqwiv2RU7AugefcFYXslGsQlcd91sK8m3vrJH1j3KRou7yiUZaKFSeu/W39c
5OEYsX2R9TZb1QRIV5aqMKJxrR7vr/vQuMQWsXo8fnxBG7ZKEMD/8PLzp7KT
hO2xq8r09qOg6XEyPVgqB2yOTlHz3o4SpMcSN5IuTsJ86vOWigMd0CvsmGtO
miRYtDZXrX0wCEWt7zo+o33dqHGVw/t6lPJuxB/t65zUmeccJl0QdfEbpenp
CBE/s4eL8e8YOFYK2eBzjs29bDhJfVdAY/rRPIzOWVa+X4lRjwbve3M5mPTz
CBbq9ufgWQoB70OycB1/BI204zpSrnda+6M6rjtwr88J1f3m2bwePlT39TlJ
zbjupIcnnvGwD4KV2boZ1se9BKervlhJwQQc69lzE+PN/zstMgzhrYzVN84f
4c2upU4J41ZNmKVUBeHWJX9P7mOE26lzk0rPZ6ZBPvuezcu0AaL6QvvdDMsa
eCdO7bNlmYaBXoOozw/6CB0XM55L2e1gLujmgHkxusGt0xLxgq6dTc0d8aJt
Wa5xet84mJ3dz3wovoWg6f8oLxsZhZvDv3PJG6lwUqJh0reznrhk2py5xbYB
bj14IFz1gwIsjsUHBYWbiaYjbxYVkqsh0Sa3GfN3PkmUC/PXsbM4twbxd0hE
VxfrwBjfFm2sA50t4leXkQ6oeE+u784iw4+xqW3t6l1Evs3aw4sbq2DT8nsT
rA/bHIW6lZA+ZJn10i0ifdDuXnDFOlOz5CLsjnRGsaZ5EuvMkHvi1SPzoxCf
0WNlJe1a4Hkmxe6t2CQsKc5swvMX/Kyxx/MbGF44tIDmf9v7UALrHuMe77hA
pHv2mrIZH5DuvfjlmIr3K5hRJ+aD9ntFOXwdJ9pvc1eHIN4vH8Neo71ov5pb
f/OdR/tVbbQ6ivVWN+3uYVGkt1/UYGcy0lv72qVbuC7Njn8ScV0UB/eeTUN1
OXWTzM+BdJ6z8oZ7K9J5Zc2Bi1jnbw/biN1BfkGh3s3AfqEhVJMcjfyiIcKN
/2XDGPjALVH+Q0NEvN8nB7rGARi+tXQe47Cdjn/fGoRDyvaXfTIIh2rnFIWU
kX8xctFdaUL+xdku9QL7l03Gh2Dsd44URSPsd2VJPt56yO/4iktUK8pG4OWR
jDMy3mOEh/wDyYaZLrAMrNP87TQKQR5WRimJE8S3isjzU5zVYNN15Bf+ueSZ
jzY/h7pLiF47saN3ddPBcWpXK/blD+/2ek0iXxb9wnkH+7KL/lsew5xmWPK9
eFaHYZxYkCj7ZnoW/38yzywrEU9VD2zdYIF4mnA5lRvztJr03DoE8Vptqtjw
G+J1DmhPf0K8Fq021AtFfdaOF182H0B91tfp2HtrvS3A9Wvk4i+0Tue0lEC8
zk9tLB0ktE5Tz3Cth7en4Ep4GHsj4jXXwb2niz7EATtvvwnWyeTj3PnaSCez
z7XzKyGdPLFfU33dehrobWiLe/u6nthynV/1gHoyhKcEs/gIT8LXtxdPiWeO
Elvj7yRS3+YB2W3L859XpqBqzV8ueZsR4p0cofP7TTJsDWGWCj9AA6EFCUMe
8WqikWZ9UTwlB560Jl2WYZ2CfN7oak7aMFHQL8aZbl8JfBku8+PxU+C+bXYi
PmGYuBWXunmluhDORX2Oz2idhjO5kmfszg0RZ/pTDqc3piMdP5StFU8Csdbk
F4FbB4nS3KnXNzhDoDa08E3B0jRMhQWxD3UMEs37LnQqG34DqlV6lWUoCdp6
rsoMCw8SF266Bhr9iIYAZ8VXU01TcDyeJfPD7UEir9D47ZvRZrit/rrni9I0
mK+wH3tdNEgkZA1rnxirhcMNmuclJEhArTIVqeIaJJTjXHlN+0oADtwdeXiA
CvffqZlnDDUT4j8Wx4bRuEu8zubIOQocY9s5PuzYRkQyxpwee5gLD93yG7mz
SPBqol47ImSA+Fq5wmyenwkXxxh9v3wiQdb2Ot+QjH5C5FCX1S/mErgQ78E9
Wk8CjtzjK7vpB4ikS+4ZM9Ffwd6zUh73BQrzmsatqC/I26admIP6gh8uXdEn
jCkwucWpor6pkzCUqW/V0/8MKq8NtUVSKfCw0bHeQr2DOP8xQlT6aibopw43
NhiSoYxksn57SS9xasprd6R8Dhj9ujdu/pgMKhu2hW272Uf8/fQ29/lcBLyj
99986BsZOE5RUnandxPwJCeTZbYIesOusiwzUUD+6Qr3QZ0uYoNgWG0AGj/N
93NAY5YMvkZxG3gju4mxLc8aUueywdfHNzCynAxqyiPb9EJ6iBWKiajzSDq8
Zb/AjudJ4yZli6J5rjtveBOE5pEtUZ/A8/Be31DEg+a5xMERlYHmGbbVEsP9
2sGsCsFnqF9jYXA7moj6tYmzK+lhUWTo/kYWfHSrlzikbHMqcz4JEpVVvPF7
l5kvqeD3Hld0/uyI3su22YwZ70vtpv0K3pfXSa4VZvResGZag/vHUw/a5HH/
yGA8vHQD9Y8+p9Mn8Pn0XTANx+cz/6Tq6VN0Pg47wsJwHX97JabjOp5hOJOy
hOropNm3E9fxXNoLxj2ojta8qQUUVEfdxDvGuC4H9GXP47psMLIYOYvqIst5
moJxxXdEJDMd4UqIR6FpFOGqPlN/J8bVYYYN8hhXw6ekb00iXBlOW1jgvjst
8+8t3Hdz87Fsk0V9t9/M94P33pNAPHJ89O6aQYJpqYcnXz0V1r2z7cE49BhS
vYZx2HJup44pwiH/5Rs3MM61P42LY5zXBZnKGaP33lQeicV8MeSbasN82ZLw
QNcR8WVl4sBPzBfR8kwFzJd4+/dCxxFfFL50f8X3BqNS5TfwvUFt94cvHO0J
oCdlP4j5qKpuw4/5eFsmZvAR4uPC1Tv+j0lkOFftalL6IE9S4Z9nDxiynhBc
/3wKXlmUsHqWDRH143UJQ3X1kL3Ura/xcwpcf70PUWsfIniMSw89f1EO8uoj
tv/cb9zkPI7vN5SKduxKcIwBid7oS82lJCAevDw/Xj1ABPcqc/4J9wCBoagW
rCe8+dsvYT1xGfh28SrSk7/it7Wwjgk72GpuQzoWQ724VQLpWLw/GA+ET0Im
Z+3hq+MjxKLFLu8j3cVQ5Pskx9xgCkRadorqnhohosmjVSke2bDx7N3LTm9Q
H2GnJO2yNExsL9Ni43r4Den1b02sq46cIfNHkK4Krf3eN410dcen71VYV0d+
5n+RQ7o6fW6j+wLS1ftmz53/0ecLgoLBSJ+pH/w+HEH6HFt1agD/HOraWlqy
o08zMVRqJ/okMxT2taXcGcmlgkAwo9vGqlIoDnp6j4+xDtzjVhYNEsiQNDAr
oLm5FTbuWtmy+yR6PpKOxfdLXMcaybJ3xogTj6HJOigdrjedvlboOQWxEs/G
PaRGiNaj1X8u9YbDl/V7C7G//LHjD2hA/iJ+snIkD/nL+c8aAfIbxmG4zGTz
rcZxosM37+L6mULYfNKd9UY0BZ6tj/4oc6CTeLi2gUmQeAJGzo4f+gUmITxw
o39i2BDoZLxla5psh+jfiX03PlGhgG5OR2yiBnrCuY+X+FXAvVktVbu6STA3
dLFhyxkGOfrLw5v86+HQWHDtSFUJ9DZtpq//TAEHjlf1FqVtwFVgvB+v5/bg
bU28nmm1bgcmtJ43KjFv5y5dk376IojjiEM9iCefn+rgoAGDzOIpXF8+saZr
uL6BF8NDjqL6Hh/0K8V+VKirsgP7kfIDw6cpyI+OhS5ZYV+77stWhH1td3nk
eArytZq8HN4J5Gtrj9TUYl+7/cVK/DfyNcUH8W/nI8ylPQXnuzPn/YgE3m67
kBUarNs5W6X33QVemiXwVp8cB5N7rg/K100ALzc5lzfHFPRuNKbZ+TXAoV0F
2xrW0iD0qkwjgeoilNDp44nq0pGmYK+B6sK94yAP/vfiuu+oZ+X0RogQP3v6
aboM0PaJ3I1xmCmVp4dxOFYfFLQd4ZC4su41xm3Yia/3MG6fXPHkz0C4XbiS
sB/zpWbEqhDzRSHPdWZ9hAeM7buxBvORfHJxLebjGPFyaQTx0XtwvRLmI630
QTjm47on2adeID6+dVjYifXHZZ3YD6w/tqLCTgTSH2nVG9lYn08K+a/F+ny7
wTggB+mz7g3rf/yIPV1KDPtRgeG9S2HIj+h0hTKxr9HHM2lhX3u9NcbiMfK1
HHv+t9j3R5OKGLHvWw/9jVBCvn/aa3c5/v/bjhj1bfYhigg1Nx1p7sRs4Dnb
Y1X2kwp/WXZWqXM2EluL7bxiWfzhbOa38XUZ49Aqu9ua6/sg+OSmq1RX9EE1
R1Iyvof+U/BComHgaQFP79l/7qk3vVip+f/Ye/NoKt+3718hmRpQhqgMiZRE
lCFHilSKDBUSkYokEiGZp8hMlAwRkshMxtOQMTLPe5tne5uSKfFc1+f+fO61
vs/69ax1/9b9rN/3eX71j9Wrq+3c53Wcx/F+n+e+jv1IrwuW+b4legxi8TJD
63Bbqg8en8m/5yPZBfc8OH1PHsH0iODZ8BTMvxTKWNuPX+2Dg9ccLw5ITsAe
af2J3M4OOAUb194NP5DNVNFhdGsbhUDXmDlpk1EofdcbbILpxgd7djbqYLrx
rvu0sgWmGzsC+02NDleDylENTZ94Ivpk8IlWBcvjGu+UqXAd68SXtAvXsXkG
FO8bMR175pX/MYsIIvjs4mwLaetH6UJHQvyx39PAVtjugOnq9wJLY1yYrh5g
u03YhOnqCX0ho5QDHTD27dLe+MBa9JPB4mXRLjIsWB9mq/zSA/LWSp7Sqi3o
6+W4VulDU3BsTEyVuawfWOy11TkEOlDsVhDl/DQOGS8Pu5Zrj4LG129irYRO
lEnB3uMsNQSle3M6hKAffujefr+nPBNZq8LCKaspOHpJu6F79xBIinOarz+s
QCpkt6tMeycg2XNo9+UPI5C8GaY3adUh7/zYmdtPRuFOtLBfoN4wZDzxXFT4
kIMEtNJj7ruOw/uoxB/mamMgF3tljnm+CpHuzbEg5hGIv+0gffjpBORmFxZ8
GPiGxCX860pLB6Dpiaa0ttMUJI41Gk0wVaDM9wdynFd7gcPy08TetgHQikxY
fTOfDZS6TjzFppMwaBo8JoL5rNrNjj3hwp9lqv/6OQ677UVvMBqOgec3g7PO
DR+QyJW1c7uqRkD1lcQCPk4/i4kDF7BxhsRyyeHjTDwvsEGjNArW6FzmW/7P
yHs2LZZUOgqPxOn24n1dPJinLZPLW9GuLflFTgf6oIdBRWAK86emAT0duD9N
142XxP1pvhyZ2gHzuTGc7QypmM+98Ci6Qwnzud8pTLhbTo0CE8WoP7mMiKSU
JSLGXgxAiaLRN9x3u1oK1uzAfLdzAEovw3y3rOpKwCr1CGw1v3xtj8EQMrr5
XI81nwCHX11jZzHvAuUfVdrNWJ7ncjP23LIxAurvcpw8qwdgz6UneUVdY2jW
y3RaLagD9uRRX9ktgSDRZ+s0vl9x+m1WwWanYWAa5xbArw8vO/MWv75/uEhP
A7t+0PVTio/dDNwpaU5ZDyhC1DePNii7lwL/+erz+HiOh+7ixsdzq9uhjA0b
T7K0Unsz9r6oYy9OkbD3VfhWRm4ce183TpL68b4yaL86+ojN27KK+2YXbN5G
DcRf4/NsXF2nGYnNc6/OVxYyNs90H742v4oZB56Lk7YlO8uRy27VLAHiEFhz
7SjH7+PbS4uSz7H7mH77cAMLdh+ZF98vaWFxEiPOETqGxUn69qEfLlicHLLI
VnuExVsx27voXVi8KZ029S/G4k3X19YTj7dPsxI6H7F4q9h5ThSPN7Pgg2KH
sfg/ZpX7dC8W//sSN+Xg8b+QxnGsB4t/LQ9PWgqzCrT5keGPnVj8e1N3WuHx
Hx14LoQSi39DvyoLPP7nbXlb8fX1ZsB0Bl9f+wzVTuPri+4yzRK+ft/p3g1P
wNbvpr1qt/H1O+PkWIyv39ttkjoy2Pplkjvvhq9fxXcZH/H1u8VVUWgPtn4H
lPnL9mDrN3fTcA+eNzaon8u9xPLG00VqRjxvIEvHvcZY/qkT1VTwxfKPIkoo
Ucbyz8SrX0l4vjUw87UNwfKtv8t5GmYs38YJpEpk0E2B/K3c+cNd6aCglbKQ
utgPjzJndfA6xW2stHQGq1M7Z6IGR7E6dcDx6vb+lil4+rH7dZNIN5y5o+VX
mtIEAh8vq3qm1sAai52lwxAZWHk4lxcnmiG9PJa39OQk1GrfMWg9NoikxO7U
CPpmwG5R8s0XT7B6F1JUmbxnCAVZcupfmM2Dhv1pyeonB2DqslzC0PlROBfN
Vnfndi/sjTA+U2s5DBpuRkFqXsPAKmAwrMLVA2So+cS1NgIKge7fsqZGUHR4
NVsudQMEHeWqjtw2BrYqxKONLiNo1eLmi4SqCvD233gxLT8OJgF6okJuw2hh
eaOOY0sxeI05LMbqYjqKv5BXX20I3RHePbMhkw0rVms8j5dG4WdAQuEt5WE0
NLfISaHdDHYiNMnBDWNgSdlgknd2GCWl+m2KkP0K96Q0D5HzxuG4fiBbbvIQ
qjPco9h5/AtQBUxSPaHpgTY/mhLL7jb047KecUAvVn96t1aH6g6BZdIoQ0Z/
Lcr43BvcHTgOhrv2GcTnjIHzOOvTmE/1yOGmoijXoWHw/kwXKY3FmxnlIAsd
fyLioOZtsXHGdIj33JHX2HpRayOeKMPWi+lpLwF8vej5HVJh7RqFcmGh+trt
ZWjsxPDqyNwIyIl0+3+8PggsNKdu7hHNRrp2t6Qu7J6E03q1LL29w3A8vn2P
B20p4tXcc/rewBi8Suf9zvxqFOR4TU7c4RtFmgFuD5BiOVAa3dCX3zsMl881
OV6eGUUO9idfyF1pgS26IZ+SU0aA109Dr/PqKHIjFvD65NRD9R3PbZussPty
80zJ8eFhpGizUCVhVg2D3yIOx3qOQBqrYAL78jCaXeX3slptAzeXaCqdklEY
lyckm2YPo5/7zYqpIppAm4j8+WJqgKysblLvW4luzWxqk+mYBiEX31KRziYw
2NVteMarGu29fTSgiXManrfleBJs2uH1Yu3ygEwD2qpjNnaOTAILudRtZ3d1
Av/XLweaaNNRIsurefkgMvhp2WZ/O0sAmdcj+87pZaDuwDBGuSgSPJ/xZ2n3
6Icwfl9y1EQR2l7GFXnxwBQ03PX3db9BBJUhotTX9gxQ9ZS9fOEaCUwuPlfi
OtsPFNX3jYbVs8Bn5ZmK3CPM51AxW5p5DcK2lgzbc6IJUHQ+hJGDYRJWP/iS
S7B1PDKiFtjVPILWzfheFLh8gQDZRdfQd2PAd1CyxjxkGBm3KJSON9UAHGYw
L9o/+fdPzO//x88//A//w//wP/wP/8P/8D/8D//D//A//A//w//wP/wP/8P/
8D/8D//D/x/4757f+R0/PzEiONMxBYbs76leefWhE+y8n6e6XYA8VGCD983r
mP66b8fdTiSy7cxYYWIYHC/IQHifTNbDFjV4n0wNa1FhjgwryG09TnH3Agle
L+yei54gojXi0bdx1t5Ab7l0EO9z6MXo4Ib3nzzH7K7FfiUY+jnzNF9kkyBV
Ld/LVp6ASvf3iit1WsDPy4VXcU79SCQU58W9dSZnMb5F2WDbWCYJZPRsDa+d
JyCaDOmnh4a9wTpahHU8nwQqFt1mw4cJiMJJzuU+tQdYkIO/4P0YS+XN0vB+
jMXTp7mtNoJgk5/r5xRrEnxVUDjmJUVEGU8ffrj67DHUmGSV4byONE6L89rC
fJvLGP+s51ftxUwGF6FNOQy53aiy30PPVPk5HA5lqMP7EDJ0HTqA9yEkUe77
6accCrw8bvl437+LB2d34n3/Lo59jABbm/+25zHlFc5GDvaSYJY/t84ovAcR
Ajhzfm3VhJ4TvC9w3n45lM0Y47Rpr03nMD42+t1ANYsEK5liZ5svENADsR0L
YzrqUJyidhPnH6aYtHFu8fxiVx/Gd3D0yO1IIMEn0k5vSWcCOpH/pqTtpgfc
1t/JlfKSBPr3XWiGvhDQvjD1R+qDauAw1/EX36xvQYXzh4d2vFPCuIeCSqq5
OQlyF/sc6a4TUbVl8HnpxasQ83rhM85Tyc7aOD+3R8xPBOP+cnmfRjlJMLjM
sWYc1Iv0a6+UeVDq/3YeBGvbietlU0ARmgR3W/tQbULXJfMbt397/e1D15kb
G0nA13w6kbqtBw1Gz7ZdzJOGA0EMeqvvSUCplLyRa0dA7WezOuVeLsrW9ry/
a4LdxzZTHi6ekF4UcaXdnNbJD+K2n2kaiSYBv4LOnQMRBFTozbix/DhaNj7p
/kzHDRLkvSli5k0gIgUuhUX/Z2bQzfdU8X43CbQfx4F/cg+SWbzKW3rpCbAb
JA1eaCXBqcsndktU9iB2of2axcMWMCVWd90GG899yU1c5fYEdGw8dtNR3n3w
LtaB1buHBFvOVZ7/8r4HkV7ukzWWtYGdSyxfDa1IINamOJ0jh8XzQfIMwwUP
WM7fxnM4hAQn3sm9EqwkIOcpJNTzLABS+CynE6NIYDjnxsgeQ0B3M0Ury++P
ySoISz7xfkWCxRsbvNfysPXVZeXFGGkMSfSsyZrhJNDZ3G8Rl05AUXtZt7b/
sIEEhu7MljASvNi1k0RfSEB7YF7BasQcwpdOqTtFksBUOMwzP56AtkRrPWMr
4YZHW8+5Xw7F4qrTh9a6lIDeC93LYU+wB+3La/T7KcigUH/gmx5tD2p3hOgb
9n4wsP9uUfBbLN4qj4uYviYgWwbNCaOEetnbuf3AVk+C6KBmriPDPaiXB048
fPQAjh9sETqoSgIBi8ql1G9ElIo6nimKWsHIdQ4ZnKdRPMnHeQYF9XlpjC9T
qceyY3FLpdshIVZFQO63Hp39xbEbTj3U3oNfv9uFUyINu75G5KjsZez6H+xf
hd8rk2GZUcO2Oq0LpYXIrDlGuIA5B72PpR8JXm41Pew9QEAdd4gizylYIDB+
rUxaiAzCj4PE2VS70afU0qxnV62BNvaaUwN2fy0iv7oYPiOghYWMTcNPJ2V/
F7fi72VE8f4kGXTHim6xNKJxhuF3Xtt+/zy+lxaBBe9bovZB1OacUCf6mMsW
NFRsCkfzdgvjfSOL6jfXffLtKzaPfxi9/Xvs7/tCUNB8wftX52z7poD3r/7Z
d53gtfH7flnXn36Nx/tRC7ofuJKC9wsd2ODbbuYE2ZOn5fDnMdWzuPau+nWh
3vZ9g+4Wz0BMUrbv8QwJGKz1XZM0elBxZ+ipQCdtSGzQrcG588Wd/TgP5bcM
c8Z455kTK89npyBpdCXE41gf6trMt9hw0QNumaO3eB7+9fhVDp6HfdXRajiW
h3fSzhXgdYq691kXXqfyF+W88DrVqz/ULIata58hFW+P4F60Ix2U6boCwU3q
q7rfGAlKaqVOh1j1oGuuxjDoawn6R2TP4HzR2s8b50dSNdi7MM75IcSHVIjl
Ddu06Gp+AqKPuv6wjEoDIu+99MB5f6rYZ5zbOvbH5mF89uQzCVsiCeS5z514
F92DItQt2nIO2kLoQt+1kDskuB2el7ZsT0QJxSUPng94wysD+KufcHYi81/9
hLfM1IrgfZjtvCfbM3xIEDYwxnJllIBQJYeK+j0P2Dz+crNxLgl8d8k+ipLB
4vnqrFSJvQ1UnsmPky4gQZeaoesMVh85+E1UL1g/hakO77/qLxc88cbr7IUd
SxJ4/RWMclLDeR272juc+9166IjX37U79/ycsbyxNnxC5kc4AYVtHRLK+RAM
abxhp7yxeuEUbPJ0L1YvzNiqXw5kW0CjTZQUzsNbUjxwnhCuttyF8bDa1yoK
WH4IXghVfJuA1SP3LUKj2WpwdvbmFZxLXveRxzmNpYtvL8Z9O6lJnFhe0kk9
wMSeT0Cu9wWizRicIMNY8qN/HTYeOv8086EeJHRXlf9eiDdszTRUwPWGomDZ
Bt5X+WSZogUvpjfaPrpKCVtgeVj8kVmWChENt44+iWCwgTdn2gcYHpOAdiK2
R+YSEYndLhwjFtmCe82Nv3SCPPT/pRPMjyon4johXOAIwrnr90RWnDe48evh
OiGS+16nzU4y8GkXPqot7EaXPWv1pcmBQNyVR47D7q9hafI+bSciYnSNMHI6
Zgka5RXLON9xyPWHFsbpP3xxtMZ48mrfGy87EhgrmtwjCBFRziGPn8bFGnBE
zzoO5xJbhhVwziQalnUL44P8Xmx4vjLf9Ok0nq/4DnzTuoLlK7nt+hXXBcnw
NWh3//vr3ehS06q9T4UH6L7cyMN1XU5AaAfeDznwVz99DabrFLy1s3Hdkso3
w4frFqtf1Dy4bpkrRLpW2PqNVQ/81eLThc56KZm6fHUFzuqd7XjfCfOd1nx4
34ntV9S+cnPagU5knbmkDAkcorjNOfb2ohSfEFOD4zeB8j1FEM5/UaZ9Z8f4
uw4p9SsY/10+2eCj3IP3H152T9nzEcsn3g+ZfuzD8snvrt8hQ5WG9w3ekSnY
EYflqyBu53JzLF+VXs2PSfg+AXc7CwxYcgfRt6R273ez/r99HQ/+1xVvqiZB
Yfzmw4NuA0hwYv+WZj8r4OVe7sf7mh425qPF+5qKLdxherwpAJK86K6xcZHh
gNjJxTf+3ehlNSedbO3j377+0yN+9r38JFg/flvvvGkvajkeNOpuZgmbm+Yp
feXJACZGerK9XUigY2da4Jwb0F4wfMklR4J7BYFf+2h7UUb43nr1x+5gsywb
i/dzE3jxox/v5yackw54H1RiLuePNmwd0fLbPjSMI6CuxmffNba0yn657hc/
Zk8CjapmEXMeIrJ2tqqXljCBc/fvOe8bJoFW/uzCvHMP0pHqmmJO9gQrqYzQ
q1jeuKAeu3Ibyxtcbbf4yFHPQB+4U5vjSJAzaHqQyYOAKN8dIenv8ITQjTvB
e7F6rXrfXurMGwIK3GPtFqw4KvvJQPmseToJfvw6y3HtKqZnSC5mCqvGwCP6
bW+YG6Z/JL88HaMmIin9e8Ak/hzynK9CHqYPyY0dBw9fJaIDSa/OCTy0g3eG
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

    "]],
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["r", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 284.9717355277887},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-2.8928571428571397`, 2.5357142857142816`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-1.304128913391173, -3.0255160951822484`, 0.7716865523322173},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.547377180134004*^9, 3.5473772079761267`*^9}, 
   3.5473772724867992`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfQeYXMWVbm+HCRolksA2yRjQLsZge72PtY0x3vV6vcFev7dvvX5er3cB
B2wQGYONDbZZFgQKZEQGAYogCSUUR6MJkiZokibn2GF6pnuisnTeOXWq6lbf
qdvqQebt975v5/tuz+2691ade85/YtW9/a0b7rn5x/NuuOdnN91w8V/fdcMd
N//sprsv/sbtd2FT4I98vj+6GbcLLvbRPvh86kP8/Yw+5Jf/3v//cv/vxb/Q
YfwruP322wsee+yxgjvuuKNk2bJlPr84ll104403NpSXl1vPEX3NMvuatW/d
unXFP/zhD0/i38jw8HDz1VdfPTgwMEBHm6urq6nN6xzub6bZX1bJ97///T2r
Vq2ibyfwr/bLX/5yfVlZWSD94V/y4cKf/vSn1NTT3t5eun79+tovfelL9H9R
yhhVX/va1yp37twJ8q/6q1/9anVBQUEg/WExhp8Y4wsVLF68mDqvKSoqaqqq
qjqGf76Fk+9k5cqV6e7EcvgBcTgQDYfD3ZdcckliaGjItzil49L333/fxs5A
+sOy4/LNmzc3X3XVVfvWrl2b2nHoCP4V3HXXXULmd955554VK1b4gmmOcZdZ
1OX+r3/960VvvPHG/m3bttGIJPuFHwV6A/CTn/wElGkKgLJP5/JJf2ecRH/4
n28hW585m8/8W/EvqM+UZwdlB9ruiZNSOsidcgd5qR2wrvn+hlmb0kEKza5e
zqTPLGo6xh1803Wz9M2fps3s7DxN0jh39tcZdnaRpbOA7myIO/uG5cJAhp1N
0519mxmUxl7lKHs1nEwmS773ve/teuSRR3Y9/PDD9P84/s1nev7KMnbQ0van
emxmR0b2rb+7u7tgwYIFdM5R/Ku75pprWuvq6nxy8K9bBgpZ2r6kB79efPe0
dll8MY1Xc+2115IRUmP9paXfLK+xPGH+Rb7uFIaS7rVg0aJFxA8iq/Pyyy8n
uyVJ+QvLsNkZkuIozOcNVnha0xCRUvijH/2oZPny5URSd1tbm+9xpuNrljFz
LG3/oMf8NI+Z3tAGiIyiG264QXiEBTzW9ZZ+cy1t/0SfOTTWpXwDVvvKIAmV
f/Ob3+y87LLLOubOnUvyHh8bG1Py/qql82leA7qYHNI3vIk7u85yYV6GnU3X
na3hzr5iuXC6pe0WfeFyvvBay0kzLG23W6gQ1vFN7ufLlmtmZtyPIuol7uxL
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
PYUyeaNZ+d2gH4JV6qoeCLvdWP2u3tKaWp28Vc/k3iqKTNvUvIyS3wzam8lM
vUU6Sdt7aewyNRcSTCWk0qZaVjallvIKgxD7cpKneIYADu6eD4dKnnQJdK0U
aD6MlpJAX0WBvoICfQcSVUthBEMsujYpl30OtG2BWPMG6G/Zqv1hX1chdKPv
7OzjpcjN/QegMdKkVgbsjcagMDwI+f1J2BYeh019B8Vpq7tPwIquk6S6UuWD
KZNyD5bqSNoMsKWA1XNNVumKWXzS4106DuJC4+3SPLPP1UL364haZN0u6yu+
zWKFvmWbmre7xY4Bsff3GUt+tpfkZ6faZsfv8gx/lnkFlFethqrSpVBbvIR9
3YUkdin0x+HQHhR6OQq9GoVe7xb681rodP4wavMkobd+ADFZWYy1fSD+93UW
YMBULPY7eiugFWPrpki98p0VaLv39vdDUV8UdkWSqnl9z0F4r/sopmLHYVnH
iZBEkDLV81MXgAhUXAA+MzEWe/h5y3bHAWZpxmdpseTqNiGq6fqoaPuHjAUk
JuBncz9eCjnpVxuEoIwngYOmhKAhf5EsaqOQWEsuQNm8MVk2+55j2VS8LEYY
qXhJyyZRv0rKZjNE69eK/WgLP7LS286Jc3d3CXT2lEJbXyU0oVJSWw0GtBV9
HbCvt8ungokP+sZgfe9BqQoskjdaT8LL8vG5Z2Sig1FrttTIX3OoZGqlrp3J
HEWotBChKn7N22Gq3DyaSkRhnqm1KAd+vk2Fuj/fpmYlf75VTXjjnsD9/8pY
ejONM6eaq05z5BfQTxVptyMUUj6qrp3lHEd8PaniS6JtTRXfSvE/fmAFi7Fx
DYpvI0RaNkO4nesfvV27oat7D7T1VKiSZk1vA+zv4aXLe8L88NHO/iHY0stz
jWu6JmBVx0F4u/0YvN56UqHP1C3x0D/flEpE6QVDZzPERWB/ixNnkor9nDdU
KSWeAIlilhZKQAtqhhTeVmbcP2UsqBkZCkrkJLIeohTN9jSr8ztJMx3xZEux
PKvFMrzvGSUWn3q2L964FuI1PB880PAuRDGPCTezZvW3b4Pejnzo7CyCVpmw
NPRUwYEe1q6KcAfs7evWi0W29g7Bxu4kymUcVnQcVspFP2lDv2+gXtpHv2sw
v1K+2yHkxC/Sq91VoAM24cBuE2/Im7dTz7jCreS5btWVY5SaEFYe2yEBnZ9J
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scale Sum-Normalized Points", "Subsubsection",
 CellChangeTimes->{{3.547233327719347*^9, 3.547233358998193*^9}}],

Cell[TextData[{
 "The final step is to divide each spectrum by its corresponding reciprocal \
quotient. This results in the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     FractionBox["r", "2"], ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". (Note that there is a ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " asymptote as well at",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{"1", "-", "r"}], "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The scaled spectra are the intersections of this curve with the lines \
connecting the original points and the origin."
}], "Text",
 CellChangeTimes->{{3.547233409357737*^9, 3.547233426602599*^9}, {
  3.547315611672408*^9, 3.547315612461529*^9}, {3.547318993409947*^9, 
  3.547319046408938*^9}, {3.547319077019785*^9, 3.547319227198279*^9}, {
  3.547319318108941*^9, 3.547319363116486*^9}, {3.5473194196952868`*^9, 
  3.547319539922263*^9}, {3.547319598973487*^9, 3.547319603472768*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Equal]", 
       RowBox[{"t", "/", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
          RowBox[{"r", "+", "t", "-", 
           RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], ",", 
      RowBox[{"y", "\[Equal]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}], "/", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
          RowBox[{"r", "+", "t", "-", 
           RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}]}], "}"}], ",", 
    RowBox[{"{", "y", "}"}], ",", 
    RowBox[{"{", "t", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547315678490505*^9, 3.547315792141757*^9}, {
  3.5473159260094624`*^9, 3.547315934524352*^9}, {3.547316025974309*^9, 
  3.547316030952437*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547315775541061*^9, 3.547315792772892*^9}, 
   3.5473159377713633`*^9, 3.547316031415708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"t", "/", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316619099985*^9, 3.547316623312673*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"r", "+", "t", "-", 
   RowBox[{"2", " ", "r", " ", "t"}]}], 
  RowBox[{"2", "-", 
   RowBox[{"2", " ", "t"}]}]]], "Output",
 CellChangeTimes->{3.5473166239681273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]]}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316374848133*^9, 3.547316392164747*^9}, 
   3.5473166388419333`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox[
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "r"}], "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547316392990789*^9, 3.547316641798195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "t"}], ")"}], "/", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
      RowBox[{"r", "+", "t", "-", 
       RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     FractionBox[
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.54731641143988*^9, 3.5473164195544043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", 
       FractionBox[
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.5473164210602627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", 
       FractionBox[
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316426950857*^9, 3.547316443999943*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
   RowBox[{"r", "-", 
    RowBox[{"2", " ", "x"}]}]], "\[Equal]", "y"}]], "Output",
 CellChangeTimes->{3.54731645414047*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refPt2D", "/", "2"}]], "Input",
 CellChangeTimes->{{3.547317840890967*^9, 3.547317843609322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.30769106857440903`", ",", "0.19230893142559097`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.547317844104817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"1", "-", "t"}]}], "}"}], "/", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547318031714019*^9, 3.547318034654467*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}], 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "t"}]}]], ",", 
   FractionBox[
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}], 
    RowBox[{"2", " ", "t"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.547318036058297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bar", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"r", "+", "t", "-", 
          RowBox[{"2", " ", "r", " ", "t"}]}], 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "t"}]}]], ",", 
        FractionBox[
         RowBox[{"r", "+", "t", "-", 
          RowBox[{"2", " ", "r", " ", "t"}]}], 
         RowBox[{"2", " ", "t"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.547318045301791*^9, 3.547318070672861*^9}, {
  3.5473181761201572`*^9, 3.547318193913475*^9}, {3.547318506974475*^9, 
  3.547318507346719*^9}, {3.547318559605433*^9, 3.547318588031644*^9}, {
  3.547318733277388*^9, 3.547318750404436*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5473180726619987`*^9, {3.547318178151081*^9, 3.54731819481457*^9}, 
   3.547318508421997*^9, {3.5473185742356052`*^9, 3.5473185889656067`*^9}, {
   3.547318736091078*^9, 3.547318750975293*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]], ",", 
    RowBox[{"t", "\[Rule]", "0"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"X", " ", "asymptote"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547318847881042*^9, 3.5473189326004963`*^9}, {
  3.547319257475436*^9, 3.5473192865271997`*^9}}],

Cell[BoxData[
 FractionBox["r", "2"]], "Output",
 CellChangeTimes->{{3.547318862988669*^9, 3.547318871474601*^9}, {
   3.547318915669297*^9, 3.547318933207136*^9}, 3.54731925937846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", " ", "t"}]], ",", 
    RowBox[{"t", "\[Rule]", "1"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Y", " ", "asymptote"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547319263010157*^9, 3.547319294297826*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "r"}], "2"]], "Output",
 CellChangeTimes->{3.547319271049531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
       RowBox[{"r", "-", 
        RowBox[{"2", " ", "x"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"r", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547315820284547*^9, 3.547315876113661*^9}, {
  3.547318520522623*^9, 3.5473185542564173`*^9}, {3.547318928248506*^9, 
  3.547318929567464*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.3, 0.4},
  PlotRange->{{0.30769106857440903`, 1}, {0.27777907217978276`, 
    1.2401813281366454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.547315843337575*^9, 3.547315877133327*^9, {3.5473185277626143`*^9, 
   3.547318555022922*^9}, 3.54731895330225*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
F4c2yAXX1aoepD9+Ex7cVsPeRmfrGeSdbJQ9f7HSLbap2Le3jFsytYeOkHve
M2dkMMooxr29tkqkHfPAp9qntXANZm8sRbv/wuZGjycDP4sZheRK1RuVyRgd
8y+yF6PD0XPuIObEjcb7p/WIrq1gEX4ydjVKOvy8oe7rQG9w0O3gDYPVgG0r
ScLcqXNksDhn6lwklbSpAUIDnWjM/g8Mv3IcTQ5yQIwNNOpScXf//rg6Nhax
sddi9OwciL6JdoH66jKxZNbTeDUhAa/OnIhpywsg9s4Xqnpyb8g8CjdFHPUf
bDoot91iW631cVAfYbRTezFWjRyIgYNZMvF/cDSuuPZ55JmjPwQvRv3BFTMx
7dn5WL4yEfOfmYonluVCxGyqf0LwYpWtTVuAmXNfRcKKRXjx8ZlIPNTEIFjZ
jxTRfSbWvyz6L/ZuLgZRDmodIvpVyiLzBpwnV6/aI1dLsbOUW1yxd9VS7PHl
qj88nha5EWdEtWrlHomLDdE2e3KJMszNMbM93A2TZGaGaQYa/twej1eG2dPb
PsmXqzt3/syDtLR0bLcnF6iGKhVbbm7wSXIbXlbm0XbaY68pg9x+M4XGBYUo
UwwNDa3pOtlHFxY/k/RA2FZfryDPev4dy9mzUfLZ+ndypPMxQ8ZhGvk3VPZv
Xse/Z7n/d2+bZ7oLR8mIgwl1Mb3Jz8+daw+q9/9iHf/Wy/y/5N7XB3k2NMgz
/SBEz+czIElcnikXG4+nVQWg56c32LNg7LdQBT1xEonCwrMynuIkLfbVF/91
S/+calju8pnAXp6Qic8/O86ktnbEHntWVaaurkUesDHUyc+vzrcnnlYEDyd4
4MKjBkGfsCfmKILHHuxvHnp5vb5Ce+K3qjKMLRjAsDI8EBHvtSI/TCblfqPU
M3DaseMkli5J5z6n1F69TkRIlcuWZvBERCuzF39SifNsgMr37C7Vyu3Fn1Dl
4SzHgjMaE2WrsCceUwSPWhj2sUlFv1XaE4+qIjHYWrliN48FtWp78UeU+Oky
DxbFp2F/zmntrL34v6ry8ESMESFzBG1t3lp74lfKAM+f4hem8fhQq7cXf1gZ
oLMybmRKSjSRx56Y6leDJYvTmbDSGrt7whQl9NWXBfIcUJRfa7LXOVmJi+VH
RtrZ+8q0c/biv1TiTIrSa3gU1GIvPkmJ85Tzww8PSd9ttRf/hRKnF3NW2bmj
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"foo", ",", "bar"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.547318594206092*^9, 3.54731860527495*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.3, 0.4},
  PlotRange->{{0.30769106857440903`, 1}, {0.27777907217978276`, 
    1.2401813281366454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.547318605838408*^9, 3.5473189624160147`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
bsA4pO0iyxJJ9QLRDkl7T4EbOAFZ2w6p7kmLB4oen74CzaCJSCd5FWnxPGli
JiNKbuigGTwZutDNfApZIE34M8JYXCmkfz4L0VBdWyRNTGdOqNd8Dt3gSSjn
UlQl0uJ+TLww3oBbH3gj87MjqjJp8Y9Zecz1DVD7LoF64nw0VhrLpYmpzED2
0bNIGDgRd68kqCqlxacwA3y8JkwMATd7Dd+CVdLEZNGDG4m0jYuvJqiMrYNh
kti0YdvATZgNc129qkZa50QmXldYCm7IFKRFHVfVSYt/xMRzT5yDlkRCZVY+
e3HpUNyLiWtDw6H3DqGv9hqkxcczcX4ZoB4bBMOnUSqTtPg4Jl5fUgGuvydy
Tl1WNUmLezLxMm0KtH1HoTQpU2WWFh/LxO8SVxMGfoS68mqVRVp8DBNPjjyC
+HHBfFOqrNLio5k4t/EgkmcIr/zQui1HMiH16r1Im7PSJiSzRheZW8t2ImPh
ehsjs/zwYEz8om3ICAu3Me2kGXexbEsikRIWYWPaSzMjGJO4bDsMS7famA7S
zIdivX52DLf9l9gYmalgOGNyLtxCsoevjXlQmhnGmFKyAOZHE2uTWXj4kMAI
1ffbXi3e78DuUGa3prgC+v5j6VEE+kTYw1CpnhQEf9v7LYemhzDT/Atq7t0x
qE3NEh7+gZl+iHkm+TZByQsXOcsa9+n0tXdzA7WyLL13reQNAJWhC8q/M3s6
Mijejjhks/eIQ08dbJIq2Wt25OlgZjn7shp6r9k2y4+2tCy9Iadkr9ORZdHn
mnIjdO95EvlG4aGwMcqYX7W9Jmcu3t0flVqDzVFmzlGf+4Ax3NrPkbkhysY8
Ls0MYkwxGcX1Hn425glpZiBj+EDX9Rtj62MyZ51EhpsSioKLv9jsyDDvM+bu
5VvQf7zQxjwpzQxgjNlsgXbAeFjqG4SHT9kxdDZ4j0n+ErwRBSd+tGl/Slq7
yBQYcpFkX1t/dM7cGjIVpoIiRUx/xhg+/w7py+xmgz9JM/0Y01TXAI7kt/wa
gj75D+eMnoyu9y7etNmRYd5lTHV2Hj2U1cw87ZxJGB2A6qw8Rcw7jLl304Ck
KfNtzDPOmYShpK5LKxQxbzMm4+wNpAQuszH/acfQiOnLJDVkKWSpqXUs2Uq7
yKSdvIi0hRttzJ+dM9xAL1hNTYqYvzEm83A0DPb5w1+cM4kDST9pNCli3mIM
ycZhmLbYxnRyzmiGkVYpLlPEvMmYotR7SPIMsDHPOmdukrVFjSFDEfMGY+qN
9UgePsXGPGfH0Nb/K5NMWBiBkuiLjiUltOsGeTXfc8aIdtIO/4CU1TttTGfn
DPdf3i1bUoZ5nTEVqTn0ZF4z08U5o5m6CJXJGYqY1xjDb+5zg71tjJtzJv3g
aaSSdXprRnn2KH0azNGsK9rVkkjlT3S2tutK9ih9Lsmh6T7MNF19jbEL+K7M
tPLsUeZ4jJzl5EWbcfenWEnLCrJHmcMZtuyRbUSR9fHk5jLIeCqXPcqcAnDk
aW9muSotF5qP7Qavbi0tK8geZd44y1nm3/8VC6dkWliWyx6VvP2Us8kHc4t6
ZjZlNi7p4XUuYIWNed45o532CSoMmS4xmhF+Lcsmw7BNTXpSmT823Mx0d86o
g9agVJ3sEqMdMa1l2ewZOiW8xCT53R7NpBCb5AvS2l9mDP8e/c6Zay4xXOva
kmHEsvFJOn8AvZnp4ZzJ/JIMuzu+donRjpsFk7HWJYY/Fd3CHxnmRcaUJ2ci
yc+u7/Z0zvDn1osvxbnGDPcBnbMUML0Yw4vrh/nYmF52DI2YnkzyHhlnDUu3
OJaU0K4jSXpVSrZrTOu+L8OIZeMTCP7MejPzonMm5+R5JK/b5xKjnRyK6twC
lxh16z4pw/QQ/eG3P0f625iXnDM5311G0uoolxjN9DD6DSKHDG39F0TPh3/c
0gsl2of7KmZEO/xMo5+1ysa87JzRL9+BvDNXXWL474hY7Bcqihj/lv7IMN0Z
01TfSM+aNjOvOGdyv71Izz20ZoQZ81ef5m8nY1LnvwyVmXltTIrH837tQXJH
k7xok1WLIptKzjXL2dII04lrtpydyaWpoXjIrq64HFqfUJuFV5V7I33cs6U3
zzNdGV98i9R930jbcvHAn5wtft1kzC9pY0tgXDp85igARTPqka0aiJlx1E9E
Rts6t5BhujGGX6toP5prY3o7Z7IPRyN1+xGXGO2M5fTsoUvMiFbjpSLGT5qh
I7gbk+RfJLP8UJCU+bqjGNRFvyRCN2etSwz/LccsMre6wnAkE6svr3aJaVNb
vzMj1hufIWo8Z9mY15wzd3682nIuVsAkfhKJe5fiXWL47+rxb49dYloPhfYM
jZguouQoGclW2kXGVFNPz+41M687Z+6du4akFTtcYpKXf4Y7Z6+7xPBR1lhd
6xKjcW+VvSlgtK3XCEoYF+x0ZkxFdgH0votszF+dM/x3rVMjvnTM0NZ/jknq
F25G4XWtS9r5VVuLTSgljMf0lp4rYLjWtfU72xHroJqsXdT+y23MG86Z7K9+
gCHyiEtM4pItyLumbcOIm4bOMz4zCk4MwtN/6ooePYWT6t1f9cINib0d0a5m
QjBMdY1t7CpK+0gRrDV6bPULh8Yo7NuZ6wpQZ5a3mdB6VJGxKX7trankMras
2g9NlcXhSWBR960xsxTrFk4C8F9aicMG79k4nF7Pn6q3ZXadGKQWtjYVKX2I
3avVL0Gfv21AWoPjyniWyZlq6qCdMMem+81Wuu0yOSG1egBNhWewKTKB/54n
rKXnMKC7O79RKmeG/+0KiUu2tjEjm8Q9QJo3GXsCJiB4w05ELvXChNVxqLTI
WkqJOER6wI9tLDmKfpHhc6XK21muMcJrPJcYbpS/y4xu5HSXmSTPmYoZMcjo
ryFZs8bGvGXH0HH5L6JkVpbwy0IcSUppv3IFuHTJNebQISA9vQ2juu9/AB4G
jLU=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"medianScaledSumNorm", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], "/", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
        RowBox[{"r", "+", "t", "-", 
         RowBox[{"2", " ", "r", " ", "t"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, {
   3.547312129012969*^9, 3.547312172914791*^9}, {3.547312523893662*^9, 
   3.547312570117124*^9}, {3.547312647770303*^9, 3.5473126690748377`*^9}, {
   3.54731291394738*^9, 3.5473129688112698`*^9}, {3.5473130411268387`*^9, 
   3.5473130569356813`*^9}, {3.547316839707315*^9, 3.547316853000552*^9}, {
   3.547317119329213*^9, 3.54731713437667*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 3}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547312945334552*^9, 3.547312969483954*^9}, 
   3.54731305782784*^9, {3.547316849368409*^9, 3.54731685411171*^9}, {
   3.5473171299875193`*^9, 3.547317134964613*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnHtwVcUdxy+5CUi1llbH1j4UFAgBMdqHWt+002qtyB/tiMXHTKTOgC0D
orXaPzodrVVHi6Oi+EDFqBC0IkZ8Isg7kpAI4REgvMIjgYS8CAl53fy639/Z
vfee7HnsOTeJaYdk7knuOfvZ329/+9vd3+6ec8bn3Dflrmk5902dnDP0upk5
M6ZMnXzv0F9PnylORQdEIgOmiM9dQyP4nyIRdeCfqTjILwH+P43/nE6t++bT
9Ekz6LGnH6MZk6bT/IpWK9+mIrrzshwqaiKnNFmMf8sAj1H92kfolhun0COz
n6WH786hR1bUUqegs6QKnXWFtHjONBr+7eE0bc5iKqzrDKKCP+6uQqbMg8S3
qoXj6Kwzh9HIzEzKFJ/hYydSQaOvGrIYQwzzcNVllLJG7Qp6+JYJ9Kd/PUOP
T7+F7l1USe3+1kizqvVUpUysmhaPv5DuWN1AXeK3YfUdlD0+n6pj0LOBNi7d
SA3trmkyg2TT2UYV8/5KT25qEimI2vc9T5dm309bWmg0ZxMlalhB1w69llY0
UMRSdLCJFtK0Pry7+MgoWb1dx0vp33c+QSVNXewZnS1V1NJpZIlIlmkeBno0
FkylGx4soSZgB+fR5WOn0aZmMz0GJFfwIOEO62lS5hX0dlWM1YlVLaQrRt1K
hU3KRN5pMg3SDJTm76rOpyvPu4FWN1LEqUrTDfJyqspTHPJX6TpqltOT/3iF
ShpjRvmPduCc8h+jztUsoavO/y2taTSzV3fzi2KMG3oNLau3+hqqW0bXDPtF
kod6p8k0SBPlNAOpvTKfZuUVU/Xxo1Q4axyNvCmPKjscG1e6QbZONZFhIiqd
YvXr6NFb/0y55Sfg4yYFHeOMGpVNlKarhcrnTaCLbxeNoNNIoEs7WRiv0zxR
p7c5thOnNN3biVMaqzAZ1L7nNfrjm/m0YPYTNOvVT2lXc1fc37zai1Oe7rXk
LOcCmb659AHKvuRR2tlqVj4nzqs8o+W1jpqVtGDuHHry/sn0l9zt1NxlJq97
9YgB5v3x2Ykeb9XtlH2T1eOlGaTJNEgTlUWMVeVTztM7SEQokbHKvPVf6NXi
kVeWA5fhkP8Y6d8dhz+kx5/aQI3C57uOfkxXD78RXY5J0bK8s3AqlZLa1bSF
cuduoAZhf3R0V4+YQGvNpMr6OU1Wc1tFHs287R6ONO65bSblVbRJOzlfy/Ll
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
/t/vHcED/gsQCrCz\
\>"]]
}, Open  ]],

Cell["\<\
Find all equations that match what we know so far about the eventual \
function: its asymptotes are the two axis-parallel lines through refPt/2 (the \
two limit expressions) and it is a hyperbola (the long equation and \
inequality). Looks like I was wrong and it is not a hyperbola. The conditions \
only hold if x and y are constant functions of r.\
\>", "Text",
 CellChangeTimes->{{3.547378763237494*^9, 3.547378859176252*^9}, {
  3.5473788966649513`*^9, 3.547378897790078*^9}, {3.5473789316005487`*^9, 
  3.547378953858738*^9}, {3.547379326733573*^9, 3.5473793725500727`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"b", " ", "x", " ", "y"}], "+", 
      RowBox[{"c", " ", 
       RowBox[{"y", "^", "2"}]}], "+", 
      RowBox[{"d", " ", "x"}], "+", 
      RowBox[{"e", " ", "y"}], "+", "f"}], "==", "0"}], "&&", 
    RowBox[{
     RowBox[{"b", "^", "2"}], ">", 
     RowBox[{"4", "a", " ", "c"}]}], " ", "&&", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"y", ",", 
       RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "&&", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"x", ",", 
       RowBox[{"y", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", 
     RowBox[{"r", "/", "2"}]}], "&&", 
    RowBox[{"0", "<", "r", "<", "1"}], "&&", 
    RowBox[{"x", ">=", 
     RowBox[{"r", "/", "2"}]}], "&&", 
    RowBox[{"y", ">=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}]}], ",", 
   RowBox[{"{", "y", "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.5473780940045357`*^9, 3.547378186235491*^9}, {
  3.547378336104927*^9, 3.547378340014043*^9}, {3.54737851071954*^9, 
  3.547378570311448*^9}, {3.547378675033185*^9, 3.547378700148028*^9}, {
  3.547378909688429*^9, 3.5473789187386923`*^9}, {3.547379030260063*^9, 
  3.547379043291792*^9}, {3.547379095495343*^9, 3.5473790984698067`*^9}, {
  3.547379146433846*^9, 3.547379148370112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "<", "0"}], "&&", 
      RowBox[{"0", "<", "x", "<", 
       FractionBox["1", "2"]}], "&&", 
      RowBox[{"f", "<", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "c"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"2", " ", "c", " ", "e"}], "-", 
          RowBox[{"2", " ", "b", " ", "c", " ", "x"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "x"}], "-", 
          RowBox[{"4", " ", "c", " ", "d", " ", "x"}], "+", 
          RowBox[{"4", " ", "c", " ", "e", " ", "x"}], "-", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"4", " ", "b", " ", "c", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "\[Equal]", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "<", "0"}], "&&", 
          RowBox[{"0", "<", "x", "<", 
           FractionBox["1", "2"]}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", ">", "0"}], "&&", 
          RowBox[{"0", "<", "x", "<", 
           FractionBox["1", "2"]}]}], ")"}]}], ")"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", ">", "0"}], "&&", 
      RowBox[{"0", "<", "x", "<", 
       FractionBox["1", "2"]}], "&&", 
      RowBox[{"f", ">", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "c"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"2", " ", "c", " ", "e"}], "-", 
          RowBox[{"2", " ", "b", " ", "c", " ", "x"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "x"}], "-", 
          RowBox[{"4", " ", "c", " ", "d", " ", "x"}], "+", 
          RowBox[{"4", " ", "c", " ", "e", " ", "x"}], "-", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"4", " ", "b", " ", "c", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]}], ")"}]}], ")"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   RowBox[{"2", " ", "x"}]}], "&&", 
  RowBox[{"a", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "f"}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "e", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", "4"], " ", "c", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}], "2"]}], "-", 
     RowBox[{"d", " ", "x"}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "b", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], " ", "x"}]}], 
    SuperscriptBox["x", "2"]]}], "&&", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{"1", "-", "r"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.547378709801333*^9, 3.547379045087605*^9, 
  3.547379099321327*^9, 3.547379149209437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"y", "==", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], ",", 
   RowBox[{"{", "r", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547379704125637*^9, 3.5473797165338783`*^9}, {
  3.547379989778921*^9, 3.547379990827318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"r", "\[Rule]", 
    FractionBox[
     RowBox[{"x", "-", 
      RowBox[{"2", " ", "x", " ", "y"}]}], 
     RowBox[{"x", "-", "y"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547379718144853*^9, 3.547379991575755*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"y", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "r"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"r", "/", "2"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"r", "/", "2"}]}], ")"}]}]}], ")"}]}]}]}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"2", "b"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547380925763398*^9, 3.547380982299218*^9}, {
  3.547381059067523*^9, 3.547381067209166*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "b"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"b", "+", "x"}], ")"}]}], 
   RowBox[{"2", " ", "x"}]], "+", "y"}]], "Output",
 CellChangeTimes->{{3.547380964874194*^9, 3.547380983164584*^9}, 
   3.547381070749242*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"r", "/", "2"}]}], ")"}], "/", "2"}], "x"}]}], "\[Equal]", 
      "0"}], "&&", 
     RowBox[{"0", "<", "r", "<", "1"}], "&&", 
     RowBox[{"z", "\[Equal]", 
      RowBox[{"Limit", "[", 
       RowBox[{"y", ",", 
        RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}]}]}], ",", 
    RowBox[{"{", "z", "}"}], ",", "Reals"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.54738124915397*^9, 3.54738135994096*^9}, {
  3.5473813985625563`*^9, 3.547381421214219*^9}, {3.547381513113594*^9, 
  3.547381542469658*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "r", "<", "1"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{"r", "+", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
    RowBox[{"4", " ", "y"}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{"y", "\[Equal]", "z"}]}]], "Output",
 CellChangeTimes->{
  3.547381239322997*^9, {3.5473812967438583`*^9, 3.547381341162168*^9}, {
   3.547381387357424*^9, 3.5473814263207912`*^9}, 3.547381545043584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"r", "/", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "x"}], ")"}]}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5473820818472843`*^9, 3.547382104572688*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r"}], 
   RowBox[{"4", " ", "x"}]]}]], "Output",
 CellChangeTimes->{3.5473821051118298`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"r", "/", "2"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "r"}], ")"}], "/", "2"}], ")"}]}]}], "\[Equal]", 
     "0"}], ",", 
    RowBox[{"{", "y", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547384127349904*^9, 3.547384236864567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547384178017151*^9, 3.547384237437482*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.547385657851766*^9, 3.5473856812108603`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.5473856820221024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{
   RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.547385754146994*^9, 3.547385756814584*^9}}],

Cell[BoxData["0.3440108736849544`"], "Output",
 CellChangeTimes->{{3.547385746725821*^9, 3.547385757798616*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"foc", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"foc", ",", "foc"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.547385801326215*^9, 3.54738580538375*^9}, {
  3.5473858383885*^9, 3.547385870688696*^9}}],

Cell[BoxData[
 GraphicsBox[
  {PointSize[Large], 
   PointBox[{0.3440108736849544, 0.3440108736849544}]}]], "Output",
 CellChangeTimes->{3.547385871724028*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"untrFoc", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
         RowBox[{"r", "-", 
          RowBox[{"2", " ", "x"}]}]], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"r", "/", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Orange", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"untrFoc", ",", "untrFoc"}], "}"}], "+", 
           RowBox[{"refPt2D", "/", "2"}]}], "]"}], ",", "Green", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "}"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "/", "2"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "/", "2"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.547381677454176*^9, 3.547381687307905*^9}, {
  3.5473854202701597`*^9, 3.5473856250268507`*^9}, {3.5473856686931877`*^9, 
  3.547385722158538*^9}, {3.547385760662657*^9, 3.547385763482342*^9}, {
  3.547385824970233*^9, 3.5473858269201307`*^9}, {3.547385878165723*^9, 
  3.54738603264205*^9}, {3.547386090374501*^9, 3.547386131887589*^9}, {
  3.547386204803734*^9, 3.547386230136971*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
AN3cColUKsWMYmDpQRn/L3XDf10=
      "]]}}, 
   {RGBColor[1, 0.5, 0], PointSize[Large], 
    PointBox[{0.6517019422593635, 0.5363198051105453}], 
    {RGBColor[0, 1, 0], 
     LineBox[{{0, 0.19230893142559097`}, {2, 0.19230893142559097`}}], 
     LineBox[{{0.30769106857440903`, 0}, {0.30769106857440903`, 2}}]}}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547385444850819*^9, 3.547385507280954*^9}, 
   3.5473857228035507`*^9, 3.547385764903829*^9, 3.547385827441921*^9, 
   3.547385894565304*^9, {3.547386024186795*^9, 3.5473860336449947`*^9}, {
   3.547386124480647*^9, 3.547386132419715*^9}, 3.547386231064177*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnXlwVdUdxy9Z2BV3UVsLFo11aukyre3oqBS3ccTp+Ie2SJ2J1hnolBGp
0+pM/3BcRjtaXEAWwQ2tBlCEGEVBEAQSyAYhbCEQCJAEEpK8ELK/l1/P99xz
Xu7Nvfe9e85501ga3rxL7nn3fH6/8zvb72zvTcl+YvqjM7OfmPFI9rg7Z2fP
mj7jkb+Ou+Ox2SwofYhlDZnO3o+Os/A3WZa88H8zcBE3Cn+P5v+dS51HPqTH
ps6iF197kWZNfYw+rO60ua1F9PCvs6molfyeuZ1HHxMieoyatz5Pv79nOj0/
by49++dsen5jI0VZ7NuECtGmQlq1YCZNOH8CzVywigqboioqJI8erMJkwSB2
V7dsEl1y0Xi6JiuLsth7wvUPUEFLUjWsNNugo/h/5xHF6mnVlJ/QQ5sj1Mte
kc0P0cQpuVQfg5QI7Vy3kyLdgc9MVsFEu6j63b/Ty2Wt7Ami7iPz6YaJf6Pd
7WQbJ50ospFuHXcrbYyQUHREGC2sUPGDxYu8HUO9Z3bRvx5+iUpbe3meRNvr
qD0ayhLWEKdhh7F82E5Ts26k5XUxjorVLaMbr32QClulaomfmRzimaEi2b31
uXTTVXfT5hZ/U2SEYPnFG56A39OwgV5++i0qbYmF4vc3DxMzadwttL7ZLv3U
tJ5uGf9bR84lfmZyiGfS+TNDqbs2l+bklFD9mVNUOGcSXXNvDtX2+Ba6jBBY
v3iZiUXdwT/OoFhzPr3w4F9oaWUHymCYhAYUq2VxE+cwE0/zLVZ+z/QvVn7P
2HbLpO6qd+hPH+TSR/Neojlvf0UH23qtO0IULz9msNH85dwlnm/b9SRN/NUL
dKAzXPr6m4u1S6unTOyrsN/+kSbea1fYtBDPTA7xTLpQNVaXS9mvVRDrUuLq
U/M3XjMlYN3uEy/Th3+nKG89Jz6nf75STC2sNPWeWkM3T7iHtrRQmKQJS40W
mdBVnUOzpz3O+4rHp82mnOouobH/Z7cnjcdap+aNdNeVV9LVvI+6jm6aVUqs
W7pN1IZoUwEtfYZplHUXfRuhzKTSAqIkETSUNet7aOH0+2nmC/PolaceoPuf
yadIjNITCBTdJC9fSXwT3iH7drZ2ZU7SIfNnpgqUcYfM//1B0Mx7IW4i7r5N
wWVEH9iw/RaVps8xZHfn+ISdm+S5XeyVR3lJn0vEM4l7NssYxq9WCnqdwdz+
7stw5LZhpzmY2999GTK3+RDCrwdM1Pdn+AAn2mEy0/jd932e+51BmFD6wpDi
+SfjB+MMxklBHB7lO6XRYJzBOAMQZ7n9YnFwTaeX2etJ9sId4ToWlxHeiMX2
i0XENZ1y2OtV9sId4ToWF2fE/686Z7tWGdTR0UOnT3fy94kTrWlUU9PCgg8e
bKSK/Q38vausLo2Ki46z4K1bjtA3Gw7x95dfVqRR7uq9LHjlyt307w92yLdP
diTSp4pfR8VVqa8/Ay3iOpSV1UE85W+t5oLXrau0bMkXU85HZVzqe++W0KKF
2/nfby7aTkvfK6F33i6mt5YU0ftLS/lnH7y/g95+q4iH4TmE4TPc41nEYXEZ
m33KUgU2k8Lfn+ftT4NwFrzxm0NcHfFOg44suKKigWuNd0NDWxqSwhKKRMnE
K9plM79mcZswItUcb+H22LP7pMsea76o4Dp+9OFOV3pgkyWLC1m6Smnxm4X8
M9gGdsD/uLc/L+Fx3n2nhNvlk4/LOW/t2krOLyio5vJYOeDyDx1q5KmsrT1t
yWR2d0fjafmZWjI/4deRDBGjlpYOjq48cIqLK9x+jKuQ99k+WrGiHKqnQVeW
8zKHlywu4insy0U7tTJHc3LsXPx6XSV9u+kwT0mZSMmRI81cXFNTO0/HfWqa
LxG5GouxIUmkg44ejdDevSepsPAYbWBaQywMylRhhmJFLwN/2gkYyT9BxVmz
poI2baziiiH24aomOlHXyrOdkWeo6TSHX4dTNBrjyQJt545a2rSpilb36cPV
SeOajeSVQhaYlZ/sRgXjmV5efoIOH26iU6faqLOz5x9qmjzDr8O4dRob23ix
gWXWfnWAlrFMsa3CbGGrMZyrgTL46co93Hw7Smt4JIjv6oq+pCb+KSEeolE3
0XSt+nQPT6QoK3amsFEJpCIrUD5Q7JCR7e3dC9UkzuLXDGpt7eJtF+onS4tM
HoRKS0PYFqbQ/n31XEFmo6VqwqYLYbAuGgbUFCYsgxeuDG5gZPk+W8DHavCH
RRiKIAoBq352VrEhGloMJOGLz/fzz1juWHlq+GkijJmY9u45yZvydFRkNLpM
8e3bjlJd3Wnq7aW1DnJgB/2AKPNoPWAHlHE0C2gG8DcygvVtm9S0vE9Q0S6V
76rjJgUVBsDfO3fWIgX5atR7RbFE2ouKjvHmSpq0IL8aabCK1JB3CySqPJRC
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
/wB53hwf\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rQuotientForX2D", "[", 
   RowBox[{"x_", ",", "refPt_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xQuot", "=", 
       RowBox[{"x", "/", 
        RowBox[{"refPt", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
      RowBox[{"yQuot", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"refPt", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"xQuot", "+", "yQuot"}], ")"}], "/", "2"}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.547233545119871*^9, 3.5472336990874767`*^9}, {
  3.5472343664689827`*^9, 3.5472343837966957`*^9}}],

Cell[CellGroupData[{

Cell["\<\
A digression on the form of the reciprocal median quotient curve\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.547314941286628*^9, 3.5473149661960907`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "There were two interesting characteristics of the median quotients. First, \
the median quotient is 1for exactly two spectra for any given reference \
spectrum. First, the reference spectrum is given a quotient of 1. Second \
(unless the reference spectrum has a 0) is the spectrum with all equal \
heights (normalized ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    FractionBox["1", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") is also always unchanged for two dimensional spectra."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547314974114048*^9, 3.54731519065355*^9}, {
  3.5473152756170177`*^9, 3.547315296318137*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
       RowBox[{"r", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], "\[Equal]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], ",", 
    RowBox[{"{", "x", "}"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547314667412683*^9, 3.547314707941905*^9}, {
   3.547314822227365*^9, 3.547314826179538*^9}, 3.54731529631826*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", "x"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "<", "r", "<", 
       FractionBox["1", "2"]}], "||", 
      RowBox[{
       FractionBox["1", "2"], "<", "r", "<", "1"}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "x"}], "\[Equal]", "1"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "r"}], "&&", 
    RowBox[{"r", "\[LessEqual]", "1"}]}], ")"}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{3.547314678122054*^9, 3.547314710944695*^9, 
  3.547314827512681*^9, 3.547315296318329*^9}]
}, Closed]],

Cell["\<\
Second, the maximum reciprocal quotient is located along a lovely s-shaped \
curve.\
\>", "Text",
 CellChangeTimes->{{3.5473153035153503`*^9, 3.5473153501547337`*^9}, 
   3.547315513195568*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
        RowBox[{"r", "+", "x", "-", 
         RowBox[{"2", " ", "r", " ", "x"}]}]], ",", "x"}], "]"}], "\[Equal]", 
     "0"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473134553390923`*^9, 3.5473135116716967`*^9}, {
   3.547313550070256*^9, 3.547313567331184*^9}, {3.547313723145562*^9, 
   3.54731377379069*^9}, 3.5473144172239857`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", "r", "<", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"x", "\[Equal]", 
     FractionBox["1", "2"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "<", "r", "<", "1"}], "&&", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "-", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}]}], ")"}]}]], "Output",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547313473182349*^9, 3.5473135129545527`*^9}, 
   3.547313568154154*^9, {3.54731374520894*^9, 3.5473137744640703`*^9}, 
   3.547314417224423*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
       RowBox[{"r", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], ",", "x"}], "]"}], "\[Equal]", 
    "0"}], "&&", 
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
   RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], "]"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473134553390923`*^9, 3.5473135116716967`*^9}, {
   3.547313550070256*^9, 3.547313567331184*^9}, {3.547313723145562*^9, 
   3.54731377379069*^9}, {3.547313887680892*^9, 3.547313888463971*^9}, 
   3.547315453199176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "x", "<", "1"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "x"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"]}]}]]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5473138890281563`*^9, 3.5473154531996326`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"0", "<", "r", "<", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"r", "\[Equal]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{
      FractionBox["1", "2"], "<", "r", "<", "1"}], ",", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "-", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<X Coordinate of Reference Point\>\"", ",", " ", 
      "\"\<X Coordinate of Maximum Reciprocal Quotient Median\>\""}], "}"}]}],
    ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Location of Maximum Reciprocal Quotient Median\>\""}]}], 
  "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473139389639597`*^9, 3.5473139415316668`*^9}, {
  3.547314024774284*^9, 3.547314285272215*^9}, {3.547314319485633*^9, 
  3.547314320381287*^9}, {3.5473143528458157`*^9, 3.547314417224608*^9}, {
  3.5473145050018063`*^9, 3.547314510507934*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->{True, True, False, False},
  FrameLabel->{
    FormBox["\"X Coordinate of Reference Point\"", TraditionalForm], 
    FormBox[
    "\"X Coordinate of Maximum Reciprocal Quotient Median\"", 
     TraditionalForm]},
  PlotLabel->FormBox[
   "\"Location of Maximum Reciprocal Quotient Median\"", TraditionalForm],
  PlotRange->{{0, 1}, {0., 0.9998571632610126}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.54731408138936*^9, {3.547314259729109*^9, 3.5473142861676483`*^9}, 
   3.547314322668672*^9, {3.547314393437736*^9, 3.547314417224821*^9}, 
   3.547314511252987*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/gOLuSmkf3W67tJqav1WV9Z6rgcu9bbfPevid8+Vou7/qTb+X8STFor/P3z/
j+Kx4asp/lPiXWw5FWS10e/8v+E71qMXxX9KvQVU68X/FT0r/bZJrRvi01vR
Tin3AGI75XXSnon+7N1709rYG+qdKqlt62C8sOnvcNuOdlK0XUpDzlHb6wJC
VduWJp779oqDGYe//lTvpwMdjX+2XHO7jlafHNUpCW1//nHlP6sjMU6Q13BM
O5wgbBthOWFHIe5vnYAwQWRfcYD8x8YwdeTyDFmYCbXq48MZu3DbYGKCI5jd
+ihsn/oOatcULcAStVBZ+jInCkuPH8f6EW+gjsd7mLrlEq7snIvB/X0we+Np
3LgTLPqSHTWx9Z8IFBQU2zXB9xnEjEdbvkDDOpXxrOeX8L9MkUyo7wDy6JE7
SErUa1Kd+wDbQs5j86zBGL7oXyTkZuDqpkl416MuOo8IwKG9c3A92zHVl0Li
EB2d6oj17zbojtknklAEWFlviMa+ub3RuO7bzlgfczcNISGP7FvgYnMVP55M
og2PVWxMSDr5I65ysSlrUXTCMysrHwcPRNnhqYkuR9y86art8L/uvM6Wzdfc
rrPpb/fbKQlthw/fRlparl0daXjYwcVZPwx9uylefKYsnnq6Cuq91gfTt0bB
YEY9B9A3byYhPDzBDprLHCnooKl489Pp2HzxHtLzjTDmp+Hu+b8w5f1W+Hyb
FJCgJhG8idzcIuzadcO+CSYRxifYN2IFbuRaJMKcG4HFXwTgvsYc5IeCdstR
R1vknOuYt/WhMBFtVFTsH4KsacwTV5EF5Tf9QLyt8itG/P4ZVinWQN6+/Try
84s1kfXX8MPY40g1WZGNSTg0+mfczHWMTMMYEfHEHpnNbWMitnevjw5DVuBS
ptEyt4uSzmPt96+jcd/TyDCrzm3eQl5ekaj3lC3wczhjTjzik7NRICzlakLH
XWJ2y14HCcfipRCDA3/Bp81eQMVyFfFC8174RYwqUOcAx93w+2UYjSZt3Pxo
/Pb1PByKzkChsRAZ0Ycw7+slFPkn0zwc7eLFh+L00EQTVNmM/fEo5nSIEvCj
pgRwXBp9pm00qVwiUHnwdhryi/ORdvugQOVSK5UKXM799esUXH1Nnau9mtcQ
uVqjRW/MDxRXJYe4NOIZGXl2uGoai9d5cD9DXM6c0eLqCFdkuGtWh9j2sb2b
I6yB+/df4dDrC7Vx3RxrjnvvXrotH1TodWesn2G4AWsv2fLhVXX+ujrWHHeH
oJ1sxlqJa85A6NIjSLAwwozM62sRrXeMm5qaiz27b2jgCjouNxKTWz4PCk+3
HA5VtUQCUGiKHXYlGS/MZhkv2ilpzsWtgLH4+TILBhOeaSFzEKExdhw3OOgR
rl1N0MAVaDZcxfetO2PNgyLrIZe5mLXhmGaTyQz/NSF22GpzqjKrQ5u++Phs
a522in5SSMnJOfi0xYt4pmx5PF+/K0ZuFgMKVPvJcUmr/77+sjZu7k3MG7MW
F+NyUGQsQHrUHkz2/laM6rBqTeYuEbcnNjNJ8tRaDApTNqIOx0A839Vfh++S
i0hjwmTS38GOebvxuEidYN5ESoqB77Zsm5A2xzCE00GjoG8lOSpT7S2HcsSj
XYgHBoOMcsnRa5nLzmSd4yQl6bFta4QdjtrYPs/q0IYlJ6fAWkc6DLBYwWS3
JJ05g4QC2YGqQE9O9G481LALODbNZ2Z12mBLC5IYoz7x9Y+xMyERB72roow4
91yagVVYC7RC0Ay3tNDSnnM5d3bggQalHIdWRraK2eBYJLE4GWc334WB13Qy
Ijy469TJGNyITLTitpDjkvaJwJimlfCUG9qHY5PmWbE8iGa0CjbNygI82LIY
R+MKLNonPfQXXNfQPtUY7r2YNBzYf8tKc3MFzXk3sWhyGMVL6zxVcKqzcrRH
oQljwWmmoC/7Ij73nosgPgtJO4b+LNJXmY1OaUJr1Fw6nLbCQiNWrQgiHqrT
ZkrH6QkdUePpMmB5S3xcmCYtdWSJGnkvMPLI+Dt2NNrKOmkGWxa1rMgAEj3x
0zOcZDcjKMqrtF+DlSNVSsrE0r50NOeSW1EjJMDqSeRjQD6M5csuWsegiWIM
KOxwZhd0mh+F+OM+aPLc82j23T4kFfMxcP8YXI3pL7Jyt24m4/Ch29ZON1bQ
Y7iOmT/swX1DEk79uB3RmXfxZ5+BCM6W0VPyc2A10moy0mjNefgw00paIwVp
2WEYtyQUaYnnsCIkHcW50dj961mkGvlUKtHpqCOSyI7wWxZImlOdpOIEbPus
HiqUYbNHVwYVG49GhIYmfonh0prBdmnSj1LYoVWjG1NwbsZKTTu1FitH+9Fj
x2RTqKGcPgoKisLyE4miXaqmxWqzcuQBstHgDSQcvj7mxfyFCe83RKWnZBq8
TDlU7/orYgrUaazD6tK6b6MhPRU8zArDxO2PUMRrCjzdP3gkLuc4xi0qMmGl
oN0sY6PELUxFSKyeBYzTnyJkCPzKN6vj1mW4mZn54j5I2OlKP3pIuGr2BVu5
RLtx1cpg6yyvr6BFsC/id45Gl5cro1y5SqjZ4mP8eDRJ07fDvsPt2ym2plg9
Ba6gdefM2IPAfyYiNDkLD4PXw6fbOFwzqOMyr4HoyyCvlwX3FQVuzhVMmn8G
4QJumLhKZyNk7DiEaYxJfYZ7+tQ9nDl9z4r7sgLXlIXg6Z1Rs/aHCMwqxJOD
K7BgWyyFDajiejDcA4J82rjR6srGRKzCpFvkFvlILSXraI8er0M2Bu1y7txO
cVqngawOzWBhEZN+rK1dp6GsDlmikdcTpR9raddpxOrQzjnimszrVFPBUTd3
+o1lfLoSFm/FfVGB6+ZOvwnDpR2ujX+6hgLXzZ0+442ooY4fl2m6F+zpdWen
34zhXgx8gO3brltxq6vz19WdfnOGS+ssyYdFi1RT4ObcxOKjT2R8cGxrt2C4
cXFZoj1s0XqSoWzxQpoNuLV6IF6r+xzKlykjNOeaud2SwdPCRAue8K/0YxUG
z7aX2eGY/GsoxFhnpd52su9vxZqg/TD1QLDApR+fZ01UkAoWxsLvzbYYJlgc
5qJM3IjPE7OPXXUBtGblaOkmIT93Nlb6Udo/2mzveJ2GKjhtWbnz5+6LOJYN
iGRqyFRPO1aSnFG0COTmFkklK8lKKtBfZXWys/NFZggLiPTjM9p12rM65IIl
2/Vy6GPpx4radTrIekFOUYs4OoiK6cjqPH4siVpqikH6sTwbKOZKz47ELyGp
FrOXBZGZinMRe8gXEdmqvu7XGTjtTciffCkkTvqxHANnTgaKeKyqszgZnMnv
Gwz2pLAVpcMFSz9Z8BbfjOuvwKdpFdTu0B/T159CjN5kTeLJR+yBHxCuIb4s
3gGPHmVi6ZJAJPARY3F9lvDyojRc37cEI99vhCpVG+P9Eb9id3iKOE3MxQYU
a5gfXRg+mTXUA8Gsk3601UXZt49i1fieaFGtMmp3HIAZGwORXqwO2Y1BXr2a
IO4DBWHTSd57S7qQyXAPJ1YMxUe9R2PpfinTQg3Km0GR64mMI2Hp0BklKOuJ
rBE5d45j3Xxf+C7YiFMxou1VXwXtTYZ24kSMeA5eVGTUFdkOlDEbEftWY9GC
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
TwRaDEhLOUaw+K1KtISuzP8Chubv9A==\
\>"]]
}, {6}]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2D PQN (the easy way)", "Subsection",
 CellChangeTimes->{{3.547291959347453*^9, 3.54729196525014*^9}, {
  3.547292023656331*^9, 3.547292027483858*^9}}],

Cell["\<\
Because 2D is such a special case (the median is the same as the mean and the \
reference spectrum can be specified by one variable), the entire \
normalization procedure can be viewed in two simple steps. First, sum \
normalize as before and choose the reference spectrum. \
\>", "Text",
 CellChangeTimes->{{3.5472919726738443`*^9, 3.547291974123293*^9}, {
  3.547292030206709*^9, 3.54729210372537*^9}, {3.54729223810205*^9, 
  3.547292243356351*^9}, {3.547292327120686*^9, 3.5472923282844353`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eleventhDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fourthDiagram", ",", 
    "\"\<Figure 11: Points sum-normalized with reference spectrum\>\"", ",", 
    "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547292111389426*^9, 3.547292116324439*^9}, {
  3.5472921727348223`*^9, 3.54729221296283*^9}, {3.547292266604507*^9, 
  3.547292315096405*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}, {
      RGBColor[0, 1, 0], 
      PointSize[Large], 
      PointBox[{0.6153821371488181, 0.38461786285118194`}], 
      InsetBox[
      "\"Reference spectrum\"", {0.6403821371488181, 
       0.38461786285118194`}, {-1, 0}]}}, Axes -> True],
   "\"Figure 11: Points sum-normalized with reference spectrum\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{3.5472923179041977`*^9, 3.547299217572546*^9}]
}, {2}]],

Cell[TextData[{
 "For any point sum-normalized to the coordinates, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "sn"], ",", 
     RowBox[{"1", "-", 
      SubscriptBox["x", "sn"]}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and when the reference spectrum is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"r", ",", 
     RowBox[{"1", "-", "r"}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the r-quotient is ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "-", 
       SubscriptBox["x", "sn"]}], 
      RowBox[{"1", "-", "r"}]], "+", 
     FractionBox[
      SubscriptBox["x", "sn"], "r"]}], ")"}]}]], "Output",
  CellChangeTimes->{{3.547292710633663*^9, 3.547292726927107*^9}}],
 "which makes the normalization factor ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "r"}], "-", "2"}], ")"}], " ", "r"}], 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "sn"], "(", 
      RowBox[{
       RowBox[{"2", " ", "r"}], "-", "1"}], ")"}], "-", "r"}]], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547292541572569*^9, 3.547292628273944*^9}, {
   3.547292680388361*^9, 3.547292699559947*^9}, {3.547292736934387*^9, 
   3.5472928112087393`*^9}, {3.5472928446629553`*^9, 3.547292984403142*^9}, 
   3.547293031783366*^9}],

Cell[TextData[{
 "This means that the final coordinates are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
       SubscriptBox["x", "sn"]}], 
      RowBox[{"r", "+", 
       SubscriptBox["x", "sn"], "-", 
       RowBox[{"2", " ", "r", " ", 
        SubscriptBox["x", "sn"]}]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "="}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 Cell[BoxData[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubscriptBox["x", "sn"]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["x", "sn"]}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["x", "sn"]}]}], ")"}]}]}]]}]], "Output",
  CellChangeTimes->{3.54723457757213*^9, 3.547234932968823*^9, 
   3.5472923631055307`*^9, 3.547293344253744*^9}],
 ". When we eliminate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "sn"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we arrive at a line: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "r"], "x"}], "+", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Noting that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "-", "r"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the y coordinate of the reference point, we can rewrite this as:"
}], "Text",
 CellChangeTimes->{{3.547293138460412*^9, 3.5472931727679768`*^9}, {
  3.547293358276906*^9, 3.5472934044223633`*^9}, {3.547293437827682*^9, 
  3.547293482427561*^9}, {3.547293521408865*^9, 3.547293554839806*^9}, {
  3.547293594143876*^9, 3.54729361675635*^9}, {3.547293711579558*^9, 
  3.547293774893075*^9}, {3.547293978424376*^9, 3.5472941665767937`*^9}, {
  3.547294243406207*^9, 3.5472942470507174`*^9}, {3.547295257854291*^9, 
  3.547295265467202*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{"2", 
     SubscriptBox["r", "y"]}], "-", 
    RowBox[{
     FractionBox[
      SubscriptBox["r", "y"], 
      SubscriptBox["r", "x"]], "x"}]}]}], TraditionalForm]], "DisplayFormula",\

 CellChangeTimes->{3.547295259628989*^9}],

Cell[TextData[{
 "This is the line between the two points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", " ", 
     RowBox[{"2", 
      SubscriptBox["r", "y"]}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", 
      SubscriptBox["r", "x"]}], ",", "0"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The final scaled points are just the intersections between this line and \
the lines to the original points. Thus, in two dimensions, when all spectra \
have only positive coordinates, we can look at PQN as just replacing the sum \
normalization line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"1", "-", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"2", 
      SubscriptBox["r", "y"]}], "-", 
     RowBox[{
      FractionBox[
       SubscriptBox["r", "y"], 
       SubscriptBox["r", "x"]], "x"}]}]}], TraditionalForm]], "DisplayFormula",
  CellChangeTimes->{3.547295259628989*^9}],
 " derived from the reference spectrum. This is easiest to visualize if we \
imagine sum-normalizing to 2 rather than 1 and then producing the line \
directly from the coordinates of the reference point."
}], "Text",
 CellChangeTimes->{{3.54729389183506*^9, 3.547293898771063*^9}, {
  3.547294188979004*^9, 3.547294215348098*^9}, {3.547294337173019*^9, 
  3.547294354751046*^9}, {3.5472944039472933`*^9, 3.547294427248645*^9}, {
  3.547295165297695*^9, 3.547295188215331*^9}, {3.547295281231907*^9, 
  3.547295294807617*^9}, {3.54729536467223*^9, 3.547295481451844*^9}, {
  3.5472955409839354`*^9, 3.54729555412698*^9}, {3.547295621626774*^9, 
  3.5472956274938383`*^9}, {3.547296025723545*^9, 3.547296084074726*^9}, {
  3.547296299928235*^9, 3.547296308534292*^9}, {3.547296341274602*^9, 
  3.547296357677329*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pqn2D", "[", 
   RowBox[{"point_", ",", "refPt_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"point", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{"Total", "[", "point", "]"}]}]}], ",", 
      RowBox[{"r", "=", 
       RowBox[{"refPt", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", "t"}], 
        RowBox[{"r", "+", "t", "-", 
         RowBox[{"2", " ", "r", " ", "t"}]}]]}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "t"}], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "t"}]}], ")"}]}]}]]}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.547296885056863*^9, 3.547297067654871*^9}, {
  3.5472971758608723`*^9, 3.547297177566278*^9}}],

Cell[BoxData[
 RowBox[{"twelfthDiagram", "=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"Darker", "[", "Blue", "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "orig2D"}], "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}], 
        ",", "orig2D"}], "]"}], ",", 
      RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Point", "[", "#", "]"}], "&"}], ",", 
        RowBox[{"2", "sumNorm2D"}]}], "]"}], ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Sum-normalized to\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "2.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<twice nominal sum\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "2.0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Green", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"2", " ", "refPt2D"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", 
            RowBox[{"refPt2D", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"refPt2D", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "0"}], "}"}]}], "}"}], 
       "]"}], ",", "Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", 
            RowBox[{"refPt2D", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"2", "refPt2D"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"refPt2D", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "0"}], "}"}]}], "}"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Projected on line derived from reference\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1.3", ",", "0.25"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", "Orange", ",", 
      
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Point", "[", 
          RowBox[{"pqn2D", "[", 
           RowBox[{"#", ",", "refPt2D"}], "]"}], "]"}], "&"}], ",", 
        "orig2D"}], "]"}]}], "}"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5471598662264*^9, 3.547160104879672*^9}, {
   3.547160335177816*^9, 3.547160346330387*^9}, {3.547161024190194*^9, 
   3.5471610625535383`*^9}, {3.547161144522626*^9, 3.547161153551978*^9}, 
   3.547161262642654*^9, {3.547296269171825*^9, 3.547296274589121*^9}, {
   3.5472963531181383`*^9, 3.547296624729385*^9}, {3.547297085050363*^9, 
   3.547297149708939*^9}, {3.5472996554031553`*^9, 3.547299975626292*^9}, {
   3.547300011689507*^9, 3.5473000119453983`*^9}, {3.5473002042038918`*^9, 
   3.547300216892153*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 0, 
    NCache[
     Rational[2, 3], 0.6666666666666666]], PointSize[
   Medium], {PointBox[{2.172454345958343, 1.7744919345405104`}], 
    PointBox[{2.675301724350803, 1.359406145521423}], 
    PointBox[{2.87830990460933, 1.4709889319173473`}], 
    PointBox[{2.8813454193984884`, 1.073276896492814}], 
    PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
    PointBox[{2.26005835257858, 1.7655977040112563`}], 
    PointBox[{1.398151988227432, 2.097238014713233}], 
    PointBox[{3.0861624358478528`, 0.9274842729247682}], 
    PointBox[{2.255768229218814, 1.8706253682049265`}], 
    PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
    LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
    LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
    LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
    LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
    LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
    LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
    LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
    LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
    LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
    LineBox[{{0, 0}, {2.6917625635090703`, 1.2898265639379862`}}]}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 0, 
     NCache[
      Rational[2, 3], 0.6666666666666666]], 
    PointBox[{1.1008279269936085`, 0.8991720730063917}], 
    PointBox[{1.3261439542266173`, 0.6738560457733828}], 
    PointBox[{1.323574218647128, 0.6764257813528719}], 
    PointBox[{1.4572038436237285`, 0.5427961563762714}], 
    PointBox[{1.1379543299481443`, 0.8620456700518557}], 
    PointBox[{1.1228273458081228`, 0.8771726541918772}], 
    PointBox[{0.7999977038620407, 1.200002296137959}], 
    PointBox[{1.537834622615106, 0.46216537738489416`}], 
    PointBox[{1.0933364333577742`, 0.9066635666422256}], 
    PointBox[{1.3521046382980222`, 0.6478953617019776}]}, 
   {RGBColor[1, 0, 0], LineBox[{{2, 0}, {0, 2}}], 
    InsetBox["\<\"Sum-normalized to\"\>", {0.2, 2.1}, {-1, 1}], 
    InsetBox["\<\"twice nominal sum\"\>", {0.2, 2.}, {-1, 1}]}, 
   {RGBColor[0, 1, 0], PointSize[Medium], 
    PointBox[{1.2307642742976361`, 0.7692357257023639}], 
    LineBox[{{0, 0.7692357257023639}, {1.2307642742976361`, 0}}], 
    {Dashing[{Small, Small}], 
     LineBox[{{0, 0.7692357257023639}, {1.2307642742976361`, 
       0.7692357257023639}, {1.2307642742976361`, 0}}], 
     InsetBox["\<\"Projected on line derived from reference\"\>", \
{1.3, 0.25}, {-1, 1}], 
     {RGBColor[1, 0.5, 0], PointBox[{0.5335168303852654, 0.43578421531461}], 
      PointBox[{0.6788541421327645, 0.34494744436794045`}], 
      PointBox[{0.6771044880958197, 0.3460409895909732}], 
      PointBox[{0.7711650880630115, 0.2872524990678358}], 
      PointBox[{0.5563905625490326, 0.42148798302385865`}], 
      PointBox[{0.5470220705247503, 0.42734335184755007`}], 
      PointBox[{0.3619909455729116, 0.5429890158079196}], 
      PointBox[{0.8311241343887279, 0.24977770273520336`}], 
      PointBox[{0.5289498585312492, 0.43863860261017174`}], 
      PointBox[{0.6966566408435595, 0.3338207661720459}]}}}},
  Axes->True]], "Output",
 CellChangeTimes->{
  3.547296398514134*^9, 3.547296452540546*^9, 3.547296565106509*^9, 
   3.5472966262792597`*^9, 3.547297151383565*^9, 3.5472971833645353`*^9, 
   3.547298955242403*^9, 3.5472992322645197`*^9, {3.547299705792019*^9, 
   3.547299731832945*^9}, {3.547299777947949*^9, 3.547299797866198*^9}, {
   3.547299870716741*^9, 3.5472998790410213`*^9}, 3.547299980367738*^9, 
   3.547300014053316*^9, 3.547300217570469*^9, 3.547305157388445*^9, 
   3.5473764794228897`*^9, 3.547376599864031*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     RowBox[{"2", " ", "ry"}], "-", 
     RowBox[{
      FractionBox["ry", "rx"], "x"}]}]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5472942308176928`*^9, 3.547294318058679*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"2", " ", "rx"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547294288356659*^9, 3.547294319308563*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rQuotientForX2D", "[", 
   RowBox[{"t", ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"1", "-", "r"}]}], "}"}]}], "]"}], "/.", 
  RowBox[{"t", "\[Rule]", 
   SubscriptBox["x", "sn"]}]}]], "Input",
 CellChangeTimes->{{3.54729238716374*^9, 3.54729244560874*^9}, {
  3.547292492609865*^9, 3.547292520545245*^9}, {3.547292573624014*^9, 
  3.547292574316846*^9}, {3.547292708333634*^9, 3.547292726378437*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"1", "-", 
      SubscriptBox["x", "sn"]}], 
     RowBox[{"1", "-", "r"}]], "+", 
    FractionBox[
     SubscriptBox["x", "sn"], "r"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.547292710633663*^9, 3.547292726927107*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"1", "/", 
    RowBox[{"rQuotientForX2D", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"1", "-", "r"}]}], "}"}]}], "]"}]}], "]"}], "/.", 
  RowBox[{"t", "\[Rule]", 
   SubscriptBox["x", "sn"]}]}]], "Input",
 CellChangeTimes->{{3.54729238716374*^9, 3.54729244560874*^9}, {
  3.547292492609865*^9, 3.547292520545245*^9}, {3.547292573624014*^9, 
  3.547292574316846*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r"}], 
   RowBox[{"r", "+", 
    SubscriptBox["x", "sn"], "-", 
    RowBox[{"2", " ", "r", " ", 
     SubscriptBox["x", "sn"]}]}]]}]], "Output",
 CellChangeTimes->{3.547292521294043*^9, 3.5472925751939087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "t"}], ")"}], "/", 
   RowBox[{"rQuotientForX2D", "[", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"1", "-", "r"}]}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547297030564836*^9, 3.547297033668233*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "t"}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "t"}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "t"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.547297004792807*^9, 3.5472970353128138`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"t", "/", 
    RowBox[{"rQuotientForX2D", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"1", "-", "r"}]}], "}"}]}], "]"}]}], "]"}], "/.", 
  RowBox[{"t", "\[Rule]", 
   SubscriptBox["x", "sn"]}]}]], "Input",
 CellChangeTimes->{{3.5472344132275352`*^9, 3.5472344275598297`*^9}, {
   3.547234464076274*^9, 3.547234467032177*^9}, {3.547234552658388*^9, 
   3.547234556830678*^9}, {3.547234937721361*^9, 3.5472349384982443`*^9}, {
   3.5472923545528812`*^9, 3.5472923562555437`*^9}, 3.547293335294629*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
    SubscriptBox["x", "sn"]}], 
   RowBox[{"r", "+", 
    SubscriptBox["x", "sn"], "-", 
    RowBox[{"2", " ", "r", " ", 
     SubscriptBox["x", "sn"]}]}]]}]], "Output",
 CellChangeTimes->{3.5472344292853928`*^9, 3.547234467867215*^9, 
  3.54723455772357*^9, 3.547234939937727*^9, 3.54729235691895*^9, 
  3.547293336843952*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "t"}], ")"}], "/", 
    RowBox[{"rQuotientForX2D", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"1", "-", "r"}]}], "}"}]}], "]"}]}], "]"}], "/.", 
  RowBox[{"t", "\[Rule]", 
   SubscriptBox["x", "sn"]}]}]], "Input",
 CellChangeTimes->{{3.5472344132275352`*^9, 3.5472344275598297`*^9}, {
   3.547234464076274*^9, 3.547234467032177*^9}, {3.547234552658388*^9, 
   3.547234575649192*^9}, {3.547234930432253*^9, 3.547234931564485*^9}, {
   3.547292360953536*^9, 3.547292362670454*^9}, 3.547293342077932*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubscriptBox["x", "sn"]}], ")"}]}], 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["x", "sn"]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["x", "sn"]}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.54723457757213*^9, 3.547234932968823*^9, 
  3.5472923631055307`*^9, 3.547293344253744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "==", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "/.", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "==", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a", " ", 
                  "t"}], 
                 RowBox[{"a", "+", "t", "-", 
                  RowBox[{"2", " ", "a", " ", "t"}]}]]}]}], ",", 
              RowBox[{"y", "==", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "t"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"-", "t"}], "+", 
                  RowBox[{"a", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "t"}]}], ")"}]}]}]]}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"{", "t", "}"}]}], "]"}]}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "/.", 
     RowBox[{"a", "\[Rule]", "r"}]}], ",", 
    RowBox[{"{", "y", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547234595937725*^9, 3.547234633608436*^9}, {
  3.547234683763233*^9, 3.5472346910107727`*^9}, {3.547234955787736*^9, 
  3.547235056522997*^9}, {3.547235896061881*^9, 3.5472359048119926`*^9}, {
  3.5472934955409527`*^9, 3.5472935306944838`*^9}, {3.5472936426100483`*^9, 
  3.547293681835984*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"svars\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Equations may not give \
solutions for all \\\\\\\\\\\\\\\"solve\\\\\\\\\\\\\\\" \
variables.\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.547234691641083*^9, {3.5472349672727947`*^9, 3.547235057124154*^9}, 
   3.54723590606854*^9, {3.5472935151361322`*^9, 3.5472935314781437`*^9}, {
   3.54729365442591*^9, 3.547293682300192*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "r"}], "+", "x", "-", 
     FractionBox["x", "r"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5472346921089783`*^9, {3.547234967467186*^9, 3.5472350574985523`*^9}, 
   3.547235906201383*^9, {3.547293515219302*^9, 3.5472935315237703`*^9}, {
   3.547293654529928*^9, 3.547293682391491*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{745, 746},
WindowMargins->{{72, Automatic}, {0, Automatic}},
FrontEndVersion->"7.0 for Linux x86 (64-bit) (February 25, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 108, 1, 85, "Title"],
Cell[678, 25, 191, 2, 85, "Subtitle"],
Cell[872, 29, 99, 1, 32, "Subsubtitle"],
Cell[974, 32, 108, 1, 32, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1107, 37, 99, 1, 73, "Section"],
Cell[1209, 40, 719, 11, 143, "Text"],
Cell[1931, 53, 551, 9, 121, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2519, 67, 101, 1, 73, "Section"],
Cell[2623, 70, 295, 6, 55, "Text"],
Cell[2921, 78, 1028, 22, 121, "Text"],
Cell[3952, 102, 104, 1, 33, "Text"],
Cell[4059, 105, 510, 8, 99, "Text"],
Cell[CellGroupData[{
Cell[4594, 117, 667, 15, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[5264, 134, 823, 18, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[6090, 154, 1315, 32, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7408, 188, 2863, 58, 227, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10274, 248, 1705, 29, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[11982, 279, 5845, 122, 337, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]],
Cell[17839, 404, 503, 8, 77, "Text"],
Cell[18345, 414, 1007, 28, 107, "Input"],
Cell[CellGroupData[{
Cell[19377, 446, 1305, 37, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[20685, 485, 281, 8, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[20969, 495, 638, 15, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[21610, 512, 2227, 55, 469, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23886, 573, 121, 1, 73, "Section"],
Cell[24010, 576, 588, 10, 121, "Text"],
Cell[24601, 588, 891, 13, 165, "Text"],
Cell[25495, 603, 513, 8, 99, "Text"],
Cell[CellGroupData[{
Cell[26033, 615, 187, 2, 39, "Subsection"],
Cell[CellGroupData[{
Cell[26245, 621, 104, 1, 31, "Subsubsection"],
Cell[26352, 624, 322, 5, 77, "Text"],
Cell[CellGroupData[{
Cell[26699, 633, 1446, 34, 251, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[28148, 669, 398, 12, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[28549, 683, 1527, 42, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[30079, 727, 536, 14, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[30618, 743, 3373, 67, 288, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34037, 816, 111, 1, 31, "Subsubsection"],
Cell[34151, 819, 170, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[34346, 826, 334, 8, 34, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[34683, 836, 569, 10, 34, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[35255, 848, 1419, 37, 155, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[36677, 887, 525, 13, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[37205, 902, 2253, 50, 393, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39507, 958, 118, 1, 31, "Subsubsection"],
Cell[39628, 961, 1556, 31, 212, "Text"],
Cell[CellGroupData[{
Cell[41209, 996, 1816, 45, 179, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[43028, 1043, 2109, 52, 227, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[45140, 1097, 1487, 36, 179, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[46630, 1135, 547, 14, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[47180, 1151, 38951, 922, 394, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, {5}]],
Cell[CellGroupData[{
Cell[86165, 2078, 1990, 48, 179, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[88158, 2128, 2033, 48, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[90194, 2178, 1622, 38, 155, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[91819, 2218, 638, 15, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[92460, 2235, 12063, 275, 394, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]],
Cell[104535, 2513, 1109, 16, 209, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105681, 2534, 120, 1, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[105826, 2539, 645, 19, 59, "Input"],
Cell[106474, 2560, 398, 12, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106909, 2577, 815, 24, 90, "Input"],
Cell[107727, 2603, 439, 13, 47, "Output"]
}, Open  ]],
Cell[108181, 2619, 163, 6, 56, "Input"],
Cell[CellGroupData[{
Cell[108369, 2629, 914, 25, 56, "Input"],
Cell[109286, 2656, 12917, 220, 236, 5860, 102, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122240, 2881, 764, 22, 90, "Input"],
Cell[123007, 2905, 1655, 34, 332, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124699, 2944, 347, 10, 56, "Input"],
Cell[125049, 2956, 92, 2, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125178, 2963, 227, 6, 56, "Input"],
Cell[125408, 2971, 230, 6, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125675, 2982, 224, 5, 34, "Input"],
Cell[125902, 2989, 280, 8, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126219, 3002, 277, 8, 56, "Input"],
Cell[126499, 3012, 245, 8, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126781, 3025, 396, 12, 56, "Input"],
Cell[127180, 3039, 139, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127356, 3047, 366, 12, 56, "Input"],
Cell[127725, 3061, 160, 3, 34, "Output"]
}, Open  ]],
Cell[127900, 3067, 2135, 60, 134, "Text"],
Cell[130038, 3129, 1759, 48, 182, "Input"],
Cell[131800, 3179, 2322, 63, 302, "Input"],
Cell[CellGroupData[{
Cell[134147, 3246, 400, 11, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[134550, 3259, 402, 11, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[134955, 3272, 778, 17, 83, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[135736, 3291, 457, 9, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[136196, 3302, 668, 15, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[136867, 3319, 9618, 173, 469, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146534, 3498, 164, 2, 31, "Subsubsection"],
Cell[146701, 3502, 1533, 42, 127, "Text"],
Cell[CellGroupData[{
Cell[148259, 3548, 789, 21, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[149051, 3571, 436, 12, 56, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[149490, 3585, 1473, 35, 147, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[150966, 3622, 17562, 296, 346, 10215, 173, "CachedBoxData", "BoxData", \
"Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[168531, 3920, 914, 24, 107, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[169448, 3946, 542, 11, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[169993, 3959, 620, 14, 131, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[170616, 3975, 12389, 217, 397, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {8}]],
Cell[CellGroupData[{
Cell[183039, 4197, 950, 25, 34, "Input"],
Cell[183992, 4224, 337, 7, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184366, 4236, 759, 23, 59, "Input"],
Cell[185128, 4261, 263092, 4277, 300, 241653, 3924, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[448269, 8544, 118, 1, 31, "Subsubsection"],
Cell[448390, 8547, 1394, 39, 106, "Text"],
Cell[CellGroupData[{
Cell[449809, 8590, 1069, 30, 82, "Input"],
Cell[450881, 8622, 400, 12, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451318, 8639, 361, 10, 56, "Input"],
Cell[451682, 8651, 206, 6, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451925, 8662, 379, 11, 56, "Input"],
Cell[452307, 8675, 355, 11, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452699, 8691, 713, 23, 56, "Input"],
Cell[453415, 8716, 973, 32, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454425, 8753, 1010, 32, 68, "Input"],
Cell[455438, 8787, 265, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455740, 8801, 121, 2, 34, "Input"],
Cell[455864, 8805, 156, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456057, 8814, 406, 12, 56, "Input"],
Cell[456466, 8828, 377, 12, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456880, 8845, 1330, 35, 130, "Input"],
Cell[458213, 8882, 15189, 255, 372, 9870, 166, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473439, 9142, 456, 13, 56, "Input"],
Cell[473898, 9157, 185, 3, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474120, 9165, 376, 11, 56, "Input"],
Cell[474499, 9178, 113, 3, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474649, 9186, 741, 23, 56, "Input"],
Cell[475393, 9211, 9285, 160, 227, 3186, 58, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484715, 9376, 173, 4, 34, "Input"],
Cell[484891, 9382, 19664, 331, 227, 12886, 218, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504592, 9718, 1644, 39, 130, "Input"],
Cell[506239, 9759, 15389, 258, 372, 9880, 166, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[521643, 10020, 590, 9, 99, "Text"],
Cell[CellGroupData[{
Cell[522258, 10033, 1559, 41, 107, "Input"],
Cell[523820, 10076, 3416, 98, 267, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527273, 10179, 428, 13, 56, "Input"],
Cell[527704, 10194, 279, 8, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528020, 10207, 633, 20, 34, "Input"],
Cell[528656, 10229, 362, 12, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529055, 10246, 813, 23, 83, "Input"],
Cell[529871, 10271, 563, 16, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530471, 10292, 451, 15, 34, "Input"],
Cell[530925, 10309, 231, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531193, 10322, 728, 24, 59, "Input"],
Cell[531924, 10348, 350, 11, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532311, 10364, 169, 4, 34, "Input"],
Cell[532483, 10370, 72, 1, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532592, 10376, 181, 4, 34, "Input"],
Cell[532776, 10382, 112, 1, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532925, 10388, 695, 21, 59, "Input"],
Cell[533623, 10411, 159, 4, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533819, 10420, 2730, 74, 286, "Input"],
Cell[536552, 10496, 10481, 178, 372, 4701, 82, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[547048, 10677, 805, 25, 83, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[547878, 10706, 168, 3, 32, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[548071, 10713, 709, 15, 124, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[548783, 10730, 718, 17, 56, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[549504, 10749, 662, 19, 47, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[550181, 10771, 203, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[550409, 10780, 803, 20, 56, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[551215, 10802, 1490, 50, 128, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[552708, 10854, 793, 20, 56, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[553504, 10876, 398, 11, 48, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[553905, 10889, 2081, 62, 266, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[555989, 10953, 20947, 355, 388, 4021, 75, "CachedBoxData", "BoxData", \
"Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[577006, 11316, 157, 2, 39, "Subsection"],
Cell[577166, 11320, 510, 8, 99, "Text"],
Cell[CellGroupData[{
Cell[577701, 11332, 571, 14, 107, "Input"],
Cell[578275, 11348, 2150, 48, 393, "Output"]
}, {2}]],
Cell[580437, 11399, 1502, 50, 84, "Text"],
Cell[581942, 11451, 2401, 75, 86, "Text"],
Cell[584346, 11528, 296, 11, 41, "DisplayFormula"],
Cell[584645, 11541, 1966, 50, 170, "Text"],
Cell[586614, 11593, 1424, 45, 108, "Input",
 InitializationCell->True],
Cell[588041, 11640, 3937, 105, 323, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[591981, 11747, 3803, 69, 246, "Output"],
Cell[CellGroupData[{
Cell[595809, 11820, 304, 9, 54, "Input"],
Cell[596116, 11831, 195, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596348, 11841, 455, 11, 34, "Input"],
Cell[596806, 11854, 335, 11, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597178, 11870, 482, 13, 34, "Input"],
Cell[597663, 11885, 359, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598059, 11901, 348, 10, 34, "Input"],
Cell[598410, 11913, 495, 17, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598942, 11935, 610, 14, 34, "Input"],
Cell[599555, 11951, 486, 14, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600078, 11970, 655, 16, 34, "Input"],
Cell[600736, 11988, 623, 21, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601396, 12014, 2013, 51, 209, "Input"],
Cell[603412, 12067, 682, 13, 24, "Message"],
Cell[604097, 12082, 417, 10, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
