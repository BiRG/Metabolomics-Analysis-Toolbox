(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    710114,      14678]
NotebookOptionsPosition[    691226,      14166]
NotebookOutlinePosition[    691692,      14184]
CellTagsIndexPosition[    691649,      14181]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Visualizing Normalization", "Title",
 CellChangeTimes->{{3.547139824257725*^9, 3.547139830062993*^9}}],

Cell["A graphical presentation of NMR normalization methods.", "Subtitle",
 CellChangeTimes->{{3.547140124907233*^9, 3.547140128682735*^9}, {
  3.5471401699783297`*^9, 3.547140176641282*^9}}],

Cell["Eric Moyer", "Subsubtitle",
 CellChangeTimes->{{3.547139833729444*^9, 3.547139834949341*^9}}],

Cell["Started 27 May 2012", "Subsubtitle",
 CellChangeTimes->{{3.547139839967902*^9, 3.547139847471291*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.5471398550090647`*^9, 3.547139859094948*^9}}],

Cell["\<\
Normalization methods in NMR spectrography (and probably other spectrographic \
fields as well) are typically explained by the procedures that you go through \
to perform them and justified by arguments about the \"real concentration.\" \
Another way to look at normalization methods is to examine them as geometric \
operations on a vector space. This gives a different understanding of what is \
occurring, which can give the practitioner a deeper intuition about \
trade-offs he makes when he says, \"sum-normalize the data.\"\
\>", "Text",
 CellChangeTimes->{{3.547139862175673*^9, 3.547139961290236*^9}, {
  3.547140021256085*^9, 3.547140090613758*^9}, {3.5471503141743526`*^9, 
  3.547150319533565*^9}}],

Cell["\<\
I look at each spectrum generated as a point in a vector space, one variable \
in the vector for each value measured. I am mainly concerned with \
frequency-domain spectra, since it is on these that the normalization methods \
I present are typically used. The normalization methods do not solve extant \
problems on time-domain spectra, so they are not used there. However, my \
points are just as valid for time-domain spectra, since they too are vectors.\
\
\>", "Text",
 CellChangeTimes->{{3.5471402676850863`*^9, 3.547140474189971*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum Normalization", "Section",
 CellChangeTimes->{{3.54714020719221*^9, 3.547140209879217*^9}}],

Cell["\<\
Sum normalization takes each spectrum, divides it by its sum, and then \
multiplies it by a constant. After this operation, all spectra have the same \
sum.\
\>", "Text",
 CellChangeTimes->{{3.547140255131291*^9, 3.547140264629607*^9}, {
  3.547140534722814*^9, 3.547140621495376*^9}}],

Cell[TextData[{
 "If the spectra are interpreted as points in an n-dimensional vector space, \
this projects all points onto an n-1 dimensional subspace (hyperplane) along \
a line between the original point and the origin. In 3 dimensions, it \
projects points onto a the plane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "+", "y", "+", "z"}], "=", "s"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " . In 2 dimensions, all points are projected the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"s", "-", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The location of these figures is determined by the constant."
}], "Text",
 CellChangeTimes->{{3.547140681651354*^9, 3.5471406959475613`*^9}, {
   3.547140770921924*^9, 3.547140855582036*^9}, {3.547140892956802*^9, 
   3.547140993727613*^9}, {3.547141063390345*^9, 3.547141080699884*^9}, {
   3.547141114226123*^9, 3.547141132073366*^9}, 3.547150325936315*^9, {
   3.547304990758165*^9, 3.547305069804627*^9}}],

Cell["How can we see this?", "Text",
 CellChangeTimes->{{3.547141139476688*^9, 3.5471411457860193`*^9}}],

Cell["\<\
First, consider that multiplying a (non-zero) point by a constant moves it \
along a line connecting the point with the origin. Multiplying by a positive \
number less than 1 moves it closer to the origin. Multiplying by a number \
greater than 1 moves farther from the origin. And multiplying it by a \
negative number moves it away from the origin on the opposite side.\
\>", "Text",
 CellChangeTimes->{{3.547141147385028*^9, 3.547141175159586*^9}, {
  3.547145618896906*^9, 3.547145674137457*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xPlusYEq1TwoD", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", "-", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547141252885395*^9, 3.547141300559654*^9}, {
   3.547141537589252*^9, 3.5471416045080423`*^9}, {3.547142210245225*^9, 
   3.5471422209708843`*^9}, {3.5471433024178123`*^9, 3.547143453267515*^9}, 
   3.54714551168288*^9, {3.5473052214608*^9, 3.547305270898307*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"yEq2X", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"3", "/", "2"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Blue", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471415783926497`*^9, 3.547141591548118*^9}, {
   3.5471416246544447`*^9, 3.547141673527576*^9}, 3.5471418890719557`*^9, {
   3.547142204740473*^9, 3.5471422068217287`*^9}, {3.547142262492856*^9, 
   3.5471422658793793`*^9}, {3.547142389810174*^9, 3.547142390770712*^9}, {
   3.547144733799*^9, 3.547144739646644*^9}, 3.547145511683155*^9, {
   3.547305153157874*^9, 3.547305170513158*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptX3HalvesY3AndProjection", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", "/", "2"}], ",", "3"}], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"2", "/", "3"}]}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Medium"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", 
        RowBox[{"Darker", "[", "Magenta", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714168006174*^9, 3.547141719704781*^9}, {
   3.547141768927044*^9, 3.547141787089158*^9}, {3.54714202150038*^9, 
   3.5471420306007233`*^9}, {3.547142113270247*^9, 3.5471421266363688`*^9}, {
   3.5471421704905167`*^9, 3.54714217578865*^9}, {3.547142272496965*^9, 
   3.547142285318091*^9}, {3.54714234509508*^9, 3.54714236665021*^9}, {
   3.5471447451479273`*^9, 3.547144750372863*^9}, {3.5471448821963453`*^9, 
   3.547144900705575*^9}, 3.547145511683342*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"firstDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xPlusYEq1TwoD", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Constant sum surface\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Spectrum\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"3", "/", "2"}], ",", 
              RowBox[{"11", "/", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Darker", "[", "Blue", "]"}], "}"}]}]}], "]"}]}], "}"}],
         "]"}], ",", "yEq2X", ",", "ptX3HalvesY3AndProjection"}], "}"}], ",", 
     
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "300", "}"}]}], ",", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714178902284*^9, 3.5471418310216312`*^9}, {
   3.547141879108432*^9, 3.547141882302959*^9}, {3.547142036570444*^9, 
   3.547142070537751*^9}, {3.5471421834856787`*^9, 3.547142189015986*^9}, {
   3.547142300656996*^9, 3.5471423124001207`*^9}, {3.547142380518396*^9, 
   3.547142498330698*^9}, {3.5471426515745068`*^9, 3.547142657910717*^9}, {
   3.547142712617209*^9, 3.5471429125192623`*^9}, {3.5471430778815613`*^9, 
   3.547143110504135*^9}, {3.547143465248744*^9, 3.5471434837149267`*^9}, {
   3.5471436268941517`*^9, 3.547143648446703*^9}, 3.547143856228594*^9, {
   3.547143904330501*^9, 3.547143979443432*^9}, {3.547144014076792*^9, 
   3.547144109029076*^9}, {3.5471441448632727`*^9, 3.547144145375992*^9}, {
   3.5471442167831573`*^9, 3.5471442495488977`*^9}, {3.547144331187319*^9, 
   3.547144335358005*^9}, {3.547144367271785*^9, 3.5471445103343353`*^9}, {
   3.547144540485724*^9, 3.5471446496300507`*^9}, {3.547144686554137*^9, 
   3.547144720330497*^9}, {3.547144754121471*^9, 3.547144858472582*^9}, {
   3.5471449348656187`*^9, 3.547144947175726*^9}, {3.547145172647348*^9, 
   3.547145195816874*^9}, {3.547145248487441*^9, 3.547145317295732*^9}, 
   3.547145511683733*^9, {3.547149206811069*^9, 3.547149213441887*^9}, {
   3.5473053103536587`*^9, 3.547305379677505*^9}, {3.5473054176853523`*^9, 
   3.547305484881413*^9}}],

Cell[BoxData[
 RowBox[{"firstDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "firstDiagram", ",", 
    "\"\<Figure 1: Sum Normalization in Two Dimensions\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54714178902284*^9, 3.5471418310216312`*^9}, {
   3.547141879108432*^9, 3.547141882302959*^9}, {3.547142036570444*^9, 
   3.547142070537751*^9}, {3.5471421834856787`*^9, 3.547142189015986*^9}, {
   3.547142300656996*^9, 3.5471423124001207`*^9}, {3.547142380518396*^9, 
   3.547142498330698*^9}, {3.5471426515745068`*^9, 3.547142657910717*^9}, {
   3.547142712617209*^9, 3.5471429125192623`*^9}, {3.5471430778815613`*^9, 
   3.547143110504135*^9}, {3.547143465248744*^9, 3.5471434837149267`*^9}, {
   3.5471436268941517`*^9, 3.547143648446703*^9}, 3.547143856228594*^9, {
   3.547143904330501*^9, 3.547143979443432*^9}, {3.547144014076792*^9, 
   3.547144109029076*^9}, {3.5471441448632727`*^9, 3.547144145375992*^9}, {
   3.5471442167831573`*^9, 3.5471442495488977`*^9}, {3.547144331187319*^9, 
   3.547144335358005*^9}, {3.547144367271785*^9, 3.5471445103343353`*^9}, {
   3.547144540485724*^9, 3.5471446496300507`*^9}, {3.547144686554137*^9, 
   3.547144720330497*^9}, {3.547144754121471*^9, 3.547144858472582*^9}, {
   3.5471449348656187`*^9, 3.547144947175726*^9}, {3.547145172647348*^9, 
   3.547145195816874*^9}, {3.547145248487441*^9, 3.547145317295732*^9}, 
   3.547145511683733*^9, {3.5471492177403812`*^9, 3.547149234357081*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[1, 0, 0], 
       LineBox[CompressedData["
1:eJwtlGs01HkcxlHbRe3kslNrUIipWbrJ0NnkKytqEOsSdpVOuZSUtGkLbVHE
LjVrZSttplW6Tyk6aeWrTFYyJzG143LGpWnWaMx/YhhmxvzWntOL5zzvnhef
c56P/Y6U0HgTIyOjoKn838+32fcQQuGOu1yKEALMMXbgoXEKLXUM5lo9gbxC
To1CRaHA72rMoXECgbU//NbRRyFTUvNCoSLQZtXo/6CBQvncd+UdfQR6RUn3
Ek5RuD+JHfWggYCeU5UlpFH4k1NnfcIpAm4e/o6ltkq8ULq4SEgj4I3mPX9a
KJDXk5fy7WwDrOBduxT61SB+2RoWzKJPQvHlirySgAFsDgnzfemkh5JQzoCf
rwwDWE4HFzvoID2mJrAsVorr+DEVr1ZoQUcXMuNC+9Hwc4KlK2sChqlNzk82
9+KE5srZbUvG4fcNjrszu7oxwXwTo8ddAydMDQmRTWK8nI0ddNcxYGft25et
FWEQr7SU5zUK7Wsqm9/Aa2Rvvn1gNFgNEWXpjtN3NeOHsDMnjYJGgLuyvlHf
+QwtZojPxX4/DBlGq45tjqzGWWYj/x6M+AjWp2+aWdLP4pqbPoHh4SrgS40v
z04ph+o+Kn7eCyUEz5n5aHC8BkoWkuv99Qo4v/y8Z16RAL6r6lBt7RqEBVYX
/eTNLfB4Ioq/QTgAEu+j7Zn72uDX2PUlT5tkkNxA17q5vgXOwtHs9zIp1Mvi
2F/4dwKvIOh9Wnc/BEfZJpbPl4A4LDWQr+6FIwJjhxx5L9B+1P816iKBZcta
GYGqfqi4GtucuKgTDJ7ttD0iKUzPje5nRb4F1z9WFdr2yeDi84vvBevaQNXN
7FsrHQDvgrgMs5QWaGkIWXlfMAitqlovjyEBzNG9mV0rVMD1JSGVi4pqILHj
jMS2Sgnc3SYLHOquQEXAfkHaRhUcl1vYpNoW4cvQxm3MgI9wzyVeEX+/Co/d
eTiW7TkM43uqqxdIn2LcPVEYy2cE7E5cvcQxb0bxjEJ+hrsatlu7PVZ2tKK5
0Ew9jTkKvm7ftM47J8LMtc8Mb1hjoBqapYu8Jsa0yc9nhttoQDTqYROS2o28
xFMi68Xj4P2KdsPDrxe561sKrJwmpvbPWa3m9CMt5ZbPFFKwkWzJyXWWYp3v
oycPGTrIzN+fsZctw8m9se5baHrQdtUl37YZQOOZbeedJ/VgQruyOlIrR/eN
B55xjAyQzJWePGukQG337QH6sAHUNdGvnaVD6JvcxA0aM0CemGtfqhjCQt27
NTlaAzA0f6eajg6hHcM6X20y9Qs3dwv5Z0r0j8xntVsSOM23CKtYosTi1/FJ
XDaBpeUvRXZ7lLi8caHC9AiBmIJ1YvqwEg9HfF3sc5SA6ubBpTlaJT6VRnim
ZxHIfnHrsNqEwvBphQXyfALXZzCs2i0pzPDWuTRdIDB2fCyay6aw6fE/e3Nq
CXDT7naZHqHQgjNCf1JPwLFY5pyeRWFMB61OLSDw6L5tpjyfQkqzgRYnJCCh
frFpukDhfHYV30dCwCVp19acWgq3C15tSe8nUJ9XdkctoPBG2AdDpYxA6LW3
kzuFFHoecAi2pwgclvpe8pFQmGvspYkaITB3WqayUkZhKze6jKshwLN/4GVP
UciwS/Nv0k15xHvwNFdD4c5P3mr85LH/AH2ko8c=
        "]]}}, {
      InsetBox[
      "\"Constant sum surface\"", {0.6, 0.5}, {-1, 0}, BaseStyle -> {
         RGBColor[1, 0, 0]}], 
      InsetBox["\"Spectrum\"", 
       NCache[{
         Rational[3, 2], 
         Rational[11, 4]}, {1.5, 2.75}], {-1, 0}, BaseStyle -> {
         RGBColor[0, 0, 
          Rational[2, 3]]}]}, {{}, {}, {
       RGBColor[0, 0, 
        NCache[
         Rational[2, 3], 0.6666666666666666]], 
       LineBox[CompressedData["
1:eJw9xX1MFGQcB/Dj9XEsMze6lQrzBYhwDldpUpPvT206LcJ0AoKhvIpEQKx8
gTDFzsruGC+1RSTIH0wZTCdOmJooqXCNxDkoxuxATlDvUDnujnsEgqv2e3Z/
fPZZkpq3LcNbo9HE/Of/n7+fe3Jr3p5oPj/6ePpr4XfCosF/iNvPhrMNnpNh
u7BBn+M5FyVax6Jdng+jq3PLyHbPpcg7tf/3WM81aNfrr8R4Pgs//wJhyT6n
vobNX6XoLsa1qjvReijDVH+3Td2N/sRPIgsO3FD3YP4mQ2Y7dar78FJvRvPb
SV3qe1i2OKdBl3pHPYg1pk+71lXcVQ+hferIB73VPeoHyLpmNLaV/KkeQVXa
6QUv7+lTP8KKhCHXbEa/2oIBR2w3bb6nHoV98NWV2h0m9VOUNRbujY8fVI8h
bN6cmIPV99U2tOQfaSytHVKPoze0UnxUYVbbEXKsJ/zjqgdqB6K2Dr5VWz2s
dsKUr4s26EfUE2iO2jn3VvlDtQvauM7+M7pHagmYNeW/ff5Y/RxV2qy5YQct
6kmU1Oz7ZlW2VT2Fk90/dZTmj6qnUZxbaQsqeKL+B6Mp4a/sTH2qnsH3M1bf
gcxn6llcfrJp7MXEMbUbf4WuMb8TYlNrKOv1tMjKeht4DbXHJRWtCx4H70Vv
JlgbAuvGwXtRzrGNfWsX2sF707eZc6a8Ku3gvelqUIrbGugA70OXZo/7RJQ6
wPtQ94UNVsN8J3hfurU4s0Nf4QTvS1+37qgbCpgA70e7lv6dnGSYAO9H0y2R
C5cLF3h/+tLH8sePh13g/UkbEpUSqpHgBR3IjXMGHJLgBS1anW4MK5LgBV2f
+eyX9cUSvKAAg+G9wqMSvKCaxps/WL6T4AV1PH5jlfFnCV5QYNq8/bpfJXhB
lyKCttS1SfCCku0RwVevS/CCzhzd2OG8KcELevdUsTb9tgQvKNU02rJ+QIIX
JOonTyTfl+AFNeWI3YVmCV6Qa3qpaH4owQs6sSAxfsmYBC8o0rx3+dpxCV5Q
b8MX7gSHBC8oOKr8dJmU4AXd0NQWNU1K8IKyjE2xxmkJXtALZZeXDc9I8ILO
xxul2y3BC/oXbzRR4Q==
        "]]}}, 
     GraphicsComplexBox[{{1.5, 3.}, {1.5, 3.}, {0.3333333333333333, 
      0.6666666666666666}, {0.3333333333333333, 0.6666666666666666}, {1.5, 
      3.}, {1.5, 3.}, {0.3333333333333333, 0.6666666666666666}, {
      0.3333333333333333, 0.6666666666666666}}, {{
        RGBColor[0, 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        InsetBox[
         StyleBox[
         "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> Medium], 
         5], 
        InsetBox[
         StyleBox[
         "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> Medium], 
         6]}, {
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        InsetBox[
         StyleBox[
         "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> Medium], 
         7], 
        InsetBox[
         StyleBox[
         "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> Medium], 
         8]}, {}}]}, AspectRatio -> Automatic, Axes -> True, 
    AxesOrigin -> {0, 0}, ImageSize -> {300}, PlotRange -> All, 
    PlotRangeClipping -> False, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],"\"Figure 1: Sum Normalization in Two Dimensions\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547145309986032*^9, 3.5471453180521*^9}, 
   3.547145511683803*^9, 3.547149238662257*^9, 3.547305277521377*^9, {
   3.54730531496458*^9, 3.547305357110805*^9}, 3.547305486309402*^9}]
}, {6}]],

Cell["\<\
The point at which the line through the origin intersects with the surface of \
points whose sum equals the target sum of the sum-normalization is the \
normalized point. Figures 1 and 2 show sum-normalization in two and three \
dimensions with a target sum of 1.\
\>", "Text",
 CellChangeTimes->{{3.547145562244855*^9, 3.547145593306345*^9}, {
  3.5471456864467897`*^9, 3.5471457210290194`*^9}, {3.547149581268351*^9, 
  3.547149600562848*^9}, {3.547149683045044*^9, 3.5471496867804728`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumEq1ThreeD", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", "Red", ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.547305653534075*^9, 3.547305800606991*^9}, {
  3.547305830727653*^9, 3.547305837778078*^9}, {3.547305898689085*^9, 
  3.547305964609899*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yEq2XThreeD", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", "Blue", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "2"}], ",", "0", ",", "3"}], "}"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "2"}], ",", "0", ",", "3"}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Origin\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.2"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "3"}], ",", "0", ",", 
         RowBox[{"2", "/", "3"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.5471495704037113`*^9, {3.54730596745403*^9, 3.5473060663645973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"secondDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"sumEq1ThreeD", ",", "yEq2XThreeD"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547149570403741*^9}],

Cell[BoxData[
 RowBox[{"secondDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "secondDiagram", ",", 
    "\"\<Figure 2: Sum Normalization in Three Dimensions\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547148102046866*^9, 3.547148119923295*^9}, {
   3.547148385478323*^9, 3.5471484105255127`*^9}, {3.547149333549288*^9, 
   3.547149402974711*^9}, 3.547149570403777*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[1, 0, 0], 
      Opacity[0.85], 
      Polygon3DBox[{{-1, -1, 3}, {1, -1, 1}, {1, 1, -1}, {-1, 1, 1}}]}, {
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      Line3DBox[
       NCache[{{0, 0, 0}, {
          Rational[3, 2], 0, 3}}, {{0, 0, 0}, {1.5, 0, 3}}]], {
       PointSize[Large], 
       Point3DBox[
        NCache[{
          Rational[3, 2], 0, 3}, {1.5, 0, 3}]], 
       Text3DBox["\"Origin\"", {0, 0, 0}, {-1.2, 0}], {
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        Point3DBox[
         NCache[{
           Rational[1, 3], 0, 
           Rational[2, 3]}, {0.3333333333333333, 0, 0.6666666666666666}]]}}}},
     Axes -> True, ImageSize -> {300.2629681393381, 432.}, 
    ViewPoint -> {2.8449534536648784`, -1.810962179339618, 
     0.2768678953612902}, 
    ViewVertical -> {0.7011121767154426, -0.5713974341174561, 
     0.8522683193990057}],
   "\"Figure 2: Sum Normalization in Three Dimensions\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547149407009749*^9, 3.547149570403864*^9, {3.547305818619281*^9, 
   3.547305841858737*^9}, 3.5473060692827873`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probabilistic Quotient Normalization", "Section",
 CellChangeTimes->{{3.547150113963293*^9, 3.547150123581194*^9}}],

Cell["\<\
Probabilistic Quotient Normalization (PQN) (Dieterle 2006) is a method that \
is more resistant to large fluctuations in parts of the spectrum due to \
factors other than dilution (such as treatments). Unlike sum-normalization, \
which normalizes each spectrum independently, PQN is designed to normalize \
several related spectra simultaneously, using their commonality to improve \
its estimates.\
\>", "Text",
 CellChangeTimes->{{3.547151802331935*^9, 3.547151867460561*^9}, {
  3.547151898339778*^9, 3.5471519206995068`*^9}, {3.547152260891184*^9, 
  3.547152261621705*^9}}],

Cell["\<\
PQN starts with sum-normalization. Next, the spectra are binned to take care \
of small peak-shifts. Then a reference spectrum is created. The original \
paper mentions several methods of creating reference spectra. However, for \
simplicity, we will choose the method that takes the median spectrum of all \
the spectra being analyzed. Then, for each spectrum to be normalized, the \
reference spectrum is divided by it and the median of the quotients is \
selected as the normalization factor. Finally the spectra are multiplied by \
their respective normalization factors.\
\>", "Text",
 CellChangeTimes->{{3.547151910238988*^9, 3.547152058749381*^9}, {
   3.547152106312064*^9, 3.547152258965447*^9}, 3.547152308258853*^9, {
   3.5471528738397007`*^9, 3.5471529206481743`*^9}, {3.5471529893927917`*^9, 
   3.547153010479535*^9}, {3.547153047624489*^9, 3.5471531343946333`*^9}}],

Cell["\<\
For the following discussion, we will assume that the initial spectra have no \
negative values. Negative values result from noise or special acquisition \
methods like dephasing the water signal and should be removed during \
preprocessing. Though PQN is well-defined with negative values, their \
inclusion unnecessarily complicates the explanation.\
\>", "Text",
 CellChangeTimes->{{3.547153163841505*^9, 3.547153301245123*^9}, {
   3.547153356493964*^9, 3.547153405823414*^9}, 3.547296335988079*^9}],

Cell[CellGroupData[{

Cell["2D PQN (the canonical way)", "Subsection",
 CellChangeTimes->{{3.547153710904858*^9, 3.5471537155820103`*^9}, {
   3.54729612429014*^9, 3.547296132204031*^9}, 3.547296338247633*^9}],

Cell[CellGroupData[{

Cell["Sum Normalize", "Subsubsection",
 CellChangeTimes->{{3.547221736512328*^9, 3.547221739656698*^9}}],

Cell["\<\
The first step of PQN we've seen before, we sum-normalize. In the diagrams, I \
sum-normalize to 1, since it is easy, but everything works out the same, just \
scaled a bit differently if you sum-normalize to a different constant.\
\>", "Text",
 CellChangeTimes->{{3.5471614958910217`*^9, 3.547161555374159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"orig2D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2.172454345958343`", ",", "1.7744919345405104`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.675301724350803`", ",", "1.359406145521423`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.87830990460933`", ",", "1.4709889319173473`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.8813454193984884`", ",", "1.073276896492814`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.3606473361385762`", ",", "1.7882842580601983`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.26005835257858`", ",", "1.7655977040112563`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.398151988227432`", ",", "2.097238014713233`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.0861624358478528`", ",", "0.9274842729247682`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.255768229218814`", ",", "1.8706253682049265`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.6917625635090703`", ",", "1.2898265639379862`"}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547159479445242*^9, 3.5471594971325607`*^9}, {
   3.547159608984823*^9, 3.547159612130081*^9}, 3.547160204004696*^9, 
   3.5471609689527607`*^9, 3.547161262639394*^9, {3.54729856994198*^9, 
   3.547298571324485*^9}, 3.5472990518051023`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNorm2D", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", "orig2D"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547160301710615*^9, 3.5471603283489027`*^9}, 
   3.547161262642583*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thirdDiagram", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"Darker", "[", "Blue", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "orig2D"}], "]"}], 
       ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          ",", "orig2D"}], "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5471598662264*^9, 3.547160104879672*^9}, {
   3.547160335177816*^9, 3.547160346330387*^9}, {3.547161024190194*^9, 
   3.5471610625535383`*^9}, {3.547161144522626*^9, 3.547161153551978*^9}, 
   3.547161262642654*^9}],

Cell[BoxData[
 RowBox[{"thirdDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "thirdDiagram", ",", 
    "\"\<Figure 3: First step of 2D PQN: Sum-Normalize\>\"", ",", "Bottom", 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161155778019*^9, 3.547161226824782*^9}, 
   3.547161262642714*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{2.172454345958343, 1.7744919345405104`}], 
      PointBox[{2.675301724350803, 1.359406145521423}], 
      PointBox[{2.87830990460933, 1.4709889319173473`}], 
      PointBox[{2.8813454193984884`, 1.073276896492814}], 
      PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
      PointBox[{2.26005835257858, 1.7655977040112563`}], 
      PointBox[{1.398151988227432, 2.097238014713233}], 
      PointBox[{3.0861624358478528`, 0.9274842729247682}], 
      PointBox[{2.255768229218814, 1.8706253682049265`}], 
      PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
      LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
      LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
      LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
      LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
      LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
      LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
      LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
      LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
      LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
      LineBox[{{0, 0}, {2.6917625635090703`, 1.2898265639379862`}}]}, {
      RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}}, Axes -> True],
   "\"Figure 3: First step of 2D PQN: Sum-Normalize\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161234422071*^9, 3.547161262642786*^9}, 
   3.547298576671081*^9, 3.547299054955244*^9}]
}, {5}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reference Spectrum", "Subsubsection",
 CellChangeTimes->{{3.5472217577756367`*^9, 3.547221761264093*^9}}],

Cell["\<\
Next, you generate a reference spectrum by taking the median of each variable.\
\>", "Text",
 CellChangeTimes->{{3.547161561218967*^9, 3.5471615916008368`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refPt2D", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Median", ",", 
    RowBox[{"Transpose", "[", "sumNorm2D", "]"}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547161686979788*^9, 3.547161745407681*^9}, 
   3.5471623243637466`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6153821371488181`", ",", "0.38461786285118194`"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547161731438332*^9, 3.547161746942959*^9}, 
   3.547162324364176*^9, 3.547223110129066*^9, 3.547227411129094*^9, 
   3.547231697124165*^9, 3.5472914091316833`*^9, {3.547291776552536*^9, 
   3.547291805599752*^9}, 3.547292195681592*^9, 3.5472922762440023`*^9, 
   3.547298596172872*^9, 3.5472990620470123`*^9, 3.547305156248396*^9, 
   3.54737647859179*^9, 3.5473765994427156`*^9, 3.547457208644656*^9, 
   3.547457472129826*^9, 3.547501262149023*^9, 3.547567139828453*^9, 
   3.547574407898823*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourthDiagram", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "Green", ",", 
       
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", "refPt2D", "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<Reference spectrum\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.025", ",", "0"}], "}"}], "+", "refPt2D"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547161614449*^9, 3.5471616561965446`*^9}, {
   3.547161755130888*^9, 3.547161789570849*^9}, {3.5471620647540607`*^9, 
   3.547162251470367*^9}, 3.547162324364464*^9}],

Cell[BoxData[
 RowBox[{"fourthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fourthDiagram", ",", 
    "\"\<Figure 4: Second step of 2D PQN: Create reference spectrum\>\"", ",",
     "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547162273031047*^9, 3.547162324364779*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], 
     PointSize[Medium], {
      PointBox[{0.5504139634968043, 0.44958603650319584`}], 
      PointBox[{0.6630719771133087, 0.3369280228866914}], 
      PointBox[{0.661787109323564, 0.33821289067643595`}], 
      PointBox[{0.7286019218118642, 0.2713980781881357}], 
      PointBox[{0.5689771649740721, 0.43102283502592786`}], 
      PointBox[{0.5614136729040614, 0.4385863270959386}], 
      PointBox[{0.39999885193102036`, 0.6000011480689795}], 
      PointBox[{0.768917311307553, 0.23108268869244708`}], 
      PointBox[{0.5466682166788871, 0.4533317833211128}], 
      PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
      RGBColor[1, 0, 0], 
      LineBox[{{1, 0}, {0, 1}}]}, {
      RGBColor[0, 1, 0], 
      PointSize[Large], 
      PointBox[{0.6153821371488181, 0.38461786285118194`}], 
      InsetBox[
      "\"Reference spectrum\"", {0.6403821371488181, 
       0.38461786285118194`}, {-1, 0}]}}, Axes -> True],
   "\"Figure 4: Second step of 2D PQN: Create reference spectrum\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471623055433273`*^9, 3.547162324365074*^9}, 
   3.54729859818176*^9, 3.54729906369809*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reciprocal Quotient Spectra", "Subsubsection",
 CellChangeTimes->{{3.547221774607359*^9, 3.547221783056197*^9}}],

Cell[TextData[{
 "In the next step, I make a change to the procedure that makes it easier to \
understand. Rather than dividing the reference spectrum by each of the \
individual spectra to get the quotient spectra, I divide each spectrum by the \
reference spectrum. This leaves me with quotient spectra that have the \
reciprocals of the proper coordinates. Because all of the individual \
coordinates are positive, this just reverses their ranks. The median element \
will still be the same. So, I can just divide by the median rather than \
multiplying to get the same final normalization. In the case of an even \
number of points, you can't get the reciprocal of the average by taking the \
average of the reciprocals. Thus, if the center two reciprocal quotients are ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the reciprocal quotient median is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    FractionBox[
     RowBox[{"2", "a", " ", "b"}], 
     RowBox[{"a", "+", "b"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5471639391715307`*^9, 3.547164040357667*^9}, {
  3.547164080635233*^9, 3.547164236886691*^9}, {3.547164676990178*^9, 
  3.5471646964190683`*^9}, {3.5473061384359293`*^9, 3.5473061472666807`*^9}, {
  3.5473063772566338`*^9, 3.547306470025505*^9}, {3.5473066700767527`*^9, 
  3.547306713955553*^9}, {3.547306764930867*^9, 3.547306768743227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"standardQuotientTransformPlot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", "t"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "u"}], "}"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"u", "/", "1.1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.025", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547164733906971*^9, 3.5471647595590563`*^9}, {
   3.547164830970419*^9, 3.547164931665399*^9}, {3.547164968136445*^9, 
   3.547165011121571*^9}, {3.547165162027791*^9, 3.547165257955388*^9}, {
   3.54716529804185*^9, 3.5471653016882668`*^9}, {3.547165332686492*^9, 
   3.547165336708681*^9}, 3.547165377464015*^9, {3.547165411249199*^9, 
   3.547165431912196*^9}, 3.547165501607873*^9, 3.547168240044064*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardQuotientArrows", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "Small", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "#", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "-", "#"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", "#"}], ",", 
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "#"}], ")"}]}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{".9", 
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "#"}], "]"}]}]}], 
               "}"}]}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.15"}], ",", 
            RowBox[{"-", "0.06"}], ",", "0.06", ",", "0.15"}], "}"}]}]}], 
        "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.5471661047819223`*^9, 3.547166187435761*^9}, {
   3.547166227353311*^9, 3.547166284736493*^9}, {3.5471663217221737`*^9, 
   3.5471664171426573`*^9}, 3.5471664761436243`*^9, {3.547166545333894*^9, 
   3.547166572827833*^9}, {3.5471666272346687`*^9, 3.547166821096075*^9}, {
   3.547166858818624*^9, 3.5471668888344603`*^9}, 3.547168240045233*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fifthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "standardQuotientTransformPlot", ",", "standardQuotientArrows", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Sum-normalized spectra\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Quotient spectra using standard method\>\"", ",", 
           RowBox[{"{", 
            RowBox[{".9", ",", "2.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Colors give correspondence (note reversal)\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.9", ",", "2.36"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], " ", "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547165506400021*^9, 3.5471659055469217`*^9}, {
   3.5471664801811*^9, 3.547166485239188*^9}, {3.5471669557029667`*^9, 
   3.547166967367653*^9}, 3.547168240051927*^9, {3.547299337017605*^9, 
   3.5472993576971493`*^9}}],

Cell[BoxData[
 RowBox[{"fifthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fifthDiagram", ",", 
    "\"\<Figure 5: Standard method of creating quotient spectra\>\"", ",", 
    "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547166970768332*^9, 3.5471670255156927`*^9}, 
   3.547168240056696*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kx83eJuE/wcQdN6j
      "], {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> Automatic]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[CompressedData["
1:eJwt1WW0lVUUBdAHCJIS0t3d3V2iotIgDUp3tyDdJR0qmHQjjXQoSjcKKN3d
zjOGP+bYe63zXQbv3XPvS9e8U42OkSIiIjJGjoiobr4QJvGZXNCsZ942O5j/
On/PvCC3MYeYTc3HZifzR+fFzENyK7Or2dC8b2akhv2q2c4cYzY3n5pfeF0G
+y/heRrY75rv8KH9kjmcPzxXQT5l709j+0MzN7XtN8zxfOS5l+ZkCnFFrub8
L/uX/CQXl/+wdyMTNeVr5lgG///72GBvRFyqy5fNEfzpvKJ82j6APHyse2VO
oTBX5Z8p4bk/5e5kZoguk25j+P8Tj8O6Sroz9oHk5RPda3MqRbgmL6Kk5w7L
PcgSfh5dZt0mexPic0RXgzf2ryjKdXkxpTx7RO5JVobqsug2h/eSBBzV1SRC
P00uxg1xCcPIqt+ia8a7HNPVIpJ+ulycm/JShpNNvzW83yTkuK52+Of1M+QS
3JKXMYLs+m26FiTihK4OUfQz5ZLclpczkhz67bqWJOakri5v6WfJpbgjr2AU
OfW/hjtOEk7p6hFVP1suzV15JaOpTzRnc/RluCevYgwNeNvZXH1Z7surGcun
RHc2T1+OB/IaxtGQGM7m68vzUF7LeBoR09nX+go8ktcxgcbEcvaNviKP5fVM
pAmxnX2rr8QT+Rcm0ZQ4zhboK/NU3sBkmvGOs4X6KjyTNzKF5sR19p2+Ks/l
TUylBS35jM9pRWva0JZ2tCee13/vte/xQt7MV3QgvrMf9NV4KW9hGh1JEL5T
9O/zSt7KdDrxrrOf9B/wWt7GDDqT0NnP4buDN/J2ZtKFRM4Whc9zpHBh3QNj
Fl1J7Gxx+P4gEjt0s+lGEmdLwuecyOzUzSGXfof8OUk5retOUv3S8DkmCrt0
c8mt3ym3IhlndD1Ipl8m1+AtduvmkUe/S25Ncs7qepJcvzx8bxGVPbr55NXv
ltuQgnO6XqTQr5BrEY29uq/Jp98jtyUl53W9SalfKdfmbfbpviG/fq/cjlRc
0PUhlX6VXIfo7Nd9SwH9Prk9qflL15fU+tVyXWJwQFdad9Tei2ws0BXU7bd3
IA1/6/qRRr9GrkdMDurK6I7Ze5OdhbpCugP28EcuLRd1/UmrXyvXJxa/6crq
jtv7kIPvdIV1B+2dSBfuhvyPOZJLzivLZ+2DyMcAXTrdOnsDYof7K/9tDuV3
5+XkE/a+5OR7XRHdb/bOpA/3LPy9NUdx2XkV+Zz9C/KH37N805zAQOfp5fX2
T8PPZL9jxgmfD/tFcxiHPFdePmnvRyP7AzNXuBf26+Y4WtifmT94vqj993C/
zS7h3zfvmRnC3bZfCXfHHG02M5+EnyH8jry2qnk+3F1zsNnEfBTeC7NAeO/N
W+FumBPNluZzs4s5yOv/A4h6EDs=
         "], VertexColors -> Automatic]}}, 
      VertexColors -> {
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168], 
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090753084431745], 
        Hue[0.008922109451530515], 
        Hue[0.02751680794121024], 
        Hue[0.04622099992694738], 
        Hue[0.06410704162395528], 
        Hue[0.08256639870941393], 
        Hue[0.10113524929092998`], 
        Hue[0.11981359336850345`], 
        Hue[0.13906525283452767`], 
        Hue[0.1574987620118227], 
        Hue[0.1760417646851751], 
        Hue[0.19469426085458494`], 
        Hue[0.21252860673526558`], 
        Hue[0.23093626800439693`], 
        Hue[0.24945342276958568`], 
        Hue[0.26808007103083187`], 
        Hue[0.2872800346805288], 
        Hue[0.3056618480414965], 
        Hue[0.32415315489852164`], 
        Hue[0.3427539552516042], 
        Hue[0.3614642491007441], 
        Hue[0.3807478583383348], 
        Hue[0.5661552581179933], 
        Hue[0.5847880082426421], 
        Hue[0.6026026080785619], 
        Hue[0.6209905233029324], 
        Hue[0.6394879320233602], 
        Hue[0.6580948342398455], 
        Hue[0.6768112299523882], 
        Hue[0.6947094753762018], 
        Hue[0.713181036188466], 
        Hue[0.7317620904967876], 
        Hue[0.7504526383011668], 
        Hue[0.7697165014939965], 
        Hue[0.7881622143980972], 
        Hue[0.8067174207982551], 
        Hue[0.8253821206944706], 
        Hue[0.8432286703019568], 
        Hue[0.8616485352978938], 
        Hue[0.8801778937898881], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.02268051342213563], 
        Hue[0.04170519845315341], 
        Hue[0.059679822249245285`], 
        Hue[0.07776393954139459], 
        Hue[0.09665328316819129], 
        Hue[0.11495638745245541`], 
        Hue[0.1342966290175636], 
        Hue[0.15305063124013926`], 
        Hue[0.17121839412018233`], 
        Hue[0.19019138333487282`], 
        Hue[0.2081143113146374], 
        Hue[0.22614673279045938`], 
        Hue[0.2449843806009288], 
        Hue[0.26323578906886563`], 
        Hue[0.28252433481764655`], 
        Hue[0.3012266412238949], 
        Hue[0.31934270828761063`], 
        Hue[0.33826400168597387`], 
        Hue[0.3565990557418044], 
        Hue[0.3759712470784791], 
        Hue[0.5613368240641906], 
        Hue[0.5802900672341202], 
        Hue[0.5981932491691239], 
        Hue[0.6162059246001851], 
        Hue[0.6350238263658935], 
        Hue[0.6532554887890696], 
        Hue[0.6722923775468929], 
        Hue[0.6902792050697903], 
        Hue[0.7083755260887452], 
        Hue[0.7272770734423476], 
        Hue[0.7455923814534173], 
        Hue[0.764944826745331], 
        Hue[0.7837110326947122], 
        Hue[0.8018909993015609], 
        Hue[0.8208761922430571], 
        Hue[0.8388113239496272], 
        Hue[0.8568559491522548], 
        Hue[0.8757058006895299], 
        Hue[0.8941142872656807], 
        Hue[0.013383164177295771`], 
        Hue[0.03235310246028484], 
        Hue[0.05073680140074134], 
        Hue[0.06853426099866528], 
        Hue[0.08736885787743326], 
        Hue[0.10561721541366868`], 
        Hue[0.1246707992845515], 
        Hue[0.14383387665149172`], 
        Hue[0.1619468927835061], 
        Hue[0.18086513525016787`], 
        Hue[0.6991397456826131], 
        Hue[0.7179865462881867], 
        Hue[0.7362471075512278], 
        Hue[0.7553128951489163], 
        Hue[0.7744881762426619], 
        Hue[0.792613396101482], 
        Hue[0.8115438422949494], 
        Hue[0.8298880491458841], 
        Hue[0.8476460166542864], 
        Hue[0.8664411214435327], 
        Hue[0.8846499868902463], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.020262366162598335`], 
        Hue[0.03944729771625642], 
        Hue[0.057466212561890294`], 
        Hue[0.07536270995738494], 
        Hue[0.09441230010682193], 
        Hue[0.1125277844944314], 
        Hue[0.13191231710908158`], 
        Hue[0.15082656585429752`], 
        Hue[0.16880670883768595`], 
        Hue[0.18793994457501673`], 
        Hue[0.2059071636043233], 
        Hue[0.22375196518349064`], 
        Hue[0.24274985951660033`], 
        Hue[0.2608136480878825], 
        Hue[0.28014648488620547`], 
        Hue[0.2990090378150941], 
        Hue[0.31693748498215524`], 
        Hue[0.3360190249031587], 
        Hue[0.3541664590623346], 
        Hue[0.3735829414485513], 
        Hue[0.5589276070372893], 
        Hue[0.5780410967298593], 
        Hue[0.595988569714405], 
        Hue[0.6138136252488114], 
        Hue[0.6327917735371602], 
        Hue[0.6508358160636816], 
        Hue[0.6700329513441452], 
        Hue[0.6880640699165846], 
        Hue[0.705972771038885], 
        Hue[0.7250345649151275], 
        Hue[0.7431622530295426], 
        Hue[0.7625589893709983], 
        Hue[0.7814854418430197], 
        Hue[0.7994777885532137], 
        Hue[0.8186232280173502], 
        Hue[0.8366026507734625], 
        Hue[0.8544596560794353], 
        Hue[0.8734697541393507], 
        Hue[0.8916181836281426], 
        Hue[0.011152636814413143`], 
        Hue[0.02993495520074754], 
        Hue[0.04847890066384435], 
        Hue[0.06632065131131028], 
        Hue[0.0849676282934236], 
        Hue[0.10337623235229934`], 
        Hue[0.12224219632652747`], 
        Hue[0.1414495647430097], 
        Hue[0.15972282739766439`], 
        Hue[0.17845344996767148`], 
        Hue[0.6969246105294074], 
        Hue[0.7155837912383263], 
        Hue[0.7340045990240077], 
        Hue[0.7528827667250415], 
        Hue[0.7721023388683292], 
        Hue[0.7903878052497895], 
        Hue[0.8091306315466021], 
        Hue[0.8276350849201775], 
        Hue[0.8454373434781216], 
        Hue[0.8640448283707133], 
        Hue[0.8824139403400673], 
        Hue[0.9016025981782949], 
        Hue[0.0066915820886478865`], 
        Hue[0.02509866068167294], 
        Hue[0.0439630991900504], 
        Hue[0.06189343193660028], 
        Hue[0.08016516912540425], 
        Hue[0.823129156468764], 
        Hue[0.841019997125792], 
        Hue[0.8592522422250743], 
        Hue[0.877941847239709], 
        Hue[0.8966103909032188], 
        Hue[0.015613691540178401`], 
        Hue[0.03477124971982214], 
        Hue[0.05299470213763833], 
        Hue[0.8688374145163521], 
        Hue[0.8868860334404255], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.019053292532829683`], 
        Hue[0.03831834734780793], 
        Hue[0.05635940771821281], 
        Hue[0.07416209516538008], 
        Hue[0.09329180857613727], 
        Hue[0.11131348301541939`], 
        Hue[0.13072016115484056`], 
        Hue[0.14971453316137667`], 
        Hue[0.16760086619643774`], 
        Hue[0.18681422519508867`], 
        Hue[0.20480358974916626`], 
        Hue[0.22255458138000622`], 
        Hue[0.24163259897443617`], 
        Hue[0.259602577597391], 
        Hue[0.2789575599204848], 
        Hue[0.29790023611069366`], 
        Hue[0.3157348733294275], 
        Hue[0.33489653651175116`], 
        Hue[0.3529501607225997], 
        Hue[0.3723887886335874], 
        Hue[0.5577229985238387], 
        Hue[0.5769166114777288], 
        Hue[0.5948862299870454], 
        Hue[0.6126174755731246], 
        Hue[0.6316757471227935], 
        Hue[0.6496259797009876], 
        Hue[0.6689032382427713], 
        Hue[0.6869565023399818], 
        Hue[0.7047713935139547], 
        Hue[0.7239133106515175], 
        Hue[0.7419471888176051], 
        Hue[0.7613660706838319], 
        Hue[0.7803726464171736], 
        Hue[0.7982711831790403], 
        Hue[0.817496745904497], 
        Hue[0.8354983141853802], 
        Hue[0.8532615095430257], 
        Hue[0.8723517308642611], 
        Hue[0.8903701318093737], 
        Hue[0.01003737313297183], 
        Hue[0.028725881570978894`], 
        Hue[0.04734995029539586], 
        Hue[0.06521384646763277], 
        Hue[0.08376701350141877], 
        Hue[0.10225574082161466`], 
        Hue[0.12102789484751547`], 
        Hue[0.1402574087887687], 
        Hue[0.15861079470474357`], 
        Hue[0.17724760732642328`], 
        Hue[0.6958170429528046], 
        Hue[0.7143824137133962], 
        Hue[0.7328833447603977], 
        Hue[0.7516677025131041], 
        Hue[0.7709094201811629], 
        Hue[0.7892750098239434], 
        Hue[0.8079240261724286], 
        Hue[0.826508602807324], 
        Hue[0.8443330068900392], 
        Hue[0.8628466818343036], 
        Hue[0.8812959170649777], 
        Hue[0.9003545463595258], 
        Hue[0.0055763184072065725`], 
        Hue[0.023889587051904283`], 
        Hue[0.04283414882160191], 
        Hue[0.0607866270929228], 
        Hue[0.07896455433339943], 
        Hue[0.8220026743559105], 
        Hue[0.8399156605377096], 
        Hue[0.8580540956886646], 
        Hue[0.8768238239646196], 
        Hue[0.8953623390844497], 
        Hue[0.014498427858737086`], 
        Hue[0.03356217609005349], 
        Hue[0.05186575176918984], 
        Hue[0.8676392679799424], 
        Hue[0.8857680101653359], 
        Hue[0.905346753634602], 
        Hue[0.0033457910443239433`], 
        Hue[0.021471439792366983`], 
        Hue[0.8745877774144403], 
        Hue[0.8928662354469117], 
        Hue[0.012267900495854456`], 
        Hue[0.031144028830516195`], 
        Hue[0.865242974907123], 
        Hue[0.8835319636151567], 
        Hue[0.902850649997064], 
        Hue[0.007806845770089202], 
        Hue[0.026307734311441587`], 
        Hue[0.8978584427219878], 
        Hue[0.016728955221619716`], 
        Hue[0.8880040567155151], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.018448755717945357`], 
        Hue[0.03775387216358369], 
        Hue[0.055806005296374056`], 
        Hue[0.07356178776937766], 
        Hue[0.09273156281079495], 
        Hue[0.1107063322759134], 
        Hue[0.13012408317772006`], 
        Hue[0.14915851681491624`], 
        Hue[0.16699794487581365`], 
        Hue[0.18625136550512464`], 
        Hue[0.20425180282158775`], 
        Hue[0.22195588947826406`], 
        Hue[0.241073968703354], 
        Hue[0.2589970423521452], 
        Hue[0.2783630974376246], 
        Hue[0.29734583525849345`], 
        Hue[0.3151335675030636], 
        Hue[0.3343352923160473], 
        Hue[0.35234201155273226`], 
        Hue[0.3717917122261054], 
        Hue[0.5571206942671133], 
        Hue[0.5763543688516635], 
        Hue[0.5943350601233657], 
        Hue[0.6120194007352812], 
        Hue[0.6311177339156102], 
        Hue[0.6490210615196406], 
        Hue[0.6683383816920845], 
        Hue[0.6864027185516804], 
        Hue[0.7041707047514897], 
        Hue[0.7233526835197126], 
        Hue[0.7413396567116365], 
        Hue[0.7607696113402487], 
        Hue[0.7798162487042506], 
        Hue[0.7976678804919536], 
        Hue[0.81693350484807], 
        Hue[0.834946145891339], 
        Hue[0.8526624362748207], 
        Hue[0.8717927192267163], 
        Hue[0.8897461058999891], 
        Hue[0.009479741292251173], 
        Hue[0.02812134475609456], 
        Hue[0.04678547511117162], 
        Hue[0.06466044404579403], 
        Hue[0.08316670610541635], 
        Hue[0.10169549505627232`], 
        Hue[0.12042074410800947`], 
        Hue[0.1396613308116482], 
        Hue[0.1580547783582831], 
        Hue[0.1766446860057992], 
        Hue[0.6952632591645032], 
        Hue[0.713781724950931], 
        Hue[0.7323227176285926], 
        Hue[0.7510601704071355], 
        Hue[0.7703129608375797], 
        Hue[0.7887186121110202], 
        Hue[0.8073207234853419], 
        Hue[0.8259453617508973], 
        Hue[0.843780838595998], 
        Hue[0.8622476085660987], 
        Hue[0.880736905427433], 
        Hue[0.8997305204501415], 
        Hue[0.005018686566485915], 
        Hue[0.023285050237019957`], 
        Hue[0.04226967363737765], 
        Hue[0.06023322467108404], 
        Hue[0.07836424693739702], 
        Hue[0.8214394332994838], 
        Hue[0.8393634922436684], 
        Hue[0.8574550224204597], 
        Hue[0.8762648123270746], 
        Hue[0.8947383131750654], 
        Hue[0.013940796018016429`], 
        Hue[0.03295763927516917], 
        Hue[0.05130127658496558], 
        Hue[0.8670401947117375], 
        Hue[0.8852089985277911], 
        Hue[0.9047227277252176], 
        Hue[0.0027881592036032854`], 
        Hue[0.020866902977482657`], 
        Hue[0.8740287657768955], 
        Hue[0.8922422095375272], 
        Hue[0.0117102686551338], 
        Hue[0.03053949201563187], 
        Hue[0.8646439016389181], 
        Hue[0.8829729519776119], 
        Hue[0.9022266240876795], 
        Hue[0.007249213929368543], 
        Hue[0.025703197496557258`], 
        Hue[0.8972344168126034], 
        Hue[0.016171323380899053`], 
        Hue[0.8874450450779704], 
        Hue[0.9072188313627556], 
        Hue[0.001672895522161972], 
        Hue[0.8909941577187581], 
        Hue[0.010595004973692486`], 
        Hue[0.9009785722689103], 
        Hue[0.006133950247927229], 
        Hue[0.8959863649938342], 
        Hue[0.015056059699457747`], 
        Hue[0.9059707795439865], 
        Hue[0.0039034228850446002`], 
        Hue[0.9034746759064485], 
        Hue[0.008364477610809858], 
        Hue[0.8984824686313723], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.018146487310503195`], 
        Hue[0.03747163457147156], 
        Hue[0.05552930408545469], 
        Hue[0.07326163407137645], 
        Hue[0.09245143992812377], 
        Hue[0.1104027569061604], 
        Hue[0.12982604418915977`], 
        Hue[0.14888050864168603`], 
        Hue[0.1666964842155016], 
        Hue[0.18596993566014267`], 
        Hue[0.20397590935779847`], 
        Hue[0.22165654352739297`], 
        Hue[0.24079465356781293`], 
        Hue[0.2586942747295224], 
        Hue[0.27806586619619444`], 
        Hue[0.2970686348323934], 
        Hue[0.31483291458988166`], 
        Hue[0.33405467021819546`], 
        Hue[0.3520379369677985], 
        Hue[0.3714931740223644], 
        Hue[0.5568195421387506], 
        Hue[0.5760732475386309], 
        Hue[0.5940594751915258], 
        Hue[0.6117203633163595], 
        Hue[0.6308387273120186], 
        Hue[0.6487186024289671], 
        Hue[0.6680559534167411], 
        Hue[0.6861258266575297], 
        Hue[0.7038703603702571], 
        Hue[0.7230723699538101], 
        Hue[0.7410358906586522], 
        Hue[0.7604713816684571], 
        Hue[0.779538049847789], 
        Hue[0.7973662291484102], 
        Hue[0.8166518843198568], 
        Hue[0.8346700617443183], 
        Hue[0.8523628996407183], 
        Hue[0.8715132134079439], 
        Hue[0.889434092945297], 
        Hue[0.009200925371890845], 
        Hue[0.0278190763486524], 
        Hue[0.04650323751905949], 
        Hue[0.06438374283487465], 
        Hue[0.08286655240741514], 
        Hue[0.10141537217360115`], 
        Hue[0.12011716873825648`], 
        Hue[0.13936329182308793`], 
        Hue[0.15777677018505287`], 
        Hue[0.17634322534548716`], 
        Hue[0.6949863672703525], 
        Hue[0.7134813805696986], 
        Hue[0.73204240406269], 
        Hue[0.7507564043541511], 
        Hue[0.7700147311657881], 
        Hue[0.7884404132545587], 
        Hue[0.8070190721417985], 
        Hue[0.8256637412226839], 
        Hue[0.8435047544489774], 
        Hue[0.8619480719319962], 
        Hue[0.8804573996086605], 
        Hue[0.8994185074954492], 
        Hue[0.004739870646125586], 
        Hue[0.022982781829577796`], 
        Hue[0.04198743604526554], 
        Hue[0.059956523460164654`], 
        Hue[0.07806409323939581], 
        Hue[0.8211578127712705], 
        Hue[0.8390874080966478], 
        Hue[0.8571554857863573], 
        Hue[0.8759853065083023], 
        Hue[0.894426300220373], 
        Hue[0.013661980097656101`], 
        Hue[0.03265537086772701], 
        Hue[0.05101903899285347], 
        Hue[0.8667406580776351], 
        Hue[0.8849294927090188], 
        Hue[0.9044107147705253], 
        Hue[0.002509343283242957], 
        Hue[0.020564634570040496`], 
        Hue[0.8737492599581231], 
        Hue[0.8919301965828349], 
        Hue[0.011431452734773473`], 
        Hue[0.0302372236081897], 
        Hue[0.8643443650048157], 
        Hue[0.8826934461588395], 
        Hue[0.9019146111329872], 
        Hue[0.006970398009008215], 
        Hue[0.0254009290891151], 
        Hue[0.896922403857911], 
        Hue[0.01589250746053873], 
        Hue[0.8871655392591979], 
        Hue[0.9069068184080633], 
        Hue[0.0013940796018016431`], 
        Hue[0.8906821447640658], 
        Hue[0.010316189053332158`], 
        Hue[0.9006665593142182], 
        Hue[0.005855134327566901], 
        Hue[0.895674352039142], 
        Hue[0.014777243779097417`], 
        Hue[0.9056587665892943], 
        Hue[0.0036246069646842715`], 
        Hue[0.9031626629517563], 
        Hue[0.008085661690449528], 
        Hue[0.8981704556766802], 
        Hue[0.9081548702268324], 
        Hue[0.000836447761080986], 
        Hue[0.9000425334048336], 
        Hue[0.005297502486846243], 
        Hue[0.9050347406799097], 
        Hue[0.0030669751239636145`], 
        Hue[0.9025386370423717], 
        Hue[0.0075280298497288735`], 
        Hue[0.9075308443174479], 
        Hue[0.0019517114425223006`], 
        Hue[0.9062827924986788], 
        Hue[0.004182238805404929], 
        Hue[0.9037866888611407], 
        Hue[0.9087788961362168]}], {
      Thickness[Small], {
       Hue[0.46538213714881804`], 
       ArrowBox[{{0.46538213714881804`, 0.534617862851182}, {
        1.3223157659616696`, 0.71942576104728}}, {0, 0.13500000000000004`}]}, {
       Hue[0.5553821371488181], 
       ArrowBox[{{0.5553821371488181, 0.4446178628511819}, {
        1.1080337230650301`, 0.8650526552954024}}, {
        0, 0.05399999999999995}]}, {
       Hue[0.675382137148818], 
       ArrowBox[{{0.675382137148818, 0.324617862851182}, {0.9111614052256475, 
        1.1848327121403865`}}, {0, 0.05399999999999995}]}, {
       Hue[0.7653821371488181], 
       ArrowBox[{{0.7653821371488181, 0.2346178628511819}, {0.804019465937922,
         1.6393375089907156`}}, {0, 0.13500000000000004`}]}}, {
      InsetBox["\"Sum-normalized spectra\"", {1, 0.2}, {-1, 0}], 
      InsetBox[
      "\"Quotient spectra using standard method\"", {0.9, 2.5}, {-1, 0}], 
      InsetBox[
      "\"Colors give correspondence (note reversal)\"", {0.9, 2.36}, {-1, 
       0}]}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{0, 3}, {0, 3}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 5: Standard method of creating quotient spectra\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.54716703508914*^9, 3.547168240063203*^9, 3.547298625085485*^9, 
   3.5472990757226887`*^9, {3.547299344836932*^9, 3.547299359459889*^9}}]
}, {5}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"linearQuotientTransformPlot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "/", 
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}], "/", 
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.001", ",", "1"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "u"}], "}"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"u", "/", "1.1"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.025", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547164733906971*^9, 3.5471647595590563`*^9}, {
   3.547164830970419*^9, 3.547164931665399*^9}, {3.547164968136445*^9, 
   3.547165011121571*^9}, {3.547165162027791*^9, 3.547165257955388*^9}, {
   3.54716529804185*^9, 3.5471653016882668`*^9}, {3.547165332686492*^9, 
   3.547165336708681*^9}, 3.547165377464015*^9, {3.547165411249199*^9, 
   3.547165431912196*^9}, 3.547165501607873*^9, {3.547167655012796*^9, 
   3.547167686323903*^9}, 3.5471681200291777`*^9, 3.547168210626031*^9, {
   3.5472987358262873`*^9, 3.547298748471684*^9}, {3.547299106231627*^9, 
   3.547299107923362*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"linearQuotientArrows", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "Small", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "#", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "-", "#"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "/", 
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "#"}], ")"}], "/", 
                   RowBox[{"refPt2D", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
              "0.1"}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{
          RowBox[{"refPt2D", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".25"}], ",", 
            RowBox[{"-", "0.15"}], ",", 
            RowBox[{"-", "0.06"}], ",", "0.06", ",", "0.15", ",", "0.25"}], 
           "}"}]}]}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5471661047819223`*^9, 3.547166187435761*^9}, {
   3.547166227353311*^9, 3.547166284736493*^9}, {3.5471663217221737`*^9, 
   3.5471664171426573`*^9}, 3.5471664761436243`*^9, {3.547166545333894*^9, 
   3.547166572827833*^9}, {3.5471666272346687`*^9, 3.547166821096075*^9}, {
   3.547166858818624*^9, 3.5471668888344603`*^9}, {3.54716771067766*^9, 
   3.5471677114266977`*^9}, {3.547167768530044*^9, 3.547167780388905*^9}, {
   3.547167872105948*^9, 3.547167914542306*^9}, 3.5471682106262693`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sixthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "linearQuotientTransformPlot", ",", "linearQuotientArrows", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Sum-normalized\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1.1", ",", "0.1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Reciprocal Quotient spectra\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2.29"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<Colors give correspondence\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "2.15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], " ", "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547165506400021*^9, 3.5471659055469217`*^9}, {
   3.5471664801811*^9, 3.547166485239188*^9}, {3.5471669557029667`*^9, 
   3.547166967367653*^9}, {3.5471678066025743`*^9, 3.547167848549383*^9}, {
   3.547167938251989*^9, 3.547168075882759*^9}, 3.547168140445486*^9, 
   3.547168210626327*^9, {3.547168692324882*^9, 3.547168721306837*^9}, {
   3.5472994011803427`*^9, 3.547299514655484*^9}}],

Cell[BoxData[
 RowBox[{"sixthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "sixthDiagram", ",", 
    "\"\<Figure 6: Easy-to-visualize method of creating reciprocal quotient \
spectra\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547166970768332*^9, 3.5471670255156927`*^9}, {
  3.547168147163466*^9, 3.5471682106263857`*^9}, {3.547168724991063*^9, 
  3.547168727242344*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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

      "], {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> Automatic]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[0.025], 
        LineBox[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84, 85,
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 149, 143, 
         138, 134, 131, 129, 150, 144, 139, 135, 132, 151, 145, 140, 136, 152,
          146, 141, 153, 147, 154, 127}, VertexColors -> Automatic]}}, 
      VertexColors -> {
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168], 
        Hue[1.9712766772463716`*^-19], 
        Hue[0.017844218903061027`], 
        Hue[0.03718939697935945], 
        Hue[0.05525260287453531], 
        Hue[0.07296148037337526], 
        Hue[0.0921713170454526], 
        Hue[0.11009918153640738`], 
        Hue[0.12952800520059954`], 
        Hue[0.14860250046845583`], 
        Hue[0.16639502355518956`], 
        Hue[0.18568850581516066`], 
        Hue[0.2037000158940092], 
        Hue[0.2213571975765219], 
        Hue[0.24051533843227194`], 
        Hue[0.25839150710689945`], 
        Hue[0.27776863495476434`], 
        Hue[0.2967914344062933], 
        Hue[0.31453226167669973`], 
        Hue[0.3337740481203435], 
        Hue[0.3517338623828648], 
        Hue[0.37119463581862344`], 
        Hue[0.3903010808580461], 
        Hue[0.4081255537163463], 
        Hue[0.42745098574788387`], 
        Hue[0.4454944455982989], 
        Hue[0.463183577052378], 
        Hue[0.4823736676796944], 
        Hue[0.5002817861258884], 
        Hue[0.5196908637453196], 
        Hue[0.538745612968415], 
        Hue[0.5565183900103879], 
        Hue[0.5757921262255983], 
        Hue[0.5937838902596859], 
        Hue[0.6114213258974378], 
        Hue[0.6305597207084269], 
        Hue[0.6484161433382934], 
        Hue[0.6677735251413975], 
        Hue[0.685848934763379], 
        Hue[0.7035700159890246], 
        Hue[0.7227920563879076], 
        Hue[0.7407321246056678], 
        Hue[0.7601731519966656], 
        Hue[0.7792598509913274], 
        Hue[0.7970645778048668], 
        Hue[0.8163702637916435], 
        Hue[0.8343939775972977], 
        Hue[0.8520633630066159], 
        Hue[0.8712337075891716], 
        Hue[0.8891220799906047], 
        Hue[0.9090909090909091], 
        Hue[0.008922109451530515], 
        Hue[0.8991064945407569], 
        Hue[0.004461054725765258], 
        Hue[0.8941142872656807], 
        Hue[0.9040987018158331], 
        Hue[0.002230527362882629], 
        Hue[0.8916181836281426], 
        Hue[0.9016025981782949], 
        Hue[0.9065948054533711], 
        Hue[0.0011152636814413146`], 
        Hue[0.8903701318093737], 
        Hue[0.9003545463595258], 
        Hue[0.905346753634602], 
        Hue[0.9078428572721401], 
        Hue[0.0005576318407206573], 
        Hue[0.8897461058999891], 
        Hue[0.8997305204501415], 
        Hue[0.9047227277252176], 
        Hue[0.9072188313627556], 
        Hue[0.9084668831815247], 
        Hue[0.00027881592036032866`], 
        Hue[0.889434092945297], 
        Hue[0.8994185074954492], 
        Hue[0.9044107147705253], 
        Hue[0.9069068184080633], 
        Hue[0.9081548702268324], 
        Hue[0.9087788961362168]}], {
      Thickness[Small], {
       Hue[0.36538213714881806`], 
       ArrowBox[{{0.36538213714881806`, 0.6346178628511819}, {
        0.593748363970561, 1.6499958118084888`}}, 0.1]}, {
       Hue[0.46538213714881804`], 
       ArrowBox[{{0.46538213714881804`, 0.534617862851182}, {
        0.7562490183823365, 1.3899974870850933`}}, 0.1]}, {
       Hue[0.5553821371488181], 
       ArrowBox[{{0.5553821371488181, 0.4446178628511819}, {
        0.9024996073529348, 1.155998994834037}}, 0.1]}, {
       Hue[0.675382137148818], 
       ArrowBox[{{0.675382137148818, 0.324617862851182}, {1.0975003926470652`,
         0.8440010051659628}}, 0.1]}, {
       Hue[0.7653821371488181], 
       ArrowBox[{{0.7653821371488181, 0.2346178628511819}, {
        1.2437509816176635`, 0.6100025129149067}}, 0.1]}, {
       Hue[0.8653821371488181], 
       ArrowBox[{{0.8653821371488181, 0.13461786285118194`}, {
        1.406251636029439, 0.3500041881915112}}, 0.1]}}, {
      InsetBox["\"Sum-normalized\"", {1.1, 0.1}, {-1, 0}], 
      InsetBox["\"Reciprocal Quotient spectra\"", {0.4, 2.29}, {-1, 0}], 
      InsetBox["\"Colors give correspondence\"", {0.4, 2.15}, {-1, 0}]}}, 
    Axes -> True, AxesOrigin -> {0, 0}, PlotRange -> {{0, 3}, {0, 3}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}],
   "\"Figure 6: Easy-to-visualize method of creating reciprocal quotient \
spectra\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547168175514007*^9, 3.547168210626486*^9}, 
   3.5472986628808126`*^9, 3.547298751672412*^9, {3.547299092964314*^9, 
   3.547299113037181*^9}, {3.54729940971076*^9, 3.547299516037085*^9}}]
}, {5}]],

Cell["\<\
The standard method involves three non-linear transformations of the spectral \
space, one to create the quotient spectra and then another to extract their \
medians, and a third to multiply the corresponding spectra by their medians. \
My method involves only two non-linear transformations - extracting the \
medians and dividing by them. The creation of the reciprocal quotient  \
(r-quotient) spectra is a linear transformation. Further, my method of \
creating the quotients does not flip the axes. This makes my method much \
easier to visualize. You can compare the two methods of creating the quotient \
spectra by looking at figures 5 and 6 (these diagrams are created using the \
reference spectrum from figure 4).\
\>", "Text",
 CellChangeTimes->{{3.547167112202626*^9, 3.54716722675627*^9}, {
  3.547167261266342*^9, 3.547167262677088*^9}, {3.547167294770259*^9, 
  3.547167415948337*^9}, {3.547167549225038*^9, 3.5471676289273252`*^9}, {
  3.547167725828884*^9, 3.547167747732733*^9}, {3.5471686721793756`*^9, 
  3.5471686753793077`*^9}, {3.5471996367262573`*^9, 3.547199645578714*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Median Reciprocal Quotients", "Subsubsection",
 CellChangeTimes->{{3.547221831853545*^9, 3.5472218401872797`*^9}}],

Cell[TextData[{
 "After generating the r-quotient spectra, the next step is to take the \
median of the r-quotients, that is, the median of all of the coordinates of \
each spectrum. The r-quotient spectra lie on the line between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "r"], ",", "0"}], ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{"1", "-", "r"}]]}], ")"}], TraditionalForm]]],
 ". This line is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      FractionBox["r", 
       RowBox[{"r", "-", "1"}]], "x"}], "+", 
     FractionBox["1", 
      RowBox[{"1", "-", "r"}]]}]}], TraditionalForm]]],
 ". Applying the reciprocal median formula above to the points on the \
r-quotient  line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"q", ",", " ", 
     RowBox[{
      RowBox[{
       FractionBox["r", 
        RowBox[{"r", "-", "1"}]], "q"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "-", "r"}]]}]}], ")"}], TraditionalForm]]],
 " we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{"2", " ", "q", " ", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"r", " ", "q"}]}], ")"}], 
      RowBox[{"1", "+", "q", "-", 
       RowBox[{"2", " ", "r", " ", "q"}]}]]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.5471975748960457`*^9, 3.547197592175139*^9}, {
  3.547197643493672*^9, 3.5471978648037367`*^9}, {3.547197901058646*^9, 
  3.5471979532156067`*^9}, {3.54719800877719*^9, 3.547198081874114*^9}, {
  3.5471983358347816`*^9, 3.54719842826193*^9}, {3.5471985482233973`*^9, 
  3.5471985692296247`*^9}, {3.547199518378127*^9, 3.5471995293994617`*^9}, {
  3.54719960252917*^9, 3.547199606380126*^9}, {3.547308750971302*^9, 
  3.547308812020582*^9}, {3.54730884220995*^9, 3.547308869185907*^9}, {
  3.547308942288823*^9, 3.547309002137504*^9}, {3.5473095776827307`*^9, 
  3.547309581653508*^9}, {3.54730980486635*^9, 3.547309842903023*^9}, {
  3.547309924717206*^9, 3.547309924811638*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rMedianAndRQuotientCurve", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", "q"}], 
             RowBox[{"r", "-", "1"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "-", "r"}]]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"r", " ", "q"}], 
              RowBox[{"r", "-", "1"}]], "+", 
             FractionBox["1", 
              RowBox[{"1", "-", "r"}]]}]}], "}"}], "+", 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{"2", "q", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"r", " ", "q"}]}], ")"}]}], 
             RowBox[{"1", "+", "q", "-", 
              RowBox[{"2", "r", " ", "q"}]}]], ")"}], 
           "quotientLineUnitNormal"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", "0", ",", 
         RowBox[{"1", "/", "r"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, 
   3.547392013757592*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rqpt", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rqpt", "[", "q_", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{
           FractionBox[
            RowBox[{"r", " ", "q"}], 
            RowBox[{"r", "-", "1"}]], "+", 
           FractionBox["1", 
            RowBox[{"1", "-", "r"}]]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", "q"}], 
             RowBox[{"r", "-", "1"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "-", "r"}]]}]}], "}"}], "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"2", "q", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"r", " ", "q"}]}], ")"}]}], 
            RowBox[{"1", "+", "q", "-", 
             RowBox[{"2", "r", " ", "q"}]}]], ")"}], 
          "quotientLineUnitNormal"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rMedianRQuotientArrows", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"rqpt", "[", "#", "]"}], "]"}], "&"}], ",", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"refPt2D", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], 
            RowBox[{"{", 
             RowBox[{
             "0.125", ",", "0.25", ",", "0.375", ",", "0.5", ",", "0.625", 
              ",", "0.75", ",", "0.875"}], "}"}]}]}], "]"}]}], "}"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473107151456633`*^9, 3.547310843866932*^9}, {
   3.5473108783840733`*^9, 3.547311090649839*^9}, {3.547311249085258*^9, 
   3.547311265375798*^9}, {3.547311378310196*^9, 3.547311402621615*^9}, {
   3.547311617010564*^9, 3.547311674762067*^9}, {3.5473117696027517`*^9, 
   3.547311804197371*^9}, 3.547392013757699*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineLeftEndpoint", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "2", "]"}], "]"}]]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54722535705967*^9, 3.547225382853983*^9}, 
   3.547229709457631*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineRightEndpoint", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]], ",", "0"}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547225393229892*^9, 3.547225409952771*^9}, 
   3.547229709457706*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quotientLineUnitNormal", "=", 
   RowBox[{
    RowBox[{"Reverse", "[", 
     RowBox[{"Normalize", "[", 
      RowBox[{"quotientLineRightEndpoint", "-", "quotientLineLeftEndpoint"}], 
      "]"}], "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54722523255466*^9, 3.5472252805683603`*^9}, 
   3.547225647688549*^9, {3.547225684686095*^9, 3.547225698608755*^9}, {
   3.5472257366007853`*^9, 3.547225740035652*^9}, 3.547225908143572*^9, {
   3.547226535464799*^9, 3.5472265634310637`*^9}, {3.547226668644137*^9, 
   3.5472266708818398`*^9}, 3.5472274424443893`*^9, 3.54722970945776*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seventhDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"rMedianAndRQuotientCurve", ",", "rMedianRQuotientArrows"}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472265888683357`*^9, 3.547226651702548*^9}, {
   3.547227542977453*^9, 3.5472275549610777`*^9}, 3.547229709457896*^9, {
   3.547311694275868*^9, 3.5473117213341827`*^9}, 3.5473121153456373`*^9}],

Cell[BoxData[
 RowBox[{"seventhDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "seventhDiagram", ",", 
    "\"\<Figure 7: Median r-quotient as distance perpendicular to r-quotient \
line. \>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547227585016399*^9, 3.5472276112806387`*^9}, {
   3.5472295584134207`*^9, 3.547229589070476*^9}, 3.5472297094579487`*^9, {
   3.547311878858325*^9, 3.547311889008466*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJw11H0w1HkcB/Bl93IeunRJubrztEM6DS4x1Hn/ruk8dFZauiNHJrWlK+ch
FBFdW7sknQiTjfau7jh3CePaomQ9bXSRx6xn8hBtu8suG+pWM7/vzHe+85rP
5/Oez19f04M/Mw9rUigUhvouv+TZTXen1TbTiNsTDfwaXwLOflKZaRNpb2y+
lDNwVkQ6GDqzE/e315MOh0jIjSh7RDoJHiFN/fxS0lfgzvcSJOeQLoCryb4w
HKIRuu36idm0u/DX6XGSyqnEDaf36wvcBbh8PNnNnEsloswljKt3qzG0vupm
qCmVEBlrLFUb1sGzLDzwZYkmsXLAfqTLVoTuOteAETdNgmqw0vEF/yni6zPv
G3ZqEKFeYY/0KK3YsTqWFcjSINxPjiWaarfBuD3e1+IdhaB02EZ/6dKBz9jz
v9HTKIRNtq5WEaMLDv9kb7tlTiG+ow5/2sh8gf6d1ywjT70HUZSyT/yLGMkf
vb5Ny3mH4lLh1pD0PrDucYqu1y9BpvjPfbB+APFuBhG8kUVkyF799E41iOZj
jS11tEWM5ThoNCwN4UDi43K5/QL+CJyyS1k3ArOwooAUn7cw9zlacvGLUVh6
dV+wSFZBj+X15Oz2lwjQUZ7cwpvHFOOrm24+Y2jev2Nxf9UcLrD66zz8xpF0
vUErbVqJtLwZtmvUBELu7ey00lHCm9p6NSF+Epw6TasmBwW0URx0PvEVJllT
BlePzMImR1rLzp5C3KhQWHdhBvpmS6ce86bhyRxSLpbLESSKbJwTvIZXnmT6
RqsM/G/H2pdaJEiLo585IpeCLze1cel4g0888tPtzaTgBIVkVMZKETe+prk7
SYKNvUb2sQtSBH8elbxXPA3rXXvKc8/IUBlvHrrOZQpyZ6dzgo/liMko6yxN
mIThbq3YmFQ5KrhPPX8Qj0M6zhXYGs2A6dTg3rp2DJtuSM04vBnEiHYzfMNG
IXbpPOZmPAv9c8bn6c+GsSssnEIrnoXeTBvxRG8IuhWSykAbBdZz6Xryln5w
Lpk2lFcp0JIXzH/7jRhJjLY7UR5KcDTA4wm70GkR+uhZkxKEpV0hM7kdw5fL
Nlr5z6Gkari6dL4FnquGC4z75hC82bvNw68JdnHp1MSgeRDxxpKDg7V4GiUr
e/FK7QAx8fu/D1DPdkx9fkIFgpPWlvX131jjn/DjhnAVKEycyW8sRrC1cMuh
SLU3yuiFPsVYeO7VoohRofqOb0xl6F+wNWGtNUpS17s2GI1kFSL3fmb+gQy1
LYqCbCW3cPyNrGy6Qu0P+TwIahzZ2wRkXh5WXEv4PvGBCkkf8q6jYIe2alW1
2h/yctHBNXHZKiLzsuBC39N4WkzmpSF1LjO3pk/tkuX5VHQ/6TmmO0juw0VU
BGslb5ScZ+PPhwnM6tfkfAIUvwrNtaVqdy/3n8bOw9qKvXKyPxq9ulnZI0qy
/wSsBnqOWqvU3rRcP4yYUhPn6AW1ryzXA1HLZuk+XCLNwGr/4t4VlLcg/7H/
AQGLXkk=
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
A2jV4Wo=
        "]]}}, {
      RGBColor[0, 0, 1], 
      ArrowBox[{{0.20312581801471954`, 2.2749853413297108`}, {
       0.5193875525910301, 2.4726509950939377`}}], 
      ArrowBox[{{0.4062516360294391, 1.9499874354254663`}, {
       0.9764569820138291, 2.3063695081566395`}}], 
      ArrowBox[{{0.6093774540441587, 1.6249895295212218`}, {1.361010984280648,
        2.094765404697359}}], 
      ArrowBox[{{0.8125032720588782, 1.2999916236169775`}, {1.660499081949212,
        1.829994554182873}}], 
      ArrowBox[{{1.0156290900735978`, 0.9749937177127328}, {1.859297281321092,
        1.5022918583064075`}}], 
      ArrowBox[{{1.2187549080883173`, 0.6499958118084888}, {1.937705863213608,
        1.0993448636615066`}}], 
      ArrowBox[{{1.4218807261030368`, 0.32499790590424427`}, {
       1.8705276551839773`, 0.6054051725781671}}]}}, Axes -> True, 
    AxesOrigin -> {0, 0}, 
    PlotRange -> {{0., 1.9380744290643892`}, {0., 2.599983247233955}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   "\"Figure 7: Median r-quotient as distance perpendicular to r-quotient \
line. \""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547229593004534*^9, 3.547229709458009*^9, 3.547298779434237*^9, {
   3.547298813682805*^9, 3.5472988395567217`*^9}, 3.547299134825918*^9, {
   3.547299165215502*^9, 3.547299177646183*^9}, {3.547311882110387*^9, 
   3.547311889916273*^9}, 3.547312117467767*^9}]
}, {8}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Move Median R-Quotients", "Subsubsection",
 CellChangeTimes->{{3.547229882993054*^9, 3.547229891327001*^9}, {
  3.54723011455107*^9, 3.5472301264890823`*^9}}],

Cell[TextData[{
 "The median r-quotients in the previous step are displayed attached to their \
corresponding reciprocal quotient points. But they should be attached to the \
sum-normalized points. The next step matches the median quotients back to the \
original points. Substituting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    FractionBox["x", "r"]}], TraditionalForm]]],
 " into the median equation above yields ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
      RowBox[{"r", "+", "x", "-", 
       RowBox[{"2", " ", "r", " ", "x"}]}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}], 
       RowBox[{
        RowBox[{"r", "(", 
         RowBox[{"1", "-", "x"}], ")"}], "+", 
        RowBox[{"x", "(", 
         RowBox[{"1", "-", "r"}], ")"}]}]], "=", 
      FractionBox[
       RowBox[{"2", "x", " ", "y"}], 
       RowBox[{
        RowBox[{"x", "(", 
         RowBox[{"1", "-", "r"}], ")"}], "+", 
        RowBox[{"y", " ", "r"}]}]]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.547229949963725*^9, 3.547229954213456*^9}, {
  3.5472300908227367`*^9, 3.547230208811603*^9}, {3.547311990975381*^9, 
  3.547312063919002*^9}, {3.547312212416731*^9, 3.54731221500848*^9}, {
  3.54731234034552*^9, 3.54731247721067*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "==", 
       FractionBox[
        RowBox[{"2", "q", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"r", " ", "q"}]}], ")"}]}], 
        RowBox[{"1", "+", "q", "-", 
         RowBox[{"2", "r", " ", "q"}]}]]}], ",", 
      RowBox[{"q", "\[Equal]", 
       RowBox[{"x", "/", "r"}]}]}], "}"}], ",", 
    RowBox[{"{", "m", "}"}], ",", 
    RowBox[{"{", "q", "}"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309894278715*^9, 3.547310015209132*^9}, {
   3.547310046007867*^9, 3.547310046420391*^9}, {3.5473120513383827`*^9, 
   3.547312055784575*^9}, 3.5473176358843613`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
     RowBox[{"r", "+", "x", "-", 
      RowBox[{"2", " ", "r", " ", "x"}]}]]}], "}"}], "}"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547312195394025*^9, 3.5473122062857943`*^9}, 
   3.547317635884602*^9}],

Cell[BoxData[
 RowBox[{"sumNormAppropriateMedianCurve", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "-", "x"}]}], "}"}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
         RowBox[{"r", "+", "x", "-", 
          RowBox[{"2", " ", "r", " ", "x"}]}]], 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, {
   3.547312129012969*^9, 3.547312172914791*^9}, {3.547312523893662*^9, 
   3.547312570117124*^9}, {3.547312647770303*^9, 3.5473126690748377`*^9}, {
   3.547313177569745*^9, 3.547313183875668*^9}, 3.547317635884653*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
q3KM5ss9tvC//7P/7z/u/wdmnmMi
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.3548887814431656`}, {0., 1.2521278254959864`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547312572154689*^9, 3.547312669802268*^9, {3.547313184667417*^9, 
   3.547313213924827*^9}, 3.547317635884718*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXHmYVdWRf4RG3FCJDsZolIZW0KDgCoZdjUsUzWSBEYkzmImDThhxmS9O
Jp/Jxx+oEyMqa3CLaAy4EHADNxaBbuiGptllp9ma7ga6Hw303jXnd27Ve6eb
e++pB+H7+EP8utv7Xv2qzlJVp06dOnfQ8CdG/Grk8Cce+uXwjrc9NnzUiId+
+XjHWx95zHzUulUi0WqE+bmzYwL/T4mE/LL/HsIvfsjg//vZP2dTzfa36ZGh
o+iZF5+hUUMfobeLawK+VQX0QK/hVFDVQCXTB1KH87Lpsi5dqIv5yblyCOUl
KdFJzSN4bKoupk8mPkyd2+fQqDdX08HGzHhUb5lKox54kp6b+BKN/s8H6Y+5
FdRImfCop7JPn6Khw/+Xnp/wAj31q1/QHz4vp/oUj7Oo4UA+zZw0knJMG0dO
mkn5BxqOakeInM7cBD88ejgvC2amr/1zDlFjGc0cdBXdv7CSmsx/lQvvp+6D
PqAy02VqqKSiz4uo0nBvOrSK/vTAH6mwqslKajhSQkcaKNuyOV3L5luWvDVR
5Xwa0HEAza+UMVG2pLaE3vlRT/rdmiO2FXXbJ1Cvq39H66q5JUo2B4toZLfr
afy2OmYziXp2+y9aeZg6h7QwaPVpaXhdpIiECh89ns2np62Z0aU0tEtveqek
0ZI1lkyn3l3vo/wqSmSxqPryufTcH16lwmQji4/HpSahahn9+8VtrJV/y/5u
TYkzetDE7XZUEh3VvAzNwSU0pOsAmr0v6E5T2SzqnX0bfWW6n50Jn+QiurNT
H5pVJnxmUp9Od9KiZPjQZil4h+FOCRm7ri2G3pAP7NifvqwIbIsOfEn9s2+y
8DaWJosaK3Lp6ft+TVM3VRs9oGwFNOgp5DdQ+fzJNAPuI92yTmoWoFlAt5x/
If18YgGVHSqlxWNupAuuepY21TqDruHTUEYf3Hs59X0ml0oNn9xn+lLXIbOo
tMEz6DG8w3Btw0ctQuWnp6ZympnKYXYqZdoOr3qSut/wNG2sOVq9wnCtLY2Z
tYb9tHDyNNq8Z14L/xOPT43UoRU0oltPemHKo9TvwjOoXfbtNDq30q4Pmnak
+DRVUdGL91H/Ib8xa8RY+u29/WjI84V2rdKoeRjvMNypIePVcriNv5w1qHva
mX31C+p+d+DMWrOu1u/9mJ4du4ySZraa9s2mfjl3wSKzFSyyUnOeT1PGjqNr
L2mu5jHQ9GAlafGD19Hg2fsw0NRUs5fWbq1qPugaPslc+nFOb5pRyoNXOoP6
5NxDi13fUjHv6EGP4R2GaxM/ajz+5wXIdIhlnrqwmtYWT6PHhj1ql/5Hhz1G
04pruTWnmIVjLU0eMZhGPj2exv7PEBo8OpcqG3lAw6HirUwzqGr576nHRQPR
0M4KaY0VefTiyMdpzPjxNObhu+n+CZupmmKltXZ0fNWkh+n+/36WJkyeSM8+
MYz+Y1wRmQWPbS7LBDJ5NHW0Gc4ut2OpaBPDtnMcJHJYYgbb/v7JyfF9u+Aj
8+8+/GoVjTrtOD47/Rt+x8WPP6PGxib5/Lhk/KPbF6yv36jNSczvqwXbTrr2
faM2Jz2/iRPyqLa24aRqX4zaXHUCP9u9O0nvTF8VSvf96CYdCj6j119bRhUV
1fZpqJ+8qqqWXnm5wEd+mMln/n0tbdt6wD7d6ydvaGikcS/l+siPMHnu4mJa
umSHffqXaPJqJgdnSMDTED/51q37adbMtUeRW+oaJnr1lQI6dKjWPg2O5ink
Bw4coalvFPrIa5n8b28X0d4Sm8dL/NxPXl1dT5MnLfGR1zH5nDkbaN26Uvv0
Mz+5WeXppRcX+8jrmXxF4W5aMH+rffppNHkDk08Yn0f19cHkxASJQr59ewX9
fcZaH3kjk0NlZZr+2U/uTlMMeROTv/3XIiorC0zkx37yI0fqaMqflx5FnqY2
RB99tJ62bQss555onkIOvZ40cYmKvBVj5s/bQqtXldinu5WYJtMJOF8NRvJq
y5fvpkWLttunQR5Ma8ZABhQOT3cpMRs3llud1mAkV/jnyUuxkNinO5UYeNwZ
769RYdow5rVX0wr4IyUGWvjWmytUGEkE/fWtFbRvX+BP73AwaUgqZXS4LuXJ
7/Bwb8uYGTPW0I5im91K3K7E1NWlNdOHkfTM559vSnmm25QYaMv4cbkqjGxc
luTtSC0gt3owHC7QOOMCRTN/qMSsW1tKX5g+aTBnMAYOEWOHp1uUGHjFWbPW
uZjACI/vxKl1lNwzWa5rRTcHchPtA8LjO07xi961K2nV0hV9KvcsMgUedlJg
ra5NSpAMKRw11lU83dScf3S2NyIdHtmZdixsz56D9O67q8OERSc6w3LAkZLO
YmLELfAAeBrYXFJ0ds+T/vQKxRo5fdpKV2ignseU4YsUdzaLc33ugEBcpAUJ
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
75PkZbG+7xOt/h+qBSvq\
\>"]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNormPointsPlot", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Darker", "[", "Magenta", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "sumNorm2D"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472315073400793`*^9, 3.54723153098685*^9}, {
   3.547291708384388*^9, 3.54729171230812*^9}, 3.547291849024194*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ninthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"sumNormAppropriateMedianCurve", ",", "sumNormPointsPlot", ",", 
     RowBox[{"Options", "[", "sumNormPointsPlot", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547231558731024*^9, 3.547231583003787*^9}, {
   3.5472316750222387`*^9, 3.547231693053355*^9}, 3.5472915105811043`*^9, 
   3.547291715461149*^9, {3.547291836013537*^9, 3.5472918490243273`*^9}, 
   3.5473127374537373`*^9}],

Cell[BoxData[
 RowBox[{"ninthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "ninthDiagram", ",", 
    "\"\<Figure 9: Sum-normalized points with their r-quotient scaling \
factors above them.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5472915137778053`*^9, 3.5472915576132193`*^9}, {
   3.5472916477569313`*^9, 3.54729168424542*^9}, 3.547291849024382*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
q3KM5ss9tvC//7P/7z/u/wdmnmMi
        "]]}}, {
      RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{0.5504139634968043, 0.44958603650319584`}], 
       PointBox[{0.6630719771133087, 0.3369280228866914}], 
       PointBox[{0.661787109323564, 0.33821289067643595`}], 
       PointBox[{0.7286019218118642, 0.2713980781881357}], 
       PointBox[{0.5689771649740721, 0.43102283502592786`}], 
       PointBox[{0.5614136729040614, 0.4385863270959386}], 
       PointBox[{0.39999885193102036`, 0.6000011480689795}], 
       PointBox[{0.768917311307553, 0.23108268869244708`}], 
       PointBox[{0.5466682166788871, 0.4533317833211128}], 
       PointBox[{0.6760523191490111, 0.3239476808509888}]}, {
       RGBColor[1, 0, 0], 
       LineBox[{{1, 0}, {0, 1}}]}}}, Axes -> True, AxesOrigin -> {0, 0}, 
    PlotRange -> {{0., 1.3548887814431656`}, {0., 1.2521278254959864`}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   "\"Figure 9: Sum-normalized points with their r-quotient scaling factors \
above them.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547291679984372*^9, 3.547291684882041*^9}, {
   3.547291840344864*^9, 3.547291849024444*^9}, 3.547298867032872*^9, 
   3.5472991888671083`*^9, 3.547312760647628*^9, {3.547313195612541*^9, 
   3.547313222429434*^9}}]
}, {8}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scale Sum-Normalized Points", "Subsubsection",
 CellChangeTimes->{{3.547233327719347*^9, 3.547233358998193*^9}}],

Cell[TextData[{
 "The final step is to divide each spectrum by its corresponding reciprocal \
quotient. This results in the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], TraditionalForm]]],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     FractionBox["r", "2"], ",", "\[Infinity]"}], ")"}], TraditionalForm]]],
 ". (Note that there is a ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " asymptote as well at",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{"1", "-", "r"}], "2"]}], TraditionalForm]]],
 "). Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["R", "x"], ",", 
     SubscriptBox["R", "y"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " be the coordinates of the reference point, this curve is the hyperbola ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", " ", "y"}], " ", "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["R", "x"], "2"], 
     FractionBox[
      SubscriptBox["R", "y"], "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with the origin translated to  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SubscriptBox["R", "x"], "2"], ",", 
     FractionBox[
      SubscriptBox["R", "y"], "2"]}], ")"}], TraditionalForm]]],
 " . The scaled spectra are the intersections of this curve with the lines \
connecting the original points and the origin."
}], "Text",
 CellChangeTimes->{{3.547233409357737*^9, 3.547233426602599*^9}, {
  3.547315611672408*^9, 3.547315612461529*^9}, {3.547318993409947*^9, 
  3.547319046408938*^9}, {3.547319077019785*^9, 3.547319227198279*^9}, {
  3.547319318108941*^9, 3.547319363116486*^9}, {3.5473194196952868`*^9, 
  3.547319539922263*^9}, {3.547319598973487*^9, 3.547319603472768*^9}, {
  3.54738919905938*^9, 3.547389334182631*^9}, {3.547389373949347*^9, 
  3.547389447121338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"originToPoints2D", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"Darker", "[", "Blue", "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], ",", "orig2D"}], "]"}], 
       ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "}"}], "]"}], "&"}],
          ",", "orig2D"}], "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5471598662264*^9, 3.547160104879672*^9}, {
   3.547160335177816*^9, 3.547160346330387*^9}, {3.547161024190194*^9, 
   3.5471610625535383`*^9}, {3.547161144522626*^9, 3.547161153551978*^9}, 
   3.547161262642654*^9, {3.547389660441325*^9, 3.5473897177279663`*^9}, 
   3.547389958138364*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalScalingPlot2D", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"r", "/", "2"}], "+", "0.0001"}], ",", "3"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2.5"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547315820284547*^9, 3.547315876113661*^9}, {
   3.547318520522623*^9, 3.5473185542564173`*^9}, {3.547318928248506*^9, 
   3.547318929567464*^9}, {3.547389501205985*^9, 3.547389516535078*^9}, {
   3.547389566921217*^9, 3.547389571153699*^9}, {3.547389684798848*^9, 
   3.547389685310708*^9}, {3.5473897799475117`*^9, 3.5473899477272882`*^9}, 
   3.5473906862822933`*^9, {3.547393836328681*^9, 3.547393836810052*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"scaledPoints2DPlot", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Darker", "[", 
       RowBox[{"Darker", "[", "Orange", "]"}], "]"}], ",", 
      RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", "=", 
           RowBox[{"refPt2D", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"t", "/", 
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
                  RowBox[{"r", "+", "t", "-", 
                   RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "t"}], ")"}], "/", 
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
                  RowBox[{"r", "+", "t", "-", 
                   RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Transpose", "[", "sumNorm2D", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5473899959131107`*^9, 3.5473901949805107`*^9}, {
   3.547390262558668*^9, 3.547390265503881*^9}, {3.547390645420309*^9, 
   3.5473906467773438`*^9}, 3.547390686282486*^9, {3.547391000532838*^9, 
   3.5473910721539288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tenthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "originToPoints2D", ",", "finalScalingPlot2D", ",", 
       "scaledPoints2DPlot"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547389728093873*^9, 3.547389745129978*^9}, {
   3.547389850426289*^9, 3.5473898559374733`*^9}, {3.547390169591282*^9, 
   3.547390173098926*^9}, {3.5473904123664722`*^9, 3.547390415950437*^9}, 
   3.547390492850726*^9, {3.547390650560094*^9, 3.547390686282548*^9}}],

Cell[BoxData[
 RowBox[{"tenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "tenthDiagram", ",", 
    "\"\<Figure 10: Final scaling of points based on generated median \
quotients.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547390487639607*^9, 3.547390555068609*^9}, {
   3.5473906090178833`*^9, 3.5473906133056307`*^9}, 3.547390686282605*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{2.172454345958343, 1.7744919345405104`}], 
       PointBox[{2.675301724350803, 1.359406145521423}], 
       PointBox[{2.87830990460933, 1.4709889319173473`}], 
       PointBox[{2.8813454193984884`, 1.073276896492814}], 
       PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
       PointBox[{2.26005835257858, 1.7655977040112563`}], 
       PointBox[{1.398151988227432, 2.097238014713233}], 
       PointBox[{3.0861624358478528`, 0.9274842729247682}], 
       PointBox[{2.255768229218814, 1.8706253682049265`}], 
       PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
       LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
       LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
       LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
       LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
       LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
       LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
       LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
       LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
       LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
       LineBox[{{0, 0}, {2.6917625635090703`, 
         1.2898265639379862`}}]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       LineBox[CompressedData["
1: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
/NGTjP8D83/w7Q==
        "]]}}, {
      RGBColor[
       NCache[
        Rational[4, 9], 0.4444444444444444], 0.22222222222222227`, 0], 
      PointSize[Medium], 
      PointBox[{{0.5431288103358621, 0.4436354186915789}, {0.6861536917911115,
        0.34865657839748754`}, {0.6839853356873696, 0.3495575152552775}, {
       0.8239683316769922, 0.30692126250356366`}, {0.5615509147589944, 
       0.4253971550894395}, {0.5538566621048238, 0.43268265611279816`}, {
       0.4358964095706468, 0.6538477421096109}, {0.9475904367568392, 
       0.2847793159093485}, {0.5395944657367983, 0.4474657826437218}, {
       0.7090240824172893, 0.3397469406742102}}]}}, AspectRatio -> Automatic, 
    Axes -> True],
   "\"Figure 10: Final scaling of points based on generated median quotients.\
\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547390615687723*^9, 3.547390686282668*^9, {3.54739100979552*^9, 
   3.5473910778087*^9}, 3.5473938530772943`*^9}]
}, {6}]],

Cell[CellGroupData[{

Cell["Work deriving equations", "Subsubsubsection",
 CellChangeTimes->{{3.547391875653401*^9, 3.547391881671582*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Equal]", 
       RowBox[{"t", "/", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
          RowBox[{"r", "+", "t", "-", 
           RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], ",", 
      RowBox[{"y", "\[Equal]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}], "/", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
          RowBox[{"r", "+", "t", "-", 
           RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}]}], "}"}], ",", 
    RowBox[{"{", "y", "}"}], ",", 
    RowBox[{"{", "t", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547315678490505*^9, 3.547315792141757*^9}, {
  3.5473159260094624`*^9, 3.547315934524352*^9}, {3.547316025974309*^9, 
  3.547316030952437*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547315775541061*^9, 3.547315792772892*^9}, 
   3.5473159377713633`*^9, 3.547316031415708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"t", "/", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316619099985*^9, 3.547316623312673*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"r", "+", "t", "-", 
   RowBox[{"2", " ", "r", " ", "t"}]}], 
  RowBox[{"2", "-", 
   RowBox[{"2", " ", "t"}]}]]], "Output",
 CellChangeTimes->{3.5473166239681273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]]}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316374848133*^9, 3.547316392164747*^9}, 
   3.5473166388419333`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox[
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "r"}], "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547316392990789*^9, 3.547316641798195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "t"}], ")"}], "/", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
      RowBox[{"r", "+", "t", "-", 
       RowBox[{"2", " ", "r", " ", "t"}]}]], ")"}]}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     FractionBox[
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.54731641143988*^9, 3.5473164195544043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", 
       FractionBox[
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.5473164210602627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", 
       FractionBox[
        RowBox[{"r", "-", 
         RowBox[{"2", " ", "x"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", 
           RowBox[{"2", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "r"}], "-", 
         RowBox[{"2", " ", "x"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "r"}], "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", " ", "x"}]}], ")"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547316426950857*^9, 3.547316443999943*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
   RowBox[{"r", "-", 
    RowBox[{"2", " ", "x"}]}]], "\[Equal]", "y"}]], "Output",
 CellChangeTimes->{3.54731645414047*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"refPt2D", "/", "2"}]], "Input",
 CellChangeTimes->{{3.547317840890967*^9, 3.547317843609322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.30769106857440903`", ",", "0.19230893142559097`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.547317844104817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"1", "-", "t"}]}], "}"}], "/", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.547318031714019*^9, 3.547318034654467*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}], 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "t"}]}]], ",", 
   FractionBox[
    RowBox[{"r", "+", "t", "-", 
     RowBox[{"2", " ", "r", " ", "t"}]}], 
    RowBox[{"2", " ", "t"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.547318036058297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]], ",", 
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", " ", "t"}]]}], "}"}], "/.", 
  RowBox[{"t", "\[Rule]", 
   SubscriptBox["x", "sn"]}]}]], "Input",
 CellChangeTimes->{{3.5473922441569366`*^9, 3.54739225075502*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"r", "+", 
     SubscriptBox["x", "sn"], "-", 
     RowBox[{"2", " ", "r", " ", 
      SubscriptBox["x", "sn"]}]}], 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", 
      SubscriptBox["x", "sn"]}]}]], ",", 
   FractionBox[
    RowBox[{"r", "+", 
     SubscriptBox["x", "sn"], "-", 
     RowBox[{"2", " ", "r", " ", 
      SubscriptBox["x", "sn"]}]}], 
    RowBox[{"2", " ", 
     SubscriptBox["x", "sn"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.547392253477168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bar", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"r", "+", "t", "-", 
          RowBox[{"2", " ", "r", " ", "t"}]}], 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "t"}]}]], ",", 
        FractionBox[
         RowBox[{"r", "+", "t", "-", 
          RowBox[{"2", " ", "r", " ", "t"}]}], 
         RowBox[{"2", " ", "t"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.547318045301791*^9, 3.547318070672861*^9}, {
  3.5473181761201572`*^9, 3.547318193913475*^9}, {3.547318506974475*^9, 
  3.547318507346719*^9}, {3.547318559605433*^9, 3.547318588031644*^9}, {
  3.547318733277388*^9, 3.547318750404436*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5473180726619987`*^9, {3.547318178151081*^9, 3.54731819481457*^9}, 
   3.547318508421997*^9, {3.5473185742356052`*^9, 3.5473185889656067`*^9}, {
   3.547318736091078*^9, 3.547318750975293*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "t"}]}]], ",", 
    RowBox[{"t", "\[Rule]", "0"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"X", " ", "asymptote"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547318847881042*^9, 3.5473189326004963`*^9}, {
  3.547319257475436*^9, 3.5473192865271997`*^9}}],

Cell[BoxData[
 FractionBox["r", "2"]], "Output",
 CellChangeTimes->{{3.547318862988669*^9, 3.547318871474601*^9}, {
   3.547318915669297*^9, 3.547318933207136*^9}, 3.54731925937846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"r", "+", "t", "-", 
      RowBox[{"2", " ", "r", " ", "t"}]}], 
     RowBox[{"2", " ", "t"}]], ",", 
    RowBox[{"t", "\[Rule]", "1"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Y", " ", "asymptote"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547319263010157*^9, 3.547319294297826*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "r"}], "2"]], "Output",
 CellChangeTimes->{3.547319271049531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
       RowBox[{"r", "-", 
        RowBox[{"2", " ", "x"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"r", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547315820284547*^9, 3.547315876113661*^9}, {
  3.547318520522623*^9, 3.5473185542564173`*^9}, {3.547318928248506*^9, 
  3.547318929567464*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.3, 0.4},
  PlotRange->{{0.30769106857440903`, 1}, {0.27777907217978276`, 
    1.2401813281366454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.547315843337575*^9, 3.547315877133327*^9, {3.5473185277626143`*^9, 
   3.547318555022922*^9}, 3.54731895330225*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
F4c2yAXX1aoepD9+Ex7cVsPeRmfrGeSdbJQ9f7HSLbap2Le3jFsytYeOkHve
M2dkMMooxr29tkqkHfPAp9qntXANZm8sRbv/wuZGjycDP4sZheRK1RuVyRgd
8y+yF6PD0XPuIObEjcb7p/WIrq1gEX4ydjVKOvy8oe7rQG9w0O3gDYPVgG0r
ScLcqXNksDhn6lwklbSpAUIDnWjM/g8Mv3IcTQ5yQIwNNOpScXf//rg6Nhax
sddi9OwciL6JdoH66jKxZNbTeDUhAa/OnIhpywsg9s4Xqnpyb8g8CjdFHPUf
bDoot91iW631cVAfYbRTezFWjRyIgYNZMvF/cDSuuPZ55JmjPwQvRv3BFTMx
7dn5WL4yEfOfmYonluVCxGyqf0LwYpWtTVuAmXNfRcKKRXjx8ZlIPNTEIFjZ
jxTRfSbWvyz6L/ZuLgZRDmodIvpVyiLzBpwnV6/aI1dLsbOUW1yxd9VS7PHl
qj88nha5EWdEtWrlHomLDdE2e3KJMszNMbM93A2TZGaGaQYa/twej1eG2dPb
PsmXqzt3/syDtLR0bLcnF6iGKhVbbm7wSXIbXlbm0XbaY68pg9x+M4XGBYUo
UwwNDa3pOtlHFxY/k/RA2FZfryDPev4dy9mzUfLZ+ndypPMxQ8ZhGvk3VPZv
Xse/Z7n/d2+bZ7oLR8mIgwl1Mb3Jz8+daw+q9/9iHf/Wy/y/5N7XB3k2NMgz
/SBEz+czIElcnikXG4+nVQWg56c32LNg7LdQBT1xEonCwrMynuIkLfbVF/91
S/+calju8pnAXp6Qic8/O86ktnbEHntWVaaurkUesDHUyc+vzrcnnlYEDyd4
4MKjBkGfsCfmKILHHuxvHnp5vb5Ce+K3qjKMLRjAsDI8EBHvtSI/TCblfqPU
M3DaseMkli5J5z6n1F69TkRIlcuWZvBERCuzF39SifNsgMr37C7Vyu3Fn1Dl
4SzHgjMaE2WrsCceUwSPWhj2sUlFv1XaE4+qIjHYWrliN48FtWp78UeU+Oky
DxbFp2F/zmntrL34v6ry8ESMESFzBG1t3lp74lfKAM+f4hem8fhQq7cXf1gZ
oLMybmRKSjSRx56Y6leDJYvTmbDSGrt7whQl9NWXBfIcUJRfa7LXOVmJi+VH
RtrZ+8q0c/biv1TiTIrSa3gU1GIvPkmJ85Tzww8PSd9ttRf/hRKnF3NW2bmj
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"foo", ",", "bar"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.547318594206092*^9, 3.54731860527495*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.3, 0.4},
  PlotRange->{{0.30769106857440903`, 1}, {0.27777907217978276`, 
    1.2401813281366454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.547318605838408*^9, 3.5473189624160147`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
bsA4pO0iyxJJ9QLRDkl7T4EbOAFZ2w6p7kmLB4oen74CzaCJSCd5FWnxPGli
JiNKbuigGTwZutDNfApZIE34M8JYXCmkfz4L0VBdWyRNTGdOqNd8Dt3gSSjn
UlQl0uJ+TLww3oBbH3gj87MjqjJp8Y9Zecz1DVD7LoF64nw0VhrLpYmpzED2
0bNIGDgRd68kqCqlxacwA3y8JkwMATd7Dd+CVdLEZNGDG4m0jYuvJqiMrYNh
kti0YdvATZgNc129qkZa50QmXldYCm7IFKRFHVfVSYt/xMRzT5yDlkRCZVY+
e3HpUNyLiWtDw6H3DqGv9hqkxcczcX4ZoB4bBMOnUSqTtPg4Jl5fUgGuvydy
Tl1WNUmLezLxMm0KtH1HoTQpU2WWFh/LxO8SVxMGfoS68mqVRVp8DBNPjjyC
+HHBfFOqrNLio5k4t/EgkmcIr/zQui1HMiH16r1Im7PSJiSzRheZW8t2ImPh
ehsjs/zwYEz8om3ICAu3Me2kGXexbEsikRIWYWPaSzMjGJO4bDsMS7famA7S
zIdivX52DLf9l9gYmalgOGNyLtxCsoevjXlQmhnGmFKyAOZHE2uTWXj4kMAI
1ffbXi3e78DuUGa3prgC+v5j6VEE+kTYw1CpnhQEf9v7LYemhzDT/Atq7t0x
qE3NEh7+gZl+iHkm+TZByQsXOcsa9+n0tXdzA7WyLL13reQNAJWhC8q/M3s6
Mijejjhks/eIQ08dbJIq2Wt25OlgZjn7shp6r9k2y4+2tCy9Iadkr9ORZdHn
mnIjdO95EvlG4aGwMcqYX7W9Jmcu3t0flVqDzVFmzlGf+4Ax3NrPkbkhysY8
Ls0MYkwxGcX1Hn425glpZiBj+EDX9Rtj62MyZ51EhpsSioKLv9jsyDDvM+bu
5VvQf7zQxjwpzQxgjNlsgXbAeFjqG4SHT9kxdDZ4j0n+ErwRBSd+tGl/Slq7
yBQYcpFkX1t/dM7cGjIVpoIiRUx/xhg+/w7py+xmgz9JM/0Y01TXAI7kt/wa
gj75D+eMnoyu9y7etNmRYd5lTHV2Hj2U1cw87ZxJGB2A6qw8Rcw7jLl304Ck
KfNtzDPOmYShpK5LKxQxbzMm4+wNpAQuszH/acfQiOnLJDVkKWSpqXUs2Uq7
yKSdvIi0hRttzJ+dM9xAL1hNTYqYvzEm83A0DPb5w1+cM4kDST9pNCli3mIM
ycZhmLbYxnRyzmiGkVYpLlPEvMmYotR7SPIMsDHPOmdukrVFjSFDEfMGY+qN
9UgePsXGPGfH0Nb/K5NMWBiBkuiLjiUltOsGeTXfc8aIdtIO/4CU1TttTGfn
DPdf3i1bUoZ5nTEVqTn0ZF4z08U5o5m6CJXJGYqY1xjDb+5zg71tjJtzJv3g
aaSSdXprRnn2KH0azNGsK9rVkkjlT3S2tutK9ih9Lsmh6T7MNF19jbEL+K7M
tPLsUeZ4jJzl5EWbcfenWEnLCrJHmcMZtuyRbUSR9fHk5jLIeCqXPcqcAnDk
aW9muSotF5qP7Qavbi0tK8geZd44y1nm3/8VC6dkWliWyx6VvP2Us8kHc4t6
ZjZlNi7p4XUuYIWNed45o532CSoMmS4xmhF+Lcsmw7BNTXpSmT823Mx0d86o
g9agVJ3sEqMdMa1l2ewZOiW8xCT53R7NpBCb5AvS2l9mDP8e/c6Zay4xXOva
kmHEsvFJOn8AvZnp4ZzJ/JIMuzu+donRjpsFk7HWJYY/Fd3CHxnmRcaUJ2ci
yc+u7/Z0zvDn1osvxbnGDPcBnbMUML0Yw4vrh/nYmF52DI2YnkzyHhlnDUu3
OJaU0K4jSXpVSrZrTOu+L8OIZeMTCP7MejPzonMm5+R5JK/b5xKjnRyK6twC
lxh16z4pw/QQ/eG3P0f625iXnDM5311G0uoolxjN9DD6DSKHDG39F0TPh3/c
0gsl2of7KmZEO/xMo5+1ysa87JzRL9+BvDNXXWL474hY7Bcqihj/lv7IMN0Z
01TfSM+aNjOvOGdyv71Izz20ZoQZ81ef5m8nY1LnvwyVmXltTIrH837tQXJH
k7xok1WLIptKzjXL2dII04lrtpydyaWpoXjIrq64HFqfUJuFV5V7I33cs6U3
zzNdGV98i9R930jbcvHAn5wtft1kzC9pY0tgXDp85igARTPqka0aiJlx1E9E
Rts6t5BhujGGX6toP5prY3o7Z7IPRyN1+xGXGO2M5fTsoUvMiFbjpSLGT5qh
I7gbk+RfJLP8UJCU+bqjGNRFvyRCN2etSwz/LccsMre6wnAkE6svr3aJaVNb
vzMj1hufIWo8Z9mY15wzd3682nIuVsAkfhKJe5fiXWL47+rxb49dYloPhfYM
jZguouQoGclW2kXGVFNPz+41M687Z+6du4akFTtcYpKXf4Y7Z6+7xPBR1lhd
6xKjcW+VvSlgtK3XCEoYF+x0ZkxFdgH0votszF+dM/x3rVMjvnTM0NZ/jknq
F25G4XWtS9r5VVuLTSgljMf0lp4rYLjWtfU72xHroJqsXdT+y23MG86Z7K9+
gCHyiEtM4pItyLumbcOIm4bOMz4zCk4MwtN/6ooePYWT6t1f9cINib0d0a5m
QjBMdY1t7CpK+0gRrDV6bPULh8Yo7NuZ6wpQZ5a3mdB6VJGxKX7trankMras
2g9NlcXhSWBR960xsxTrFk4C8F9aicMG79k4nF7Pn6q3ZXadGKQWtjYVKX2I
3avVL0Gfv21AWoPjyniWyZlq6qCdMMem+81Wuu0yOSG1egBNhWewKTKB/54n
rKXnMKC7O79RKmeG/+0KiUu2tjEjm8Q9QJo3GXsCJiB4w05ELvXChNVxqLTI
WkqJOER6wI9tLDmKfpHhc6XK21muMcJrPJcYbpS/y4xu5HSXmSTPmYoZMcjo
ryFZs8bGvGXH0HH5L6JkVpbwy0IcSUppv3IFuHTJNebQISA9vQ2juu9/AB4G
jLU=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"medianScaledSumNorm", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"1", "-", "t"}]}], "}"}], "/", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "t"}], ")"}], " ", "t"}], 
        RowBox[{"r", "+", "t", "-", 
         RowBox[{"2", " ", "r", " ", "t"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.547309669440963*^9, 3.5473097207388783`*^9}, {
   3.547310086913322*^9, 3.547310225055771*^9}, {3.547310429686274*^9, 
   3.547310440017675*^9}, {3.5473104829690237`*^9, 3.5473104866731577`*^9}, {
   3.5473105669539022`*^9, 3.547310597658861*^9}, 3.547311204398094*^9, {
   3.547311556567548*^9, 3.547311601068091*^9}, 3.547311948020509*^9, {
   3.547312129012969*^9, 3.547312172914791*^9}, {3.547312523893662*^9, 
   3.547312570117124*^9}, {3.547312647770303*^9, 3.5473126690748377`*^9}, {
   3.54731291394738*^9, 3.5473129688112698`*^9}, {3.5473130411268387`*^9, 
   3.5473130569356813`*^9}, {3.547316839707315*^9, 3.547316853000552*^9}, {
   3.547317119329213*^9, 3.54731713437667*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 3}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547312945334552*^9, 3.547312969483954*^9}, 
   3.54731305782784*^9, {3.547316849368409*^9, 3.54731685411171*^9}, {
   3.5473171299875193`*^9, 3.547317134964613*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnHtwVcUdxy+5CUi1llbH1j4UFAgBMdqHWt+002qtyB/tiMXHTKTOgC0D
orXaPzodrVVHi6Oi+EDFqBC0IkZ8Isg7kpAI4REgvMIjgYS8CAl53fy639/Z
vfee7HnsOTeJaYdk7knuOfvZ329/+9vd3+6ec8bn3Dflrmk5902dnDP0upk5
M6ZMnXzv0F9PnylORQdEIgOmiM9dQyP4nyIRdeCfqTjILwH+P43/nE6t++bT
9Ekz6LGnH6MZk6bT/IpWK9+mIrrzshwqaiKnNFmMf8sAj1H92kfolhun0COz
n6WH786hR1bUUqegs6QKnXWFtHjONBr+7eE0bc5iKqzrDKKCP+6uQqbMg8S3
qoXj6Kwzh9HIzEzKFJ/hYydSQaOvGrIYQwzzcNVllLJG7Qp6+JYJ9Kd/PUOP
T7+F7l1USe3+1kizqvVUpUysmhaPv5DuWN1AXeK3YfUdlD0+n6pj0LOBNi7d
SA3trmkyg2TT2UYV8/5KT25qEimI2vc9T5dm309bWmg0ZxMlalhB1w69llY0
UMRSdLCJFtK0Pry7+MgoWb1dx0vp33c+QSVNXewZnS1V1NJpZIlIlmkeBno0
FkylGx4soSZgB+fR5WOn0aZmMz0GJFfwIOEO62lS5hX0dlWM1YlVLaQrRt1K
hU3KRN5pMg3SDJTm76rOpyvPu4FWN1LEqUrTDfJyqspTHPJX6TpqltOT/3iF
ShpjRvmPduCc8h+jztUsoavO/y2taTSzV3fzi2KMG3oNLau3+hqqW0bXDPtF
kod6p8k0SBPlNAOpvTKfZuUVU/Xxo1Q4axyNvCmPKjscG1e6QbZONZFhIiqd
YvXr6NFb/0y55Sfg4yYFHeOMGpVNlKarhcrnTaCLbxeNoNNIoEs7WRiv0zxR
p7c5thOnNN3biVMaqzAZ1L7nNfrjm/m0YPYTNOvVT2lXc1fc37zai1Oe7rXk
LOcCmb659AHKvuRR2tlqVj4nzqs8o+W1jpqVtGDuHHry/sn0l9zt1NxlJq97
9YgB5v3x2Ykeb9XtlH2T1eOlGaTJNEgTlUWMVeVTztM7SEQokbHKvPVf6NXi
kVeWA5fhkP8Y6d8dhz+kx5/aQI3C57uOfkxXD78RXY5J0bK8s3AqlZLa1bSF
cuduoAZhf3R0V4+YQGvNpMr6OU1Wc1tFHs287R6ONO65bSblVbRJOzlfy/Ll
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
/t/vHcED/gsQCrCz\
\>"]]
}, Open  ]],

Cell["\<\
Find all equations that match what we know so far about the eventual \
function: its asymptotes are the two axis-parallel lines through refPt/2 (the \
two limit expressions) and it is a hyperbola (the long equation and \
inequality). Looks like I was wrong and it is not a hyperbola. The conditions \
only hold if x and y are constant functions of r. (Later, it is obvious it is \
a hyperbola, I don't know where I went wrong here.)\
\>", "Text",
 CellChangeTimes->{{3.547378763237494*^9, 3.547378859176252*^9}, {
  3.5473788966649513`*^9, 3.547378897790078*^9}, {3.5473789316005487`*^9, 
  3.547378953858738*^9}, {3.547379326733573*^9, 3.5473793725500727`*^9}, {
  3.547390757884078*^9, 3.5473907743895397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"b", " ", "x", " ", "y"}], "+", 
      RowBox[{"c", " ", 
       RowBox[{"y", "^", "2"}]}], "+", 
      RowBox[{"d", " ", "x"}], "+", 
      RowBox[{"e", " ", "y"}], "+", "f"}], "==", "0"}], "&&", 
    RowBox[{
     RowBox[{"b", "^", "2"}], ">", 
     RowBox[{"4", "a", " ", "c"}]}], " ", "&&", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"y", ",", 
       RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "&&", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"x", ",", 
       RowBox[{"y", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", 
     RowBox[{"r", "/", "2"}]}], "&&", 
    RowBox[{"0", "<", "r", "<", "1"}], "&&", 
    RowBox[{"x", ">=", 
     RowBox[{"r", "/", "2"}]}], "&&", 
    RowBox[{"y", ">=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}]}], ",", 
   RowBox[{"{", "y", "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.5473780940045357`*^9, 3.547378186235491*^9}, {
  3.547378336104927*^9, 3.547378340014043*^9}, {3.54737851071954*^9, 
  3.547378570311448*^9}, {3.547378675033185*^9, 3.547378700148028*^9}, {
  3.547378909688429*^9, 3.5473789187386923`*^9}, {3.547379030260063*^9, 
  3.547379043291792*^9}, {3.547379095495343*^9, 3.5473790984698067`*^9}, {
  3.547379146433846*^9, 3.547379148370112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "<", "0"}], "&&", 
      RowBox[{"0", "<", "x", "<", 
       FractionBox["1", "2"]}], "&&", 
      RowBox[{"f", "<", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "c"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"2", " ", "c", " ", "e"}], "-", 
          RowBox[{"2", " ", "b", " ", "c", " ", "x"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "x"}], "-", 
          RowBox[{"4", " ", "c", " ", "d", " ", "x"}], "+", 
          RowBox[{"4", " ", "c", " ", "e", " ", "x"}], "-", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"4", " ", "b", " ", "c", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "\[Equal]", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "<", "0"}], "&&", 
          RowBox[{"0", "<", "x", "<", 
           FractionBox["1", "2"]}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", ">", "0"}], "&&", 
          RowBox[{"0", "<", "x", "<", 
           FractionBox["1", "2"]}]}], ")"}]}], ")"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", ">", "0"}], "&&", 
      RowBox[{"0", "<", "x", "<", 
       FractionBox["1", "2"]}], "&&", 
      RowBox[{"f", ">", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "c"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"2", " ", "c", " ", "e"}], "-", 
          RowBox[{"2", " ", "b", " ", "c", " ", "x"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", "x"}], "-", 
          RowBox[{"4", " ", "c", " ", "d", " ", "x"}], "+", 
          RowBox[{"4", " ", "c", " ", "e", " ", "x"}], "-", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"4", " ", "b", " ", "c", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}]}], ")"}]}], ")"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   RowBox[{"2", " ", "x"}]}], "&&", 
  RowBox[{"a", "\[Equal]", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["x", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "f"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", "c", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}], "2"]}], "-", 
      RowBox[{"d", " ", "x"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}], " ", "x"}]}], ")"}]}]}], "&&", 
  RowBox[{"y", "\[Equal]", 
   FractionBox[
    RowBox[{"1", "-", "r"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.547378709801333*^9, 3.547379045087605*^9, 
  3.547379099321327*^9, 3.547379149209437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"y", "==", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], ",", 
   RowBox[{"{", "r", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547379704125637*^9, 3.5473797165338783`*^9}, {
  3.547379989778921*^9, 3.547379990827318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"r", "\[Rule]", 
    FractionBox[
     RowBox[{"x", "-", 
      RowBox[{"2", " ", "x", " ", "y"}]}], 
     RowBox[{"x", "-", "y"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.547379718144853*^9, 3.547379991575755*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"y", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "r"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"r", "/", "2"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"r", "/", "2"}]}], ")"}]}]}], ")"}]}]}]}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"2", "b"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547380925763398*^9, 3.547380982299218*^9}, {
  3.547381059067523*^9, 3.547381067209166*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "b"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"b", "+", "x"}], ")"}]}], 
   RowBox[{"2", " ", "x"}]], "+", "y"}]], "Output",
 CellChangeTimes->{{3.547380964874194*^9, 3.547380983164584*^9}, 
   3.547381070749242*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"r", "/", "2"}]}], ")"}], "/", "2"}], "x"}]}], "\[Equal]", 
      "0"}], "&&", 
     RowBox[{"0", "<", "r", "<", "1"}], "&&", 
     RowBox[{"z", "\[Equal]", 
      RowBox[{"Limit", "[", 
       RowBox[{"y", ",", 
        RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}]}]}], ",", 
    RowBox[{"{", "z", "}"}], ",", "Reals"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.54738124915397*^9, 3.54738135994096*^9}, {
  3.5473813985625563`*^9, 3.547381421214219*^9}, {3.547381513113594*^9, 
  3.547381542469658*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "r", "<", "1"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{"r", "+", 
       RowBox[{"2", " ", "x"}]}], ")"}]}], "+", 
    RowBox[{"4", " ", "y"}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{"y", "\[Equal]", "z"}]}]], "Output",
 CellChangeTimes->{
  3.547381239322997*^9, {3.5473812967438583`*^9, 3.547381341162168*^9}, {
   3.547381387357424*^9, 3.5473814263207912`*^9}, 3.547381545043584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"r", "/", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "x"}], ")"}]}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5473820818472843`*^9, 3.547382104572688*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r"}], 
   RowBox[{"4", " ", "x"}]]}]], "Output",
 CellChangeTimes->{3.5473821051118298`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"r", "/", "2"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "r"}], ")"}], "/", "2"}], ")"}]}]}], "\[Equal]", 
     "0"}], ",", 
    RowBox[{"{", "y", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.547384127349904*^9, 3.547384236864567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "x"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.547384178017151*^9, 3.547384237437482*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.547385657851766*^9, 3.5473856812108603`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.5473856820221024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{
   RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.547385754146994*^9, 3.547385756814584*^9}}],

Cell[BoxData["0.3440108736849544`"], "Output",
 CellChangeTimes->{{3.547385746725821*^9, 3.547385757798616*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "=", 
       RowBox[{"refPt2D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"foc", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"foc", ",", "foc"}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.547385801326215*^9, 3.54738580538375*^9}, {
  3.5473858383885*^9, 3.547385870688696*^9}, {3.547390792715378*^9, 
  3.547390793456942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"refPt2D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"untrFoc", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Times", "@@", "refPt2D"}], "/", "2"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "x"}], 
         RowBox[{"r", "-", 
          RowBox[{"2", " ", "x"}]}]], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"r", "/", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Orange", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"untrFoc", ",", "untrFoc"}], "}"}], "+", 
           RowBox[{"refPt2D", "/", "2"}]}], "]"}], ",", "Green", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "r"}], ")"}], "/", "2"}]}], "}"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "/", "2"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "/", "2"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.547381677454176*^9, 3.547381687307905*^9}, {
  3.5473854202701597`*^9, 3.5473856250268507`*^9}, {3.5473856686931877`*^9, 
  3.547385722158538*^9}, {3.547385760662657*^9, 3.547385763482342*^9}, {
  3.547385824970233*^9, 3.5473858269201307`*^9}, {3.547385878165723*^9, 
  3.54738603264205*^9}, {3.547386090374501*^9, 3.547386131887589*^9}, {
  3.547386204803734*^9, 3.547386230136971*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwllgk0FVrYhlXSLDI0iExRMmS43ZvprdAk93bTQFR/EplKJNSVKCRCXaWB
buGqrpIQUorMwznHeGZndI5Kx3gcs/Off/17rb32etb61t5rf/vb7/vpeF04
dHa+nJxck2z+33rddMRC2NQNuf8fO4y7JneGtndj52slhny6FJHnlx/Op3ej
rsGp4uo6KeoXb/Dh87tBPXxdeyB3DqfsHG+7SrqhqagUsKBuFvfyUjosNcig
vZFcdTCZAWvH894AfTIiA3G8nTiNLYxiSY4JGTcsaG81QqdRu5K2TnUHGTU/
tgZeqJnCeITeGbE3GZ4RSzeZXZ+Eo8q2MOPzZAidviW8tZpE2pu9Cd7hZMz5
xBdt7J+AES8ovyuRjLTmpl9fnJiAp3P5aEkBGanurFWax8bxStC8UFRGhr9x
8B6vteOQRPes3lhNhvukmpFGjwSpJfNt73eSMU16UVFyToKvmi43wybI2K1+
WLbJGFaWn3rwZh4F7QoNxWSPMXgeCnkpWEpBVkBQ9K3NYxiLz2g9oknBsjdp
hmsbxdg0xFXdtouCclcf+mJlMS7dFhucd6YgSWff6RTBKKr1F23PO0xBkFal
7VDFKI67G59Q96Wg877uXrNzo7jz9fK/kiQKuh6ejRK3jIDumVhmep8C1+YV
ySV5IzAYf9Lk85SC5cG74vRiR1C1pVpELqRg1d+9f0xbj2Akfdm2sm4KBvsk
G1eXDMPN91l9+AYqCq979j+tGkJxDCVEZRMVvopNwTvyhqCYqbjh7VYqLhrr
9e5OHkJt21/hwp1UJIXxXka6D8HM2n3TEW8qntxoeBA+NAiFFatuW7yiwmzB
q3T1pAGcNty3jfiOipdN4j+0Tg/g087rPL8KKuhs2/j3vw4g5PKA9fMWKszj
rixLEIrQw27uXzlAhdNzim7AfhFKim64iCxomKoxW6q6+SdWEiomb9nQUGpo
KuQp/IR/3/C/+o408OazTmgI+qG9/n/mPI7QwH4ee686ux9JcbZvm8NpKDPL
zyvU7YeX25jSy0802JI2tb2w/IHKEONKhzoafCpJtx1W/8CaO2f82AQaTLyr
7M2mv4NY3V6tzqYhyf2++3DNd1hvKQiJm0dHNsPbY9btO5TnfLq8dtPxqPCU
gkXaNxgtDdrd+TsdY2Y7TUsjvmGXemi5wzE6tt+XE4ed/oZLptGZ+ufo0Jk3
0p1r+Q3kkxnewkQ6VjXIHXxJ78PjLw1iPwId60tbDB5Y9KGoheBD76aDvGLY
MVSrDy2UTup+Fh1/6aZ/iV7ah5lB9qctg3TI/7XESp8vxEntiZsiJQY0nCJz
Eh8IoRuzSe3iYQaIfy6SOCwUwvqOaQLXkwHHGIeVpFEBXB9ZTf55lgGLNwzf
6zwBbr7b0WNxmQF7jYxe1yoBhFy3f8UZDIQUSliFUQLk70r8JYLBQHtEEok9
1wsr+R9Hor2YIET53HRd0ws/gYogL4CJgJDrB0qW9OJpvd0l4iUmVgw/fGY5
zcfixLv3NBOYUFw4FZzM4oO5YjvpYz4TnSrPczPz+IhbfWvvhJiJo/8R0vpt
+CAbGdhcTOhBrLjljGEkD8uWH2x+mNaDvKPW8h+DeNghinSvetSD+cKgqjNe
PPz3lhC+8nUPRBuac0adeYi2Cit509aDGqXu7wraPGyyrzX5sZaFw5/LH7e2
cBH5p5f2mdcs7C/LPBe7lYtPRYX7BkpYMDu4SWnUkAs5VWlIZCULOuZD4uAN
XMSTn9SlElnQmFWb+VuRi3SPbv9PQyw8jjX+HCrioODs3vdqv7CxPej4hpg3
HPAiTfc3VrLRlpHuvn4bBxsZf4W61rOhW5BUJTXl4JxtSyaLyEZPrI6ZyJCD
wTnfQTGbjb3XqomCtRzMVR9sVprHQUd8en7GDBvL99y+YKfHQdou3yPFd9kw
+HP2wwNfDqQ6xMSJRhaOBm7r+TWQA46nBVXykYX4hAtytGAOkuou+i16y4Kw
krtb4woHjN9ufjx5n4V/jeo7/0nm4JSbngLPiwV9+VTRy3ccVOu+/6oxjwW9
Mm2dj9McOLyY5x26rweHOtwdPeW4yDr8VivcXvYuonu+s/JcLHCwX5Ro2QOe
3sICyPJi8bVSTNbsQXbad+tabS7qLPJc14wyoetfdJjgxMWdGbvUdc+Y0NZ0
vMVO5YK/P1U7bAETZu+8FQPSudjyJcnKekpWh05x6ZKHXMRuidNYOsyAR1D9
sxXZXEy8fqrezGLgQeXeDzYlXKj9eqi8sYKB5SddfmRQuRDMFPYXXmJg4unR
Awd1eDjixrQuk/2TRZbhHYyNPIy/fDJZ0keHekOGm68RDyqbr0V8ZNNhOUj1
vmbJQ821O1E8Eh3n4RH12omHFO9yjYxCOnrZpwoW+/NwXKRWnRJKB0nbT6m6
iIcLx7zNT0pp6BU/OTNXyoNbHoHbMSHTrUZiqc1HHupShttcRmgwuGh1orRG
Fr+3ac9RAQ3XqqWv8rt4yIxRyC5socHY64HDAwkP9VvL0m48ouF2Ts3lAGs+
KL7fqvy20+BkoNWj9pWPYo3nms9uUfGjl/e5oJ4P20bRhvFYKlJyXjzb08KH
kUvYCdcoKsja5t6RXXw09x4I0gihwkfDsZ8p5EM9/L813z2oiFfyn8xZ1gvV
hNzkSzKdb5x6r2ZxpBeBsGJq9lBwgOTy++/fenEihnw3yIGCcYL+7MOfvXBj
pCw2AwXZrdP5/KFeOCSzGkatKZhserUkcrIXpFZl5QQLCvJqF9blLJXpxliB
d5cOBXIVlTaTxgKovMujK8h8szjXZHPuRQEaDShBRTLfXXdlhfzUlACaEws4
F5zJyB1uUTOTChDJN8qc2kOGqd9tQ+8FQniapnxKcCRjl9siZ+IyIR7v0Nd+
ZSfz8W3z7mWvF6JhwULTxVvJ+Dgi3uBsL0RS2i/Ov6jJ+oYApk1mjBCfkOtr
w+1Glmd+qP3iPkQ6qhZHR3fjHa8mwcf4G1baP96zprYLyf6BnHl238H8nLbF
2bQLE/dTe657/4C2R6n5u+edWDuZlv4wvh9aQ3uc4jZ3Qu6kbpre/Z/4R9q1
JLm+AxE+plvvVYhAb25etca3A2XBzaqXWgfAOhQcGri6Awla3KztY4OIc4m1
b21qh8L8gCFnmc+GxxZWa8a143WYSYmV6jAKd7Xvouxvh4aNyf7UF8Moetvg
YKDcjsB5YbF65iP40pH/gsBuwyN+/mr58hFYV/YnbCpuw53V2tFH94/idyeP
tKD4Npw9wLzF6xiFLvn4dMOpNizs7Pbm+IhxOdBbv++3NlwP+5xlNCFGSPY/
mWFqbWCvGYwoiB6D6IK9oYmIBAXFEwa5qyQ4nK+inFBAgrK8yuXOJ7K+6CjH
tSychDG1ct0/dMdxhfjHNU0nErIjHz+3LRlHepbPKj9lEixZtV/P2E7g3eN8
fj+fiOR049IZ0gSC/47z9HhPRJMz05nkPgm1W6okJBPB0bpqP8CZRJeTfKT0
LBFVDscWRIdOwee9+fNn9kTc9Lvqv29mCplZrsIPGkQocZk5cWnTGHwZWlMz
TkD4JRNrRd0ZFM9fsc+KTEDV4vqQtlczKCqdbnUrJ6Bz4EmUvN0srJK83l98
REBj9wejkPpZ6Dq1nuRFEfCQWm9l7DKH4+XfI6RnCDA3UVZ2Y88hri3/5dp9
BLyOzUmt9JUi+Ngd7eXmBFiw8UjLXwpaZ8rP7K0ElNsws6MDpQA1tGW7jGvF
qqU7L0oRqNdV7WtGAMMnnll3RYr4jlNptSYELHX220y8I0XW3PbCGCMCfFXM
aljFUmRPLqUu0Sfg54WWVpRKEbW8XpKtR0BIqy/5WbkU7WfrDG1lfC3u2Xev
SilyIqOqzusS8GBcWamvXorTPs6tXdqy8xliz0GaFJfHN+7L1SRg/293fQ4y
pah6zE20l3FbuknwO5YU/THpTOp6ApguPjdC+VLcVyeUrZDx6BfKq/GfUkzf
lXeKWEdAxPpLxW6DUtjFjKmqyHguQqnyw7AUjt1lkjdrZfex2Nd2VSJFPiNr
kL+GgLQUAY05IcVvRuUK0TJW74/h201LwVW7a7ZOxpl7tERPZ2X5G9Lzf7+a
AN3cColUKsWMYmDpQRn/L3XDf10=
      "]]}}, 
   {RGBColor[1, 0.5, 0], PointSize[Large], 
    PointBox[{0.6517019422593635, 0.5363198051105453}], 
    {RGBColor[0, 1, 0], 
     LineBox[{{0, 0.19230893142559097`}, {2, 0.19230893142559097`}}], 
     LineBox[{{0.30769106857440903`, 0}, {0.30769106857440903`, 2}}]}}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.547385444850819*^9, 3.547385507280954*^9}, 
   3.5473857228035507`*^9, 3.547385764903829*^9, 3.547385827441921*^9, 
   3.547385894565304*^9, {3.547386024186795*^9, 3.5473860336449947`*^9}, {
   3.547386124480647*^9, 3.547386132419715*^9}, 3.547386231064177*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rQuotientForX2D", "[", 
   RowBox[{"x_", ",", "refPt_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xQuot", "=", 
       RowBox[{"x", "/", 
        RowBox[{"refPt", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
      RowBox[{"yQuot", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "/", 
        RowBox[{"refPt", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"xQuot", "+", "yQuot"}], ")"}], "/", "2"}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.547233545119871*^9, 3.5472336990874767`*^9}, {
  3.5472343664689827`*^9, 3.5472343837966957`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
A digression on the form of the reciprocal median quotient curve\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.547314941286628*^9, 3.5473149661960907`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "There were two interesting characteristics of the median quotients. First, \
the median quotient is 1for exactly two spectra for any given reference \
spectrum. First, the reference spectrum is given a quotient of 1. Second \
(unless the reference spectrum has a 0) is the spectrum with all equal \
heights (normalized ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    FractionBox["1", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") is also always unchanged for two dimensional spectra."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547314974114048*^9, 3.54731519065355*^9}, {
  3.5473152756170177`*^9, 3.547315296318137*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
       RowBox[{"r", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], "\[Equal]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], ",", 
    RowBox[{"{", "x", "}"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.547314667412683*^9, 3.547314707941905*^9}, {
   3.547314822227365*^9, 3.547314826179538*^9}, 3.54731529631826*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", "x"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "<", "r", "<", 
       FractionBox["1", "2"]}], "||", 
      RowBox[{
       FractionBox["1", "2"], "<", "r", "<", "1"}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "x"}], "\[Equal]", "1"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "r"}], "&&", 
    RowBox[{"r", "\[LessEqual]", "1"}]}], ")"}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{3.547314678122054*^9, 3.547314710944695*^9, 
  3.547314827512681*^9, 3.547315296318329*^9}]
}, Closed]],

Cell["\<\
Second, the maximum reciprocal quotient is located along a lovely s-shaped \
curve.\
\>", "Text",
 CellChangeTimes->{{3.5473153035153503`*^9, 3.5473153501547337`*^9}, 
   3.547315513195568*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
        RowBox[{"r", "+", "x", "-", 
         RowBox[{"2", " ", "r", " ", "x"}]}]], ",", "x"}], "]"}], "\[Equal]", 
     "0"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473134553390923`*^9, 3.5473135116716967`*^9}, {
   3.547313550070256*^9, 3.547313567331184*^9}, {3.547313723145562*^9, 
   3.54731377379069*^9}, 3.5473144172239857`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", "r", "<", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r", "\[Equal]", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"x", "\[Equal]", 
     FractionBox["1", "2"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "<", "r", "<", "1"}], "&&", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "-", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}]}], ")"}]}]], "Output",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547313473182349*^9, 3.5473135129545527`*^9}, 
   3.547313568154154*^9, {3.54731374520894*^9, 3.5473137744640703`*^9}, 
   3.547314417224423*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
       RowBox[{"r", "+", "x", "-", 
        RowBox[{"2", " ", "r", " ", "x"}]}]], ",", "x"}], "]"}], "\[Equal]", 
    "0"}], "&&", 
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
   RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "1"}]}], "]"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473134553390923`*^9, 3.5473135116716967`*^9}, {
   3.547313550070256*^9, 3.547313567331184*^9}, {3.547313723145562*^9, 
   3.54731377379069*^9}, {3.547313887680892*^9, 3.547313888463971*^9}, 
   3.547315453199176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "x", "<", "1"}], "&&", 
  RowBox[{"r", "\[Equal]", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "x"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"]}]}]]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5473138890281563`*^9, 3.5473154531996326`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"0", "<", "r", "<", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"r", "\[Equal]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{
      FractionBox["1", "2"], "<", "r", "<", "1"}], ",", 
     RowBox[{
      FractionBox["r", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "r"}]}]], "-", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "-", 
         SuperscriptBox["r", "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "r"}]}], ")"}], "2"]]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<X Coordinate of Reference Point\>\"", ",", " ", 
      "\"\<X Coordinate of Maximum Reciprocal Quotient Median\>\""}], "}"}]}],
    ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Location of Maximum Reciprocal Quotient Median\>\""}]}], 
  "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473139389639597`*^9, 3.5473139415316668`*^9}, {
  3.547314024774284*^9, 3.547314285272215*^9}, {3.547314319485633*^9, 
  3.547314320381287*^9}, {3.5473143528458157`*^9, 3.547314417224608*^9}, {
  3.5473145050018063`*^9, 3.547314510507934*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->{True, True, False, False},
  FrameLabel->{
    FormBox["\"X Coordinate of Reference Point\"", TraditionalForm], 
    FormBox[
    "\"X Coordinate of Maximum Reciprocal Quotient Median\"", 
     TraditionalForm]},
  PlotLabel->FormBox[
   "\"Location of Maximum Reciprocal Quotient Median\"", TraditionalForm],
  PlotRange->{{0, 1}, {0., 0.9998571632610126}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.54731408138936*^9, {3.547314259729109*^9, 3.5473142861676483`*^9}, 
   3.547314322668672*^9, {3.547314393437736*^9, 3.547314417224821*^9}, 
   3.547314511252987*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/gOLuSmkf3W67tJqav1WV9Z6rgcu9bbfPevid8+Vou7/qTb+X8STFor/P3z/
j+Kx4asp/lPiXWw5FWS10e/8v+E71qMXxX9KvQVU68X/FT0r/bZJrRvi01vR
Tin3AGI75XXSnon+7N1709rYG+qdKqlt62C8sOnvcNuOdlK0XUpDzlHb6wJC
VduWJp779oqDGYe//lTvpwMdjX+2XHO7jlafHNUpCW1//nHlP6sjMU6Q13BM
O5wgbBthOWFHIe5vnYAwQWRfcYD8x8YwdeTyDFmYCbXq48MZu3DbYGKCI5jd
+ihsn/oOatcULcAStVBZ+jInCkuPH8f6EW+gjsd7mLrlEq7snIvB/X0we+Np
3LgTLPqSHTWx9Z8IFBQU2zXB9xnEjEdbvkDDOpXxrOeX8L9MkUyo7wDy6JE7
SErUa1Kd+wDbQs5j86zBGL7oXyTkZuDqpkl416MuOo8IwKG9c3A92zHVl0Li
EB2d6oj17zbojtknklAEWFlviMa+ub3RuO7bzlgfczcNISGP7FvgYnMVP55M
og2PVWxMSDr5I65ysSlrUXTCMysrHwcPRNnhqYkuR9y86art8L/uvM6Wzdfc
rrPpb/fbKQlthw/fRlparl0daXjYwcVZPwx9uylefKYsnnq6Cuq91gfTt0bB
YEY9B9A3byYhPDzBDprLHCnooKl489Pp2HzxHtLzjTDmp+Hu+b8w5f1W+Hyb
FJCgJhG8idzcIuzadcO+CSYRxifYN2IFbuRaJMKcG4HFXwTgvsYc5IeCdstR
R1vknOuYt/WhMBFtVFTsH4KsacwTV5EF5Tf9QLyt8itG/P4ZVinWQN6+/Try
84s1kfXX8MPY40g1WZGNSTg0+mfczHWMTMMYEfHEHpnNbWMitnevjw5DVuBS
ptEyt4uSzmPt96+jcd/TyDCrzm3eQl5ekaj3lC3wczhjTjzik7NRICzlakLH
XWJ2y14HCcfipRCDA3/Bp81eQMVyFfFC8174RYwqUOcAx93w+2UYjSZt3Pxo
/Pb1PByKzkChsRAZ0Ycw7+slFPkn0zwc7eLFh+L00EQTVNmM/fEo5nSIEvCj
pgRwXBp9pm00qVwiUHnwdhryi/ORdvugQOVSK5UKXM799esUXH1Nnau9mtcQ
uVqjRW/MDxRXJYe4NOIZGXl2uGoai9d5cD9DXM6c0eLqCFdkuGtWh9j2sb2b
I6yB+/df4dDrC7Vx3RxrjnvvXrotH1TodWesn2G4AWsv2fLhVXX+ujrWHHeH
oJ1sxlqJa85A6NIjSLAwwozM62sRrXeMm5qaiz27b2jgCjouNxKTWz4PCk+3
HA5VtUQCUGiKHXYlGS/MZhkv2ilpzsWtgLH4+TILBhOeaSFzEKExdhw3OOgR
rl1N0MAVaDZcxfetO2PNgyLrIZe5mLXhmGaTyQz/NSF22GpzqjKrQ5u++Phs
a522in5SSMnJOfi0xYt4pmx5PF+/K0ZuFgMKVPvJcUmr/77+sjZu7k3MG7MW
F+NyUGQsQHrUHkz2/laM6rBqTeYuEbcnNjNJ8tRaDApTNqIOx0A839Vfh++S
i0hjwmTS38GOebvxuEidYN5ESoqB77Zsm5A2xzCE00GjoG8lOSpT7S2HcsSj
XYgHBoOMcsnRa5nLzmSd4yQl6bFta4QdjtrYPs/q0IYlJ6fAWkc6DLBYwWS3
JJ05g4QC2YGqQE9O9G481LALODbNZ2Z12mBLC5IYoz7x9Y+xMyERB72roow4
91yagVVYC7RC0Ay3tNDSnnM5d3bggQalHIdWRraK2eBYJLE4GWc334WB13Qy
Ijy469TJGNyITLTitpDjkvaJwJimlfCUG9qHY5PmWbE8iGa0CjbNygI82LIY
R+MKLNonPfQXXNfQPtUY7r2YNBzYf8tKc3MFzXk3sWhyGMVL6zxVcKqzcrRH
oQljwWmmoC/7Ij73nosgPgtJO4b+LNJXmY1OaUJr1Fw6nLbCQiNWrQgiHqrT
ZkrH6QkdUePpMmB5S3xcmCYtdWSJGnkvMPLI+Dt2NNrKOmkGWxa1rMgAEj3x
0zOcZDcjKMqrtF+DlSNVSsrE0r50NOeSW1EjJMDqSeRjQD6M5csuWsegiWIM
KOxwZhd0mh+F+OM+aPLc82j23T4kFfMxcP8YXI3pL7Jyt24m4/Ch29ZON1bQ
Y7iOmT/swX1DEk79uB3RmXfxZ5+BCM6W0VPyc2A10moy0mjNefgw00paIwVp
2WEYtyQUaYnnsCIkHcW50dj961mkGvlUKtHpqCOSyI7wWxZImlOdpOIEbPus
HiqUYbNHVwYVG49GhIYmfonh0prBdmnSj1LYoVWjG1NwbsZKTTu1FitH+9Fj
x2RTqKGcPgoKisLyE4miXaqmxWqzcuQBstHgDSQcvj7mxfyFCe83RKWnZBq8
TDlU7/orYgrUaazD6tK6b6MhPRU8zArDxO2PUMRrCjzdP3gkLuc4xi0qMmGl
oN0sY6PELUxFSKyeBYzTnyJkCPzKN6vj1mW4mZn54j5I2OlKP3pIuGr2BVu5
RLtx1cpg6yyvr6BFsC/id45Gl5cro1y5SqjZ4mP8eDRJ07fDvsPt2ym2plg9
Ba6gdefM2IPAfyYiNDkLD4PXw6fbOFwzqOMyr4HoyyCvlwX3FQVuzhVMmn8G
4QJumLhKZyNk7DiEaYxJfYZ7+tQ9nDl9z4r7sgLXlIXg6Z1Rs/aHCMwqxJOD
K7BgWyyFDajiejDcA4J82rjR6srGRKzCpFvkFvlILSXraI8er0M2Bu1y7txO
cVqngawOzWBhEZN+rK1dp6GsDlmikdcTpR9raddpxOrQzjnimszrVFPBUTd3
+o1lfLoSFm/FfVGB6+ZOvwnDpR2ujX+6hgLXzZ0+442ooY4fl2m6F+zpdWen
34zhXgx8gO3brltxq6vz19WdfnOGS+ssyYdFi1RT4ObcxOKjT2R8cGxrt2C4
cXFZoj1s0XqSoWzxQpoNuLV6IF6r+xzKlykjNOeaud2SwdPCRAue8K/0YxUG
z7aX2eGY/GsoxFhnpd52su9vxZqg/TD1QLDApR+fZ01UkAoWxsLvzbYYJlgc
5qJM3IjPE7OPXXUBtGblaOkmIT93Nlb6Udo/2mzveJ2GKjhtWbnz5+6LOJYN
iGRqyFRPO1aSnFG0COTmFkklK8lKKtBfZXWys/NFZggLiPTjM9p12rM65IIl
2/Vy6GPpx4radTrIekFOUYs4OoiK6cjqPH4siVpqikH6sTwbKOZKz47ELyGp
FrOXBZGZinMRe8gXEdmqvu7XGTjtTciffCkkTvqxHANnTgaKeKyqszgZnMnv
Gwz2pLAVpcMFSz9Z8BbfjOuvwKdpFdTu0B/T159CjN5kTeLJR+yBHxCuIb4s
3gGPHmVi6ZJAJPARY3F9lvDyojRc37cEI99vhCpVG+P9Eb9id3iKOE3MxQYU
a5gfXRg+mTXUA8Gsk3601UXZt49i1fieaFGtMmp3HIAZGwORXqwO2Y1BXr2a
IO4DBWHTSd57S7qQyXAPJ1YMxUe9R2PpfinTQg3Km0GR64mMI2Hp0BklKOuJ
rBE5d45j3Xxf+C7YiFMxou1VXwXtTYZ24kSMeA5eVGTUFdkOlDEbEftWY9GC
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
TwRaDEhLOUaw+K1KtISuzP8Chubv9A==\
\>"]]
}, {6}]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2D PQN (the easy way)", "Subsection",
 CellChangeTimes->{{3.547291959347453*^9, 3.54729196525014*^9}, {
  3.547292023656331*^9, 3.547292027483858*^9}}],

Cell[TextData[{
 "Because 2D is such a special case (the median is the same as the mean and \
the reference spectrum can be specified by one variable), the entire \
normalization procedure can be viewed in three simple steps. First, sum \
normalize to half of the sum you would otherwise choose and choose the \
reference spectrum. This makes the reference spectrum ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " equal to ",
 Cell[BoxData[
  FormBox[
   FractionBox["r", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in the original procedure."
}], "Text",
 CellChangeTimes->{{3.5472919726738443`*^9, 3.547291974123293*^9}, {
  3.547292030206709*^9, 3.54729210372537*^9}, {3.54729223810205*^9, 
  3.547292243356351*^9}, {3.547292327120686*^9, 3.5472923282844353`*^9}, {
  3.547390844732553*^9, 3.5473909132786694`*^9}, {3.547394307350122*^9, 
  3.5473943078458548`*^9}}],

Cell[TextData[{
 "Second, call the coordinates of our new refrence point R, we can then \
construct the hyperbola ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", " ", "y"}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["R", "x"], " ", 
     SubscriptBox["R", "y"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " on the coordinates system with R as the origin."
}], "Text",
 CellChangeTimes->{{3.547392516942787*^9, 3.5473925685766373`*^9}, {
  3.547394314619931*^9, 3.547394315755945*^9}}],

Cell["\<\
Finally, intersect the lines to our original spectra with this hyperbola to \
get the final, scaled spectra.\
\>", "Text",
 CellChangeTimes->{{3.547392576621792*^9, 3.5473926076755323`*^9}, {
  3.547394323588785*^9, 3.547394338885096*^9}}],

Cell["This whole procedure can be represented in one diagram.", "Text",
 CellChangeTimes->{{3.5473926149582777`*^9, 3.547392625248283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"twelfthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "originToPoints2D", ",", "finalScalingPlot2D", ",", 
       "scaledPoints2DPlot", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Red", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<sum=0.5\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.15"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "Magenta", ",", 
          RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"#", "/", 
               RowBox[{"Total", "[", 
                RowBox[{"2", "#"}], "]"}]}], "]"}], "&"}], ",", "orig2D"}], 
           "]"}], ",", "Green", ",", 
          RowBox[{"Point", "[", 
           RowBox[{"refPt2D", "/", "2"}], "]"}], ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}], "}"}]}], "}"}],
            "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", "0"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"refPt2D", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", "2.5"}], 
              "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Reference point\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"2.0", ",", "0.2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", "Orange", 
          ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Hyperbola from\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "2.1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<reference point\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "1.98"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547392764664187*^9, 3.547393102077201*^9}, {
   3.547393188943568*^9, 3.54739321167036*^9}, {3.547393286812169*^9, 
   3.5473938136999493`*^9}, {3.547393871707777*^9, 3.547393871821124*^9}, 
   3.547393998020854*^9, 3.547394118732957*^9}],

Cell[BoxData[
 RowBox[{"twelfthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "twelfthDiagram", ",", 
    "\"\<Figure 12: Probabilistic quotient normalization process in one \
diagram.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547394004300308*^9, 3.5473941187330923`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      RGBColor[0, 0, 
       NCache[
        Rational[2, 3], 0.6666666666666666]], 
      PointSize[Medium], {
       PointBox[{2.172454345958343, 1.7744919345405104`}], 
       PointBox[{2.675301724350803, 1.359406145521423}], 
       PointBox[{2.87830990460933, 1.4709889319173473`}], 
       PointBox[{2.8813454193984884`, 1.073276896492814}], 
       PointBox[{2.3606473361385762`, 1.7882842580601983`}], 
       PointBox[{2.26005835257858, 1.7655977040112563`}], 
       PointBox[{1.398151988227432, 2.097238014713233}], 
       PointBox[{3.0861624358478528`, 0.9274842729247682}], 
       PointBox[{2.255768229218814, 1.8706253682049265`}], 
       PointBox[{2.6917625635090703`, 1.2898265639379862`}]}, {
       LineBox[{{0, 0}, {2.172454345958343, 1.7744919345405104`}}], 
       LineBox[{{0, 0}, {2.675301724350803, 1.359406145521423}}], 
       LineBox[{{0, 0}, {2.87830990460933, 1.4709889319173473`}}], 
       LineBox[{{0, 0}, {2.8813454193984884`, 1.073276896492814}}], 
       LineBox[{{0, 0}, {2.3606473361385762`, 1.7882842580601983`}}], 
       LineBox[{{0, 0}, {2.26005835257858, 1.7655977040112563`}}], 
       LineBox[{{0, 0}, {1.398151988227432, 2.097238014713233}}], 
       LineBox[{{0, 0}, {3.0861624358478528`, 0.9274842729247682}}], 
       LineBox[{{0, 0}, {2.255768229218814, 1.8706253682049265`}}], 
       LineBox[{{0, 0}, {2.6917625635090703`, 
         1.2898265639379862`}}]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       LineBox[CompressedData["
1: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
/NGTjP8D83/w7Q==
        "]]}}, {
      RGBColor[
       NCache[
        Rational[4, 9], 0.4444444444444444], 0.22222222222222227`, 0], 
      PointSize[Medium], 
      PointBox[{{0.5431288103358621, 0.4436354186915789}, {0.6861536917911115,
        0.34865657839748754`}, {0.6839853356873696, 0.3495575152552775}, {
       0.8239683316769922, 0.30692126250356366`}, {0.5615509147589944, 
       0.4253971550894395}, {0.5538566621048238, 0.43268265611279816`}, {
       0.4358964095706468, 0.6538477421096109}, {0.9475904367568392, 
       0.2847793159093485}, {0.5395944657367983, 0.4474657826437218}, {
       0.7090240824172893, 0.3397469406742102}}]}, {{
       RGBColor[1, 0, 0], 
       LineBox[{{0.5, 0}, {0, 0.5}}], 
       InsetBox["\"sum=0.5\"", {0.5, 0.15}, {-1, 1}]}, {
       RGBColor[1, 0, 1], 
       PointSize[Medium], {
        PointBox[{0.27520698174840214`, 0.22479301825159792`}], 
        PointBox[{0.33153598855665434`, 0.1684640114433457}], 
        PointBox[{0.330893554661782, 0.16910644533821798`}], 
        PointBox[{0.3643009609059321, 0.13569903909406786`}], 
        PointBox[{0.28448858248703607`, 0.21551141751296393`}], 
        PointBox[{0.2807068364520307, 0.2192931635479693}], 
        PointBox[{0.19999942596551018`, 0.30000057403448976`}], 
        PointBox[{0.3844586556537765, 0.11554134434622354`}], 
        PointBox[{0.27333410833944355`, 0.2266658916605564}], 
        PointBox[{0.33802615957450555`, 0.1619738404254944}]}, {
        RGBColor[0, 1, 0], 
        PointBox[{0.30769106857440903`, 0.19230893142559097`}], {
         Dashing[{Small, Small}], 
         LineBox[{{0, 0.19230893142559097`}, {3, 0.19230893142559097`}}], 
         LineBox[{{0.30769106857440903`, 0}, {0.30769106857440903`, 2.5}}], 
         InsetBox["\"Reference point\"", {2., 0.2}, {-1, 1}], {
          RGBColor[1, 0.5, 0], 
          InsetBox["\"Hyperbola from\"", {0.4, 2.1}, {-1, 1}], 
          InsetBox["\"reference point\"", {0.4, 1.98}, {-1, 1}]}}}}}}, 
    AspectRatio -> Automatic, Axes -> True],
   "\"Figure 12: Probabilistic quotient normalization process in one diagram.\
\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473940839874*^9, 3.5473941187331657`*^9}}]
}, {3}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D PQN", "Subsection",
 CellChangeTimes->{{3.547394423389923*^9, 3.5473944252311497`*^9}}],

Cell[CellGroupData[{

Cell["Sum-normalize", "Subsubsection",
 CellChangeTimes->{{3.547401955719198*^9, 3.547401957963032*^9}}],

Cell["\<\
The PQN with 3D spectra starts out similar to 2D PQN. Figure 13 shows a group \
of spectra normalized to a constant sum of 1. I only show the first quadrant \
because of my earlier assumption that all points are positive. As before, my \
discussion will use a constant sum of 1 for ease of presentation.\
\>", "Text",
 CellChangeTimes->{{3.547395775886613*^9, 3.547395877526016*^9}, {
  3.547462662275279*^9, 3.547462679004223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1.2", ",", "1.3"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", "8", "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.4"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", "8", "}"}]}], "]"}]}], "]"}], "/", "2"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473945285194893`*^9, 3.5473948433459167`*^9}, {
  3.547394949185137*^9, 3.547394958418416*^9}, {3.547396148016735*^9, 
  3.547396148150931*^9}, {3.547396332991932*^9, 3.547396335781905*^9}, {
  3.5473964703163843`*^9, 3.54739647472621*^9}, {3.547396505240793*^9, 
  3.547396519924708*^9}, {3.547396882736618*^9, 3.5473968928435097`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"orig3D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.7887122746455992`", ",", "1.370162229032098`", ",", 
       "0.6331315511805435`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.7458987631156281`", ",", "0.7715290755810482`", ",", 
       "0.6148123738797091`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.657133266164412`", ",", "0.9221468105687936`", ",", 
       "0.6040697246875196`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5857304644159957`", ",", "0.5419021027040107`", ",", 
       "0.6173275066394556`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6919142797105331`", ",", "1.4387362033967048`", ",", 
       "0.6247078566848845`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5457398713571942`", ",", "0.8830657889311706`", ",", 
       "0.6314481246718616`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6175342173424286`", ",", "0.7957609324327515`", ",", 
       "0.6258393391396256`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9921345376422709`", ",", "0.690496919850571`", ",", 
       "0.6062680422006831`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5768632417698818`", ",", "0.7497757265321776`", ",", 
       "0.19303894295071117`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5084130070212706`", ",", "0.6455535679017173`", ",", 
       "0.17770724565742288`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.552620580638311`", ",", "1.0787269445880796`", ",", 
       "0.17767927573922487`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8527000484773908`", ",", "0.7900375918166862`", ",", 
       "0.1618452370779209`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8558169686389362`", ",", "0.8381051726099`", ",", 
       "0.19646170205328767`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9128626837404124`", ",", "1.2855838089650504`", ",", 
       "0.1525320368241421`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5595750105400437`", ",", "1.4879212199688876`", ",", 
       "0.19946889532440698`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6276434675023799`", ",", "1.3262524986373982`", ",", 
       "0.1958156408376076`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547396860077684*^9, 3.547396892843906*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNorm3D", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Total", "[", "#", "]"}]}], "&"}], ",", "orig3D"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547396082040235*^9, 3.547396106215727*^9}, 
   3.5473968928441067`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thirteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Point", "[", "orig3D", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
           "&"}], ",", "orig3D"}], "]"}], "]"}], ",", "Red", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "Magenta", ",", 
       RowBox[{"Point", "[", "sumNorm3D", "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9}],

Cell[BoxData[
 RowBox[{"thirteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "thirteenthDiagram", ",", 
    "\"\<Figure 13: Sum-normalizing points in 3D.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547396690052643*^9, 3.54739673912817*^9}, 
   3.54739689284453*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    InsetBox[
     Graphics3DBox[{
       RGBColor[0, 0, 1], 
       PointSize[Medium], 
       Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAA0s8xhiE96T9lhL46L+z1P6BbTBmd
QuQ/0as2FWfe5z8wFHG+XbDoP8ip3/+KrOM/JkbpVzwH5T8cHjAHOoLtP/8r
AQiKVOM/xACe0E2+4j9e6hcUQ1fhP4MBfp0lweM/lL9faikk5j+Sj9JAEAX3
P7aBwFSb/eM/1EZzdrN24T9KoHUvE0LsP/XBkrLSNOQ/qbF0HtfC4z/UdYeh
33bpP0/1xDjgBuQ/9foM7pC/7z/m5hf/jBjmP4mUuzyMZuM/YFG15ql14j98
ShmqKf7nP4ryaQWAtcg/V47AWutE4D8Yh770X6jkP/cwLmwcv8Y/uQQeWxGv
4T/tHUUvd0LxP0YMPcsxvsY/mkGwnFFJ6z8Q027q/EfpPzGrIUBYt8Q/mVB1
RNpi6z9++V7wwdHqP34gnjSoJck/cOyMzSs27T8gWvxTwJH0PylA4HYrhsM/
/LQ92gno4T8Ypyx7hs73P95o/l4yiMk/eBDPwKcV5D+wLD6KVDj1P+StuKZ8
EMk/CqnDlw==
        "]], 
       Line3DBox[{{{0, 0, 0}, {0.7887122746455992, 1.370162229032098, 
          0.6331315511805435}}, {{0, 0, 0}, {0.7458987631156281, 
          0.7715290755810482, 0.6148123738797091}}, {{0, 0, 0}, {
          0.657133266164412, 0.9221468105687936, 0.6040697246875196}}, {{0, 0,
           0}, {0.5857304644159957, 0.5419021027040107, 
          0.6173275066394556}}, {{0, 0, 0}, {0.6919142797105331, 
          1.4387362033967048`, 0.6247078566848845}}, {{0, 0, 0}, {
          0.5457398713571942, 0.8830657889311706, 0.6314481246718616}}, {{0, 
          0, 0}, {0.6175342173424286, 0.7957609324327515, 
          0.6258393391396256}}, {{0, 0, 0}, {0.9921345376422709, 
          0.690496919850571, 0.6062680422006831}}, {{0, 0, 0}, {
          0.5768632417698818, 0.7497757265321776, 0.19303894295071117`}}, {{0,
           0, 0}, {0.5084130070212706, 0.6455535679017173, 
          0.17770724565742288`}}, {{0, 0, 0}, {0.552620580638311, 
          1.0787269445880796`, 0.17767927573922487`}}, {{0, 0, 0}, {
          0.8527000484773908, 0.7900375918166862, 0.1618452370779209}}, {{0, 
          0, 0}, {0.8558169686389362, 0.8381051726099, 
          0.19646170205328767`}}, {{0, 0, 0}, {0.9128626837404124, 
          1.2855838089650504`, 0.1525320368241421}}, {{0, 0, 0}, {
          0.5595750105400437, 1.4879212199688876`, 0.19946889532440698`}}, {{
          0, 0, 0}, {0.6276434675023799, 1.3262524986373982`, 
          0.1958156408376076}}}], {
        RGBColor[1, 0, 0], 
        Opacity[0.85], 
        Polygon3DBox[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}}], {
         RGBColor[1, 0, 1], 
         Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAW0rsqE4U0j9MlYqKXGjfP7NAEpmp
Bs0/ngx1dXBj1j8tEIuJYSjXPzfj/wAudNI/KJbvzCtD0z+zyDug2QfbPyah
1JL6tNE/nU6WV5171T/szWiHGODTP3bjACFKpNY/HcTBaEgS0D+HUb+Wh7Xg
P6kxf9NQBc0/VbTupvPz0D9W/Gwygm7bP1VPpCaKndM/RcHVosBh0z+lCZ/j
w/nYPxU1i3l7pNM/s30GUbm92z/y15chmE7TP1qqYY2u89A/SG124EtL2D/l
88aIgZPfP6g9hS1lQsA/LBqzFypv2D/gd6KbcgbfP+fbVJnGFME/SVd21vmM
0z9mfQWu6BTjP5y3+jXTJLk/1/dIJsE93j+opEvb1QTcPwqOrfmj9bY/O4H7
nmL53D81iTlv4F/cPzrWK8fzmro/WjnXfsDZ2D9H/T8KoH/hP1Ywo7L9m7A/
yYHtpWjgzz97xpc9rDDlP5PIZsfMubY/P7M3qZOv0j98PvckAr7jPyU/ZzOg
Ubc/QEvILA==
          "]]}}}, AspectRatio -> 0.6826228964509987, Axes -> 
      True, AxesLabel -> {
        FormBox["x", TraditionalForm], 
        FormBox["y", TraditionalForm], 
        FormBox["z", TraditionalForm]}, Background -> None, ImageMargins -> 
      0., ImageSize -> {360., 403.67588722577744`}, 
      ViewPoint -> {2.7028583306915155`, -2.001748577592822, 
       0.37089011353309126`}, 
      ViewVertical -> {0.6120637778795446, -0.2831708283594404, 
       1.2890940854588477`}], {0., 63.789883046659725`}, 
     ImageScaled[{0., 0.}], {360., 404.}, ContentSelectable -> True], 
    AspectRatio -> 0.8157663534049373, Background -> None, ContentSelectable -> 
    True, ImageMargins -> 0., ImagePadding -> 0., 
    ImageSize -> {360., 293.67588722577744`}, 
    PlotRange -> {{0., 360.}, {57.04576549830023, 350.9574461156155}}, 
    PlotRangePadding -> None],"\"Figure 13: Sum-normalizing points in 3D.\""},
  
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5473967412573*^9, 3.547396892844736*^9}]
}, {6}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Choose the reference", "Subsubsection",
 CellChangeTimes->{{3.547401961196087*^9, 3.547401965083189*^9}}],

Cell["\<\
After sum-normalizing, you choose a reference spectrum. Note that, unlike the \
2D case, the reference spectrum is not necessarily sum-normalized. Figure 14 \
shows one such case.\
\>", "Text",
 CellChangeTimes->{{3.547396919795761*^9, 3.5473969456337442`*^9}, {
  3.5473981260477457`*^9, 3.547398147665278*^9}, {3.547398184655978*^9, 
  3.547398200809556*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"refPt3D", "=", 
   RowBox[{"Median", "/@", 
    RowBox[{"Transpose", "[", "sumNorm3D", "]"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54739704948209*^9, 3.547397093422785*^9}, 
   3.547398357701996*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "Magenta", ",", 
       RowBox[{"Point", "[", "sumNorm3D", "]"}], ",", "Green", ",", 
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", "refPt3D", "]"}], ",", 
       RowBox[{"Opacity", "[", "1", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9, {3.547396996128675*^9, 3.547397011004944*^9}, {
   3.547397101720193*^9, 3.547397109851194*^9}, {3.547397214672595*^9, 
   3.547397243994307*^9}, {3.547397285255617*^9, 3.547397311333056*^9}, {
   3.547397415816349*^9, 3.547397524495929*^9}, {3.547397557249049*^9, 
   3.547397634329254*^9}, {3.547397695337129*^9, 3.54739777423074*^9}, {
   3.547397901273827*^9, 3.5473979954100533`*^9}, {3.547398085123536*^9, 
   3.547398102047306*^9}, 3.547398287600065*^9}],

Cell[BoxData[
 RowBox[{"fourteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fourteenthDiagram", ",", 
    "\"\<Figure 14: A reference spectrum that is not sum-normalized derived \
from sum-normalized spectra.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "->", "Times"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473982080684347`*^9, 3.5473982818753777`*^9}, {
  3.5473983341463118`*^9, 3.5473983577023983`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     RGBColor[1, 0, 0], 
     Opacity[0.85], 
     Polygon3DBox[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}}], {
      RGBColor[1, 0, 1], 
      Point3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAW0rsqE4U0j9MlYqKXGjfP7NAEpmp
Bs0/ngx1dXBj1j8tEIuJYSjXPzfj/wAudNI/KJbvzCtD0z+zyDug2QfbPyah
1JL6tNE/nU6WV5171T/szWiHGODTP3bjACFKpNY/HcTBaEgS0D+HUb+Wh7Xg
P6kxf9NQBc0/VbTupvPz0D9W/Gwygm7bP1VPpCaKndM/RcHVosBh0z+lCZ/j
w/nYPxU1i3l7pNM/s30GUbm92z/y15chmE7TP1qqYY2u89A/SG124EtL2D/l
88aIgZPfP6g9hS1lQsA/LBqzFypv2D/gd6KbcgbfP+fbVJnGFME/SVd21vmM
0z9mfQWu6BTjP5y3+jXTJLk/1/dIJsE93j+opEvb1QTcPwqOrfmj9bY/O4H7
nmL53D81iTlv4F/cPzrWK8fzmro/WjnXfsDZ2D9H/T8KoH/hP1Ywo7L9m7A/
yYHtpWjgzz97xpc9rDDlP5PIZsfMubY/P7M3qZOv0j98PvckAr7jPyU/ZzOg
Ubc/QEvILA==
       "]]}, {
      RGBColor[0, 1, 0], 
      PointSize[Large], 
      Point3DBox[{0.32057466267114804`, 0.4640601923965809, 
       0.1800856247610254}], {
       Opacity[1], 
       Line3DBox[{{0, 0.4640601923965809, 0.1800856247610254}, {
         1, 0.4640601923965809, 0.1800856247610254}}], 
       Line3DBox[{{0.32057466267114804`, 0, 0.1800856247610254}, {
         0.32057466267114804`, 1, 0.1800856247610254}}], 
       Line3DBox[{{0.32057466267114804`, 0.4640601923965809, 0}, {
         0.32057466267114804`, 0.4640601923965809, 1}}]}}}, Axes -> True, 
    AxesLabel -> {
      FormBox["x", TraditionalForm], 
      FormBox["y", TraditionalForm], 
      FormBox["z", TraditionalForm]}],
   "\"Figure 14: A reference spectrum that is not sum-normalized derived from \
sum-normalized points.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547397311862522*^9, 3.547397527342972*^9, {3.547397606876594*^9, 
   3.547397636587237*^9}, {3.547397728269095*^9, 3.547397775075294*^9}, 
   3.547397956831068*^9, 3.5473979962341137`*^9, 3.547398103037161*^9, 
   3.547398290771674*^9, 3.547398357702662*^9}]
}, {4}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Form the r-quotient plane and divide into median regions", \
"Subsubsection",
 CellChangeTimes->{{3.5474019807543917`*^9, 3.5474020051123257`*^9}}],

Cell[TextData[{
 "Now, we form the reciprocal quotient plane from the sum-normalized plane by \
dividing all points by the reference spectrum, R. We assume that none of the \
coordinates of R is 0. This forms the plane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", ",", "y", ",", "z"}], ")"}], "\[CenterDot]", "R"}], "=", 
    "1"}], TraditionalForm]]],
 ". Since we are in the first quadrant, the section of the plane we are \
interested in is a triangle. If we draw lines cooresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]]],
 " ,",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "z"}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "z"}], TraditionalForm]]],
 ", we will divide the triangle into 6 regions. If ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " are the coordinates of a line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "b"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 " is the non-included coordinate. The lines run from the corner where ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 " is non-zero to the opposite edge where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{"b", "=", 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["R", "a"], "+", 
       SubscriptBox["R", "b"]}]]}]}], TraditionalForm]]],
 ". So, the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "z"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " runs from the corner ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      SubscriptBox["R", "x"]], ",", "0", ",", "0"}], ")"}], TraditionalForm]],
  
  FormatType->"TraditionalForm"],
 " to the point on the opposite edge ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["R", "y"], "+", 
       SubscriptBox["R", "z"]}]], ",", 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["R", "y"], "+", 
       SubscriptBox["R", "z"]}]]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547398429192198*^9, 3.547398431425383*^9}, {
   3.547398461790782*^9, 3.5473984879253883`*^9}, {3.547399887002164*^9, 
   3.547399921462243*^9}, {3.547400003533226*^9, 3.54740010044049*^9}, {
   3.5474010654678164`*^9, 3.5474011394618387`*^9}, {3.547401221127473*^9, 
   3.547401255962309*^9}, {3.547401318779447*^9, 3.5474013565599947`*^9}, {
   3.5474014118501787`*^9, 3.547401511571314*^9}, {3.547401805871662*^9, 
   3.547401817221616*^9}, {3.547401847556612*^9, 3.5474019399803743`*^9}, {
   3.5474020355022593`*^9, 3.547402101266095*^9}, {3.547404353030405*^9, 
   3.547404565900749*^9}, 3.5474563489872093`*^9, {3.547456426168315*^9, 
   3.547456524467649*^9}, {3.547456568028935*^9, 3.547456631482058*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0", "<", "rx", "<", "1"}], "&&", 
     RowBox[{"0", "<", "ry", "<", "1"}], "&&", 
     RowBox[{
      RowBox[{"t", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}]}], "\[Equal]", 
      RowBox[{"rx", "/", "ry"}]}], "&&", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{"t", "/", "rx"}]}], "&&", 
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], "/", "ry"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "t", ",", "rx", ",", "ry"}], "}"}], ",", 
    "Reals"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474022446392317`*^9, 3.547402309313661*^9}, {
   3.547402720531225*^9, 3.547402831337352*^9}, {3.547402868273469*^9, 
   3.5474028731079893`*^9}, {3.547402965985022*^9, 3.5474030675686827`*^9}, {
   3.547403143994239*^9, 3.547403228826315*^9}, {3.547403332166478*^9, 
   3.547403428704777*^9}, {3.547403692830295*^9, 3.547403721919084*^9}, {
   3.547403957062478*^9, 3.547403981580202*^9}, {3.5474040595568132`*^9, 
   3.547404081392223*^9}, 3.547404992246944*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", "y"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", ">", "1"}], "&&", 
      RowBox[{"0", "<", "t"}], "&&", 
      RowBox[{"t", "<", "1"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"t", "+", "x"}], ">", "1"}], "&&", 
      RowBox[{
       RowBox[{"2", " ", "x"}], ">", "1"}], "&&", 
      RowBox[{"t", "<", "x"}], "&&", 
      RowBox[{"x", "\[LessEqual]", "1"}]}], ")"}]}], ")"}], "&&", 
  RowBox[{"rx", "\[Equal]", 
   FractionBox["t", "x"]}], "&&", 
  RowBox[{
   RowBox[{"rx", "+", "ry"}], "\[Equal]", 
   FractionBox["rx", "t"]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547402749025425*^9, 3.547402834499711*^9}, 
   3.547402873763077*^9, 3.547402967383053*^9, 3.547403112810112*^9, {
   3.547403201056781*^9, 3.547403233183613*^9}, 3.547403417955184*^9, {
   3.547403688601891*^9, 3.547403722487492*^9}, 3.547403999763998*^9, 
   3.5474040856778927`*^9, 3.5474049922471533`*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}]}], "\[Equal]", 
    RowBox[{"rx", "/", "rz"}]}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474042864040213`*^9, 3.547404300294341*^9}, 
   3.547404992247208*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox["rx", 
     RowBox[{"rx", "+", "rz"}]]}], "}"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5474043009447937`*^9, 3.547404992247267*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["rx", 
   RowBox[{"rx", "+", "rz"}]], "/", "rx"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547404315116642*^9, 3.54740433696175*^9}, 
   3.547404992247321*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"rx", "+", "rz"}]]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547404347133869*^9, 3.547404992247373*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "\[Equal]", "z"}], "&&", 
    RowBox[{"x", "\[Equal]", "y"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", "rx"}], "+", 
      RowBox[{"y", " ", "ry"}], "+", 
      RowBox[{"z", " ", "rz"}]}], "\[Equal]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54739888936059*^9, 3.547398894699534*^9}, {
   3.547398926924963*^9, 3.547398929993906*^9}, {3.547398991117526*^9, 
   3.547399048079217*^9}, {3.547399307641958*^9, 3.547399308055952*^9}, {
   3.547399587198173*^9, 3.547399590404118*^9}, {3.547399811269721*^9, 
   3.547399811719173*^9}, {3.5473998432078943`*^9, 3.547399843546021*^9}, 
   3.547400713920554*^9, {3.547400937779107*^9, 3.547400965326005*^9}, {
   3.547401024597677*^9, 3.54740102638202*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rx", "+", "ry", "+", "rz"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{"x", "\[Equal]", 
   FractionBox["1", 
    RowBox[{"rx", "+", "ry", "+", "rz"}]]}], "&&", 
  RowBox[{"y", "\[Equal]", "x"}], "&&", 
  RowBox[{"z", "\[Equal]", "x"}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547400972634695*^9, 3.547401027432807*^9, 
  3.547401718610332*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "\[Equal]", "z"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", 
      RowBox[{"y", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "+", 
      RowBox[{"z", " ", 
       RowBox[{"refPt3D", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "\[Equal]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54739888936059*^9, 3.547398894699534*^9}, {
   3.547398926924963*^9, 3.547398929993906*^9}, {3.547398991117526*^9, 
   3.547399048079217*^9}, {3.547399307641958*^9, 3.547399308055952*^9}, {
   3.547399587198173*^9, 3.547399590404118*^9}, {3.547399811269721*^9, 
   3.547399811719173*^9}, {3.5473998432078943`*^9, 3.547399843546021*^9}, 
   3.547400713920554*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "\[Equal]", 
   RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
    RowBox[{"0.4976740578487859`", " ", "x"}]}]}], "&&", 
  RowBox[{"y", "\[Equal]", 
   RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
    RowBox[{"0.4976740578487859`", " ", "x"}]}]}]}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.547398930731265*^9, 3.547399051052137*^9, 3.547399309272481*^9, 
   3.5473995943299417`*^9, {3.547399819334371*^9, 3.5473998443071833`*^9}, 
   3.5474007139210587`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1.5524435203393163`", "\[InvisibleSpace]", "-", 
   RowBox[{"0.4976740578487859`", " ", "x"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547399153847061*^9, 3.547399158882936*^9}, {
   3.547399353293524*^9, 3.547399361816708*^9}, {3.547399598245482*^9, 
   3.547399606718861*^9}, {3.547399823456868*^9, 3.547399824865265*^9}, 
   3.547399857380827*^9, 3.5474007139213133`*^9}],

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5473991606375*^9, 3.5473991827998447`*^9}, {
   3.5473992382432423`*^9, 3.547399239231241*^9}, {3.547399365717846*^9, 
   3.5473993659610662`*^9}, {3.547399430569178*^9, 3.5473994306423187`*^9}, {
   3.547399612012398*^9, 3.547399631629476*^9}, {3.547399861696869*^9, 
   3.547399872439776*^9}, {3.547400173017227*^9, 3.547400173260462*^9}, {
   3.547400216693941*^9, 3.547400216798695*^9}, 3.547400713921502*^9}],

Cell[BoxData["0.05942134679295874`"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547399163115535*^9, 3.547399183702611*^9}, 
   3.547399240550035*^9, 3.547399366663069*^9, 3.5473994314792624`*^9, {
   3.547399613580016*^9, 3.547399632135816*^9}, {3.5473998630215187`*^9, 
   3.5473998733351393`*^9}, 3.547400174260373*^9, 3.5474002181897697`*^9, 
   3.547400713921803*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fifteenthDiagram", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Magenta", ",", 
       RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"Opacity", "[", "1", "]"}], ",", "Yellow", ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "a", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "c"}], "}"}]}], "}"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "a"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "c", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"refPt3D", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"c", "=", 
            RowBox[{"1", "/", 
             RowBox[{"refPt3D", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "a", ",", "a"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547395888870414*^9, 3.5473960502502823`*^9}, {
   3.5473961208697567`*^9, 3.5473961280452642`*^9}, {3.5473962717451353`*^9, 
   3.5473962809372168`*^9}, {3.547396678849077*^9, 3.547396685997224*^9}, 
   3.547396892844305*^9, {3.547396996128675*^9, 3.547397011004944*^9}, {
   3.547397101720193*^9, 3.547397109851194*^9}, {3.547397214672595*^9, 
   3.547397243994307*^9}, {3.547397285255617*^9, 3.547397311333056*^9}, {
   3.547397415816349*^9, 3.547397524495929*^9}, {3.547397557249049*^9, 
   3.547397634329254*^9}, {3.547397695337129*^9, 3.54739777423074*^9}, {
   3.547397901273827*^9, 3.5473979954100533`*^9}, {3.547398085123536*^9, 
   3.547398102047306*^9}, 3.547398287600065*^9, {3.547398528608972*^9, 
   3.547398587747058*^9}, {3.547398630149794*^9, 3.547398630693344*^9}, {
   3.547398821390777*^9, 3.547398865990122*^9}, {3.5473991122446327`*^9, 
   3.547399123776905*^9}, {3.547399175303514*^9, 3.547399194373231*^9}, {
   3.547399252536331*^9, 3.547399257712214*^9}, {3.547399387014571*^9, 
   3.547399420669814*^9}, {3.547399476859741*^9, 3.547399490353692*^9}, {
   3.547399625484057*^9, 3.5473996418248787`*^9}, {3.547400186695157*^9, 
   3.5474002284796753`*^9}, {3.5474003367249002`*^9, 3.5474003629661207`*^9}, 
   3.547400396272852*^9, {3.547404623990632*^9, 3.547404931485201*^9}}],

Cell[BoxData[
 RowBox[{"fifteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "fifteenthDiagram", ",", 
    "\"\<Figure 15: The r-quotient plane derived from figure 14 split into \
sections of uniform median coordinate.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54740039823794*^9, 3.5474004036555557`*^9}, {
   3.547400592143489*^9, 3.547400665583235*^9}, 3.547400713922076*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[1, 0, 1], 
      Opacity[0.85], 
      Polygon3DBox[{{0, 0, 5.552914072553016}, {0, 2.1548928703313783`, 0}, {
        3.119398119825272, 0, 0}}]}, {
      RGBColor[1, 1, 0], 
      Opacity[1], 
      Line3DBox[{{1.2744781773856848`, 1.2744781773856848`, 0}, {
        0, 0, 5.552914072553016}}], 
      Line3DBox[{{1.9973623335073767`, 0, 1.9973623335073767`}, {
        0, 2.1548928703313783`, 0}}], 
      Line3DBox[{{0, 1.5524435203393163`, 1.5524435203393163`}, {
        3.119398119825272, 0, 0}}]}}, Axes -> True, AxesLabel -> {
      FormBox["x", TraditionalForm], 
      FormBox["y", TraditionalForm], 
      FormBox["z", TraditionalForm]}, ImageSize -> {284.52907390513, 432.}, 
    Lighting -> "Neutral", 
    ViewPoint -> {3.3324561829704984`, 0.5851418342734758, 
     0.048423365896728514`}, 
    ViewVertical -> {0.9968228332156396, 0.4164413937090176, 
     0.8125961665075787}],
   "\"Figure 15: The r-quotient plane derived from figure 14 split into \
sections of uniform median coordinate.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5474006679326773`*^9, 3.54740071392233*^9, 
  3.54740481496692*^9, 3.5474049355181637`*^9}]
}, {16}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate the medians on each region", "Subsubsection",
 CellChangeTimes->{{3.5474563195435467`*^9, 3.5474563254259987`*^9}}],

Cell[TextData[{
 " On each of the six regions, the median is one of the coordinates of the \
plane. These lines all intersect at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"y", "=", 
     RowBox[{"z", "=", 
      FractionBox["1", 
       RowBox[{
        SubscriptBox["R", "x"], "+", 
        SubscriptBox["R", "y"], "+", 
        SubscriptBox["R", "z"]}]]}]}]}], TraditionalForm]]],
 ", where the reciprocal median quotient is ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     SubscriptBox["R", "x"], "+", 
     SubscriptBox["R", "y"], "+", 
     SubscriptBox["R", "z"]}]], TraditionalForm]]],
 ". Along each line, the median is the value of the two equal coordinates. \
So, on the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]]],
 ", the median is ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " or equivalently, ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 ". Each region is bounded by two lines. The median in that region is the \
variable that is common to its two bounding lines. So, the median of the \
region bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "y"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "z"}], TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.5474563614919786`*^9, 3.547456368363654*^9}, 
   3.547456421621703*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rQuotientPlaneNormal", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}]}], 
       ",", 
       RowBox[{"b", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"c", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"1", "/", 
           RowBox[{"refPt3D", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], "}"}], ",", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "\[Cross]", 
       RowBox[{"(", 
        RowBox[{"c", "-", "a"}], ")"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.54745709612403*^9, 3.547457130361415*^9}, {
   3.5474571612064342`*^9, 3.547457216157958*^9}, {3.547457248251457*^9, 
   3.5474573293804607`*^9}, {3.5474573626231403`*^9, 3.5474574372300797`*^9}, 
   3.547457497069278*^9, {3.547460578794383*^9, 3.547460586131555*^9}, 
   3.547462239175186*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"medianSegEndpoints", "=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Endpoints", " ", "of", " ", "the", " ", "line", " ", "segments", " ", 
       "on", " ", "the", " ", "edges", " ", "of", " ", "the", " ", 
       "triangle"}], " ", "-", " ", 
      RowBox[{"going", " ", "in", " ", "order", " ", "x"}]}], ",", " ", "y", 
     ",", " ", "z"}], "*)"}], 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"ry", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "rx"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"rx", "+", "ry"}], ")"}]}], ",", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"rx", "+", "ry"}], ")"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"1", "/", "ry"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"ry", "+", "rz"}], ")"}]}], ",", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"ry", "+", "rz"}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"1", "/", "rz"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"rx", "+", "rz"}], ")"}]}], ",", "0", ",", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"rx", "+", "rz"}], ")"}]}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547457522237172*^9, 3.54745752584693*^9}, {
   3.547457624296301*^9, 3.547457631353133*^9}, {3.547457694478889*^9, 
   3.547457828053924*^9}, {3.5474578782298193`*^9, 3.547457993514452*^9}, {
   3.547458034644821*^9, 3.547458138718566*^9}, {3.547458291799842*^9, 
   3.547458292402843*^9}, 3.54746223917533*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"medianSegIntersect", "=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", "=", 
        RowBox[{"1", "/", 
         RowBox[{"Total", "[", "refPt3D", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "s", ",", "s"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Intersection", " ", "of", " ", "all", " ", "of", " ", "the", " ", 
     "median", " ", "line"}], "-", 
    RowBox[{"segment", " ", "points"}]}], "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.547458143288746*^9, 3.547458196668271*^9}, {
   3.5474583167214727`*^9, 3.5474583392378187`*^9}, 3.547462239175455*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjacentEndpointPairs", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"medianSegEndpoints", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"medianSegEndpoints", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Length", "[", "medianSegEndpoints", "]"}]}], "]"}], "+",
            "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "medianSegEndpoints", "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5474584003174887`*^9, 3.547458423025959*^9}, {
   3.547458480825182*^9, 3.54745861311499*^9}, 3.547462239175592*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"medianPolysRQuotientCoords", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"triangles", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"#", ",", "medianSegIntersect"}], "]"}], "&"}], ",", 
         "adjacentEndpointPairs"}], "]"}]}], "}"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "+", 
         RowBox[{
          RowBox[{"Median", "[", "#", "]"}], " ", "rQuotientPlaneNormal"}]}], 
        "&"}], ",", "triangles", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5474586182392597`*^9, 3.547458627193906*^9}, {
   3.5474586734372377`*^9, 3.547458736295867*^9}, {3.5474594158622293`*^9, 
   3.547459513534576*^9}, 3.547462239175699*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"medianPolysRQuotient", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.85", "]"}], ",", "White", ",", 
      RowBox[{"Polygon", "[", "medianPolysRQuotientCoords", "]"}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.54745873794584*^9, 3.547458776451435*^9}, {
   3.547459574402307*^9, 3.547459582217009*^9}, {3.547459630237527*^9, 
   3.5474596572981863`*^9}, {3.547459690264241*^9, 3.5474597796777143`*^9}, {
   3.547459891890286*^9, 3.54745989797101*^9}, 3.547462239175808*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"medianPolysSolidEdges", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"ry", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", "1", "]"}], ",", "Gray", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "rx"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "ry"}], ",", "0"}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"rx", "+", "ry"}], ")"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"rx", "+", "ry"}], ")"}]}], ",", "0"}], "}"}], "+", 
            RowBox[{"rQuotientPlaneNormal", "/", 
             RowBox[{"(", 
              RowBox[{"ry", "+", "rx"}], ")"}]}]}]}], "}"}], "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "rx"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"1", "/", "rz"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"rx", "+", "rz"}], ")"}]}], ",", "0", ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"rx", "+", "rz"}], ")"}]}]}], "}"}], "+", 
            RowBox[{"rQuotientPlaneNormal", "/", 
             RowBox[{"(", 
              RowBox[{"rx", "+", "rz"}], ")"}]}]}]}], "}"}], "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "ry"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"1", "/", "rz"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"ry", "+", "rz"}], ")"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"ry", "+", "rz"}], ")"}]}]}], "}"}], "+", 
            RowBox[{"rQuotientPlaneNormal", "/", 
             RowBox[{"(", 
              RowBox[{"ry", "+", "rz"}], ")"}]}]}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547460742954934*^9, 3.5474607489791737`*^9}, {
   3.54746079456397*^9, 3.547461036215425*^9}, {3.5474611091752787`*^9, 
   3.5474611809086123`*^9}, {3.547461364897728*^9, 3.547461374595563*^9}, {
   3.5474614083685617`*^9, 3.5474614266698647`*^9}, {3.5474615782443123`*^9, 
   3.5474617155273037`*^9}, 3.5474622391759157`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sixteenthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"medianPolysRQuotient", ",", "medianPolysSolidEdges", ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Magenta", ",", 
        RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], "/", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], "/", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], "/", 
            RowBox[{"refPt3D", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], "]"}],
      ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547459793006568*^9, 3.547459809626554*^9}, {
  3.547459858143579*^9, 3.547459872662092*^9}, {3.5474617193859863`*^9, 
  3.547461723648959*^9}, {3.547461961530694*^9, 3.547461981179443*^9}, {
  3.54746222591221*^9, 3.547462239176025*^9}}],

Cell[BoxData[
 RowBox[{"sixteenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "sixteenthDiagram", ",", 
    "\"\<Figure 16: Surface created when medians are added above the \
rQuotient plane.\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474620619215927`*^9, 3.547462156956575*^9}, 
   3.547462239176134*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      GrayLevel[1], 
      Opacity[0.85], 
      Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2JmKL5yOY6h/QuHAwMaWPO+O2Jf3n97IX4Gljf6TA7s
xm0LjM/fsF8w4+iBpRN+2s+LWcI0fepf+/WMa3MMF361x6UeZt7s5cqVFraM
cHtwmYNL/fFjnwIfPn1l/z1kbWGSOpuDvJl+R4kRgwMuc3CpR/enZImPtL6Z
GE5zcKlv61m0J3chh4ONSfusYJ6f9tef78g9c40Fpzm41OMKf1zmAABTkaDb

       "]]}, {
      GrayLevel[0.5], 
      Opacity[1], 
      Polygon3DBox[{{3.119398119825272, 0, 0}, {0, 2.1548928703313783`, 0}, {
        1.9645369967320034`, 2.2733993828313794`, 0.3876465861911104}}], 
      Polygon3DBox[{{3.119398119825272, 0, 0}, {0, 0, 5.552914072553016}, {
        3.078822587690925, 1.5655094181304454`, 2.6048821041158408`}}], 
      Polygon3DBox[{{0, 2.1548928703313783`, 0}, {0, 0, 5.552914072553016}, {
        0.8405615425637841, 2.769230735876245, 2.0246363295944003`}}]}, {
      RGBColor[1, 0, 1], 
      Opacity[0.85], 
      Polygon3DBox[{{0, 0, 5.552914072553016}, {0, 2.1548928703313783`, 0}, {
        3.119398119825272, 0, 0}}]}}, Axes -> True, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, 
    ImageSize -> {290.6549057299735, 432.}, 
    ViewPoint -> {3.3006100369470484`, 0.6018158398663649, 
     0.4402170815522125}, 
    ViewVertical -> {0.829695958580011, 0.2537246576862518, 
     0.875643013203206}],
   "\"Figure 16: Surface created when medians are added above the rQuotient \
plane.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547462158475149*^9, 3.547462239176248*^9}]
}, {10}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Move medians back to sum-normalized plane", "Subsubsection",
 CellChangeTimes->{{3.5474623868702497`*^9, 3.5474623933332157`*^9}}],

Cell[TextData[{
 "The medians can be transferred to constant-sum plane directly by noting \
that it can be divided by the three lines ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["y", 
     SubscriptBox["R", "y"]]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", 
     SubscriptBox["R", "y"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " which are the back-projections of the three lines dividing the r-quotient \
plane.. Now the median r-quotient of a region bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["a", 
     SubscriptBox["R", "a"]], "=", 
    FractionBox["b", 
     SubscriptBox["R", "b"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["b", 
     SubscriptBox["R", "b"]], "=", 
    FractionBox["c", 
     SubscriptBox["R", "c"]]}], TraditionalForm]]],
 " is not ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " but ",
 Cell[BoxData[
  FormBox[
   FractionBox["b", 
    SubscriptBox["R", "b"]], TraditionalForm]]],
 ". So, the median r-quotient on the region bounded by",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["y", 
     SubscriptBox["R", "y"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", 
     SubscriptBox["R", "y"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox[
   FractionBox["y", 
    SubscriptBox["R", "y"]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.547462406317164*^9, 3.5474626143338614`*^9}, {
  3.547467437299841*^9, 3.547467531599517*^9}, {3.547467585353977*^9, 
  3.5474675961885357`*^9}, {3.547500644679102*^9, 3.5475006607599773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNNormal", "=", 
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5474629553960953`*^9, 3.547462956869939*^9}, {
   3.547463010169767*^9, 3.547463019404705*^9}, 3.547465344443569*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "/", "rx"}], "\[Equal]", 
      RowBox[{"y", "/", "ry"}]}], ",", 
     RowBox[{
      RowBox[{"x", "/", "rx"}], "\[Equal]", 
      RowBox[{"z", "/", "rz"}]}], ",", 
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547501215426663*^9, 3.547501256369709*^9}, 
   3.547570753515045*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "\[Rule]", 
     FractionBox["ry", 
      RowBox[{"rx", "+", "ry", "+", "rz"}]]}], ",", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["rx", 
      RowBox[{"rx", "+", "ry", "+", "rz"}]]}], ",", 
    RowBox[{"z", "\[Rule]", 
     FractionBox["rz", 
      RowBox[{"rx", "+", "ry", "+", "rz"}]]}]}], "}"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.547501263083213*^9, 3.547570753515167*^9}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rx", "=", 
      RowBox[{"refPt3D", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"ry", "=", 
      RowBox[{"refPt3D", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{"rz", "=", 
      RowBox[{"refPt3D", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ",", 
     RowBox[{"s", "=", 
      RowBox[{"Total", "[", "refPt3D", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sumNMiddle", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "/", "s"}], ",", 
       RowBox[{"ry", "/", "s"}], ",", 
       RowBox[{"rz", "/", "s"}]}], "}"}]}], ";", 
    RowBox[{"sumNSurfMiddle", "=", 
     RowBox[{"sumNMiddle", "+", 
      RowBox[{"sumNNormal", "/", 
       RowBox[{"Total", "[", "refPt3D", "]"}]}]}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5474632268864117`*^9, 3.5474632374359493`*^9}, {
   3.547463333833845*^9, 3.547463366568524*^9}, 3.5474653444436607`*^9, 
   3.54750073876254*^9, {3.5475012866673517`*^9, 3.547501314401442*^9}, {
   3.5475014261284657`*^9, 3.547501488101673*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNPlusMedianSides", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"ry", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rx", ",", "ry", ",", "0"}], "}"}], "+", 
               "sumNNormal"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"rx", "+", "ry"}], ")"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "ry", ",", "rz"}], "}"}], "+", 
               "sumNNormal"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"ry", "+", "rz"}], ")"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rx", ",", "0", ",", "rz"}], "}"}], "+", 
               "sumNNormal"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"rx", "+", "rz"}], ")"}]}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", "}"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474628080612097`*^9, 3.547462947340509*^9}, {
   3.5474630238036737`*^9, 3.547463204419733*^9}, {3.547463266998879*^9, 
   3.547463270414316*^9}, 3.547465344443721*^9, {3.547467786960164*^9, 
   3.547467809977744*^9}, {3.547570475670538*^9, 3.547570569794156*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumNPlusMedianSurf", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"ry", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"rz", "=", 
        RowBox[{"refPt3D", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"midXY", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"rx", ",", "ry", ",", "0"}], "}"}], "+", "sumNNormal"}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"rx", "+", "ry"}], ")"}]}]}], ",", 
         RowBox[{"midYZ", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "ry", ",", "rz"}], "}"}], "+", "sumNNormal"}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"ry", "+", "rz"}], ")"}]}]}], ",", 
         RowBox[{"midXZ", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"rx", ",", "0", ",", "rz"}], "}"}], "+", "sumNNormal"}],
             ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"rx", "+", "rz"}], ")"}]}]}], ",", 
         RowBox[{"midXYZ", "=", "sumNSurfMiddle"}]}], "}"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Polygon", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "midXZ", ",", 
              "midXYZ"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"midXZ", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "midXYZ"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "midYZ", ",", 
              "midXYZ"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"midYZ", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "midXYZ"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "midXY", ",", 
              "midXYZ"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"midXY", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "midXYZ"}], 
             "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547463247665201*^9, 3.5474633083475924`*^9}, {
   3.5474634020002203`*^9, 3.547463475312277*^9}, {3.547463508613072*^9, 
   3.5474635097728767`*^9}, {3.547463638096429*^9, 3.547463808338163*^9}, 
   3.5474653444437847`*^9, {3.547570589106851*^9, 3.547570620236835*^9}, {
   3.5475707082847757`*^9, 3.547570708855482*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seventeenthDiagram", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"sumNPlusMedianSurf", ",", "sumNPlusMedianSides", ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547464630642338*^9, 3.54746465420157*^9}, {
   3.547464714390873*^9, 3.5474647297927303`*^9}, {3.54746487951115*^9, 
   3.547464886659315*^9}, 3.5474653444438457`*^9}],

Cell[BoxData[
 RowBox[{"seventeenthDiagramWithCaption", "=", 
  RowBox[{"Labeled", "[", 
   RowBox[{
   "seventeenthDiagram", ",", 
    "\"\<Figure 17: Median r-quotients as height above constant-sum \
plane\>\"", ",", "Bottom", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.547464889314927*^9, 3.5474649670089493`*^9}, {
   3.547464997033128*^9, 3.547465058626433*^9}, {3.5474652751490183`*^9, 
   3.547465290644621*^9}, 3.547465344443903*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     Polygon3DBox[{{{1, 0, 0}, {1.7934814372158874`, 1.1531776809197032`, 
        1.5128739246235188`}, {0.9307617601527054, 1.079494509923813, 
        0.7851350829466193}}, {{1.7934814372158874`, 1.1531776809197032`, 
        1.5128739246235188`}, {0, 0, 1}, {0.9307617601527054, 
        1.079494509923813, 0.7851350829466193}}, {{0, 0, 1}, {
        0.8963036843695946, 1.616730923103083, 1.1758764456361062`}, {
        0.9307617601527054, 1.079494509923813, 0.7851350829466193}}, {{
        0.8963036843695946, 1.616730923103083, 1.1758764456361062`}, {0, 1, 
        0}, {0.9307617601527054, 1.079494509923813, 0.7851350829466193}}, {{0,
         1, 0}, {1.1443857305870841`, 1.3272549069927735`, 
        0.7358203187899288}, {0.9307617601527054, 1.079494509923813, 
        0.7851350829466193}}, {{1.1443857305870841`, 1.3272549069927735`, 
        0.7358203187899288}, {1, 0, 0}, {0.9307617601527054, 
        1.079494509923813, 0.7851350829466193}}}], 
     Polygon3DBox[{{{1, 0, 0}, {0, 1, 0}, {1.1443857305870841`, 
        1.3272549069927735`, 0.7358203187899288}}, {{0, 0, 1}, {0, 1, 0}, {
        0.8963036843695946, 1.616730923103083, 1.1758764456361062`}}, {{1, 0, 
        0}, {0, 0, 1}, {1.7934814372158874`, 1.1531776809197032`, 
        1.5128739246235188`}}}]}, Axes -> True, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, 
    ImageSize -> {360., 358.7379381722212}, 
    ViewPoint -> {3.336783015504459, 0.4767339994765199, 
     0.29766390641810536`}, 
    ViewVertical -> {0.5079826952060453, 0.11756091234282688`, 
     1.0133757227442954`}],
   "\"Figure 17: Median r-quotients as height above constant-sum plane\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> Directive[Bold, FontFamily -> Times], 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Bottom", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{"Bold", ",", 
             RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "]"}]}]}], 
     "]"}]& )]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5474650534119997`*^9, 3.547465061940052*^9}, 
   3.547465298682115*^9, 3.547465344443973*^9, 3.547570638934869*^9, 
   3.547570712435145*^9}]
}, {9}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Divide normalized spectra by median r-quotients", "Subsubsection",
 CellChangeTimes->{{3.547465511618018*^9, 3.547465528846369*^9}, {
  3.547465595751505*^9, 3.54746559678344*^9}, {3.547465771394411*^9, 
  3.547465776814672*^9}}],

Cell[TextData[{
 "The points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "z"}], ")"}], TraditionalForm]]],
 " in the regions bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["y", 
     SubscriptBox["R", "y"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", 
     SubscriptBox["R", "y"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " will become ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "y"], 
      FractionBox["x", "y"]}], ",", 
     SubscriptBox["R", "y"], ",", 
     RowBox[{
      SubscriptBox["R", "y"], 
      FractionBox["z", "y"]}]}], ")"}], TraditionalForm]]],
 ". In the regions bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["y", 
     SubscriptBox["R", "y"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " the points will become ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["R", "x"], ",", 
     RowBox[{
      SubscriptBox["R", "x"], 
      FractionBox["y", "x"]}], ",", 
     RowBox[{
      SubscriptBox["R", "x"], 
      FractionBox["z", "x"]}]}], ")"}], TraditionalForm]]],
 ". In the regions bounded by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["x", 
     SubscriptBox["R", "x"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", 
     SubscriptBox["R", "y"]], "=", 
    FractionBox["z", 
     SubscriptBox["R", "z"]]}], TraditionalForm]]],
 " the points will become ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "z"], 
      FractionBox["x", "z"]}], ",", 
     RowBox[{
      SubscriptBox["R", "z"], 
      FractionBox["y", "z"]}], ",", 
     SubscriptBox["R", "z"]}], ")"}], TraditionalForm]]],
 ". Notice that each region is transformed to lie on a plane. Taking the \
region where ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the common coordinate as an example, the plane is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SubscriptBox["R", "y"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.547465642468349*^9, 3.5474656440274467`*^9}, 
   3.547465799746467*^9, {3.54746588402993*^9, 3.547465964194687*^9}, {
   3.547466037222611*^9, 3.547466080895075*^9}, {3.5474661270587893`*^9, 
   3.547466168499254*^9}, {3.5474665208361588`*^9, 3.547466521201844*^9}, {
   3.5474665886800756`*^9, 3.547466638129446*^9}, {3.547466680007847*^9, 
   3.547466706792795*^9}, {3.547466744489109*^9, 3.5474668468208103`*^9}, {
   3.5474668860315533`*^9, 3.547466933952529*^9}, {3.547466985384506*^9, 
   3.54746704156711*^9}, {3.5474670821832857`*^9, 3.547467111582809*^9}, {
   3.547571194419582*^9, 3.547571258806808*^9}, {3.547574662294868*^9, 
   3.547574663586651*^9}, {3.547575360992095*^9, 3.5475753692479486`*^9}, {
   3.547575403980142*^9, 3.547575424851717*^9}, {3.547575467276338*^9, 
   3.5475755418131037`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"Exists", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}], "&&", 
       RowBox[{"k", "==", 
        RowBox[{"x", "/", "z"}]}], "&&", 
       RowBox[{"0", "<", "x", "<", "1"}], "&&", 
       RowBox[{"0", "<", "y", "<", "1"}], "&&", 
       RowBox[{"0", "<", "z", "<", "1"}]}]}], "]"}], ",", 
    RowBox[{"{", "k", "}"}], ",", "Reals"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "what", " ", "k"}], ",", " ", 
    RowBox[{"that", " ", "is"}], ",", " ", 
    RowBox[{"transformed", " ", "x"}], ",", " ", 
    RowBox[{
    "can", " ", "we", " ", "find", " ", "an", " ", "x", " ", "that", " ", 
     "transforms", " ", "thereto"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.547576119535462*^9, 3.547576153160089*^9}, {
  3.547576343421359*^9, 3.5475763856179857`*^9}, {3.547576433732204*^9, 
  3.547576486485551*^9}, {3.547576565651147*^9, 3.5475765947701073`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "z", "<", "1"}], "&&", 
  RowBox[{"0", "<", "y", "<", 
   RowBox[{"1", "-", "z"}]}], "&&", 
  RowBox[{"k", "\[Equal]", 
   FractionBox[
    RowBox[{"1", "-", "y", "-", "z"}], "z"]}]}]], "Output",
 CellChangeTimes->{{3.547576372808237*^9, 3.5475763882079763`*^9}, {
  3.547576457474654*^9, 3.547576487447524*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "y", "-", "z"}], ")"}], "/", "z"}], ",", 
     RowBox[{
      RowBox[{"0", "<", "z", "<", "1"}], "&&", 
      RowBox[{"0", "<", "y", "<", 
       RowBox[{"1", "-", "z"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.54757667546703*^9, 3.547576690390099*^9}, {
  3.5475767212071457`*^9, 3.547576760031488*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Maximize", "::", "\<\"natt\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The maximum is not attained \
at any point satisfying the given constraints. \\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Maximize\\\", ButtonNote -> \
\\\"Maximize::natt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5475767509795837`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Infinity]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", "Indeterminate"}], ",", 
     RowBox[{"z", "\[Rule]", "Indeterminate"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.547576751564891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"0", "<=", 
       RowBox[{"x", "+", "y"}], "<", "1"}], ",", 
      RowBox[{"x", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x", "-", "y"}], ")"}]}], ",", 
      RowBox[{"-", "1"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.547575680388238*^9, 3.547575680854023*^9}, {
  3.547575728569042*^9, 3.547575760209202*^9}, {3.547575791672575*^9, 
  3.547575933976645*^9}, {3.547576184902259*^9, 3.54757623501056*^9}, {
  3.547576270517241*^9, 3.547576277446876*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {
      FractionBox["1", "9"], 
      FractionBox["1", "8"], 
      FractionBox["1", "7"], 
      FractionBox["1", "6"], 
      FractionBox["1", "5"], 
      FractionBox["1", "4"], 
      FractionBox["1", "3"], 
      FractionBox["1", "2"], "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["1", "4"], 
      FractionBox["2", "7"], 
      FractionBox["1", "3"], 
      FractionBox["2", "5"], 
      FractionBox["1", "2"], 
      FractionBox["2", "3"], "1", "2", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["3", "7"], 
      FractionBox["1", "2"], 
      FractionBox["3", "5"], 
      FractionBox["3", "4"], "1", 
      FractionBox["3", "2"], "3", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["2", "3"], 
      FractionBox["4", "5"], "1", 
      FractionBox["4", "3"], "2", "4", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"1", 
      FractionBox["5", "4"], 
      FractionBox["5", "3"], 
      FractionBox["5", "2"], "5", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["3", "2"], "2", "3", "6", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      FractionBox["7", "3"], 
      FractionBox["7", "2"], "7", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"4", "8", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"9", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.547575815519432*^9, {3.547575862217886*^9, 3.547575934702219*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", "<=", 
      RowBox[{"x", "+", "y"}], "<", "1"}], ",", 
     RowBox[{"x", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x", "-", "y"}], ")"}]}], ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547575680388238*^9, 3.547575680854023*^9}, {
   3.547575728569042*^9, 3.547575760209202*^9}, {3.547575791672575*^9, 
   3.54757597312112*^9}, 3.547576012281764*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
3+T83fO3WWeldoG3E3kud7K7ZPFGjkOe25/gURY3kPn1Mr9b5hdjHxko9HBR
0ktUByryU+60fqGXUsW6LkjzH+t3hlgXeei9w74OE3Uyr4lfHl/C+wJPnDdu
h4M3bs9jXnI7FuuQ23voN7eLME5uP4AX8FRd8KPFJ8HrG5FHK0L+LN7DebGf
ulH8EO+ttMhT5yW/Eu95r9DPOWieY17MFnVf72n9YF7FiHp+d7LngZ9v07rJ
5VEepk3rTpYvtVkfNwNvmZ6/F/2l+UHC94akTR7c84luHoLPpGm1erT9TfM7
zjYYXGxowWTd/Ly0o0t51/P6uFDlIffd602I183PseMq3azj+lBn5ywZ3mRL
YLVYHb6uRXCOglX095/MaPJTkR7HH+rwFl0H3xrladfts+hHz7hJDbfP1PB+
mRmHEidF6OIP+36IKPr9TX3cIH7jrscbq1zVxQESTUutswfo53mhd+e+KWhN
U74vs9x0ssJ+wmeuv/xHUuus+f/jrVypO84S7u/as0qT90nK+y0Lc/cIukp4
sdvfFrbvfKxcqPvP3MxkbT4/rLe6xK7QLD1QvXf8lBRtPu8tfj95aZ94xX9B
M0vmKI3/XjsbtX0z6KGyrsWamrvDNHtyYEifFXkLxiodLs94O+OthtumRnke
MtmV0Y8neX++9ZDwXza+c5oy6aGCX81u717J0e6EgCu7yn3U7Jkp9Zp03/lN
hGJL6fFgSAON5//2Nny1a1CYktP91aX9QzWeb7RY/niQkqI0r1FlTZnd/xG+
u9by4+sSk5X58x6f/HPAds2OCt6Z8eZIulLL/eqfpwpvIHzy/MZ++YanKtN9
T189991xjbd+l1dvLpeitK7gus6/geZX9nq8MXjTrUSl3MOnZxa3v0l4zTUF
GyyKi1V+W7Ytx7upmr92ZVuWz/hXghLfclFmi1qa/3JhVj8nQ1CMUrjJXzct
vpq/c3V29SmfGsQp/W9P21nmsIY/n6AU79spWsEv8DO7MstsS4hRzj8bUCFn
Yw3fKHi4p3Srn1jU9bw2/7v0C93cv1K0kive++FPURpeIXRBwbeT7yrVZh2o
mVxCs7ssRwoUfH/htrJggFtbr85aXsP4fY3Qh2+vK/bP+6+/narlKQrVGFan
aEO9fp63+ENGlI/+PMv4ZVuNF3rqz7PArppTo+S7Rac1vV1z7abiswfIz2tY
d0ec/1LPYJ23fPgs15E0jf81j1r9u2mE3p+FXW69luQ6eV0k4R5+mwcW+UPv
DwbOHvzxSzsW+F+Ppk5dOThMlw8ybSuey99+Q6c3MJ4t9U8YI+ZouEc1z93l
SsnrWpOavfi1SCNNz0Bf79s7sXWJ2Zpd5HfNuXJd1/O6PNH73N3crpdLUnxn
jUsqP/yktu5s0Wt/z/FYaVze7vq0wBXCm0RfeRfwLE65tGfaqEs5NT2TWeFp
/iNZ/D9Ze7j5l/zXjpwTfaDGPeWnnwbM3VhFW+9BCfVmLYy4o/zc6s7ru4u1
+XbCzaXA5HWhirVFr24lcmk8TBHzOVipv/plvtkDtHzZ5P9eKrHtnypb/2t7
vn70fMLDrrQ5mbNiurJl09Nz16vvILx87/Ufz9VJVrbMHBi1M1DbBz/4WMIK
ZaYquR9889x37+Ev9EbOMZ/vPlGGl/f9Je3yacKT5wz6e71bohK/7Mji1DLn
CR/ht8792oEU5crtq4POPNXwhGj/mWMXJCslZ7bt9Xayxmfbsi6z9r6LVzot
2RvTObcW13qR6hvxanCScn6J972/c2p43cgD1dsoicq/sx7X2X9Zm/+95uWY
MKDEY2VH14qP6rhq+ucv5VPtZs/jlROVDw336qzp/8lH45LCguOUAX+Wf7dp
mTbP35QPP1NoY6xS7OSGM0MjvpjnE0avTpz0SGl8a+KiASW0fIQyo3CR1l1i
lPIdfwoY3FPzx6+Xah5TuvMDZUXiHO8NHTU909m2J0T5ZFcO/7rwWMRv2nwo
Zbw2MD4jQqm8NyzyYS9t/y1w0DBx9dZ7yijPnGur/K3hHTwX1dzbKVIZMWv1
zB7btPnjU2HEjRmHbylOxZtXnnBFW485xod1v/nyjrL9cb6Kruc1PLFw/osZ
y28p74e+GXolSlunsX1+fDyv+nUl36Um3WLba+uu/+9l6p2vE6oU6dqpxs2X
2vysmnKy3/J515QOMz83fJtLm5/IY96pmJz67LC2vzdu88f9U97pOvu2Ys4+
jfsG6+sfkN/8858SA853DCQc/sz+3Ws6nLqj7V93Y+feG104TRcnX1p2yLoV
6fp6CdjnkaH/Bj8qvYTkkd/N5ze08uia2j7btHfV4R99n0r9nZye3WfOfa/Z
LRcUzwslUvV1FzOr+9y4PC1VF6+G/zDrQqOKbwedIRz6K/LYWV//udo+EjV6
6O7dl+R1GoXqdCmTu7i2v+Rf+7lz7f/09RtdfSu4PfdK0e1TsLdHXmhjuHhT
W790fsCpS652WzR7IMXun7H69yRpvUfw7w/LWEtqerLOlo/T0nwSdf7I1c9R
/15O0teBIC6wbuLtG9+80deH5Ol3rlyb/tq+Nnpg2ZcV6jyW1o1MiXb617ZV
swN/sDzd7J0vQecHXeixumfdf/X1JIj75M+YO2nOTE2ezrf6znO+m6rZMxcm
xF+tEC+vPzHvfZ6+pp5m509IM9ePOaWvS+nkX86eu0ucbl9G3O2fT9f3Xiqk
yWN/r78uuP2zCZq9tKTOkPDB/8jrWLy6fDKcPqnZsfvD93+7faS+vuV8y+7N
3Fwe6eKZiHt+mDh+x6+rNXnIlS530zrGoOnDwNpDu9ZZ9kBaD/Nk6zXPChU0
fbgo4nzHVq2idHFC9z3fno/4LVoXb6Q8dKPlhXsu1dfPRJvHGjq31PTqoYMT
PnR/Ja+rOb7jw+93B2l69WC+xMiymyJ1cbz9uy48Tr6mr7fBPJhf3vnUztv6
Opym1r+7zZmp6edPo3+1OPYzWX3OkuL7bIU2avo50aN4qY8f9HU734w5VDGt
4h2dnYZ1Mm148fFv3PV22rLjLaI/ntb2hbov1v3w90Z5nU/n8PSZC+9p+8Kx
epHLlnkF6+p/oqYedA7+O0SHH45Zt7Z38g2dHQj9EtnN2bihoyZP5938HuWe
8kyzD13cYhYOLXhRV0dU+kWLh8/OXtbhUbN+P+Pjc1FnN0LPRid0n504SY8f
3WvrcyVKawd52FXHM7oMbq3tR7+X/Otf9+1JSqpyvuyJeUcIL7k9cH2Fs0nS
upphRxtPdGmu6fkN04reuTzvsTI50jM0YvlFwrtnnEwtf1tfVwN+N2cu6OjV
V9PPLTuGKG3Hxitv91kS3s3R9Dn0ZHp3W8vRnhqe/P2gqt9Ex+v0fOyHNhGO
+T1unfnYl/Yw5t9PjXulvWyq6eE/7cej87R7pNSqO/xjrwqaPYb1s2jW1py3
gjX82qgmO9r8/ECxnPrNs0Ihfb3x3QH/9fHx0fC6ay4dGfn9faVi75K1RyzQ
1wn3uBq9a+wIDY/YX9b5eXK44hUaa3n3Sl/f++p0jkrXDmj41rrPPf7aHqbc
nZjsNt9PW0fjvLuOu9JCXtehZKTVuflS0xtYvzPuuQ20e2vt7OlZ5OSzIbd0
6x375bcF3344V0dbF1PmzBp5sO41ZUNg7U8Zz/Tr8ejl24PXJWr4Gue8i2++
DNGt38XXJlYc7XlZF8+B3ZAREPHoyMokHR408aeWKwdr8uOqTtgQeSxZ2do4
ZP3UfzV771IZe+ztZvr6B6zDB4dWXyiWqMkXyexRrOOpZJ3d6NNoUtNWrfR1
CJjnPuebFn7zz1HNPt+eb8z7fxKV43tsJfLv+OJcVaz7jfo/6OsQwEvf8O3n
k/dpdh30UZVRQfdj3p7S9kHlt42tr+jrFjD/Q6f+knN08cuEFws6VfLi1ATl
xp53JfvO0+JadD7i3x9aBg0L0fbBB91G9YlM0NlvWC9HL9WLKpii2UWj3NOb
5UrUn88q+0+BuFrpsTq76K8Z+8ZH9YxVxrsfL3LsoD7v3DdoTcv8qzV5o+nm
gksfYnT2TKfhiWM2NIpRZp4Y2Pz2Cn0+t8SiZ+saftLkYQ8s9Th5+ceP2vo9
MGL3H88L6uvThoWHlx/RJkq5Mm/z7mWLNbviVN67Pl089Pdl4f9/Vi/4+4Su
mrzl8JkfizbU16GZpwyc5lX0ruLm5F1u3FnNTmjc0Olyke/u6eyK73r7J79s
GqmLr4KXWwciY/fe09sbUZ8anX1QV8PdTilBM5vc1dkz38R8KuSIRx1ds8Hp
v+qa3mjwZvyNCR31eUbombT+NS6XraPPP64uc6DUl3Eb2BsVnUo/n/pQkw9+
vzptUS99XvL4/JQfXta+qXRteNxv2DbNTsA8+69nz9DoaE1fYZ+Y9uec1mMa
aHpm9fpeES2GhOrsE6zDvlN9t/Vy0uLGx8/v2nmy5Fld/qvS78+q3ovR58Xe
n3sdV6CK/nsrw/ae/WP2+RSlXseK6+avWqTxX/eH+1/efwK8WxVlQOQ4fV4J
76nk9Db7h7fS55vejfwz8I9t+jrJaaPLj907R5tv33tnDEmadFoXJ4cecW1r
HPypgR7/nOdJ2xKzNTxwcL7ZVV88kuZxWlSr3rxID80vWOS7ukxyTn19COzt
Tsnn3h7fo9n/5yIKHlvhqa+vgJ0UFXGhanRxzV/+oen1VnMP6vODsu/ayM7l
ye6rlJ3Xk33nRXbOTnbPpOz8ney7J7Jzc7L7IWXn6WTfAZGdg5Pd6yg7Hyf7
LobsXJvsPkbZeTfZdyJk59Rk9yvKzq/JvpsgO3cmuy9Rdh5N9h0B2fky2f2H
snNnsnv1ZefIZPccys6Xye6Zl50Xk91nKDtHJrt3XXYuTHafoey8mOwectm5
MNk9h7LzYrJ7uWX1wLJ7EWXnxWT3VMvOi8nuV5SdI5Pd2/y1cU5ZHkEW55TF
RWV5xq+N68ryF7K4sSzOLMsvy+oBZH66LD8iizPL4tKyfOvXxoFleRlZnFkW
l5bl2WX1D7L4gyzvI4tLy+LYsrzz18alZfkmWdxbFieX1RvI6j1kcRVZPksW
J5fF1WX596+Nk8vyaLI4vCxuL6u7kNW9yOI/svydLG4vi/NL6w2+Mm4vyxvK
8gKyPIKszkRW/yOLd8nylbI8gizvIKuv+No8gixPKstTyPIasroaWb2TLL4n
y8/K8hqyPIisnuRr8xqyvLAsbyLLs8jqiGT1XbJ4piwfLcuzyPIysvqZr82z
yPLgsjyOLO8jq6eS1bnJ4reyPLss7yPLE8nqiL427yPL78vySrI8lKyuTFbX
J4tLy+oHZHkoWd5KVk/1tXkoWd2CLM8ly4vJ6utk9Y2yeLusLkKWF5Pl0WR1
ZV+b/5LVY8jya1+bp5PVI8nqtf6v8hGyuhRZXFFWbyaLW8rq0GTxSVm9liz+
KauLk+WPvjYfJKv/kcV7ZfV7sjizLA4sixvL6ty+Nl4ty8fJ8muyemZZndXX
xu1leQFZ3F4W55fVB8ryC7K6Vln+Qpb3lMWfZfXksjrnr40Py/I1sryMLI8j
qwf+2vyRLI8si9vL6vNldeNfG2+X5ctk9beyPJqsvlqWp5PV/cry8l+bB5HV
4cvyFLK6ZVleUlbPLMtXyurVZflQWX21rM5Blj+S1QnL8rOyemNZnldWH/5/
Vdchq9eV5all9e2yfLes7l2W75bVacvy7LI6/K+tn5GdA5LVRX9tXYGsPkFW
VyCrQ5DVt39tvcTX1inJzlXJ6s+/tg5EVk8iqw+RnYuRndeQna/52vzm1+ad
ZecaZHVrsjo3WT2b7ByErJ7tf6t/43Vu/1u9EK8Lkp0Xk9UXyc53yOoBZPUD
sjqB/y3/zvPssnNtsnx9rbr3j1YyB9I8X5DfecjuwD3KoS2FZ1c0H6d50uds
9aZ9Tp8iHPKjbn/svaBWkDK0pD3SbjtP8tGLL4b0GXtZedNvd6rRfJVw59wd
qlVeE0ryaCe8+bgZyRuDSR543QJNOlVrfktpcfuM4YgllNopW9tt+KT2EYRD
/vzyihN9991V5r2pMt9uu03yF9qE3sxviyKc7o//79xez9wxSmhJa1GDIZLk
r80rfTXunXaPA50v9t/X5/KoxyRPefzMlh8s38WTPPD/7A/8zdZkpW//X6qZ
rdHUTtMfV7c1BD1Rbp/1y9qXYzSe78+vbDA8VyZ0W1PO7B5L+B91Jv3hE/6K
cLTf4mqu2+7x75TSCTd/sdviSP6XxJ/qOe4NAA75tEe1kgIDM5Uz410CLb4J
JP/6UM/OXt0MpkF5Gj/NzHxM+MvGKyf4rHAx5V5tqW/dnET4gSWv7wS2z084
2t+X0vBowLEiNK8w35+GPs1T5/g+mj/Aqx7dnxhx+izNB+AeHU6Xbd0qhOYD
8N5TPI63anWH3jvwvGNuV9sZaKf3C/y2n7LYatTiv8BXd1328u68NOITeL3X
h5sbDJnEG5339furo+MeCYyX75sYL31PoFtKnqF+B2i8wMM/36nzcfN5Gi/w
+DytXxpm3KTxAj+78Zs3npe1eU51F/m7ZNrHP9TuDVfx7pfuhji+14lxAd+5
bWV6nQUuJowL+ML2o9b7+RUwfYgLyii0Rn9vP8YFu9F6+fvUK6MO0biAX/lr
+0eD4RKNC7jp7vTSFYPDaFzAPWwZKw2G+zQu4E8jYrsZDNr7ovPZ86vs97z8
msYFfPSGf0yGGQXpvfC6EYyL4xgX/IUeTiXyOBuO0LiA9x7rXcbJEEzjou8D
rw6deMRyh8YFfHJ+1xYVzQ9oXMCXWd6VGPlzAo0L+C+rt09w3P+McXH/BeuR
16tgvBzHeDmO8ZKfWLldbKWscWK8wLt+LjU79KW27oBPcflr3o95Y2lcwJ1t
XfPEN0qhcQFvsbdeXsf9HphvvB4G+ofjGC/HMV6OY7wcx3jh71a9c6Ln7sDT
NC66z6/o03UOfY5xAT96qPiPX+phXm+DcXEc4+I4xsVxjIvjGBfHMS74o2//
PZ85xO8cjQv4vJ1tS0XZ0mhcwOtNWbPJy+sd7Tu8zgfj5TjGy3GMl+MYL8cx
Xo5jvBzHeOEXLsnb5a1Tlp7BeIGvOfvHdMd9g5iHvL4I+y/HwQPHwQPHwQPH
wQPHwQPHwQPHwQPHwQP8PL/qLW6GfbFOgd853yfU8b0k2Ce8Dgr8cBz8cBz8
cBz8cBz8cBz8cBz8cBz8cBz8cBz8wG5PNe8q1MArnPgBblW/N4R1weu4YD9w
HHxyHHxyHHxyHHxyHHxyHHxyHHxyHHxyHHxyHHxyHHzCj5hYrcEhx/1F4JPX
p4FPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNPjoNP1IVNGfBk
RF6D5jfxejzwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHwzHHw
zHHwzOsPYedwHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxzHPxz
HPxzHPxzHPzjN6xSgLXv6d2aXZ2zkeJs2KBUObcoIXjkGZr/K4b0KDbBPlvZ
smXBUYPhCumZgpMd94LtUzJatp5foYIWBxh7pen6aNsWZcy78Il3PkSS37e6
cYMOo+0rlfSY3gVWl3xAfnp39zln2psHKlt2tPyji4fmXyAud2HYmHluLslk
71WrvKl2e+s+pa/XTcP1BZp/fbjC5oQR9q3KHOE3fVbAz+6E7a07WHcpPaf/
nhQSUpj8wdknYs8dsZxRXs+q6/Sl/4vflNuhr728NP83drHJvMx4WBnb+36t
5T9cJR6mLRp9zGo8qxzrMdc7TznN/62a28N7mfGU4h/q2e56yH3iofvzFu8N
hqOKT9XHH/c80fI6iAP1F35HKo3XdbBrhyOWs8pvwp/KoHHF5tviUtEcpPNz
m9Te5eFvv6K8Fvan5ud23dzyjdF8STl5tL992OdzNC78+u46OXF1yes0LvzO
7Tnec3WA5ue6hre6YbddVs6cSd00e4D2HSzE4Wb+UbH80/Rn1P+Z3m2nma1X
lfcrwq4kvs9B/uy+ei9qen57RTc/e854+a3BEKZ8M6fFoy/92avjplU9Yrmp
LDo94pv6Xhep3zEpRfP720OUX9elFKxoDqV+HynxarHdFqYsWJ2Uq8zle9R/
/NqEH6HFkZBPaSb8Iy2ek5Hj7F2LPUyZUism3/WOBcifTem+8LDRHKZbdx5/
rqwTuSlUN66iyUu+N1vDleTcuz44feHP/rep9x6j+Y5iFffsXaFx1ehbpZzB
cFup37nBQsOMWzSuMX8s3WE0RyghPn12GwyaP5vxXZ9SBkO4sv9VxzsT3sZR
/48P7/vCZtH8VvR/65lqNy32cF3/Q1O82pf3Dtf1P6xLrR5W431lWu0/wr70
T/u4frhssd9VTp9WHuwMvEb9rJ1S67zFfl/JXX9jhZMnHlE/j2/+4GW23lNq
CX8nifo5LvxjfoPBrgxxxMeCPMg/dV5yeYrddk+nD0vl7NfXaozU6cOBVa4k
2Sz3deNa0C1s0K9X7unGtfD4tZF22wOl0vGqrb70Q590DYmyWR4qK4X/ovmh
4wus+sFqfKDUb7JmkSEonfpfzxFmsz7U6fnT735ZaTQ/0On59gfr5DYYonXj
irB8mmC36f3rsksHOxsMD3XjanfSf+qBXg9049qytH5r6+ZHSoeGA59/6Yfe
ia7/MTPzkRK7++I2g0GLs+GX9/9UHae7NssjXf9zFByyxBis96PNT0LaWY16
PzptitMiY/AjXf//dJ99ber4R7r+52iT45YtLU5JEv7CRep/PWuOuUZzvHJg
6arWjnWK9cvPs2Bfrju+wRC7Te9Hh+cetsviq/cf8cvHO+BcgzJm9zjdeLet
XxNus+j96A51Q0uZ3fX+Y8yln37eeCZON94BH8L62r0fKzdu3Sm8+4t1tKTN
LQ+z9bHyYUytiz4+Oageg5+vgX1i/mHdd9bNCToeFldzeZWZqfejvU42amzd
rPcTJwWse56ZmaDjAb+ch5w/DRtot+n96B0J67ZZfPV+YrPfv024lEfDMd70
Dxv+s9iT1O/POpM/6HU3Vy+7t3beB/bDaeutq7Y0vR/NzweBn21Oliu2tEQd
P2kPbs0wmhN1/CwdmfuSLS1Jx0/kD5ZpRnOSjp8y1W97Wzcn6vjBL+cHv5yf
tbVfjHrSJUnHT8e9I2pZjXr/bumC8MeZ07XzSuTf/frdeotd7y97tv2vh91b
7y/zc0/gLaftOx+7d4qOtw7L/ivgyKNw3p4aI7ravfX+XQPnpvnN1hQdb78/
/O+8LU3vL589mXuK0az3lwd3anrWlpai4w2/nLfAQc1O2Cx6f+2pafMYY3Cq
jrcGZfPVsBpTdbxN/jgiPnO63i/m57nA26Bh+WIzp6fqeNvRduRqi13vF/9w
b/PDzOl6f22ZLd8qiz1Vx9u9ZSM7271TdbyVGxWRx2zV+8XnnfN3snvr/bWf
Vy2eXz9ea4fiDNdcrRZfvV/2y+y7zmb3dB3PuUoUaGe36f2yjq9HG8zuer/M
euvuUZslXcfz3b3NRhmD9X4xP9cGnoPK3vM3BqfreM79qVllqzFdx/OOhWOG
G4P1ftmzYfeMVqPeL/Nup0RnTk/X8Ty14pYVFrveLy535N79zOl6v+xwx74l
etbU+4/dQ1/VDrLMV1I3nq5imKHFt7dXb3wp2PK7ctnxPceiryk+fEhxWxBt
262UdnxXsdpL2reqbbz1ywnLGvU7nh9JX1dPz3F3pTFA2ew2rpxhiZMJ+OEp
+Ws4G7Znf19jnzPlNXb6ZlgbmkcrG++9rOC4xx7jquYZvNnFsESZ6PjeZZAr
yVe7E9F1mXG/ct3Rz/B8ZOcv+9X7VdRPq8n+xPsK7tp6h7/9uNJxWL04S+nn
lId9v2vXU4PhpDLS0b7pOY33Q9Oxw6Nsh5WJSefuBwZq9nlgg3vOToZDylzH
vfQd35P8L4+arTRbg5Tj4j7ht8TPpA6ByjLjMWWlY7wmjYcp68Z7trceVX6d
Nm6l3ZaLcPOA36dUNJ9WvnHwnJKHxvXT9zM3+T7Q6l4wbxudGbPUbD2nTD/c
fJpry0Ttu8JqHcRccZ95Ovm/q+Im/2c1XlO8HPefh6cQD1GTo+eYrZeUn06U
b2CY8YrwV5UL77QaLyupjvuTD76i8b56OvZXg+GC0mbQ0SYG03vip+PwbYes
xvPZ9/NvyCT5qAOTgu224OzvFAR9In7qvy102267qH7PNLc2T8qPb37EclE5
VLd3GUN/N8JL/znxudF8Jfs7NfvciZ9vRn5yCVp2UbfeV5cuHmc031B8r/6d
5bclkF9cZEUlu8UeqkSL++ETiZ99S/ZcsNuuKfdzhSz08npCfKLerLy4X/oF
yc+932uY1XhL6eaY/yWfEW8/dSxxwm67qVzoOnGc17L3hNs+VRxhNYYqVRw8
xGi8Xfg+NtFoDsn+jmrRnCbwVq1FrwybJSz7e6bVcpCfsvtKe1E/vkbMq8LE
T80X+8aarTdongAP3tHTardpdXfQk72OLh5sNd7JnifV4ogf/B6/seMXgyGF
/r75+fwrmyVcyS/ux35CPHjsf/XRZrmldN4y29vQ/xnxhnpFMd6sdQH5Vi3f
zbTbIpTKDry8Nt8eL6r61ma5o3yYGz/05ksDrd/Rg8/PtdvuKKPFOnUiHtyv
n/M0GO7oxjvL/e1Oozlcty8U+6bmdLvtrjJS3IueSONq3e/SZqP5rvKbw+92
fUb4fL8BBR35adHPLP2AcdH3CcX6yqBxGXat+NdotisNxfr6QOPa+PaSm8GQ
5Q/2929uMOWlcdW60X+j0Zzln4r5kJfGdaNBf2+z9a5uH9xce1BXqzFKUd7d
GLoz8C7Z7X1arcxrMEQpEeIe+Fjy6zcPyVxmND9UJoj7ye3kV96ad3WV0Ryt
/OCwe4NSabxOVwadttijlKUzx491fGcBeNubGZXN1gfKI7Fe3tK48Mv1bYp3
xgmLXcMpzuW/+nNmZoxyf/DQV444HvDxresvNpqz/HbxXe9b1P86HQ02i2+M
0rJK+T8ccTyMd0FEwFKjOUbpKOz2RE1+6I0IW9ojpb0DN2lxgLbvve7Z0mKU
v8U8f0nj6rvKMNxui1GstabcdcTxgDt73ihvtqrfGcmabxjXwnhDBbP7IyVI
PPcxjf/2zevD7N6aX4lxtfv217+N5jhlQslu6x1xLeB33jt7mq1xynIRh4mk
/i8y3Gxh3RyrjGs4N9nHJ47Gm/L30LJma9Z7Fd9NSNfkPf8dZPeOV06K7z4k
0ni37Hb2s3vHZX/3LUvfYlwnO958l5kZq1wU6zqfCXj/0LW7LXb1eyUmLW45
YX7DAY7zHRXE9yAuU/+3RjYsbrYmKKt2Hu/lZHhAeL09YdstWXq2jPh+rhYv
yjEw7EXm9ASlv+iPKz339F+/NbEa9fm7cCVXeub0RGX2f9PG7w68Qe27LMi1
2WJPVGrMzJHp4B/4koEbGliNScpqwafGw4BiG6YbgxN17Xu9ujPZGJysVBHj
iqR2BprC61iNKUqLen4dHN9HAJ5ebMQ5myVF/U7cW4prL92+KbfZPVX9bm8i
yQe92nTKZklVgkr/tfZt5hmaDx2vff+j3aa3e5/2Hr3c4puuwxvO8jv9g3W5
ss/i/sflTrtovh3ut37WcuN/Sp6ar5z9fdMIL+rh737Mskk5Lb53o+FUp/fk
2RmHvYx9B/Wl0VEr+x7f/ob2a8gnFY/83fueZu9B/m/35f/6+X0iew/4+l2D
yhvcNLsO+OJ/KlY2zND2d7Sf+UNbw5GFWj0V5J+2Mk/3y+VG7UD+jucvtrlz
85P986d91El/+4Esf7TtUHNXre4Odb81xHeUUkg/l3c3+RsM55QA8X0cbd9H
Hdd/k2s3fVE2kXhAHXKjxNanax1/TXxCvr65zslax18Qn5Bv4bnFafTaj9QO
5DstTm3o+G41+IT8qPYJv1njNfsQ+OmuEfsG3M1NPAD/88Ce0oYNml2E9htN
bB/g5+dKfPI6aqy7Cu2j9lqNF5UtDV9nOs4hAN/zs/tMs/WKkkt8j0mzB1AP
dvWbYkvzH9J4Rp3v1uKnC/1VSLN/gO+vHpGrzT+viGe0M3TLp6x9RKt7hHwZ
V6cKjW9o+ybkZ/1WseSD6DfEM+TL/topyrLTiewlyC/auvizxTeDeIa8ybPm
QC+vPMQb8G3CTylMPPM6fMjz8wLgmcvDLuX3KQFf1bxho65Hb+jsk6br4/+x
Gm8qY8V3rGKIf9StrRs7YHPxPknEP85TvEqusG/ChJfEG/Bpj9//43P4PfGP
dmKatLsQ1+gZ8Q/5dOEPavsd5F2FnvlM/EN+oMiL5SH+IT9F+E0uxCc/9wE+
+TkU8MnviUI7fdeebWW23tL5vwfqn9tnNN/WyX/oUf07szVC5+/jPE7y2yuP
A/O9IJ5RL/eylb/r6oA07Xtyqnxo1L+H7bZ3xDPwTsKvdCK9RPV+Qi9pfhPk
Owi/SbMDIf+z8L9cTOAZ8hkin1WE+OT3XIHPRe2Xpdksd3V4i9+XX7TY7+ns
yaRLFxuZrZHK4bLm0usTtTrG/+zvntoskcovwt54QPZGUsaAyXbbfeWosDc0
uwV1dw9mV63//Gwk7b84F7bgs/HN3LmavQ18dv8tK3xWPKP5CfxP4c++JXm0
v03oqxf0XqgdkQfU/AXg14T/lZfeC/VT+Heafqbvuf3wV6vChTU7FvIZwh9x
o/fCz7tBz/D7wcA/xyH/97rPP1qN0Tq7seS4fx7ZLNFK/xc3nlc0a/ZP7QrX
XBx5uJLCvtJw1AcO+y/ub0ddPd4jzh0eH9V1rMEQT+8L8pX/TGnmaoui9wX5
fbN2mvzXpBH/wPsKP/o1vS/g3YTfZ6D9Be2fEXbmB+KZn5cEz/xcJ3jm96Gh
HfzyOFtyfy+L3TtGJ7/wxZADFrvePked4YRD8bVbt9LmP84dlvOvfswRbwZv
kO/zXa9wRz05eIP8IZEP1fwL4P7CrzTQPASec78S77BnII/2Vwr/y4X0Kr+3
Dbw9WXVzj8U3TofXdZid0/V5n5KRQ+/Y0mKV0ssTigz10/LyOEd4VOiBeJpX
qD+sMvxzTacsPxj8QD6fyLc+p3Yg30r4p0k0T/h5aoyXn+/Guub3yGFcHEf7
/R/kaGbdrOWD0A6/Rw7yE7fl/NMY/FinD3HOzyz8zXTiAXWGD4TfGks8QH77
k9NXHfXbaJ/fU0f1hIeHu5utiTq8dOMml22WJN37wvm5jWP9j9b3CqP+AJ8i
/MrHxD/w0s9WTNpZ7SPJo65v2+93L31ZD8zvu0N/OA75M1f9Xc3uKbp1hHNY
Zf9c0b27zxvih993h37mupV3vDFYyxdAfmDvTV3stid6+fTIlRbfND3O7rtD
f8ruGN3ebkvX93O6a1Rmpt7PGsTutYM8xyGP8y9ruiXEBiXspHwbP18A/c/r
8LGueV035jmvf8a84vXANH9YHSz44fWHGJesvi6/Or54x3frTIXJjjUoL8o8
HLJNZ98ejVwSYx2zV7cPtjnUtmeU7ZRyzFFfM8OZ8Elq/ZJJfL84B9l7Y9X6
KN6+/zn/10U+n9Lhg3P3ezLe6axuv8ir1gu9cXzX2F177pqdD/o56sneJ86f
7eOjxdmeq/Out8hfaOeY6ql1Tbx9k7oOFor4v9bOIbX+h8t/UutkQkVct6jG
T+Vqg6zGcB1vI9V6G97OUbWOhcdvS55YfdDi+0hpXcmeb2fgK61uBHUuIs75
ltZjKfU5dhEnfEHyE0b8arJujlM8fKd3MJgM1P4dtW7BKuJmOUxoZ6Karx8v
7MMMaqeemt/ndWJn9mx4kjk9SVm2Y8+lbyvcovhJTpXv8mI/0vAyg0ZMNAan
KN49xh12zrJ3aJ2qedhVIi6k4b8Xb5bT7J6mXBDnAt4QflbNP/4s4jNvKV4R
qtbXie99++bU8lBztzw8YjmodBN+opZv2qCumykLRh0KKKn53f3UdVbFkRd4
XIDk26n1b3Rvg7re/c/uXWs1XleaGqo4+du1/MhKNU8RKL4zbqD2I9V6M34O
qNWQdt0NBj0epNatcX8q/R9zrSOW67r1Xqz11C4Gg+aHop1mjryC4ZZOLyHO
f07Elz5T/8eYXw+xGm8rJmE/56LxzsE+L/JiWvynslpvxv3Buisv9Lca9f4a
fm3bOrVy5KfwN+Lqa0U8R4tL49+fibyVZkfVPmD9w26LVP767XlVx3c5gbdU
4/8i71atCNknyaXqrDGao5Q8Ih7yktpd8Gft2marXfm8z2G/fSQcz/cR+SDN
H4H8eJG/KEzPfaK2z+dJ5uXsODzXA8V6BgdZ7Fq9FvA7ajyf7y99ptTrYDU+
1OHt1Hh+9ANHXiYXjfeW+u+uIr+jjWvzOD+j2T1GMR5MbO3IzwJHPFx8Tzk8
H40X8tzOP9ls6FC7d6xu/6qj1k3FivxCbmrfuVqD/RZf7d4b4LB7OV7qpffr
zOnxun0w9dC/N21p8crYf7sFO/JZZK/i/ITIjzwhu32RWr/E7dX2vjlDbJbH
uv10AM6rifyFln9p/+vw3nbvROVNzlobDYbXhJdW63ZOCz/6LelPl2nri5jd
E5WP4vyjG+VNzqh1KZWE36fF/7eX+S45c3qy0n1FqfuGGa4m4JPU+pbeIg9S
mPS2y/Y7F2yWZJ3d5emTJykzM1nH2/bGefOZ3fX2WOSEjbWtm1OUkCbbrI7v
X0PfdjgVcdqW9kQJ3RPeo4ePFp9/2im/iyMeze2oHaO2dLB7pyu25lcmZdmb
FB/j91pAX/F7NqCv+P0k0Cf8vhTg/D4W7L/8/hmsL34fDvmh7B4hzHN+3xHm
J7+fCvOK35cFnN/HRfssu3+M7Gd2Hxp4hp3cWuyn6VS39O6Z17k/7h7S8ZyR
vG1xRbNN2eDYB5YUJbxjq0IRRyxHlH5/rbseOFmTH3+p4EejWf++1o1pUdbf
ruF4Lj83jfcoe++6e07U99XDY8okszVE+XZKZnhAyUKEJ472jbDYb+na5/fG
4P2um7Nood12S6kv6hYKEd5bzY8/ioiZ6lOxCOGYV9FrPmTavi9MeK9n1bcZ
zZG69kuoeWfef913wNV5hXlYuL6xumGGO7XD5yfk+f1RmG+Yh7lrd+jkyL9g
/rQr6vwhc3qs8velkeMc9RvAtwaHzjYGxysDv0n12JmSi9rh95hhvrVTGu60
2OOVLiIfqtmZ/VOH3bBZEhS3vivXGgwftXpgdZ57PfjrsyOOiufye/Agv/Vl
zkZWY6LiK9rPTfjpDY197bZE5ZYjvjRD029YF6XEc/OTPsR9I2UXPkpxnBOH
XoJ/lC7OrecifOnqphOM5ieKUci7EF5GrXM7IvKAuWk+83tdgPP7ZzAPF3y3
NcpuO6usdayv8h6EV+gV497eelIpP3qWp6G85n/xPA5wft8O2nEp8KiQv/2q
Dp+bEdj0iOWyTh+OnlfE12DI8td3n6locCtKOPTt+T3ThlsPFSGcryO0z/Mj
kB9Xs3JbszVMN/8R5z8t/ER3kuf5AshDz1/Zk9p89gDNn5Lpeb4vYL0kBL4t
bjBEZNddBLkSHqbWt4yZ3OteQM/8hGOdthB2u6ZnZPsIvzeM7vcosqKu2arf
RxaqdSZ8H0E9SUWDc0TgcTfCsR8Vc/hr5QsQDj3wZ8lSp+a286D2+b1wZI85
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
pjaq7/WQ4hHAOc8cB58cB28cBz8cBw8cx3g5jvFuVuMkO4Zbfhnqd4PGCzzV
60XhdcfmNcN828zuacF4OY7xchzj5TjGy3GMl+MYL8cxXo5jvOPVOquaA/YH
dPfR7jEH3uHND9f35V3cDOtuPLtHBTxwHDxwHDxwHDxwHDxwHDxwHDxwHDxw
HDy0U+OQHS+XaLsmS1/RPewq/s+9U2euWZfRPAfu2q19Hsc5PuixdqyuFXqM
4+CT4+CT4+CT4+CT4+CT4+CT4+CT4+CT4+CT4+CzlFrvcUDE/+OJT+DR165u
77NkdTPsC6VYfQj45Dj45Dj45Dj45Dj45Dj45Dj45Dj45Dj45Dj45Dj45Dj4
TFW/h3xa7NevaZ9NZd/pBp8cB58cB58cB58cB58cB58cB58cB58cp3t1GQ4+
OQ4+OQ4+OQ4+T7uNfpCZqdULgU+Og0+Og0+Og0+Og0+Og0+Og0+Og0+Og0+O
g0+Og0+Og0+Og0+Ow5/Hb76S085WGX9AmarWYQMf1mSWrfqqi4pNrWMG7mT8
pXMpd7syWq1LBr70fW57QMk4pZZ67x7wtRuD78Y1SlFS1PvsgI8tZF9ltz1X
6qr3qQG/EdFmtt9jgwn3jgFv4ZbzSuKkPCbczwX83t8hRwICiphwLxVw2JO4
Dwg4eOil1mcgPvDh06FFfcfup7/x638jcOeD6ItUNwC836JOHa+HRFH+D/ie
ihXGXTsQT3lu4KNHehR6EP1SKaPe08TjErhXiONN1bp5xAGmnXy6or7xkjJH
zasB39BzQkv/rOe1VOvIgaev+RTu+F71CfUeQOC7p26+FRDwRrGq9zrxOEO6
eg8Rx6PUuhP410Wffe4xxO8S5XG53z1QPS/B8cl5I8cazal6v/XUFiezNV2H
4/vy3G/qkJh/pNGcrsP7Mr/poOo3bWX+zlDV3ymr6g3gJlFflKRcU/UG8OqO
utYsfT5H1RvAy4v8oIuppao3gGMe4m/8Nvro+H16pq+qN7g9f1Li15SS+C8T
JX5KhMQfwbka7l/Ul/gjZ1Q9wuWXSPwRJ3W9wW7/JmiRy9CseTJR1TPA434M
veZYRzgvATz0wrWJDv8R5x+AB8Q3X+jj42aqoeoZ4OcE/0VNSaqe4f5CHVXP
cHyRqmc4nqrqGY63V/UMx7er97tx3EXVPxxXVP0DO//ApBVmBz/t1PUPfEOe
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
OV/23XxooO2gES35a8G9xpQeWZlcYjwo56b0fGBO3y4zniLsFdufAvF3oX9T
P27aNumf+o2RfTd4U0lU+aH0Eo3jyfYK+2LmkeLvgl4tzFvgsSxwp8YnZfum
cUWJYx3IHH486Hl5xpcf2WzO899sJz1lncx20l/0gXmQ7KOZbxQ9wXh0b/Rv
P/yPfHpFH9jenpT1KvORck6SeaV8Z2E+TfSKeSPyJJE9h/+Webzs35njN/M0
+a7HvEzWjTxfxIofmHmq+J+Z2+QcKfMCOd/CHL9dzoHLPpHnqS7Z5zI/JvrK
PEL278zvEL8B8zXif2B+XvwnzKfKOGKeKOOI+bnZs/xzw4pd5tkA2UczbxB/
AvO94n9g/izO0/C9PMnnyvyqfPdxua8n45r5ARnXzAfIuGaeIOXCnvef67Yb
+K4E3p+/e4D6W3Q/7fgO1W5UifzBvR188MwE0U/Y5/780R0aJ1HPOTv8PI1G
nDwP7n3m2Ix1+/4y9sv+CHZvtSOvx1Xjuugb+Afb98wtL/vVGCX2B3yb5Cn+
VvoX9s3+wZV88/8esW/gNZJHOIvuT62X+1Mn5Psgnu8//9xmfEPngh6Sc0Hn
5fsI7OT2ngXrzpaVGQ1SH3BHPmLbZcNX5gXYw30Of2yl4XbPf/1ID4ofaYfM
U7BX1Y77X/XG/12XvibvwXjPdfiTfzOWSTuhD8kOf9QvGu+V5yN873aJXyFy
AO87NS+jzjyfTffXKuT+WqLoJ88vUaKHPF/Ei16xvcqWcln/sX5w+d4h8wX0
tlXy5uA+Jq+v+kR/IOfXJS8MvvdhvXFO4gKNtvg+EmURFwjjFONiq5l/p+zG
mV7yG/J819EvHUacPM/rTKv9zjHy190tcQN+FP2EPIMd+jli5jqZl53ynHq+
q+So336L8wYJdP7tfjn/NkLqj/7tnGLGaR80s1LK1e/4TwUXmuPa6vvp//Ub
WPk3EMcP+vDw9ZyKtFlHNH6vrntvmZw7/7YijQ8Mviozrqcm+GuNVww+LH5V
dkxUtcZVBveLPJzhm/295hnR+8X+iVsWdTRq3FLwaWMn9967oEXzrID/Mqwp
ybw/hjhy4EHd8ctrgu2a9wd859m0sbaGgdpe2O37SocNmHryqLYXPCXusxdK
Yz7X9oJvzku4dXHmGW0v+KfPP/Gej0+tthe8ILQ94kzWZa0/+GOx8Quj269p
PcHf2vu4+6X6IRp/HuNu1botqXMfKNb6gG9dNKumLfys1gfcY/mJ7tq1l7Rc
8ANL25/x8XHmuca4W+I/6O3fA77U94N7r5xYu6vpnHKMx/HDQ7eb+XwQZ4/t
IeQMvZ1cmf9sRnqhlgv+suSvxPvBfSRPJeQJfkLySyIeII8LyJM56sl2AJyf
R5xA5ogTyBztxbgOjHihOzTkC20veIjHiv0F+Re0veBZj1a/ZN7PQn+x/Yee
u8TnETkw1/jPxNFe5mgvc7SXOdqF+ajipjszxgdUa/15ntJ8oBxvR+rPHPVn
jvozRz2Zo56wh5NHPdkcFfm91pPXCagnc9SHOerDXOOE03oD5TLXeJjEUS5z
zTtmkc+R1wMaP5Y4ymWOcpmjXKv38/4C72eO97jsR+Q9LudI5XnmneS36RO/
DTjsqufCkvbiixc0Xj3s4ey6vQ8lTMnS58Fb/EaEt/1apc/DHm48N+2HDeez
9Xnw1C/Cw/5YX63Pw06+W3Dt6btLj6sdUH9LSVFknZm3UN4Dbq9aMLwup1bt
OXj0Lffs+MSzUePns78F5cIOvzH6leAd4/K0XPC+K2/Ejdp8Wt+v+4Vnxh3x
er5Z51/wrbKPgH1gO4/6WNl/2Nu8xAvevu75Wh/wmz9pOPBUYLnKAbxK9iOo
p8ajm1253oxfqnk3yJ5Db5lrnHziqD9zzUdM9gTvYY7nXeJoWfhhNI8ScdSH
OfqFxzvKdYk3JeUyR7nMUS5zyJ/HO+rjco9e7Btz1NMljpPUkznqyRz1ZA59
gz3pWvxc3uH0ZmceDbIzmh+EONrFHO1ijna5xFOSdjGHfjJHe5mjvcyxfrCy
h8whB+YaP5w45MAccmAOO88c8nGJjyTyYQ75MId8mEM+VuViXhj55H0btoX+
YYBjXjh4cEJk4vI/1e7B/u8ou7b74dedeerBG3JTckZublH7A94h+2XUk/fL
qCf77SF/zCMpBzZNyw1r1nLBP9t0/y7f7FZdt4Cvb+7eHXi8W/dB4K2phZPM
e8SYN3nfjXIxj5SEuqfPmfOTlgu+cmXNV417run7wX82854UOfNzYX14Ufzk
Xhb+cIxT2LfrF4e5ZaSfVvsPHir+BMwXsEtrKP81+CDJfw0O+9B7vG+XLcZT
44drfKrMtgq/lj7dv4BvnFj2Q9iSodqP4Fe+aR9te99D+5H9J5Ab9Or9OUnz
bUHNKjfwGaPcFn1b2Knlgl86OsTbfD/6BXqydvChiIB3Gp15Y4XHBn24M3Dn
dX2Plb6xXwV2QOM5l6bk1+Y484WA21t8jkZG2nW8gAf5VtjK4werfHgdgvow
R7v0Xue4Rs/kpDYtF8/31C/tDavt0nLB3c9kBVcUe6i+aTyHr5qmmOt59Dv4
S5VdmcVTq5Rjfk+8nHHKO9rplwBvGtE6ITfMrnqI/d3q29v2lb7qnEfAjx/z
esK8x6p5gizWD7xvgv5jXNy+p3BD57/23eDPvbP7LdMOQD5W+wvmmieLv9dI
ueApkl++0+K8uua7t5h3rOY1l+90IgfeL2NcW80LGBe9OW51YXcN1LwA0PP6
oE1Puz82QPMUQM6tJ988MueUMx895Fn4YubNyUl27Ue9jyP5vKDPPF5gb6GH
vT/2dNujnXnQ0N60FTGP24p+V/sMvqZgUlVStzM/MvhwyfOI90B/FmcmX4mN
7dXxznLTfGfS7/OL+u81aJ5H6nfIGf2bcEPp0LE+HbpPgfzD57UE/fnXd9qP
LufbpV8gnwLJ33eXRTwW9JfVeUK0d/q8iWkhzTeovwt6tWKpGae0U/1j6PcZ
nbFbQtY68wbyvAb54/17hjb1lsU78z6zvxTyh5yzKZ8d+3U1b7Lo29U3O9zC
lwzUfBDqd80fP2l6dpvqoZ4LXd2fVwvyR78M+fmn0gkB1Tr/4v37X/T0M+cF
yJnlqfma6ZyG5oWX+sxw5Ne7TeuP52+V/FN/A/DvIok=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAncDtX7xp/ned+ZeWaeeSOkImsLokRJaadFJe2bolJEpCyV9lKhPQpt
SrYQRYtW2rQo7ZtUKu3RJtHK//q6zu/z/3yM+37OnDlzZuac+9z3dV/nbdb7
nKMGlQqFwpKoUKiSbJgWCptKvo6sFApNy4VC45pC4ZzqQuG9YqFwruSOKvtI
+udJobBcxyUq215lP6uNIbp2lsru0/kPdFyh3x+ovKvk5SrfKS8U7pacJTk5
LhTuVHkmWUfXv6v6n+jcQN13g/R1WaGwQP24Qe3vqvpnqOwHHX/pmu3Kbv8z
1V+mo5/q1KjsDd2rk84PVtneOv+mjsb6fYrOvyX9VMmC7neTxHP0XfV/kn6p
5KM6t7v0xyQ/1jneS1fJ13XdEh1f6PdDJeuUna56b0ueIdm96PbbqM7bmc+/
JTlM9Q/R8Zp+D5W8WXUXSy/rfnepbio5V7/X67hDv9dm1v+Q/Fd1b1TZf5JD
VfazjqKOn3QcpfJPde2wUH60fh+n379IP15yia45VmVvSA7R8x4g/X2VP6ff
B0l/vtrtFHRcpWdcpfv9Kf1fve/Vkqfp1DeR9UTHbapzheRvvEO+ZdBjHctL
vm9Jx0E6VuhYpTq76frNpO8u2Sd8u/1V/o/aaib9VckGGnQlXd+cd6d6DSR3
kFync1tKn6Bv2kF1/pV+g659quj6M6RfInminuMEHeN1fK+yCZIbdG1L1TtU
1/4nfVvp06TP1nuYqTr1JRurzSpdv7XO3a7f16t8g+77q97DPyr7RfIbXbtS
5SdLdg3P1Uq/Z+gerSVnSr6oa1pK/zf2eZ7/HF37m8o6S99Osn9muUzvdkuN
41Wqe7Lk1br2cfXhGslM8gDV31L1XtDvFpJ/893Uzw4qz3l2lTeUPEzP8mXR
9c9W2yclbv+X2P3tovItJPtkHvsf6L4Hq47+FeapjbHqd1n3u7Xa84N5crL0
B1R/U+n/qH5L5qHq3yd5k8rqci/9/kl1JkqfK9le5y5W2YOSt+jel0j/Q+23
V2fvUdmZko00l59T/ddUv2/me32q9o/R+c2YT6r/vI5tuVZtHK/ybRjLkqfF
Luf8PerfJurzvZL/Sv6ldurp6KE2d5B8W20+qvLzdbTR75ZVnqufSN9D72uZ
5Jdqc2dsho6v1W5vXdOL96U2uqrupypfpN8d1O83VfdJyS8kR+ueu6mNbdSf
J3T+XZVdpbKlqn+15DeMFdqUPEt1dsV+qs/9dc1MtXsW3yvzfd/VPSdnfper
pO+oexyi9o7J/e6vK/q998w8Ft5RnXfV5vvS95X8QXJH1dlcslnFff4i83O/
Ib110c96nfr1sup8paOtfquZwua6x1dq41jJLXR8K/04yUcjj5ef9fsUtdWg
4H4enVj/QeWnZR5776We27sUfW5+5H7+qjo7qf5F0mcjK/5G/6n+D7r2D+xU
6nc7S3WmSj9PdZrrOw2T7Kh39ALfEbur30Okj+W5pM/Ws+1dsS0aEezRo7rf
JLWzqeRTsdvcQnKI6h6kY5HqPKbf96m8juS1vI/wXp7W7wdUvqXkQh1zpG8l
2V59qOh50tRrEmtTP5XVVR/r6HhY12+v/ndSH6+U3LLKthu7vV7t7qH7bpCc
omsnqiyXfDasj6yTc8te1/6SPl11d9cxD5su+bjk/brmJT3z3ZKbSL6Mza32
Ort/sJNPFm07n9AxnW9a8bW3qs/P634PqayJ5As65kpvKjlPxz20Kflg7PYr
kk0yf9ufco8NxlRztXO77pnqXndIvsr7VXkLydd1PCN9e+xn5jFzkuThiecT
4wn7xpxtpXaaZbZjAySnqq1aanOa5Bmq15ZnjTz+6zOWVb9pZhv2m8rujO07
rIu8Jj6kZ3xWcqbKx7KE83zhPdfwTDqulP6X6k+UPgL7KX2S9KtZQyO30Ygx
gG0s+90vUt/vUZ2rWJdU51L17zGVXyY5NfgJRcnuuvdeqpvLF3olfKMJ6vPT
ev9r1VZTlQ+ueEycKzlN19ysOiXJGTrGSI8kUx23F9zW1LK/42Yq65z7247D
Jug93Sl9ULCn2NWdVX+17jtD5U9KPpb5ORLJlrq2HXNOcrp+n1PwXNtWv7dW
eX/JnyK311q/71L7txRdb2rm8p+Y15HtUivV2VrXNMWvkjxd505hzOi51qvO
taztOrevnnWt2hkT3uu08G6fSix3wa/QvX7HTupYjR/Hb8nVJV+7iY7vQ52y
jpuLthU1Oh7OPAY26P676L7/qF4HyV1034klr0M7S04v+h09qvsNr7ZPeKre
bVud20Zyvyrborvxa/T7Lsm1kdd71v0zVLYm8Rr3kOQEXbd9yc9F2e1h7XuD
946tqAT7WrSN7VT2Gre1vmMDnXtW+n2p/Q7KuWZX7EewS/eV7ce8rnsNVlkU
ylPVKeuYKf0ltfUK311ySup1ZrHuP0DXduE9SL4T1ibWqCa6bgsdz+jaXurD
GtXpKVkvsp+zmWQzna8uuX/b6bu24P6SMyWHqZ1PJR/UPS4t2A9soXPbq2wI
tgFfrOj1/lvVbad2vpOcldnn/031z0wdH9yjsifV7ydVvq3kZ/q9sOj+9y77
+WZJ3qc2dil5TI8J8/fPyPae94OP1zPxerNa5z9mPaj2eNhO5QNUfq/kIyqf
zJogeYnOXcBckz5e/e6l65bpPTwo/S5sS8V1RqpONXZF5feqfLXKL1b5+aF8
ZKhTI72H9BNZByUP0e+tdK8FkvvryBn3ktfo3DXYfOlLdbyv8joVtzMulM9l
fupef6h8lMrHh/YfV/l8lf+r8ntV/ojKN1P5WOnTWL8y25z5+E6SY1Q+lbVP
+jO69tm4sNFBfErHM9LXq51J+EMqrs/3lD4qvJPZqnOj6qxSncHhXa2THKpj
OPZT8mHWaNVZpzoHZmFe8A1V/qLKS9yL9Ub1G6r8aekvMC8y2y/sGDZwvPQF
+LQVzwfGHWt9XOPv/Yv0WjUex69n9i2Zp/gOlRqvfy+r7E79jjQu6ksu1b37
69rl0i/XueNVvxtrYGY7cKb0tMZr8Brpd+CHaMxsJtlVfbiwiCHTu1E7D6nO
X/RHxzYac8dL/qPyy/B5w3seF97/LdJvC+98TvhGDXhe1T9a7SzVta+q/G2V
N8r8HaeG9z+bd4q/If0e6VPC9/0xsw28sMJAUHyj+45X2Yjg518leVpqf3Cl
5IM6Xgz3Xa/7nqA51E7XPib9YfXhb+n7qM6hqvON5N6MV+lfS96tOuerzleq
c5f084hXGCfSL5X+LWNP+iXSv5F+U25/Ygvda0LuNftT3qf0gdK/kP6E9Mel
/yf9eekvS6+WfE/HZ9Lr5V5H6D/PsUz6Sj3jbpIf4FurTn3J+3jn0r9TOy9I
f0V6JDlHx034Jyp/RPoD0v+UXlvv6jq10xafWfq1se1PW+m36p0cpPJdpT8t
/UrV30n63dK7qrymxr5mQ5XXkf5BYmxhC+m5yvdiLup4RG3+wzou/Rr8bunT
pY+U/qP0+6VP1LXt6JeO64m9VD5P+v3S10r/SHpv6Z8QA+VeJ5pIf1r6ApVv
kH6S+t0/2JY9Msf3NwSb00/l3zOOiBVV/3vVPyDz2ngn80Ll56j8S5W30u91
qn8ecZmu2VP6CsmJqjNcdb5Wnd10boPKryNmyoyjXCx5V2a/eg/VuV31z8Rm
Sx+n8otU/qHksypfpPIqyfE695bmVCZ5aLCN30q+QtykOpnkWzo+lr6p5Ls6
PpVel+fW8Zz0Iu3peE16Ivm2jmXS60i+oeND6bUklzBWpG8ieWtmvKOj7ts5
M/YwBj+Za/CtaI/xJ71GcrGOd6Tnkt3Uvx7q53eS60r2DcayJqXGdZizKxgf
+qYdM2MqYC7gKnvn1g/CR8XvV50pko3xXaVPZoxIHol9kFwvOUj1D5c8q9o2
57iC53d3yY81r7/U/b8gXtW56/U825X8PkclxnbqEhNGPn+s5Hr16Tzp7Vmn
iJNV5/PI3/Ocou89QtccgZ8vebOOntJvkjwOG1Lt+fKR2hld9Bo9PjGW0wC8
Tr+vLdrOLFPdNsTOkvtU2Te7SkfPsu3k5uAqqj9YZQemxpHQ6fflsWPqr9S3
Wbq+nuo/IDm6bB/wdnw0nXtB5RdKjigZWwFXaZB7ne/JGMnsU4KDPRHi7o3x
N3FH0fjMnBD3bR47NsJnAEeqpz7vXXK8Nj+z74KfvE9uDIu5Q0yKD3y/ZC29
04bqX+sa22TGxQzmhNo9g7Gtft4R1nqwgpqK5wvz5vnM9zxc8ujU76AK3DTg
S88EHxWfEzzrvuD/EwdMKdqXGK3fuyf2q5/APqr+/SpvrOPFzBIs9I6ycbA/
VWdc2b5TC8k7QpwCrrkNManKt1O9yTrXWfrOkgszx42HSX6SOb4hxqxUOQ7F
J3s1s896TOZY+8qiccAjU4+rJnp/zXU00f1nSN6tNhqpfCL4pMr2I1aS3FTv
az+1WSdyzEKf++idfJMbJ/pZ+lbSc2IvyVN0/lQd++r6c2O38y5jX+c7448l
xld7Fo3fjs58zSjsgeofrDofqv77+t1L5ddIfpv7vfxaMe4Idgz2+F3ub/C7
yt/Er1L555KfqzzSfdpI/1T6ANX5XHWWSy+pfHuVfyW9lvTdpX+WFzYCai3x
9aR/rvqbSb6EzZJexlfCBkmP8cvAcYKP9KZ+L1V57dy+0zvBj3oVO6jyiuS+
FX/H/Sv2N14I/sOHrPv4whXjueC6x+v7ngrexPdibukdNdW1L0qepT52ILaN
jUmBTSUq+zb4TvhQm5asg2M2VPt/qu5pkrVVfmzRMfyeqXFu3m2kssuKnufb
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
tTek74E/lThe/pA5k9n+XZJ5nnYLa1OfxNwXYkiwwDeJHWNjeB9J3z92/Eru
GN7BwtQ5NPC6L4mbiWki439LpR8QG6MjRoZPBSYJlnY8/lXi7/Br2XEJ8Ql2
f3JirIa4FEwV+w92hx86Pviit6ndYdinyLhoZ+6VGlPHRyK2uCVxrAvGB97I
WnmU6lwVuw/LI+OxjMkzVD5J9SpF4yOTMuNvp6bmTsFZADcE73xd5bvFxr8/
l354bLz8M+ndYuOmy6R3BWtmTdTxt35fllnuKHll5jiJNf3azJjjrpIXxsZq
PlHfBseOl4mbwTaIr/slxkPgY4H/XhE7Tv86Mo4H7wIHrlbAXsBgzi0aZ+T5
awLOA94zNDavD37frdKH4vdG5rrADzk1M9a7kPVEcnJqzgL40lth3cH+kDd4
Fbsu+WLq91MnYMafSj80dp6BHErz2Ng8PIfGsTkj5BbBB8kbLMYvkHxf7b6I
nyPZosrr0aKw5rDOse6AwcNnaBUb236e9yk5NnZO8xc9y3jp50n/XXoTjY1x
um5GYryd2H839bd1ZtziT/W5bWZ85S/pg3TtTvRL1/aV3kz6gsjYOz4b2MUF
Kt9H+tsq7yO9qfRnIvMw4GPAa4Kz9HVhY9qq0D0xp+dr1e0mfYX0FdK3V70d
CuZWnR2bX/Gy2jku3ggLFuZIP0P1fy2YZ9VPR3Ppz6r8RPWntvStUnMXwale
A58J73PX2FgZ85T5+pZ+P8s4lFwe5vheklek5jyUVXfH4PPg+xxdtE3YTkd/
9WF1wdy2AYntGdy5duQ/CsZbzk3su67S+94p9XsGbwFfAr8F9z823ujGFR7Q
f0fF5q5Okz4HX7NoDgNcU/DbfuR1U+eu4bZ1yowh/afzN+vas1S+UtfeIL2P
9O8j8wDIe8KXwDZjo4mfL0uN08bkH6rsn2/kZCTGpeFpTC0ac+Z+rEusT+St
wTyZO/urjSNj80unRF6LWJMWgMervJ7KZ6v8pNjfZbL0k2PzcqdGjimIJ3qA
a6mcMHcm70HXf0P/Y+NP+F34o/hpl+v85ql9anxr/L9TyMno/Cyd60nuRfr9
kbk72xbMv+tBLFkwNwwe5MqCuV77Fc1FY4wSp076X6wa8MH9MvN5yX9gK/tW
7HsR78BX4R3yLg/KzBMpa31fFdZo1upHwDuIcSXHlv3uwTAWJuYWP5aY38k8
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
At7WfQ==
         "]], Polygon3DBox[CompressedData["
1:eJwtnAn8DtUXxud9vTPzzryDJIRC1miXVFqESpv2fV8sibRr36RCpbQQaaWU
yNKeIoRWadWe1n9p35SU/s/Xcz8f83HO3GXmvXPvuc95zrm/TU4+4+Ah5SiK
HqxEkf5FW2VR1Eb/n5RG0W9FFC3S/4+XougSFc6T/F8tiqapvHkSRXNUXtH1
lPR20udLbqP2DaQfK/1I6RfmUXSI2g9Q29+lz1L5EpUvUnm9ulH0sfStpS+O
o+h4lb8vva3056UfI727/l+l9rvV0SV5UjWKWkrupZfuIvl11W+s+jNVdojq
d5C+gfQTE7f/TPpO0rvpOlvvsoX0TST3V/kJKp+iPnrrt92g9i9LPk+/r436
v19yZ73fjqp/sp5/rt7/L9W/XfdTlXfR87vq3pnqcy+VnyD5OJU3VP0j1ddP
uvez7t2i8qrk5pKbq79X9P9Gat9c173qa1PVb6T3OVT3f1b7MXqX+tKr6v9m
yY3UfpL0ybruVt23pC9Tf6eorIPkf/W+96lsA/2ep9S+veo0lH6C9KOln6zr
db3Prrq3rco+0dVZ8ku6d6LKGufu+35d96hsmtrV0bM3UPmber/NdK+Vyvol
/j7z9dze0lupzgLJVb337tL76p3Ol7xG73O39PVU/wnVr6v+r5F+LZf6KqRf
HfneNdJXqf5NkiuqP6vwM5gLW0V+9ol6h4l61hnS20jeWmV3Sr9M+jaSj1V/
W+vZffTsw9R2hNrcrrJ71d//pLeVvp70Y6QfwXjoef+p/aXMcck9dG9z6R/o
t9wp/UT110X9HaT+DlfZvXpGW32rJ1X/CP0/Sv3dKXmS+sv0PXeS3l/1L1T9
1ar/k95xE/X3ovp7R3JNVzPpT0h/W/Jb+j9X/Q6697bkT3WtJ30L6Ssk/6V3
uIXvr/4fVX/r631ukz5W18161kEqv1Z1B+i9pkp+W/8PUPuVus5Wm5aqo1vR
YZIPUvt2Uqao/vW6117yKL3DD9L3lPyu5PfCep8Xe760k76+9OPU/ijpQ/WM
9vrd7dX/4XqXZroeVfljuh5R3ZNU5y/V/UX6RSp7N8yXObHHu7+e8YCeN0vt
+0neV/d/k9xdfe4n+SH95s2Yv6ozVXIdbIT01upznuSj1eeWqr+vxvdQ6cvD
+n02tn0p6XpEegvVf05yA9W/NfKYjVHdptJnR37n6YyN6jzNWKj+AskXpR6/
jfX8+nq/OXqHf7Fv0p+teI2wVrbRvS3VvkVmO3mo2h+oskc1Po1Ud6ZuTpR8
sO4dzlxLbI/O1b3W+q1TmJNqO0N6Y/X3lJ61jeZPT8lj9Pzf1EcvyafpfXtK
P0rvdaza/6x+mqrtHrp3rO49rD6el75Q9+eq/Ef9v6H0Xio/WuVHqP/P1NdQ
6Ynkj9Xfe5KbqN7Tqj9JdW6QvqnqtJb8kPqbi70N49dPbRK974Oq86va3p7Z
3s9Q+WPYS+nPSn8u2P9pqnOJ9JukfyX9AZXP4ftIf0b6g9KfY35Jf1b6u3rm
EvX9ju710L2FGocr9Lsv17W/5LNrnms9VW8Tjc+EzN93tuo+rvZ3Zf6eTwZ7
F0v/vOL186vad1U/ayQ3Uh/bYysyz6cnVP9J1a+TeZ1RfxPV/0/XMuntpW+s
Z/4rfW7F3/9HyY0l785cUH8bSL6Db8h8CvZtrPQrdH+x2tb0vk1Zl6o/QXWa
SR6o8emhtkeq/BfVf1X/Pyd9KvORPQr7yVhLXy19jZ45reL18J/0mzLb/4eD
PThD/fVmraver9JP1Xg1lf6n+mmi5+/A/iJ9kq61ev6Tqn+d2t+u9o1V/rn0
T5gr0n9U+xnS7yj5G+4peYD6q9ZxG9remHl/mar6s1U/0b2RkftO1d8fut9O
+kHqo6+efZuuKyW3KXvPq9KHykuqd7HaH6J7XVVeU3lZv+EJ6fdhP1Xnd/X5
jeqpWrSd7h2ssnP0Pi30Pm3Q1deTujdZ8sWq01nyNL3ffMkvBHvRlz1DelP1
vbHe7wjV2Y29mP5V58rM+80dkh9R/fvV52iVn657u+ded6w/7NmfqnOYnv8J
76p7u6j8BF3bSj5Q9X5Q++1Sjz9jeJKeOTyz/b5bbWewn6n+F9KPkv699Nv0
/63YS/3WX3Vdhg1W/2tU5xnJ26q/DdXXeF1/qPyx3N9yBHNOcqPEtgSbMln1
91T9UZovH6jOTtJnc09lneoYz0xS2U+qX1/PmMxcjm1rOunaQ/Icfr/Kx6vf
r7Hl2AT1lav9eNYCYyz9ArV9jLmlNo1VVl/XxpKfU/tHVD5Ofewj+QXVWQ/8
VLa9fzn1t9tQ9+6Rfoeu9SU31HUn+0FufSJ7u75Xc40fePQgvc/+7M26P0Pt
R4EHJO+k/loyf9RmQtXz4yE1GBjs6U56pz/BTqqzs+S7q342mBHseAl7vuQZ
jLXqH6Xnb8b31PP6YL90v4PKZzM+qX8jv7WJrhaxcSH4sKLyf1U+Vfp20u+T
frLkJbr3hPp7WO+7ofrcVveeYX+hjuSlen4n9bNE8vZ6fvfUWPBJ1XlJcmuV
NQr9tYm9Z7N319W9DpLzmm0VNmus5G6xbR2/md++R8V4Zb7uXRPGmLHeVeVb
S/5O16jYc4S5cmHN+BqcPUvyAuqoj5W6ttT7pPoef0veXu1/r3pMGdtt1X4X
yT1iY3P2MPay3SvGSrwD77KP7nWu4z2fvf+Mmr/fHGy1fn9j9X+e7ndkT9G9
RPq3ate45OfP0r3d1f7pkudPpPLlKj9F4pUa35nSR0h/Q3Xrq78aGJN30vvu
lvr7Pxi5D/rqExt7XKX+9pe8THUWlOzDPKX+Eum9ImP+81LPE+bLROk3Sx7J
GNfx+I0KPgO+w3Wxx5M13FfyKWFtN9P7/MFY6H12lJ5Jz8P7dZY+U1evOt4v
7tPzz1XZsLLHg3FZP/N78r7jWFvg99j4d7HaNpF+mfRLy94/3+LZqvuXys9S
fy/o3vm6NzT2+NbVNYDxUp0P1N/+kmeW/b3AuuOkf8Mw697tkqdofdykuver
7sDC+G+hyhcEPAW+QsYGY4tjfd+2anucnrORvsdU3ZtJfb3LjWp/t+qPYD1L
Py34B2MDXrsm+AfIYLir8eVyt2+p+iNVf6Lu3Sv9cemjpDdR+TMBz12HPc+8
9uZIvx5/UuXv6HntsRUBv0xX+VyV3yB9em5b+4h+39ngSfAa/g/fTu+/V2H7
syC1ffpF9f8p2Tay394rfZT0u8GRqvuV+t8XW6hr18x+Cf7JSuk/6Jmdcn+b
iu5/Ah6Tfr3K75V+qvQvM7fdW9cuksfpmgjWVttrGH/WpOoP0zVW8niV36Xy
WSofofI3MuPFJ2LvN79JP1f6z9IHFfbpGoK7I/t6G+r58yRvIXm0yh+WPk59
T1PfZ0nPpd+s8ljllxX2R8HSYDCw2FOZ27+u8psL+4N/R8bUYOvHA158ReVj
Cvug+HanJ/ZNP02Nny7H3ujdmqv/N1S+jP2Qd+edVGes+vtJ3+ZdvfteKjse
nzyxf4TvOjng/Uz6mMj+5KVq+63aHCF9BbZb+t8qP0bPOpo1IHkjXW9GfuYc
sISulyQvV/tbVP+6zPjlfulXFbYPq6X3Y09M/R35nqy5oZKvUv2rGBvVv1z1
f8e+Rd7rh0g/T/pp0m9U+ZmFbQK2+to6thX4448FfwV//9HM8/tFsGDh/Y+9
gT3iLrX9MjG+yFgTekYt+D/4j1eo/sbSV0j/lD5UqaT2f0o+Sc88B5uZe/7U
Vf1hqj9a9y4GD+q6ESyiK5F8ha5bJC9WH0tV/xNwjOrfIP0e6VOC/74qtm99
T9l4qG/VWGCK2v+nsv34HpIHq6+Odf3+eoVoG+yx7v1P/R0NXtK1r+SvM8tH
sqYYO/xy1W2sPpOqfewlcFcl+97Hg8uwN2Vj5AOwn9KvT/mR9v/XquwWlW0l
fYvU+gS1nwm+Sc3XfK97I1krue0FfNe1hctXlo1xwbq3qU6Jb1cyH0R/G0iO
dO9Wlf2jdptG/s2DVHZNaiy5Qn0MA6PSp+R6kpuCV/W+h6v+VWrXj/krfaD0
U3UdnZlDeFy/d8fI3ML3uk6Sfpz6PFN9P6bf1096Ae5Rf99kbjuAMZW8Utcg
yd/pW/RX/59L3zkyR7aN5A/Vx2C1H6RrffWxg65rJb/PO6vsC9XpHplTYv1u
H/ikSGUfS7+y6t+GD3qV5Fn4VGX7ZOyfJ9Ysd1H7aZJv1L0/pG9VNr8zGJ8A
eyb9dL6n6rUA38GxwSno3h4qv0H3jpL8N/uv3u9FlS/Hl9L79OBTS/6c/aHq
vfPmsCe1rXovh1OCW7pe37ckff3U499SbQ5U+2HS/yk8f/GF4DDgMk6tGm/O
BiPrG/UM43G+5L6Fy9nL8QFPk/yZ+rle73ddxfh8ta69y8aYYM3WGoN9pe+M
rOfviw8sPcb/U9vjax4fxmkLlVeq5ht/1zP+1TN30PO3lVwO+8lk/V+PcrUZ
zW/NzffA+2ym9rer/Luy5/CIqv0X1io+/ziwlvTeZb8D7zJE7b9T/1/pfkO1
71M11sCHeyZ8j+vLtvdwUa/q2j4yR3Vo1XzV25IvYezVvlfqbztP9V+XXKqa
b/tebX7R72mY+nuci01MPX+PDPaA+d+AdYz/q+tq9hq16aBbh0kfGDiT73Xv
28hcyk56/tiyx+QO+N/YaxUOccvY839z9j9dnTNzuL8mfh+43a0z89H4ju/D
l8KnSu8u/R3Jp4Xf+5r6GwRe071XpO+o8mXwwfj8rC/pbxbG22BnMPRK9b+B
7r2m8p1V/pbkf+Giqa/+1lZsv5eF/eklvUt9+Ei17aHy9QJHDlcOhwf3jc3C
dg0v+fv+jt9QMv4Eh4IpwBbsnasKc35wf60jc8dwXMinJua+wCPdgn0Az3xR
M5fM+p+I/ZC+i/Sl0u+QvkL6ltIXSR9fmKODq2sVOTZwaWz7zBwCt24f1uuZ
et6fAT/xLGxSd/Zz+o2Ml8HNSzPz5dNi85tng8HLxsznSN44W2d6o4PV3wHw
e3qfLvhBGoMfNJZpYX6qI9hYcivVl7iOs4O7uxbOpGz+YYTk1zLHE6bG5vvw
Ee+LzSnjO3KPMjh3uEHeiXejDVwsnOU+7Aslc5lf6Zueha3VM76umLP+Qs/+
PDKX/QtYSHJX+KyKOURiGzNivx8+8eTYMRZ85c76fefBL+lbrwVP61rMXFaf
LxfGN+BzMPuzmTntr1X2ZWSuu4H0lyXvoHuvS/4o81pgTfRX+auBD+aZPBtO
F263ZWRuvXfN4zVc9x5kLqh8sN7n0tT7T33pL6rudur/NfiSzPGeIdJPKYz3
8B0WBPxVFOY3t1b5S5Kzwvzh5tIXg0cL85Xg1SWSB+q5I8peg6zFeoXjS11U
/ir7k95pTNl7OrGYQ/WMQ1TeOPgnz+NfqGwhvJXqb6GrZ9m+Ovwj/Cd8/8yw
/1dUfyj2XtclmflA8M9jwT+5Aj5Q+gTpl0jvpH4u1nd8V8/4RM+Ic7e9gDWg
uj+r/HSVX6vyCSo/Tff6gVfUfnDhuBq+6VyVPy35fJVfKX0MvmrgD1qXzDEQ
T/pb5RdF5tLAl/8L/gQ+yX7gKY3HfpKXq/weyqX3kf6e9HsL4y3swz4Bf62X
299qoOcNV3k9Pe8/1mvJe+RKtT9G+mdq/4DKm9bMb8Jztqpr/LLOdus6RvLo
zP7EQ+rv6sL8M3zq/OB/8PvOln6z9PPYi6UfL/1y6f9hH2rG//gBd0vfOzO+
v1jlf0sv632HS/9H5RdIv0Dl50i/ReVDC0CTbLDe7zSN+eM1xwvwHeBY4Vrv
xOZKrqc5cJfkPzJ/79/gLgrHTODNOoU9tZQb7/8du/8Lg78Fx3e+9GHSh0m/
M/hPFwV/YKz0C6U/gf8C/6Dxuqgwf8j73xPwe50QL/s3dn3wNv7Ng+F7dKja
toFBbwucEtxSLL1j4XgV/N7kgO/Zb/OyfcSDwny8NnI8jvlcCfE6nnlx5t/A
b4G3ZDzpG/6qo66xkj+q2RZgE8ap/EH8aGycrpYqL1TeUc9rVjUf+1fAo2Da
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
         "]], 
        Polygon3DBox[CompressedData["
1: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
pLeU7zL5jpdIzsxmxZPfMPFb5uHcGds57lD+Gni/3Nl0P+0PWs2CZE1+nFtn
sd6eiXmmPRRvDbmulffyTDLPN6aT7xjfszVfL+0sit8fMXfwOb4buimvoq8s
mszpj3Euxrejd5CvpXyP0b9W3ynmDubG3EPH+E2ljxvVPY43gGbKFYon78p4
Xx6hnU/bR9sLiyLOWBqIu9HYfuapim/R7j2xL+Sso93a8SahN+O7le9AjLkg
Wae3xz7jmw83G9t99Mv42vG1hXsLku/bI518n/hO47PJd+ucTuIifmx8t7i/
aXvwztptr91L6Fn93A/36HMTWsO4u+P7w13aegZvBKXwPvnJnRZ324q4F/Ad
sIm2DS8Sd5dcA2kP0IrGbwT64/jm/Nw9gm+nd00n92Dch+toR2ivp5P3X7wD
59M6ZpL7Je6ZqlBDf6+BCdp4qUTyZlnINzN+v/F9wDMVLuD5j3zPyXVUG+PU
vRv3cSZ5H8Y7sTqclk3eiqG9ideE02mDxB43H8egSrz58CL0T+WrHfOq3cmZ
5NxdmDvn4rwbjheDz5XPg09ZpvL9JX5WrHd4n/ZyJjlPF+fOmzh3RuTOtafT
yXkY52Kn3B0wL3duxvk5LL4Z7STjH6O/T+lfSXxvvDFjroznTuW74H/0+WLO
gk+0OymT3MtxPz8ntgKcKt8tEW/tjsWryFsq9lW8a/hG0U6CanyfyD2NtgD/
KH6304bG733ztAraaCNTmLyn4l3VmucHbVfiO0AfmU7uwLgLe+fOxH8o98xL
zrz420Fz+gv6MCoeDvbWjNw7cTU+OPd3kLjPz4Ur5F8DC2mVxW6K3/tx18X7
hdahILnzrsGbw35tTIg96V18gvFVjb+XyNmzMHl3xftrZF6yt9vzLYq3WfRB
27/FG06bDUsmv/0ry39O9Du+Gcwx/tlQWWz92M+0GcqtiidvyHhL1qbnib0P
borzHp8EI5Sf1cZwuFob3/J2NI5Fecm5EOdDd7gq3qpiD8d7gK8WLR7LcWbH
2f0Qfgq9DP409KL9FX2hNZG7efz2oO2gnQ1F85OzOM7keP9u026XdPIGDi3O
63K0M8Ru5etrHGXjrKdfr74T7Th/lWyy/+McOA3/N30l/n/4ZG+l
         "]], 
        Polygon3DBox[{{2397, 2396, 3121, 1949, 1950, 3122}, {2710, 1932, 1497,
          1498, 1933, 2711}, {3060, 1699, 1548, 1547, 1985, 2748}, {2401, 
         2400, 3105, 1822, 1824, 3107}, {2945, 2235, 2206, 789, 1313, 2990}, {
         2546, 1674, 1948, 3120, 2408, 2409}}]}]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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

         "]], Polygon3DBox[CompressedData["
1:eJw1mH3UVVURh8+9+8I9vOdF1GyFpZkLwRRBSkhBFLMwQJRvBERBMAgQocBM
EE0ECjVAkUpLMcNPxGr5/ZFikmFogKCZqEggICpg6sKItOdhTn/MujN79tl7
nz0zv/mde+SoSf0vrmZZ1raSZTV+VxZZtill2Rl5lnVqnmV389sO+1Im9Ubf
0Jhl79ezbDvz+zB3G3pP9JOZcx/+FU2yrD36ZsZGN82yEcz5gGevw9ee9b7e
kGX72GcG9rHYz+J/kfmnY3fEnsYzw7H7cZj7GZuDbOP5Xci16E8jN+N/FumG
/iryA/QO+Lujn8t6bdEPQz+O9W7ifDux5yHnMrarWZZNZv++PLOGufsY+y/6
HPwPoG/i/Rr4PRS7Nf7mzJ+F/wne50nGP0VWYQ/H/030g/C356wt8B/FXq3r
oe/FvwB/I77fot/LWDP0f+H/EfpWxmbjP8Z7Rv8e8gS+Nuz5HOtfhFyB3gq5
D30IMgN9Pftt5PnO2NOLOONQnp1ej7Nvb4jYvMRYX3wDkdeqcecn4GvLGTZj
N2PORNY4HnthNc7sexhPY7ecsZHox/P8XPT5SCf0wchG9Bk8u66I+P67Gnc6
HP3HvM/r2BNYYzr6OmQRcw9mrH8ZH2M5B/+Bnt890YchlzGv7hj+G5FBvOt4
7FOZ8zN8HzbEnXl3ifkfcL6h+N+uxp3m6E3y2GsVMrEeOboGfVI9cncq/pXY
OznvdnMX/x/NF+zu6JPxP459UiXy/cwi1voYfxv2n8TYY9hbsTfzfDv807BP
Zv5m/D2wH8VuyZlfQT8FWYy9GP9O/DvI77a8SxdkKWv1x/+y8ce/D/8uzril
HjG+FN8A5sw2d7H7oh/Juiuwe2Efjj6YsWs8L+dphn5+Hnc3uxL53pU1bvY+
sd+19tj3auyh2P9Bb49/VjXW6GAszbtq1PQn6IfnUU+jkDs514fIR5WoKWtr
EP4K5+iJ3IM+k2cexN8N/+mMXZLH2boyviyP+9iLfxT2Xei9+b2Wue95XvRf
pcgdx6o8vyTF3XmHDbWoUWvVHH8IfUyKWBiTL+KfX0TsjIGx+FItctmc/mmK
O/PunmXsiFrkuP7D0LfkETefbURuYP5N1nol9hQneiJXoW9hbCj6WcgC7N3Y
56E/xhqTsReCg5vyuJMOKWrIuxLTTsUemAXWWcPW8kPVyL+ri6iNRdid0b+P
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
a88a9NvwNO5jVBacR+7zPwDTabE=
         "]], Polygon3DBox[CompressedData["
1:eJwt00tIVVEYxfGt95o3r00qyKJJT4oQ0uxhD00qLBUhzSgRKotING0QZUkP
Cwqkt1hUSIEE1Sx6IdlrEEQNGjRq0KQCa9AgahAS1G9zGizOWf+9vrPP+fZ3
ZrR2NXTmhhBKKI/KsiGk0iHUUEkqhG7+ZEEITUIVmRC+54dQXojhN6y/p+3W
BmUuYmXqyimN38MWYPusD6udOj6EOrUXsJkyB2W25oQwKjeE3ebv8+3y8/nz
NEVuGg1jO+XKsQH3Dzwv1/NqPO8SViXT+7/+t1zGepHcbLwb7/Tea7EdWL/M
TSyt/iu2RCbFL7Y2jz/qeR38G6riZ00IYYNrR9xX7V28QO0prFXPGtQ30lv+
GH2Q65HJwZr4YlqOreKP4yPepRprw77w++kxPxrr3X/DR+k0/zEvOYdatS2u
h8fpAz5kvZEfSiXv3EIXsLTcIPaC30i92Bh/mZ7xc+z9AyuN50uvsCfYHuyz
zC16ifVgW7FX/DV6jo3lJ99/kl+j9nUmmYk4GyNYMz3kB/RvU/z2dLJXC9+Y
TfoS+zPZcyqd0RFsi5rq+F3WivnVznO6zDa6iu3W54V4n/vNWAGtLEzmMvYl
9qcZW5RN5iPOSRf/xR5L5frxOu9Rn0rOahlfQwdk9sq8la/lT9AVmaep5Hvi
zMcZi7P2yzdvwz/x1+Va3Y9hu+K88Ovscyb2P/YIu6P2HD7RvpOoEivKJnP1
SGY1NWNz+QrZ9niG6aQ/sU+lWIF3OyT3DqvPJv9D/C/WYxk9qbVnH/ZXbUgn
s/5H3U86i63ACl3bZP4BMCx1SA==
         "]]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJxF1Xl813McB/BPrV0tLXRQrVamsVaUWlKxqSQlREQUuUOJQq7lLh49Ho4Y
pVCa1rGONdty5GjoWAgx91VKFF1Kkuenf/zx3Ov9ef/e38/v8/tuv+/ajBwz
eHSdEEKNH8cnhBDrZXVDyFW0TA2hkXWWbC1zZUfZRfaSBXKgHCSHyeFyBKPU
4+UEWSgnycmySE6VxXKWLI/vWz+Eau+1Mu6fFsI4773aulQ+Xs/+Mse6X3II
A9RtzVSb7a/el+LMXitT99av0N+r19c6W3+ovfuo8/RK4nnVWfq5DULIt1++
9XT9nnK3meX2yPR6D+sp+rv0uqmr9Fvo56kL9SutO6t3er2pfif12Hgm++7Q
62DdKL6PLNBrpXel17Ot6+tneO926lT7DNFvo95upp7X8p0507qf/ja9FuoD
6q76zdVpet2tm6jLXL9HfTAphMbW7dXpcS/ZUGbIpWZS1ZvVKTJdPuG+PslT
TOVpnqGIZ3mOaaxw7XT5PDOYyQu8yEvMYjYvM4diXmEuJcxjPgvY79wLZSmL
4p72XiyXsJQyllHOp2ZflRVUUsVy3nbNa/J13uBNDphdId+Kr/MO77Iy1vFv
Rb7H+3xm9gO5itWsYS01rOPDeB9c85E8aPZjuZ5P4pni9Wzgc4K/3y9kHVkb
e+ZnuPZL9Vd8zTd8y3d8T4LZH+L7mP1RJlr/JH+O53XtRrmJX9jMFpLM/Cq3
8hu/s41q89vjZ5N/xM8n/5Q72MkudrOHv9jLvvi7Nfe3TLbvfvlPvIf8Gz9z
/FyJPhN1SaDWWWe6pp56lUyU02SSTCaFVOrHtGeaXOuaBjLN+jDZkDWuSZeN
OJwjOJL1ZhvLJtTE75NcZLaZPIqjaU4LWpJBK1rHfe2fKUvNt5FtOYYsjqUd
2RzHlviskDmsM99e5tKBjpzAiXSiczynvU+SC8x2kV3Joxsn051T6EFPenEq
S8yfJvMp4HR604e+bHCOM2Q/zmSx+f7yLAYwkLMZFO+RM5wjz+U8Bsf7Zf58
eQFDuJCLGBrvp/mL5SUMo8jspfIyhjOCy7mCkWyKzyV5FVdzDfNcc628jusZ
xQ3cyEbzN8nRjOFmSsyPlbdwK+MYT1NnuU3ezh1M4E7u4m7u4V6amSuUE7mP
+3mAufZ9UD7EwzzCJCbzKFud5TE5Jd7L+NyxzvH/y+M2VOlVYotQIT06Q3ni
oa9sKJNLMR6WSI/iUCoX4jEa5ice+gqEEj/i16FYzsHWYbb0CA21yf//v/wP
Hs7kjg==
       "]], Line3DBox[CompressedData["
1:eJwl1Gfcz1UYx/HjRt0yk15WZBNCtpD1gO4bWZWRjBSyRxqaeGArUWnaMw07
KkUD2bIb9qhUz1pG7+vlwef/uc75fc/5Xb/1L9t3WKehOVJKTfw0Qn711Nwp
tcmV0oMolielB/jRnCmNwWMoYVwUxXEorwzPNN8G/+BvnMlM6TbzJTHRuAyX
RSncjtKYbf6AXBZfxn94EuUcO2jfSeqK6qe5PN+ql6fUFdRvcOJrfBXfyz/D
lcxN5spcRH6K+l51DoxVV+FBXJUPWPOc+g71s/yLXjqqH1JncxZy4nnjFbLV
1EPUd/ILfF6+urozOuFhc+3RVr1PPjfXRA3crJdhjt2lro1auB9d0Nv8XvkO
3M74RtTBCON6PJUbciPURQPska/PF/SwwPHOyGecB03QGNPM3cMrZZvx3Sio
jxfNN1Uv5oJcAHnxknEL3iU/Xb3P3q2Mx6ub8zhuycv4Fi4c14Wd8hPM5bf3
DL4Uvah/49/j3uFP/IGFsk/EvcYJ+//KN8ku59PGheK+qPvhXNxj7LBmKS/g
i/Fs8qWUac0F9eh413AWS6KHuKf8SOyPn+15krdZuyjOgVMYhZ/iePQUPcQz
jD3k+vJbfIzn8/EwfsQPGIkj9j3CRzEPmdZ35MXyfeJ9jLzMQc6l17lxPuPD
fAjDsT/ef7yHG+J9c10ZsvdFj7K94r3g3bwH78YziTkMxc7ox/FdvNV534lz
2acd94xrxna8je/iO5HdwYPxTfRtzbdxrciwri33wBYcl93Kb+JrfIW58o/z
F/gSc3Alvl3ZbO6OT/EZXsfmyFrzOQ/ERhyT3cSv4d/4NtEN67Aes/AJNmAA
PsLHeBV/oTW64v24b/Zeya/gQ3yA/liDtXgZq7EKHTKu/8eN5QLp+n/d/0mY
p1Y=
       "]], Line3DBox[CompressedData["
1:eJwl0jlMFAEUgOGHGi+kIITWSIWBEBMaKTCIXCKoiZUciiCIoIKABwoIeK0K
amJhYkdDa4VQiDZWEioUUQ7RHhNsIFrxEYo/35u3M7O7s5vR0H6mLSki3qh3
W8TZHRFVqlaN/u2NqOU5nVedLqheK7sjGpjpnIts1B+7Jo4lR1xis1LsLrNF
7+xbmb4r4gqvatzuGled18Z2XddfxxNe6zB3qksH7FLtbphv6pYOuddtptl3
847uqtzn6mGWa3rZp3vK3heR75p+84AGteac966/b36gh1q3e8RJ+8dMKM/u
CT/YPeUzlbrXEIf10f45/zvvBV/qi2fb5dl+9qCP7oz46riQszzGIn0zF3OO
JfzOUpbph/k451nOE1owV3CRlVziSZ7ST/NpLvOXpr3v4e0Rv80HueB4ak/E
jONJfuJbjnGEo3zF10wwwT52b34PdqrFXMPqzfdnBQuYz1zmMIv72eR3OJK0
9f/aALWbUK4=
       "]], Line3DBox[{1425, 901, 1010, 1009, 1425}], 
      Line3DBox[{2968, 1429, 3031, 1012, 1013, 2330, 903, 2254, 2968}], 
      Line3DBox[{1433, 1044, 1046, 854, 1433}], 
      Line3DBox[{1437, 902, 1093, 1092, 1437}], 
      Line3DBox[{1423, 1422, 1011, 1424, 1423}], 
      Line3DBox[{2273, 1427, 1428, 2981, 1014, 3148, 2329, 1426, 2273}], 
      Line3DBox[{1045, 1432, 1431, 1430, 1045}], 
      Line3DBox[{1441, 1102, 1104, 855, 1441}], 
      Line3DBox[{1435, 1434, 1094, 1436, 1435}], 
      Line3DBox[{1103, 1440, 1439, 1438, 1103}]}, {
      Line3DBox[{2332, 2649, 3149, 2507, 2331, 3150, 2508, 2333, 3151, 3032, 
       3221, 2334, 3152, 2509, 2335, 3153, 2510, 2336, 3154, 3155, 2511, 2337,
        3118, 3156, 2650, 2512, 2338, 3095, 3157, 2652, 3033, 3286, 2651, 
       2590, 2654, 3308, 2513, 2653, 3096, 3158, 2656, 2785, 2514, 2655, 3309,
        2591, 2658, 2786, 3310, 2515, 2657, 2887, 2984}], 
      Line3DBox[{2340, 3159, 2518, 2339, 3160, 2519, 2341, 3161, 3034, 3222, 
       2342, 3162, 2520, 2343, 3163, 2521, 2344, 3312, 2663, 2664, 1633, 2345,
        3097, 3164, 2666, 2522, 2665, 3313, 2592, 2668, 3035, 3287, 2667, 
       2593, 2670, 3347, 481, 2669, 3098, 3165, 2672, 482, 2671, 3314, 706, 
       1402}], Line3DBox[{2346, 2524, 2662, 2673, 2523, 2770, 1119}], 
      Line3DBox[{2348, 3036, 3223, 2347, 3166, 2525, 2349, 3167, 3037, 3224, 
       2350, 3168, 2526, 2351, 3315, 2675, 2676, 2527, 2352, 3289, 2594, 2679,
        3038, 3288, 2678, 3099, 3169, 2682, 2528, 2681, 3316, 2595, 2685, 
       2788, 2789, 3348, 2684, 2596, 2688, 3128, 3290, 2790, 2687, 2892, 3369,
        2597, 2893, 2944, 2985}], 
      Line3DBox[{2354, 2530, 2353, 2529, 2674, 2692, 3292, 3039, 2771, 2599}],
       Line3DBox[{2356, 3040, 3225, 2355, 3170, 2531, 2357, 3171, 3041, 3226, 
       2358, 2695, 2696, 3319, 2359, 3293, 2600, 2677, 2601, 2360, 3294, 2602,
        2680, 2603, 3320, 2361, 3295, 2604, 2683, 2605, 2362, 3131, 3296, 
       2606, 2686, 2607, 3321, 2363, 2811, 2608, 2689, 2609, 3364, 2897, 
       2986}], Line3DBox[{2367, 2533, 2366, 2532, 2365, 3318, 2694, 2772, 
       2693, 2364, 3133, 3352, 2996}], 
      Line3DBox[{2369, 3042, 3227, 2368, 3043, 3228, 2370, 3172, 3044, 3229, 
       2371, 2614, 2697, 3230, 3100, 2372, 3298, 2615, 2698, 2616, 2373, 3299,
        2617, 2699, 2618, 3325, 2374, 2813, 3101, 3353, 2700, 2619, 2375, 
       3134, 3300, 2620, 2701, 2621, 2901, 2865, 3326, 2866, 2814, 2967}], 
      Line3DBox[{2380, 2535, 2379, 2534, 2378, 3231, 3045, 2377, 3322, 2703, 
       2773, 2702, 3323, 2376, 2816, 2997}], 
      Line3DBox[{2382, 3046, 3232, 2381, 3047, 3233, 2383, 3328, 2710, 2711, 
       3327, 2384, 2625, 2704, 3234, 3102, 2385, 3103, 3324, 2705, 2626, 2386,
        3354, 2817, 2818, 2706, 3235, 3104, 2387, 2819, 2820, 3355, 2707, 
       2871, 2870, 2388, 3356, 2821, 2903, 2822, 3026}], 
      Line3DBox[{2395, 2537, 2394, 2536, 2393, 3237, 3049, 2392, 3236, 3048, 
       3173, 2391, 2709, 2774, 3344, 3119, 2390, 2998}], 
      Line3DBox[{2399, 3174, 2538, 2397, 3122, 3175, 2721, 2539, 2401, 3107, 
       3176, 2723, 3331, 2540, 2722, 2628, 2725, 3332, 2541, 2724, 3109, 3177,
        2727, 2793, 2542, 2726, 3142, 3373, 2910, 2909, 2728, 2794, 2937, 
       2993}], Line3DBox[{2418, 2552, 2416, 2550, 2414, 3245, 3053, 2412, 
       3244, 3052, 3180, 2410, 3243, 3051, 2408, 3120, 3242, 2775, 2718, 2407,
        3333, 2999}], 
      Line3DBox[{2421, 3184, 2554, 2420, 3110, 3185, 2731, 2555, 2422, 3111, 
       3186, 2733, 3054, 3301, 2732, 2630, 2735, 3349, 2796, 2556, 2734, 2913,
        2914, 3375, 3143, 2736, 2797, 2938, 2557, 2940, 3379, 2912, 2988}], 
      Line3DBox[{2429, 2565, 2428, 2564, 2427, 2563, 3193, 2426, 2562, 3192, 
       3191, 2425, 2561, 3190, 2424, 2560, 3189, 2423, 3334, 3055, 3188, 3123,
        2738, 2559, 2777, 3187, 2836, 2835}], 
      Line3DBox[{2431, 2739, 2740, 3335, 2566, 2430, 3112, 3194, 2742, 2567, 
       2741, 3336, 2631, 2744, 2799, 2800, 3350, 2743, 2919, 2632, 2920, 3351,
        2801, 2917, 2802, 2745, 2916, 2918, 3113, 3383, 3022}], 
      Line3DBox[{2439, 2573, 2438, 2572, 2437, 2571, 3200, 2436, 3247, 3058, 
       3199, 2435, 2570, 3198, 2434, 2569, 3197, 2433, 3246, 3057, 3196, 2432,
        2568, 3195, 3124, 2747, 3302, 3056, 2778, 2633}], 
      Line3DBox[{2441, 2634, 2749, 3059, 3303, 2440, 3114, 3201, 2752, 2805, 
       2806, 2751, 3144, 3376, 2635, 2755, 2807, 2924, 3304, 3130, 2754, 2923,
        2925, 2636, 2927, 3382, 2945, 2990}], 
      Line3DBox[{2450, 2578, 2449, 2577, 2448, 3251, 3064, 2447, 3250, 3063, 
       3205, 2446, 2576, 3204, 2445, 3249, 3062, 2444, 3248, 3061, 3203, 2443,
        2575, 3202, 2442, 3337, 3060, 2748, 3338, 2757, 2574, 2779, 3115}], 
      Line3DBox[{2452, 2637, 2750, 2638, 3340, 2451, 2839, 3305, 2639, 2753, 
       2640, 2929, 2928, 2453, 3138, 3306, 2641, 2926, 2642, 2931, 3377, 
       2991}], Line3DBox[{2464, 2582, 2463, 2581, 2462, 3256, 3069, 2461, 
       3255, 3068, 3210, 2460, 2580, 3209, 2459, 3254, 3067, 2458, 3253, 3066,
        3208, 2457, 2579, 3207, 2456, 3252, 3065, 3206, 2455, 2759, 2780, 
       2758, 3339, 2454, 2841, 3360, 3003}], 
      Line3DBox[{2466, 2644, 2760, 2645, 3378, 2933, 2932, 2465, 2842, 3117, 
       3361, 2930, 2646, 2934, 2878, 2879, 3139, 3307, 2968}], 
      Line3DBox[{2478, 2586, 2477, 2585, 2476, 3263, 3075, 2475, 3262, 3074, 
       3215, 2474, 2584, 3214, 2473, 3261, 3073, 2472, 3260, 3072, 3213, 2471,
        3259, 3071, 2470, 3258, 3070, 3212, 2469, 2583, 3211, 2468, 3125, 
       3257, 2781, 2761, 2467, 3341, 2843, 3004}], 
      Line3DBox[{2492, 2588, 2491, 2587, 2490, 3273, 3084, 2489, 3272, 3083, 
       3218, 2488, 3271, 3082, 2487, 3270, 3081, 2486, 3269, 3080, 3217, 2485,
        3268, 3079, 2484, 3267, 3078, 3216, 2483, 3266, 3077, 2482, 3265, 
       3076, 2481, 3342, 2764, 2782, 2763, 3343, 2480, 3005}], 
      Line3DBox[{2506, 2768, 2767, 2505, 2589, 2504, 3285, 3094, 2503, 3284, 
       3093, 3220, 2502, 3283, 3092, 2501, 3282, 3091, 2500, 3281, 3280, 3090,
        2499, 3279, 3089, 2498, 3278, 3088, 3219, 2497, 3277, 3087, 2496, 
       3276, 3086, 2495, 3275, 3274, 3085, 2494, 2766, 2783, 3346, 3126, 2493,
        3006}], Line3DBox[{2613, 2948, 2612, 3009}], Line3DBox[{3010, 2624}], 
      Line3DBox[{2648, 2952, 2647, 3031}], 
      Line3DBox[{2661, 2517, 2769, 2810, 2809}], 
      Line3DBox[{2765, 2844, 2845, 2762, 3264, 2847, 2846, 2479, 2881, 2882, 
       3368, 2880, 2884, 2964, 2883}], Line3DBox[{2825, 2955, 2826, 2966}], 
      Line3DBox[{2833, 3358, 2834, 2776, 3345, 2545, 2730, 2719, 3178, 2546, 
       2409, 3179, 2547, 2411, 3181, 3182, 2548, 2413, 3183, 2549, 2415, 2551,
        2417, 2553, 2419}], 
      Line3DBox[{2850, 3362, 3140, 2784, 2849, 2848, 2860}], 
      Line3DBox[{1190, 527}], Line3DBox[{2969, 2837, 2950, 3001}], 
      Line3DBox[{2970, 2838, 3017}], Line3DBox[{2972, 2995}], 
      Line3DBox[{2973, 3137}], Line3DBox[{2974, 3359, 3002}], 
      Line3DBox[{2992, 2956, 2716, 3371, 2831, 2906, 2830, 2405, 2874, 3367, 
       2875, 2715, 2829, 2828, 3357, 2404, 2629, 2714, 3135, 3330, 2827, 2403,
        3108, 3241, 2713, 2627, 2402, 3106, 3240, 2712, 3329, 3105, 2400, 
       2720, 3239, 3121, 2396, 3238, 3050, 2398}], Line3DBox[{3007, 2994}], 
      Line3DBox[{3013, 3000}], Line3DBox[{3012, 2544, 2949, 3145}], 
      Line3DBox[{3014, 2558, 3015}], Line3DBox[{3019, 2643, 2951, 3116}]}, {
      Line3DBox[{1443, 1617, 3150, 1444, 1628, 3160, 1468, 1637, 3166, 1478, 
       1645, 3170, 1487, 3228, 1654, 1496, 3233, 1662, 1506, 3239, 1949, 1950,
        3175, 1951, 1830, 1831, 3185, 1964, 1840, 1841, 3194, 1976, 1849, 
       1850, 3201, 1987, 2095, 1854, 3305, 1993, 1855, 2209, 1995, 2099, 2210,
        3361, 1858, 1999, 1859, 2157, 2156, 2158, 3368, 1861, 2214, 2297}], 
      Line3DBox[{1445, 1618, 3151, 1447, 1629, 3161, 1469, 1638, 3167, 1479, 
       1646, 3171, 1488, 1655, 3172, 1497, 1932, 3328, 1934, 1935, 3329, 1822,
        1824, 3176, 1953, 1832, 1834, 3186, 1966, 1842, 1975, 3336, 1844, 
       1978, 2091, 2092, 1986, 3376, 2204, 2203, 2205, 2096, 2097, 3306, 1994,
        2208, 2225, 2207, 2211, 2100, 2155, 2101, 3307, 2254}], 
      Line3DBox[{1449, 1620, 3152, 1450, 1631, 3162, 1471, 1640, 3168, 1481, 
       1906, 3319, 1648, 1490, 3230, 1804, 1657, 1499, 3234, 1814, 1936, 1664,
        1508, 3241, 1825, 1954, 1672, 3332, 1517, 1835, 1967, 2036, 3349, 
       2037, 1526, 2145, 1845, 2199, 2039, 3351, 2201, 2040, 2218, 2146, 2202,
        1851, 2206, 2235, 3382, 2318}], 
      Line3DBox[{1451, 1621, 3153, 1452, 1632, 3163, 1472, 1889, 3315, 1890, 
       1891, 1792, 3293, 1793, 1907, 1805, 3298, 1806, 1922, 3324, 1815, 1937,
        1816, 1939, 3330, 2072, 1826, 1955, 1827, 3177, 1957, 2082, 1836, 
       1968, 1837, 2196, 2195, 3375, 1970, 2087, 2197, 1846, 2200, 1847, 3383,
        2247, 2198, 2281}], 
      Line3DBox[{1453, 1622, 3154, 1455, 1876, 3312, 1878, 1879, 1780, 3289, 
       1782, 1894, 1794, 3294, 1796, 1910, 1807, 3299, 1921, 1809, 1925, 2067,
        3354, 2068, 1938, 1818, 1942, 2073, 3357, 2074, 1956, 2190, 2189, 
       3373, 2191, 2083, 2144, 2084, 1969, 2194, 2223, 3379, 2193, 2246, 
       2320}], Line3DBox[{1457, 1865, 1866, 3156, 1867, 1771, 1772, 3164, 
       1881, 1783, 1893, 1784, 3169, 1896, 1797, 3295, 1909, 1798, 1912, 2062,
        3353, 1810, 1924, 1811, 1927, 2069, 3355, 1819, 1941, 1820, 2185, 
       2184, 1944, 2075, 3371, 2186, 2262}], 
      Line3DBox[{1458, 1761, 1763, 3157, 1869, 1773, 1880, 3313, 1775, 1883, 
       1785, 1895, 3316, 1787, 1898, 2054, 2055, 3296, 1911, 1800, 1914, 2063,
        2064, 3300, 1926, 2178, 2177, 2179, 2070, 3356, 2141, 2071, 1943, 
       2322}], Line3DBox[{1461, 1764, 1870, 1625, 3308, 1462, 1776, 1884, 
       2021, 3347, 2022, 1475, 1788, 1899, 3290, 2027, 2028, 1484, 2132, 1801,
        3364, 2172, 2234, 2174, 2278}], 
      Line3DBox[{1463, 1765, 1871, 1766, 3158, 1873, 2049, 1777, 1885, 1778, 
       3165, 1887, 2052, 1789, 1900, 3369, 1790, 2168, 2167, 2277}], 
      Line3DBox[{1464, 1767, 1872, 3309, 1769, 1875, 2050, 2051, 1886, 2162, 
       3314, 2161, 2244, 2237, 2326}], Line3DBox[{1600, 1746, 2007, 2298}], 
      Line3DBox[{1601, 2006, 2008, 2005, 3346, 2017, 2107, 1862}], 
      Line3DBox[{1603, 1748, 3275, 1587, 1733, 3342, 2002, 1572, 1720, 2000, 
       2103, 3341, 2295}], 
      Line3DBox[{1604, 1749, 3276, 1588, 1734, 3265, 1573, 1721, 1998, 3257, 
       1559, 1709, 1996, 3360, 2294}], 
      Line3DBox[{1605, 1750, 3277, 1589, 1735, 3266, 1574, 3211, 1722, 1560, 
       1991, 1997, 3339, 1990, 2015, 2094, 1852}], 
      Line3DBox[{1607, 1752, 3278, 1591, 1737, 3267, 1576, 1724, 3258, 1562, 
       1711, 3252, 1548, 1699, 3337, 1984, 1536, 1689, 3302, 1981, 1145}], 
      Line3DBox[{1608, 1753, 3279, 1592, 1738, 3268, 1577, 1725, 3259, 1563, 
       3207, 1712, 1549, 3202, 1700, 1537, 3195, 1973, 1982, 1972, 2013, 2086,
        3187, 1839}], 
      Line3DBox[{1610, 1755, 3281, 1594, 1740, 3269, 1579, 1727, 3260, 1565, 
       1714, 3253, 1551, 1702, 3248, 1539, 1691, 3246, 1528, 1681, 3334, 1962,
        1518, 3345, 1673, 1960, 2079, 3333, 2289}], 
      Line3DBox[{1611, 1756, 3282, 1595, 1741, 3270, 1580, 1728, 3261, 1566, 
       1715, 3254, 1552, 1703, 3249, 1540, 3197, 1692, 1529, 3189, 1682, 1519,
        3178, 1674, 1948, 3242, 1510, 1666, 1946, 2288}], 
      Line3DBox[{1612, 1757, 3283, 1596, 1742, 3271, 1581, 3214, 1729, 1567, 
       3209, 1716, 1553, 3204, 1704, 1541, 3198, 1693, 1530, 3190, 1683, 1520,
        3179, 1675, 3243, 1511, 1931, 1947, 1930, 3344, 2011, 2066, 1813}], 
      Line3DBox[{1614, 1759, 3284, 1598, 1744, 3272, 1583, 1731, 3262, 1569, 
       1718, 3255, 1555, 1706, 3250, 1543, 1695, 3247, 1532, 3192, 1685, 1522,
        3182, 1677, 3244, 1513, 1668, 3236, 1503, 1659, 3322, 1919, 1493, 
       1651, 1917, 3352, 2060, 2285}], 
      Line3DBox[{1615, 1760, 3285, 1599, 1745, 3273, 1584, 1732, 3263, 1570, 
       1719, 3256, 1556, 1707, 3251, 1544, 3200, 1696, 1533, 3193, 1686, 1523,
        3183, 1678, 3245, 1514, 1669, 3237, 1504, 1660, 3231, 1494, 1652, 
       3318, 1905, 1485, 1643, 3292, 1904, 2284}], Line3DBox[{2299, 1791}], 
      Line3DBox[{2303, 1821}], Line3DBox[{1266, 566}], 
      Line3DBox[{2315, 1856}], 
      Line3DBox[{1863, 2108, 3362, 1585, 2048, 2047, 2123, 1860, 3264, 2106, 
       1571, 2046, 2045, 2213, 3378, 1857, 2212, 1557, 2044, 2043, 1992, 3340,
        1853, 1545, 1697, 3303, 1848, 1534, 3335, 1687, 1974, 1524, 3184, 
       1679, 1515, 3174, 1670, 3238, 1505, 1661, 3232, 1495, 1653, 3227, 1486,
        1644, 3225, 1477, 1636, 3223, 1467, 3159, 1627, 1442, 3149, 1616, 
       1864, 2009}], Line3DBox[{2260, 2059}], 
      Line3DBox[{2061, 2010, 1918, 3323, 1929, 1920, 1502, 1667, 3173, 1512, 
       1676, 3180, 3181, 1521, 1684, 3191, 1531, 1694, 3199, 1542, 1705, 3205,
        1554, 1717, 3210, 1568, 1730, 3215, 1582, 1743, 3218, 1597, 1758, 
       3220, 1613}], Line3DBox[{2263, 2078}], 
      Line3DBox[{2090, 2014, 1983, 1989, 3338, 1985, 1547, 1710, 3206, 1561, 
       1723, 3212, 1575, 1736, 3216, 1590, 1751, 3219, 1606}], 
      Line3DBox[{2102, 1558, 1708, 2258}], 
      Line3DBox[{2104, 2016, 2001, 3343, 2004, 2003, 1586, 3274, 1747, 1602}],
       Line3DBox[{2215, 2250, 2226, 2283}], Line3DBox[{2252, 2098, 2313}], 
      Line3DBox[{2253, 2232, 3377, 2153, 2154, 2152, 1546, 1698, 2224, 2041, 
       3304, 1988, 2149, 2150, 2148, 1535, 1688, 3350, 2038, 1977, 1843, 1525,
        1680, 3301, 1965, 1833, 1516, 3331, 1671, 1952, 1823, 3240, 1507, 
       1663, 3327, 1933, 1498, 1656, 3229, 1489, 1647, 3226, 1480, 1639, 3224,
        1470, 1630, 3222, 1448, 1619, 3221, 1446}], 
      Line3DBox[{2255, 2081, 2307}], Line3DBox[{2261, 2287}], 
      Line3DBox[{1341, 819, 2937, 502, 754, 662, 3367, 1509, 498, 1940, 1817, 
       3235, 1500, 493, 1923, 3325, 1808, 1491, 1649, 1908, 3320, 1795, 1482, 
       1641, 3288, 1892, 1781, 1473, 1633, 1877, 1456, 3155, 1623, 1454}], 
      Line3DBox[{2301, 2286}], Line3DBox[{2309, 2290}], 
      Line3DBox[{2291, 2242, 1838, 2310}], Line3DBox[{2311, 2292}], 
      Line3DBox[{2296, 2249, 2105, 2330}], Line3DBox[{2304, 1665, 2305}], 
      Line3DBox[{2323, 2032, 1928, 2136, 3326, 2137, 2135, 1492, 1650, 2030, 
       1913, 3321, 1799, 1483, 1642, 3348, 2026, 1897, 1786, 1474, 1634, 3287,
        1882, 1774, 1460, 1624, 3286, 1868, 1762, 1459}], 
      Line3DBox[{2327, 2126, 2243, 2125, 1466, 3310, 1626, 2018, 1874, 1768, 
       1465}], Line3DBox[{1609, 1754, 3280, 1593, 3217, 1739, 1578, 3213, 
       1726, 1564, 3208, 1713, 1550, 3203, 1701, 1538, 3196, 1690, 1527, 3188,
        1963, 1971, 1961, 2012, 3358, 2080}], 
      Line3DBox[{2265, 3359, 2293}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
wnX2VrUQMG4izvJcH+MityrruTm6cVwrk4Vzq8kQYc8hbeVDhgF+3Zee3Nwo
GcLXcWSTYeUK3TP7fvrlUyxm2diN2+9XxCGJcfxnDfl1GNdjsrc05enBbV85
29FbQwau2lD7Y95k2Gz6ruIq/wbk2KgydwHTx5awHMHHkoGxetGSe7QHd/RS
1IgLxs0N4+RqMD7Fc3jrealeXFnSvqj1tWTo4gxTX+FFhgAKX+y7gzxop8iZ
iKeY3nrbR8Pwn3ayxVZ/Yu3DyUW3R3Ri/Dll5MRNjLORNE+JmPXh9o4lf7xc
R4bBfIt9BR6Y3/e1zBysNiLvLbqGzDlkGJWp1T6M6Wv8mj3CtfpxS88/JOzG
uPFkyScujG8p7k6+VtKP23V6e0xtPaZTPWWu6k6GnOeKTF5Vm1C3ilCjIaZP
bxnMGI0hQ+WXmK15JQO43oRDdgEYfxWxc7AQ4y5qS+nvtw3iolpuax9txPza
E8jd5kqGkhjf4M/ivKjbhn6yFtNfH1o15ITpuYK/vnI+PITTt+iMYmD83aX5
axoY19omNC2QP4RrWFST7mwiw1kpiw1SLlg+Fza/3VXOh2Rl5C3En5LhS1fF
JU5Mn3dWRuXB5DCuv7P90YWfPGlq1dQjMqAjxylRRiO42qcmzu4tWF65BXK7
OJOhUYo89vqmAOq/l9sVh+kbO9geJmL6DyX+JzjyR3FPhbdu6cD4RracLVYY
n1xY+JwkP4Y7ahVfrN5GhgdNx22zHLFxObG6cv8pQfS9+5L4hlwyhBkYvxbF
9Ly9F0hJ2eO4QO11QyoY55q2Z8xHk6FHKSeU9/gEzrbBsVT+FRno1HBUdJcM
099rdKTOCqOreb6HHmL6T3pNSumYfmuehU9e3yQu6eTbuA6M01Q4nt7EONG1
fW2L4hQOn6D+TP015udDadlYezJ4GWnZlCpvQ8Fy6YNCz8gQ35InwB/9c9w2
KMsI4nGigQGnLmFc9JWP1WgU5t/06agyRzyOk/2QhF8nGULzSmN1b2NX3MrG
HM/tyD1dckUxpj+14sh5H0yPvJ5edLIm4ArMhqY+YnxsFO07jvHUjGd71/cQ
cOd++MnRuskgn8ikSL5FhiWnT/r7x3Ygeyq5UyePDB6PGvrxD8nwnr464jSB
iHu0pTE0HuNJppot8Ri3eiiwle8cCZfc22vg0UcG39u115StsPw6vAsXe1kE
8VrxejDnk0GXLdpQBtNLP3uW5OAxjbPUvxenifGYnp4ZciQZdD6sHe7+Mo0b
Ho+sPz1IBltNkUxrCzIMJa8wo68WQ8bTpc7VmN7hx2M3B0xfsEmbkqA2g1uj
8NmN8zkZEjxucYtg3DX8xvz6nhkcS1qJ2tkRrH59/4G/cB379/3HOVjxu1Dj
xzeX72N6YY2RhzkRZPi+PFWmpUbFNeR30fAYfwonwrUwziHDtz99iop7z22c
8Wgc89dIYz2TCRlW79lq3v1OHG3fb81sXoD5n6FW1/6ADGaGeXJa/nTck3tB
b5oxHnrK2OomxlOojmMJkgyc6cspt114MrwJf8Z7yQirS/FKcabH9yIjZqOA
C4VYnqsOTwyGY/Pp9s7m+jVzOCvbT1drMR60UeKGDcZfRq1iuNbP4ezKTmes
nSZD9fNj+caXyPB41nrm0vA+1Gepdc24iAyXlz/ZvAnD6mQ0XajR6i3uQOx7
uW6MyxKkKZcxXkiWnT/d/xb39ke+qhoVy3PbCLbV+mTYcVTNOoIghULudll4
FWPz02p7ZG4olof+2ppnVr7HdXw7o7SMcVwdmbwf46h8KaTI+T2uJMhY5v0s
tt4IVyTitMnw6K6gmNT9A6jp4JrZmhIyHLHLpliGYPm/HHBCvecDjqXUY6Vy
KRkM1uEmSMFkOL0jTuiR3kfc3HGVbVwfyNBaz9n0VQNrZ/iNe80NWXQ0T+iV
YBk2T/U8fdh/6sNf6YpMfcKN52n4Pcd4qpRCnmMQGTbZUtka7i7gjvPcFS75
jMXrhp3SXhUylK3b2b8r+CDSEXsakfQCy+/SKfC7T4aQmKpGVfnPOPuFjpBj
5WTwvk9xIAaS4Zq7G68o8TPuFU5x/bvvZDB1Sm2uPIbVGX9k5LZ8GJU6EVM1
sPX6ln7dtn5svX6awXAsoS/h6ANBtd8wvt60ymkHxpOebwzRzvuKK/PBK46v
mgFfO5adkfJkeHaXfMD/1VEU/W3BTAJbZxUsawQ/YOvsRw4Dm2TW77gJd+Wh
WYwrh73vl8S4mPKP90rk77hQkvz+h+tmIE6N4hQpTQY7ojiX61qErKOKfY9h
62PaJqaJQWx93Cor/bG0hwn5Xkqb4MPWu9ZN+89/w9a7Mbkz6WLazMhu9dfI
A5tnoHH+NGv8bjLMPjeJX3HjONI2pR2JBWxfUeM674yta4ahD7ss5lagEgUj
30BsveuOzFwZ4In5Lc7/4ZkXC6qwbArCb52Bee7wIndhbB2REpE4nnASya9+
VK2ArUeNxwW6X2PrEe/k0LLajVXI96lsiGoDGfwfs/fWuGF5Yk7boc+zGv1w
Dzz9RmIGFDr5V67jIUOL18IXiswppLNdrf4oto6E3rlv0YStI3SJcyZDuqxI
zknjgnkzGRL3dL2NvofpZaNyngixoaxDowekD83AWgHp+FWryUAVqOkdUz6N
zrOulMlsJcOe0VbVs07YevuhLbq6hx0VJwVnLGDrgpqRKueSAxnO/zBOuVXN
gTbvXp11VnkGdrGfz+BfnIZG5iP3Euc1kMKpzq0RHWRguaqdrXuHDAKRKt0e
zFzoZYGfP8cbLD8MT+j22WF5t1vgsXwIFxLteFTloTsDGbqOEuTpaYhTFbLv
zdVCaRFda3ixeutCpHNU22D1w/igAHvwBtTWO/OisYcMmkeiP6zB6vCNds9T
olI8qLfuvpLkjRl4pyniNNs9DYYH5N5fuaCDwk8NJV0cwMZv3wejazex69GX
wiUZm5BMWtCdE0NkKI7dsc/2Bhl6mTid4y03I9O4Y8lTbjOwkU5ZDn05DYGD
A9QbSXooKctKy3cM27e8d0B8plhd7CbtuevKjwQ1IlcUT5Dh9UJO7PhVbB5c
+LLZ2VIA8foekFKNmYFC2Xr5T4nTcE/pjNT65wZo9Sqppk4iGRb2J21Nu0yG
i7qXcoPUhJHD6cBz58hkOOgmsXODAZa3yuUJAdZbUTU+20e5dAZMLpa/4XCf
hseidxvfNhuh4YaLggEMMuwW2BlfrIPV7do958OldyAZjd4DlvNkWF7ZqFep
hc3rrW2ae0k7UF4Gfg3T8AxMEp5cu6I3DSyNe4UVt5mgsaoXiZyLWH3QgfFx
VWxfmlmTXyQshkx7V7BaLGH7ABGbWgtlMhyj2G8a+iqG1tiPjP1goWB1ZJaZ
KjoNq097aM9pmqP1iuN+H1lmQMo5xzbkKBn8eNVNRZX2oDrirObwmhnouC4/
7HMIq0/Gi5rHLuxF+UFfh88fpoBgkUHNBJUEAvzi9OB2K2QYt9b+C88MTI0e
2EyXIMOhgJxjExuk0SrHs0befDNQwbLoLS2G7bvup80H1Eoj6cjBLQHmFFBS
e6RUWESCCxKRpxkVtmi9jax83VUK+N9UILtVkKDBdsNaznJb1L2twk3SkgJG
/NdvG+aTIIbWM2B9xg4dcoi9cekuBby2XWU9m0oCr9bG5wWn7NGp1oabb25S
oCxnaNVrTF+U/6rY090OMTPlSI3aUSDMU7bgeAYJzjIEhgNU7yB1u/Mk1UAK
CG1kE6wOJsGVXv5MsQcOiKdlV8XO2xTojcxzVc0iwez4LiLKxPTjA/HLdyhw
TSPoQCnWLseI5TaJgbsoRPRO9IVICkQSCPuyPEgwvvtW5jVFZ3RITcQ7G7Oj
J5Xglp5JgvfbOf2k1bGc/PB64Yw9BRpS+dbkpZOgN1vTd57VEVEP5c1dekSB
k0u4ilf3SJBo79poec0FxZ8vmLO7RYF5/kryzackeLwcrE/2d0QbpNZErLSh
wC3N+51VOSSwHnut3PDWEb1PazaQweyIztbyfcDsMG+ubBXb6IZqxRyvD9yg
QMrhesk1hSR4ssdBEm45oQDpyHfvMX696mA+qYAEJ/lISVqPndDejPPbxR5i
fn2cq41yJ0GmvExtrZk7Uhba9+jn9ybeLzbV/fze5I7HGYuf35vE8f5vXlT0
v/l0Tp7lT77qsoINbxgFkj76Jz3xJQHVtHxiwtwDybyee/sYyweusCxeaywf
BrhK/ObYXJDwK7XLWhiX+nSO1IjxV/3WklvUXNDbapxZVgDWz4bOTrUQEmge
NtdT2eiJGsb1eCKwcbcXdR0lY+N+MSzmpV2xK1KYefI+3oIC7c8Jn1djfgV9
bDAM2eaGWLsbTqt6UoDl3pZvXNEkqN78oa32oif6UWr9FmH5dsXR3oELs7OR
9uwEO787ivQ7puCI2Sl7oHR5N2bn8CX3/Mvp7ihru7iDhhMFfoSXjgQnkuDr
bEz//vueKIS8vGc/1h+zyXNR6s9JQFI5XDZ1wgMRFOdngjC/XjFLPTHD/PLL
k2O/jPdAIql2BfPYOL44Ojxql02C9CaezNBMT9QltTusGdMnWH2UEML0LSI+
LjhBT/T4uOOrM6YU4J0+JLO/jASOtgS1RVtP1BjDGmGI6cfPrzaNwPRfB2fU
hEs90YuMr/F6mJ50oFdBFNMHBH/ZoOfpie5FPFaLw8Zrat+aT5ew8aIcVc/+
8MITBUnw9cxeowAutGFfywtM7x2c5bPGC+19zm2ojdnpG27L3I7ZOSd+cpuG
uBfyi+MrpWD6nUZ6iR2YvvFg/6mhDV6IKfVLVL0ZBbYtnOe6XkICjQ32V0kE
L5TjtmW2C4uP6cqvqjewOF/uqPvoZOqNhAvyEz0w/efZ5bYiTO9wa95rFbs3
2hadUyqA+cUfsTTUhPm1sTJGCpfmjfgC4zsksbhV1vX6SGH5r3uh/JqJqw/a
khSeZXkdy/Pcm/kPijG/lh1VnfDe6P7DI1IKmB12J6fGKMzOjPjFN6vUfZBc
KPVuFzZPJ405VViwedr03ri0194XiVSwqrJidr4bPt/8FbPz0LNDnhDng07b
TPIYY1y9niU9HOM7L2t5Ro35oLbMD0/YsXnNZNeq44nN6zrynuF4TT9UkJSU
mIDFrfqaHXdiKQlCbL4cyT7kiyJsN/KVYtxj6tp2D4zTalgeCBn4ohO5WQPb
MTsTcNnlImbnhLDNiTsc/mjMI/ieMRZntemnZofKSbBjm8biaLUv4jZbkXoV
48oZ+BA5jKv/kLuS0+SLtHY3s5/G6h7j2r73Z7C6t+db7Y5PRf7oHksgM5cJ
BQ6xfH97GRuvy368p9c7+aE0orDmSoyf6o3Rt8A4urv28ulQP9Sp3yyeZ4v5
JYq324vVQy3esq8+JwOQ9ocAQhTWf30XSrMf1n9NSszRoWP+KP/Ht6Cf+aaw
m/HxFcZHKqOFWG77o3nnjbt+1jH8gyNMLdh4WfjGmunWBqAWN8GaQ9i4c7as
zqjAxt2IWq0++NEfWWrvKMn9mbeiT6svYnY8qn0me48EoKLbYzGl2DwdV/Pf
9vUZCc6czlphtScQsSkNrduC2anbZibWhdm5v/OyVFp0AHoQLQRSmJ0BrsWp
cczOgorIXoHZAPRmyJYajtU9Pv1nDrnYvFZ4Y3Au3j8QiRhIsl/G9K84F4cy
Mb2vgvqlepFApIvYr67F4rOKd4lFEotPGL4pgS0oEN0+H2qwyezn955f0wBr
V69tT6BfbyByajYM5cH0M/Ws57Zh+qDVYrsz0wJRyxpz+Pl7+NGiMSY/fw8/
kIswmM1zH5nwitb+5IddSq/95D7pkh9+8ksF1/+XXmn00f/Snwpixf/kq3gz
a35yZUMH05/89HFg+/m7+pxnriSNY/kw6LPVXwVrdz7EKFWOcB+lJvVbZ2J+
Pe2Q5N6N+dW45B7+bHcQWnnzjlcHpn+VO3f6IqavOm0l/owpCAllKxlVYP33
aEwZk8Pm+9dqz+CGxCD0rSrhFic2j2Lso20UsHlEWb1enndXMCqu6i1zw/SJ
7RUPHTH9UG+T+eJAEKpK/q7HhLU7m7tCuw9rV5STnctJLRg1CnLvKMTi3+sj
pKuAxf/HWzsZRa4QVCHe5xyI2eltMl5zCbPT7v42XyU2GKVv2Pe2CeMF+2hb
ODC+tGEGZ0sORqa5FPNMrD6PvKwMYcXqreh2runb0yEof/o+z2pMz3Pi4vQ0
pj+85TA6cSoEVdZLc23B+CfBNPU2jLviCmjV9iFoW2OG3mqsLg06NPP7Y3XJ
WOu2MnN2KOJPIw+xY/GpE767+B2Lj+5sMI8dIQTx0t7Yrcc4NUbaegnjH3dd
+m72IQTV7ZzqJWH92Zl8N/YJZkekmrt6z8UwdOu9sv/Pelud9UDAEZunN2YE
lgb8QtHtJe+yGIxvfNWn7oRxXx7Cd+MHoSgmqIdb56edL9LlRzC/4l2qAncu
haFQvhPjIVi737+U7vw5vgOCUc3lqmEo1lDqhiPGA5DOq5/z+pudoOQ62zAk
8sNw0QiLs4Cq+Ct1LM6Xwr/LsIeEoxM5piVsWBy2jpYHp2FxoNJ8g58shyFz
2UNJnZidr6NO03iMz7eW5AwrhCNrozgHPmzcV+9zNq/D9g88VRHWS2seIOf5
sxFCmJ1Nqms8XTF9zMxqgmFqONo45O5QhNkp0oo1eo/x0h3dX9k/hyOvYIn+
AGy+BNPfbQ7D6ues24FvticfoOGss7f6MH0oiyu9AdP7JlawXBd6gGRDrXz3
Y7wGyYy7YH4pHTtdbnXuAer6+I3yAmtXb/WPDT/n6WbR2k680wMk1OtJP4zp
WQgBJ6wx/YYuffWLJg/QATYiOo/F+bx11e1bWJyZ1xdskEl6gNQXrNULMd49
V7L2B6ZXO7jbpjr7AXokdsr5p578rk7XGtNXXnw6bJH2AG2tw8d8Mcb2Y5ml
B/swnnrfRsz/xQNkI/mVVxVrtzJhyeQIZqcoPPIN55oINBGTpK+Mcfq6jjAF
jFeEW+Yqc0SgWO/bKg8w+2UjH+x4MDvbO4LpASwR6LSd4umf/oYNvt/6c3zd
bxbnOOr9+vkyN/65QNfPcUw/mquNxUGhUiHJ3/evex7t8l7FV+fEDHDGf849
uTQNTWpdKTrmCn+Z/YpvzNJM2L6uYwkVXAnF4lDPN/c55a/7nsJqyvy+D5a3
Z43HHpdi9SqnYsOZZ89//d7Rn+XX71Tl5T6cARGNcmtK6jQ4FPOlpqqq/WX2
d0UUFhuHY+uOl3iliQ8JlHln3wuFWCCj8cA3tUlYvhE3rLDalwkciamOlSYk
VF3RyvJ0+Of/f9Ht3JVQgq3PanbE70TUXnvTOqOAChcvVwu7zJfB1EfFA+Nj
BMSvOdw33E2F9DTuyX4ywKuVkwSTewR0RZCDZ282DQwCrhe3zjXB+yNU/QP9
UyjlZamfdiIN4m+V3VtdUgc9+D3G1jJ45POoft/P/9+Hvv2ztvKxViDilZ+7
DU0g7XyOjWzadMjKOZYtJtgBXW0qVsEHJ1DfQ0HCKTodxg49UXxBfwN4z7OC
aftHUfH0G7vnHXRwvVruyCzSDdtSpEv6c0bQ4qELNo7HGMBb7pdtW9sD61fJ
3eFyG0TOD60jDvIyYEqEU6JVqg8e2m36kMU1iNTLRWx79zKgXTaxwVR0EHgJ
On1+ib0oW/Wye4gxAx6c1rQdXeiHDaTHDymdvWgumKtu+DQDTrRuMdy0ahhs
FM4Y7TTvQju230h5tJkB8kLSZoXvh4HLeWK7jl4XuvAxtMxzhA43LHkSqx+N
wSZc2TTNtR3lZonpvnGjgxpN6P4V9kkIN3sz8YTUiB4RKwpoO+lgrSR3Z9lz
ChiPvVKZWADF9Zzb78tKB8tgX7+M9ClgT04SCRKoRfK2qmZGD2jgbYKGfyTi
4dlla0UNyzIU+iCFCe9FA/GE1snqPDw0VI3Ucze+QC9ltt3NmKNC/s4gv5RU
AlSaxxfccy1AwobluD5dKnQ0H+9l9ySC5Kp9ezvGMtCRIJ1t3ckUcKTmPkqz
JP0/7L15NJdf3/edCFEkUSpDKUpRSCFsYwMNkkQkpaRJpihFZjIPEaLMReZ5
/pjneZ59J3xHVDSS53vel/tcz7qv5b6e7vv3W2fXs85/HNZrHev47mMfe38+
7/fe+zg2dMyfnhmMDUMkw7mD5KckuKi0y8V45D3URZW6+2ri0Q91mv9+TzJ8
bL5naxdfDN89nrkORGORC+HnYPgN+nP/5mPJUFwDPjfdf516PYEmt0c3XmGh
QrYPzi6E0AwGCn3u5q0jKDom0LvvHhVMN8gfNWTrgudvNt87920AeRRjT294
SQW70E9Doj69kBZ6+fweiV5UnnK2ikeJCp1YtjoXzhFIPRjp7n2hGa3t5N94
Po4Mc896TDA+WOA0HmYw185HLGEV9bqfSHDc+euiZBIOgrponumaaav2Lz9G
oXAuAzKwnGg8LMKUBv52DpXnuHEoUX33qL4eBVwar1IiWspggcv07AlFDNK5
FCYlz0cFv854/tRN9UDtKa4KCx5F1aSDie9eUWG67lKJCKUNnnceKqh8MYhe
S+Veud5KBa0ixZj57m649eWpFmdkL/LnDCehtVS4Qk/x3zTGgPNlxdbDO2tR
pJzS5dnPJJh2/FV7IxkHc32Tl0XmUpBEyxM2m4Mk0Avx9BkoxUNZwBtGi9bV
v/fu2XXd+Zc0BbKPucbENGVC+O5C9/VlGLRN7BDS3UkF5b0XgF+9EnDIKjbJ
YQydD3exjiqlwljJ/s1LbY2AbeKIrNAaQgut2y+RWGlgabe7Yk9eJyS43rGr
2tqHLF85/2NIHGbPnWqOGu2l6/m3qtfXdyHaUceDi8EUyNF3u/gwewKCrcH7
Y1gZGlW8aFG5jQTzzwvEb/Xjgbskf2Pqnd9/37+tPjopmpUK0s+fnFo+mAMp
nfXCAZ7jaE7g7vCmbiq8P8JrE+ZcDTh3Zf/b8sNI2Dg4O1mFBned+UtZ2Fsh
nPZTfVdHH9pWV8pec4EGY1WVmsWl3TB4vv+oqmsX2hm1N3ZxAw2+F42SuiUH
4Paux8SY5WY0lGnLujBFBoWjZxgqxbHAdO3zRR2JnL8szq/GZcIUcjBdVChu
YfD3WMyDEnJVYbP2CPo26eXPa0mDPGa+jdmyddCTt2h9pLwfZXUW+b65TYMz
/ja9S0J9cOXSwzMHE1tQpb7qlk+9VJA0F/AoJgyBifcs/zb2WvS4iwX1fyNB
oWfq6MA7HHyzsY8z5v4/3v/3/5pnRx5RTXhBg5YzH029vYpAuks5Gj8wgK6t
3znVJEeDY897+Yx/DcBHM0b2JONaZEnuCObVpkJ5rfiaTRxj4O5Rrn1ytuRf
vQ7tP3F+FaO95/fNwOYFWHNAuBy2Ou8bPyrUi9ZV6UVtzaPCfucE+XdPR6A2
Qmzw9XgJupwtL15uToHwzWLc/rcxwJeVfa7JMeOPu6/V+LuXoeUJ72Zgqm5Z
hxhbBd8YUrIMd3QiFrFG2dg8ClzQ7r9Z3DUBqqXC+w3XpP9x5f+reNKPboWP
czOACVPWnJWsB1xM8nLI5wZkUlvBsGuZBKSOg0LH6XHeZ3BN46vcv//7pX8a
P6YofGhmcgbY6kjpd63bgPnZVTGLbYAcTG0FgXEa0mfN2X9+mgT9s+a6b66U
/XHl/9P4lrbKs+t3zoBDgf0mrEEf3OZS5kkv/P9v//q7eXdox4/Cu1PQeGza
uvhuP2j1q8eaTeL/uHL+m/+b/9/wF8mPLozeIMKHeDHXT9ZJEKiQni2RTkBh
1h/ishVJIOrFx6XDVQDj8WkWyU/wSN3rgkQV3ad4bvx2K/dyJUw3JO4Q0MCh
Ta1BT25q0nVLQZA5jbMRnmybKsCLTyCbV7JN39Mp4Mls/5pjqQ3ko6zQSbNR
tHZ7qT7jHAVep6e0ihd3QU+ylCRb1hA6tdibpED3WezF/POHVHpBEb+uxOhb
PyKkzJhRlKlg9Dj1y5noQRheU2wCil2o0GMjYekgBVqlKeoLdzDAcsbn8xrW
SmS0sVjifSUZdGRa2u+qYCGdkCfI+LMYGUZsjFJvJkJiL083jywBHHwZn+iG
RaLHpXtvnFYngVmgtE4u5j2c2EEW2ReKRzOp8fLPucnw7Smzj+LbIliuubHV
WROHwqoTP92oIINb/JxYoEg13Dsqkjb8HYMSO34YXP5MAe1Xzrrs6c0gwYP3
qt8/iiojFWiax6ggZDR5jMetExQw2+5InhhCUvxcig36VDiradjierMHljX7
rig49qNNHY0OempUYN0RqS4VOAwL0Xaa3AstKLWMM/FEBhn63sumXbLGwrBu
ctWREwWrPl+xLwvK7LvIcP2OlyArexrw8Cct4E1xqHdsbn5okgxSTR32llGl
UCQskLS4iEGW6bbqXc8pcOJpurydQi1I1qZd2iQ0gS7m+w/gPaigSyAvklPb
4KyuQPGu2UEUNSkjbJlAhTcvD29pk+2Gi2Gx9lyLfcj8xOWr/9iffaevQkJD
8Si8cPps8SK3DtV8LuF+uo4MrObn97T64iBFQAE23/iwuk8/U3Lm5CIZ6lUe
KXp2Z8Ix2/pBxINF8+vUVEyzKPBphu3BRn6AhQ2sjuvo5RzcyVVtIUUFq+dq
Z73e18PwR/O71zhH0be4Z9+VflAhJN6LnBzQCXkDCkw49z40dqb3waN5Knid
KZEtYO4FasfnWCGHbrQvWIu/lH79fe2tS5e3TkD1ffN6q1BABLbZjFQJEjw5
vjzWXowHI+nnP/Sif3+fJuo1zbc83RS4fuiwa71UDoxM8dre1ppAB99YhCc9
oMIZqz68XVIV8A/ivYF5FGUMaHRc76CCnAkl84tTExgpWg1eqR1EhaoFZbIn
aRCjqP7WMrAb+t61Sdh/6UKMS7cavTlpkJQ5+3TyeD9YXXzCazDd9pfFjflt
AnWvYqjgSHBZz8qUD+uSTLBf9o2igB385aO8NLjl+WKz74Fa+JWmWXUlaxBZ
KF5/m36LBszjt94VDPfCtOXbUp/wVvSriyW7/iMVRuJSpHvrB+HFCbcHP/H1
iEtgVD91YAoSWHe96deYgvs0xTt1vbl/ezwMIelWtuvTQJh6nXA+uAgMqi3U
cDWDqF4w4YuWMg1ArDZfJGUAqqrF4o/q1KHGMC+zEX96+7+P+3q6fAT69M9a
X9pb+cfF+UZnKYrKIg2GswV55w6VA0ff2MiSYB/q32+1c7GOCkckQER48wiY
aKwVfVj45+ntcotMngOeM6AQyBb7ZKESTloE+FvS439V9rRz0xAF7jWpDO9W
n4AdR7a689Zn/nHl/13efDP66oGxGTB5xL7nklQd8HxxPr7mUjPi2qGxHq9I
BlHhda1Xz+AApDYcvhz6X+4n9d+Wbyi7O1ikgIXevY+5Mw+Mwdj0fb6qtN//
fv6/+b/5v/m/+X8XHhhxgJGXrg/XTjx8/fLbKBwuKU9mNmxC24S5zj2zp4CM
g1XDrNwECB9kvc6iU4v2Bj3cp5lDAV7a1IKqxDjYFRO8NKLr0KlCn4MLE2SQ
kZb48HQtFvpOOKxPPFSGSlGczjkdMiROdJ2yZsTBdS1Fd5ecPBSpFKWtIUKG
zy1SlJFzOBDal2FjTM1GZWfWPkskkIDN94jM+hwc6J2n9vBuzELU8wenOQ6T
QHevLstkLh6Ksncon2iPR1gBoV1EXRLEswju03LDg1lWbKjS59XnF+Qj1xQO
031Tr1VL48mxUUi9YuL+y7oB5ZsV2VDpPlFJUePjhqVRcH8xSVDe2IAUuS9K
54RSwOyZ28PS+XHY1XnVsTikBm245oh7z0eBPWbRl45FYqDchllEnaECPT/8
ZOGUAQUkRL/Ypwhi4OPS2v6D6ytReI3FtRwDMlxsJ7yqWMaC9ZTkBeDNRSfm
Z2fECkhw/3JneMJPHIgLUFg/RqWgwzVrLt5wIkG3KbvcKy08hLg5MTxUTlr1
vmxDrPe+c6PCboO133p/DEBfi0DU05udyEi0uyPmCBUKJqT9BF+NwJiGbd/W
vEZ0/usWTYOnVIhjsk///n0IMiLfpT4JbEa8D8N5gxMpEKTM60xlmoAOnEez
f1gVYuDpK8h9Q4H17B4i10UnIFHhjP3ZI1UoLX9n5FUxCixsd6LqvsBAx2c5
eWuTMgTX5fczhZLhGAo7UpOIhUWt7KGiO3koeo2J5MMeMrDXHX1QIo8Fr3Nz
vRdn81Fl5YuctjQS0KLPJXxmxwPYSQzVFyej4M6ukKQFImB3rTm4by0BOivt
b+60jUJXF9Oj1+UQwU01/rDqZQIcmOF6xElcfXz76seauYEaKpSxmLFdUB4A
5ns29vwGHYhLXPEJTz0V7MuYxxXZByG5YdE4ubAVzbu2m5k8psIJ85SlWcFh
4D3hG9JxsBmVSB4hbaZSIFFVti5keAx4GY4+9A+qRicKtrS3IipEjp88u+/S
KESb/azQFqhF7T/ytfX2UEBFQeRkZBoGhMw/fC4wKUJtpz5wK+6gwJN+Ea9b
gIEXzgziV9IL0YyVfY8ulgSLZm+IMtU4cJr/QM65+x5V1JtmWfCTQVWH3+zx
PRwo7RmOEr2Riqg/zoeT+4lwgvH5lZr9BOBmuyKaaxL223FgWd5plIeLBuNU
WqhHdR+U6E763hHvQOwNIWJrM6kwen/429nQIbATpyaaBzciwVLlseBoevvp
sn/v8WQYRjUWNMK+1CHsW5sUAzkqfLMx9f7sNApWwganZatrUMbwy+/uDyhw
skfxe4YYBt59cHujV16Mih735lxqooCtZPzmi/T+dTzsfHf67jKUaJdLzLMg
g0tj5KfiOSyc6ZA6+astHa07rYlvuk6GjhJjV/91OCAElmt/Tll9/n01/syr
Q/jCMhWsm/tVI44Pgmiz7rFI/kakss4xK82Y7t+3/ZBiOzIK4g17gy6tq0Yv
U9mP35Om+5cPdjpVx8dgQNVKNHUDoG93/K4cyyEDcVO72ZA3Fu5x9veo3MlE
D2IqJl9zUOCIsfb2iE8YqH5Ejo3QzUZtfm/PzTwjQbi11KW0i3jwUv/Vclg+
BvHIHZwevEeCys8XA+vu4qHZofl8nPXqfr82cgd/UyoNdB03+RSbdELBV+lG
Fq8uZNiRlXfrNg3S69lfRTzsg8kkVb2C7GZUwcf5gredBkGSBhmFpC7YXVlW
EN3YhtpF1J5uSaVCl47MndIdI7B/d3Jxp3oVIj2bK6inPxfRoyXfWQ9NwKV+
SzPt6EKk3OFgU+1IAe+CK68zpTAwd85LUMjo9/3yJPGXhzvfDJzO7L3g+aQZ
xAu03e/IdyGxvTIMjXtnYH1/b5zfSDPcMs6zppZ1onW7VfnMWmkwuuXOY9Hh
bvhoseHV6actKMVgXTDnYRq0L44/qDceBEz2tuSnFjVoUi611LWKBlj35hz5
xl5426t2PGJXPRLY9wO/bQ0VSLwVPXufj0O23LFDF0fzUSz/N1/DETIUt+28
fV8HC9mf2qXEeFPRD4OLMe23yXCqn+Ps9fU4GHOTzPgulIBkbnHsXR/RBqZc
yY7Rjq2wOWp71/tzM6veb4opkZXl7AwQZgIEU6074OhUffW8bzN689112l5n
BoTqXQfXf+0AYd1F8+seTei8DHe7SSINvgUVjeQs9MHLlIPrEbkGVQ89OK4R
QwXqwteuvPkR8JeLPXh6azFKqBwnRVymwXkGN09Ru0EgWrFq2F0qR09V+w7d
nyKDTYlfAfkEFuTKDV+N/0pCAx5lrQfo+WVLaIod0yU88NTYds33haKOPpfz
QoNEUA9V8rslRgBMvWvIJVMPNMMQPWJTNwNpE7w/w6yqgZF1Yql+sg1xOpQz
NR+agfg9d0dVt/cAS/erD7L0eJi5fh+uRGwGOLM1cf2Pe0BOwN5Q0K0KWd4s
yZE6QoIMQUad0AI8vGfmb8jlW33f6p0vRrhP/5qBOB0NYbnHDeCLAmv0XtQh
X9tcfnwgDc5JPZMonxqAh7dHr8YE5aPJO/VbPaxosK7nxLrjYYOwZ7lio3jU
6u3z8GPhXELjDLQ4OkY5ynXCi2jOxPOkYvTi5TPTISwFmm5oTe24PAEnT3wY
npeLRTTHWQ+JYApcubu1sUYeA++vovPbyJFoRGeubbcHDXof8WjFvRyEWIHv
v2azElBity2/+YNOKFZOel9s3wAinu+dGq+u3k5W41Kqws2Da4gw+e4nYXlD
IgRGGXxjEZpE4X6mYnK8VGDM4es6OjoMmj4ud/oi25CldHrXJx4qpHR2BSR+
p/O8gHZlqTa0z715beN6KmwgiXxlmx6BtV+JFO4zzag58nYY5hIFtm1U8Oxl
wEDWR5H2C7uq0aLE7p36dD3Q/oyy80LgOMif+h68EFyLyOO3Gjd2keFHBnvr
+V1YSOtsenCevRQtW2a6qCqSIdLnoPO1fThYP8l14qtqLhqVvlXNF0uCAwek
lZT58IBzyJTtyUtBwxP3ovznSFDrO1e1kIADLTbnzZ4JGaj8R8Bc6i8i8OuS
GJgW8OA4YYh58uotEh5N0ag8TYJrZIMtliF4WJq9kBeokoB0BQLuLV2nwtTb
qXF3ln64xhFTuSW/B2UYsVTUnqGCQ/KbHGa3ITjgT3Ny5e1AUnw7Bf3peqmT
LHVq7+AAyLorXXR41YlC1Juka+k8K+PZtnniABh8n/QodexE0SOP9c4/oQCV
yPrWI3wCPpb/tJOpq0LaVnZnt3RSwGPH01+zP8egi0Egp0SjFklFOz3vmCbD
TUU7vSlGLMD8SMhGphK0fsGl9LwaBZq/BCD1ixgoCGhuNherQEV4+VypE2TY
99WJUUoIB1OGISFKO3KQj8TTIM7XJHgllU8b342Hefv8C+oO75ClqPJzTQoR
PPXy8M0cBEg5wOTIKfsa8ZlfXxOhQIKghbnsa0l4cJXvDPXij1u1Xc3WbfV8
lEyF7MWhIwvifSDLXcJavqUHPeQoDvlcTIW86kfXJHF9EL7HuGi4sQs5HBIf
76uiQvcVzpFa335gntb/yFjSiS5Y9N0zFqFCS/yAYuyeUch5vXsxWLwBpfno
/BqIo+ucpycGXvJMQBXq2cR3swpJWgQacjlQgX0X7snlDcMQsmed9IWrzSjt
vrvOIgNdf4at+7YOg4G3Pl115ziL0Y653Az92xRo41u6eIQfA3xBKrvDVcoR
n+f2ZSFter0FSocp89L189bL5RKfs1AoB4fRbB4Z3mk5OVOssFCRe/CQuEYe
Unrw4I3HSxJs8zjeck6CXp+XbpQ82peEboUb3p3sJYLomYGqkgMEsJFaG7xP
7V833uVzbV3dDioVLILPUidf98C5Fxvi9gn0IBKb16YdFVT4Hj7AV904CGfJ
Ms8evW1Gg0H3JNd3UWCZ7b62l+04tOZss84TrkLrbznwsglR4L3ps9EP+RjQ
kW3Z95qpCKWLL5f0KFBh5K2rkd6dUfiAcbBlm61B81rcJnmGZNB+sl/2H/lO
/twZh9fZmSiKVMV7voUMQ4P38Lm6WEgIyIgXEcxF2+/ttdf2I8GuW75WScfx
cCq0LhzbH4++OluJVC2QYJAtyGkoGQcNopr10Znv/jj/W/vpWEMAKxUkBriS
U7PGYJ1I5i6D4UrUtP0hzLhQgaFDh3363Ahs+FkvcXS+BtWX1/3QUKfAVf75
0h9OGGitL9QakipE+O/L5lbmZDjiDllDP7Bw0l3ps45yOvIjKhRa1VJgVkyr
M5ltAuzi+3Oj2koRddE94oErCdhpqXsaNfHwgDio5h0Xi6LRo9RXX0hQbzuS
k/We7osHAhXCDiWhniZajGwEEda8kvWytidAxoSbpbvaX7ffooPPEGXHRRpM
UEmPOYtawcztiuCPo31I+sakR6YBDT4+db+wc4muu0Ynx74ydSEfKiD9CBpo
HlvrkCrbAeoc61y10rtRoFZuSnM8DfK2azunf+qAgBvsHkLbu5GE1PYUj+9U
eNfUVSTlNAj3OvLFex3pvltOUMFeiwpv1zd3yuaMQhf2VKpqZSUyjG/fiB5S
gJOLthigQM+zaWL+O+ULEHOg7EDGWio0jhaVS0qMQ7D6Zc1Mo1JkmdGdTX1M
htargq8aJrFQnTorKHHkA9rczFZWbEuCb55nHrUY48GWwHHT2jga7ZJgwbuw
UOD52Zx965cxQNCNa3+0MRv53pe4JPKQCEcsMSeYUghwblKX36rUE7mpzXy+
hSXCI464Mio/AfyHJPMni4P+9vaJHTKwNsykwfGgMUzWu3rACZn6e7L3oQsR
AR73KmnAY88fp/+5Hsrxh9UMw3pR1gG3upyPNHgUINB/JqoRrnwKsj9O7Ubc
GL0wsSs0AOm9/B5O/VCeNPGr4mcD8k/ab8bRQYMOpTeLU1e6YcLts0Da21aE
ebPfX42uM7MES72LzUeA+ZH1TfWsStQraMWYk0SBa4WKeS/rJqDn7dzDI8H5
qKfaafyJLxlKVIMXetuwEJcqTjYpeY+k7I0Nj0lRoAt3yqeoHAPThltwqjJZ
f1wcYCofkdZQnoGs3SEEjqVWmJGY4mFkaUd3lN1exzHSgKHwuxo1aQi++3OP
hfVXogu7cjsz82kwNjflw3upD56qcfWdWFOHPDa1jzqQKTCv1DwtMTQOUXZT
oT7Deajw4UDTvSQyRNdmGnmnYIHHpLJrT0MyGlG4sUHyLAk8tWTSt4bR9XC6
b/Rx9VD0TIKD4+t3EqT5Bi8lpeLALaUsTOli9F92v1cKItQFdWdghI+gRt1a
AemMOP3P37vRMS2JtGeeNNjmhz3dLDAAgTQ2XiPVKvSMq6xvWmsGilu4hezu
dMH+tJRxWZZ6ZHLO6tDzE1RYulAjquI1Bsdern2lb5GHOPwSI1zlaDD9PU6G
X2wIbl050q2hUvrHPffV+LugQ+dEG6gw+CT3Y6THCKhHRQ5RLuehOQFTV7lZ
GtyZZ/7Z7dgHzseiA/kUylBwb3v75nkyHH4x9ZrhKBaKhr7tjTsW/5eV59Xn
6L1B32dgkNLIOXOlCQRm502moAZFn+rele9KA2Y3loKv0oNwkvecEFt6HpJa
Q0hZUqaAYuKBaSjDQKa4LHtXTiyiqjJaNXZT4VFvMZNGxAiMs8T21C6m/mXl
vJxdkMlfSYGAxOBvVZ0T4HL6yo0HMau/R/DfnVstmgfcrpuGtxdEkkPiE2BS
kuHrMdPJP66cv8szmA+3b+4nQkZEbLHMfgLoT9jKyBZG/fZ1xNZobwqXJMMN
hq9EggoO6llZ2Y9uyUajcjamiyxksBypOLLLHQd45zrr+5x/3frz1G62Qx6I
DGf1vtXTDQzs3OadorkzC114GHGkx4EEqT1v0wR18CC37cAGC7cEJFKIF2U/
SYK+gQz9tAg8sBK/TVw+Hrvq9RV4+T/J2ZPgASuO0q6Ph7UPdGscnq7usxhO
VFsHORFhV3zJvQfhdL/26JTrlua/bl9ddWGZyuRuCtyVb45UlZ8A3Uq989ZV
uWjGmiFrzJXu39+A5n5ZDEQ55Q2E7spClp+YjUX2UoGxc6nDa+s4DLPXPvUr
yEGXZfZvW4olQ+PujBZcHhaUhK+pJrfGo7d8XoV8e8ggHEEdOmCJg5Na0iJT
5lEo4KZGGq6UDH55B/IlA7GQ5LAt/J3t29XjQ8sxj43zMzBngTN+K90Cku3h
qkUlVWhP6eBSxecZCN+xT342uAXkeaO+PT5Uhfqierq7HswA56T16XGlHnj8
bCiurjgHNX97qRR4fQbW575KpND90ZPzqrE8CdloqkX5pscEBRq3UmdT703A
EFdk6ERLEIpPz+rbHkGBL7vmP4xIYcC2tmdgid0HmTxZk+XRTwJpUVmbwRYc
ZHK8zcwTS0PeP394cCuRwFmhqFIiHg8pMWelTnrHo4JLO9WvfiXCu1+xagbL
eLBY0MC/vxmNMqPPD1TtJEE/+7Pa1x14ODDGf3+31ptV66EltP3moZdkaJHX
8jP6gIV3zXJyTu45SHrnzikFJzK4FPaX4zux4FD/SSTnSvYfFx/MJLqCXOrI
oFIs7rHpGhZEU46Rsa05iDaaMb+rhQS5D7yVfxJwkPMg/fWtvkS0/apa4KsM
ElxJaH+TsREPijFPZbXnfj8/rn35w0cRKBC1rH1WbfcEaM3v9N1pU4pu6Ue+
43xEgeTbDwmskhhg0r2ovdG7AF063rHcMUMCH742ya15OGDiMkmvf5eI7mrw
mam1EME1JgO/SY4AfdEbPV6eCEa6PC07Nd8RwWpTkd6NWwRIP7MT4iX9kQDX
z+hPWAqUCD2Pn6gfh8DvIYbrlopQk5VgHXaZDA825+3V2YAFEYObw4erstAP
zri+jFAy9JpVrJusxAL+2QueDJkU9OpTCHIZIEITRmPNSTECqA+wBDSw/v0+
YjWetWadwMFdOMhyLCrjDMMCadmqqikZj1T6Uh/b0O9r3QldnDkvFgQ3btfI
0k5DBWGuBY/o9XlgowJ5czEOXl4j7LnJHYtq7zEciNInwUzC5wFhTzw8c7nc
KPrl9983eVPWcSY1mwR+R5xKAzjxcIhsuZ+nIvwvu9+Q/eJNzFtpILYNP2tH
G4LRTi6i4WwRsrkaEtM7Q4XWG1EbnOqGQZOg5dQns/p619X4w9Yna85O0qC6
Gi+wuaUP0sKHjivsKUXcTBxtTPS4ZH1/XE/i7ASMHdwfuoXxPRq3Wsgi+tH9
wv3zTyKOY0B4J5tDt1kC+vHxetP711Owgf12goU8AZZFN3UWXO1FXHY7UHch
FXS69wn7cYzC904BWrJECsLaGZXHO5KgikWQwfUyHpofyqde/OCBLHtvH3Ua
IkKqm9pZJXoev5c31DVs8egvq8/Xs9eytyYPgYi5J37CvRe4hYM9O+woSFN5
NM86jga8cZqXQhgHwcw64/XJttXnr5nXc77fJloJmtc5CvlEs2DCVUCJI2P2
j4t7/905W6L56YOjVLgwk191ka7/yx9MON5VX32e0Wnt+CLelgjNxWPje+MI
kD1g+L7bKRgt1g4nHzYnQtZF7o8mWQSo4Ttmumz/r4tjgm/qb27ZRAImP76l
HgweOjyUjWiLv69Xt+DiGNUY6Lpuh8q+jHk8rDlofvfjlldIdVLhHi6LCK+P
vPU9aUAA8aPiY5O8wSif1+TlR3r/Mt1f7m0uQoDrWc7khem/7j27tpczD5OK
ieD1wFwEe44ATzRdhc8VBv72dWTXhm25kEwCT/ar6yb48VCHjhWKlkYitNXv
e6smBZrMVUnp0Rhw2omTf+2ehuxHDhSVtpNAjUmd6EGkx3npmh5kuvq6ghS2
UYkz3hT4cdnUyEYeAwWvRBJc+lNQfp5lsZ0IBcZMNR59xGGAxnbR1ZOaiPae
OGE6Z0ABETVPb6ovBo48ihP4qbH6+LBYZMzMkVwSzGEnLxjR88KpDL5rxVcC
0OWanSn3uUjw0uWWhBAeDx95ezndzrsh1sNRrVZmJKgWt+8teYSHKkNV/dgz
3kjnoO4nQ0kSOG4VGe4qwcNt5gM9fszPUXrO7oMp6+h+hNlP48cbHDjeDT7U
vNYDRQhlqcUpkCEAkxWG0cZBep3BET7ZF0hNozQck08C0ZcK0fgNeHB3D2U/
bu3028/lnmxdeGQwEW4/+NGa5kQAhVqhNe/fhqBO6dTi0HF6v7tbrz0vQABD
rsAb15b+/v3reXdGiN3zIkK+pp3yaV8C7GHl2Kf7JgiZbn/dxxZD9y9T7xLX
WhFga8HGF10qIX/Z75Y6ab3Rorfz935PimPp7VzjsdBr/nWr96N9T58NvXtK
hI0J1RW5kQRQvhgzn//F77d/d/jQOxc9KRKEXzre+yWf3h4Ubmr+4o5Ecs2b
A+11SGB2iuGkiy8e2PYJOXnpRyNlkqfY1jUkaBwUMiv7ggeh3dk7Ej/9/fu2
Cz7sezNBJsJXxow8ps0EcJrYRnjgHIzG+dspCuIkyMjnM7lcjoeTWDWbmMPh
KPD549jhICLsXQja3ulMgHG7unOm016//buP5afmIteSoYxRK+V8NA6sp5ck
20mxKKLIf8zOlQxiino58yNYCNjGgXM48h49qe/Mb/5GAhMrT9yNVBzQ8sN6
Cx6v7qNV/I0HHoYQIdtOhkX1OQGW2NtUumJdURBNd90hFRKUUSM2FCTiQXxZ
qTElPQTtKIq440/vj1b6LP4fT+NAn/pd2UE5Dp07vtVyQocMHw/ZRBL24eB4
ydMX4nviETuzR2dJBAlGd1WxW0niIdqv+yD3wTA0KnnOQfU1Eey0VTtqbek6
v4LZyjvVGcV99dTbQfc1YulVXjefYWGTSvGGgQuJqOKHaJWzBAma4ehdS3o9
ywlrVC21+yMnyrtgm1tk8LLiWL/IiQMWy6ibHeVv0ca1WsnMHnQd+57XsugM
HrJuSSoZJQQhj26ZwVeGVFBwWTt64dYY4E7JyC/JZiJG84T5hDAqFD8Ynks3
H4W+B84S6gdy0KmtvdsKd1Hhk9CLZ5vOj4NWTZ/D0WcfkIWckuYXep4KmE+o
ekBvh5ZOGviX5zyQ7zbGe+X3yaCecS6zcj0Oxq2vc5kdCEUJT/yWbDFkcIh7
kj2rj4V9bd/LY3FRKGzhzqvrJCqcG3h884LkCMiaJ8t1TqShWLtLkl8vU8Hx
qLwhOWIM5o0Hz+GeJqLk2nVOTUskkB1Z9DiTgoNuxXPCL2f9kGHEGke/thmI
vvRG7uCnDnia0jbtzVCKkmXbpdISZuB04g3wiuqCK607+V1PFaD028D1eXMH
ECM2CAhNNoHbQfwmGaMZtEOMQ28qkgghtNOqJTYEONp3jHGT1+/r/xLD2zf5
f9L95qEgw/f0dvjgRK5Hfd7fP58r8sXzy08qEZ4PM4eKbCLAwrqYmAU5X2RJ
SejZ60yGbjZ22ksyFvgef/LgV3iNFBjyar1TyeAzIfC9Ow0LUYa1dUyt4ahx
4Xmnxz0iaCbxu2xPI8CvA0bfcvn+unj7u9zm9vZUi1IiHHYRjV46S4CJmbGR
Z7wOq57PcnAqITCKCCykx4Va9P7VqDCXgR8NQpjDB9hJdN99yl0nMpnuux10
cA7nTFxWvU7Tgc0lDXZEuPhh5P3OtwSQLlmYEnP++3Wmyq+71uz6E+D5RtmF
xDoBtZl8/qmHppFYps7nAAsi6Kx3iqp8TwD2M2Obv/4MQo+D3z7WcSdCRWSc
YmMAAUgnLVT3hK7+nTRrXnOHZfr5T05Zh98IpN/XQxcfpWAXdPeMabVJCRFy
uec/f6PnwUEm/SDaHrdVr3O+7XTvngkMpN13Nr/wdRy21GtdO3hlCkX5NBya
f06Ejwlj5LuhdP3AvTV/adPqeWqDAeNHievTwGhdEHNvaBKus1upFyhdRBMN
6perbhKBK36cYz6fnvf17qgYyVkhZgePOIZAIiSS0x60uRHgfP4GCRazh8jm
M39yVfkUcPMWPbzkNgV7aovvG+LYf7v+u1Uqt59omIaMqPdWAncnAffOx8ZA
5caq55ffsc+pTZ2CBsklH5vwKWD/NEfl3DuqVM6itiSWMQUXvgykrw+dgstP
ma0PVk8qveroxe67S4SErs/62zIJwFK+pkRsyg1lGxw++Tp3CnLuoxfB/lMw
bnRp6zr+T0qr/e7c4EPpvrEpGCErHKm8MQVBJS/IwRu2/3G+71/FjWf9rdnp
7efRebJKMb39bF9DPnj0ky/S6FS2V71BhM2Gim5MRXRf+aT3mlTQ6usAV+PN
TLof5jyJcDxQvOSQPwEW5Ub6J66vrsNzvq0rZaP/7g+xw7vtCun965LV5Ztq
f97+ev9/5X3V+uh+yhR081wRbHs1BbS3OYpaw/2r9q+rZx7OnkqbAq4dCf20
l1PwQnHJ+aYRdtXz5dTG4n2zpsDZ6Bw1KWgKnM5gx0/WU5RCXDAONyenQGjn
/nQmwymYfBDx3sXpENKcf213GTsF+Rx7WMSuTYGB5vezU1vFVy3/QO+JF+SR
Kbjte1Iy/+YUZC68KOR7Jbbq+YVhu+oTCqeAyabd1eXFFMBZTf8ixW9KpUrM
p/M7p2Cvw+X7QpZT8EU249jzyN3Ia23mhoa2KdAZDyVut5mC6zvwcV3Wm1a9
/g4jgZ2Rb6ch2nLb97GwSbiWXHKq6NTVVc8P8qVcEvk2BXU+gWEVJ6cAiW7d
FmIm8tvPMfl2gcc9eyIwTMVytdDzskS73+Q2X/tVz38rJMy+4TERcGedXQbf
EICqqOK2wcN51fMzFEu6dt8mwrEX66Z8cghgy2Akf6zVA0UR8V619HgSeFuj
XpoeT8wk+V/O5f++r7lJa/pGNCMCR6WtgQD9+veeSx/Z+iIACYuManLfIsL1
E1Mf+PIIcNn0a8yXY7+vNwojp6X0eYhgJfJrev/mSYiSq3e9WmSKJs18LvB/
IoLe9SHLqocZIK7N86LmMx7xPmw+U6w/DTJNYyXdww8qkrV2+dnjJpHjmXtl
NpfIsFdmzwG/TZXAF1umfLwUi4Y3ZPI036ZApFeVSTh3E6R67UjiDhlHXhKt
9yJ4qMDrfl7BZVcX7L9aolZiPYS0dIWkk/Wp0J5/KCc5ug+qDDmN9Y170e62
SxcpslTYdQDtz+8agj2i9Wf0pDvQ9jsBjh8aKXCsrJuX9d0YjGlr26kW1KNz
pWbtkTkkOOgZz+LakQX7nzqdXPiMQ7vjzI/58RKBd7OMPpOnZYXy/Oc1PZsm
Ebkcd8qPhQImnh31qhlVwLjLxNnHD4NMrAo2+3yjQNq0Q+sBqxYgLl5Lyp0c
QZsybz25+ogKs1ss5Vyju8GAW1y6Oqwfico1FbA+p0KAYTZfmeYALFxPO3nj
SRcy53+EGvdS4UfkkE5z1AhwhklLu6Q3rfpcXA/xVyVZk8HwsbCNXlIOOL0+
9WNiFIve+xwVqxgggulCZlPmVeuKNm/G6dADBHR6qjvONpsCsRWv3Hw9amBZ
rGB4yHccFZXqz92wp0LXe59Yo23tMGeq4Oe/aQhd6r1hKllCBXXr15YXlHrh
ZpnWskRsD/KXsRC4706FzIeF8cf4h6BA4Gl6157f/05CH3iNThyiQC9zwPa8
+jzQ2KB56Hw6Bo2bLfl6vibB6bH+p04ethWlt7Q/xB3GI+54gqzSeSoM52be
NY2rg+TdZ9Z+bR9BAYl+LWiCCjnqO1PDfTrh5FaxDce29iN9ZdGOyXEqmCtc
0jba0A9id/NTHF93InkuuR3ON6lAww1erN82AoXTw8TbDxpQbMH8Ru1wCpwR
3s91zGsCGnU6n86bVSDr1C33ewPJYPBQWk82HwuPHC8wyOZnI13Jto22liRQ
3ssXMH4dD+bZpmqK51afN/+rOHNyBPn6NAVsqq592qxRCER2IeeSxnGUqKUo
fN6EDEpeBqUHuOwrMOvXaloL4JDRS459aqN0Pz4mLDPL2QgMeUtfthIGUYvy
nXpDMRoUyOVLPTzeDRmHTA1i1vSgAsEMQt8YFTQLf+zy3DgIakYcpHLRFrR/
9CStlZ8K/t6i7+/JjcHsTcVh9vEqxKo2/eYaJwWYbVjNF+n6fbfa6OMXIvno
dfSnN9nDJGDublOQ7sDB+uSPojz/m/f+/m6u3rt9T3YYFb5ZCU93HCsBDX72
clHGUbSeuZFfeA8Fnp5GNoY7HCqycfbnYj5jEA+qa1h3kQb+uGuJgG8GvQpm
job2PjQytfCLV4cGk+VEBv99vTBVNFRMTutAL281U77kUMGkb8dOSdVh6GTn
eMG8vw5drvjldCGRAus2iYfYRk9Ah41msLBlMep0X39U6AoZ/IUndH224OAb
fr+CnlgqmlkrEPP+JxG8o9Nonot4EHg17u+5+N/ne3drqbfepBylgcb9/pst
FeUgbJl5aDfbEOrNnYm9WkcDhv14HBdjFXQc13U2nuhDaoqLHSkECsiyB9VD
o2PFq5pTlwlXJxCzzWHs3rdUOF9vHXVRxKViqH/p8t63oyh3zUzglzQa7Gs7
vCtaph3KBzT9MC+70bPIW3MsOBpM7PdNtubuApVtnhgRp3akF7rLruk8DYQE
KjMsDfoB7ckXe36qCV15YGr95AIVGIzyiy42jUJd127Vh4QKFHaUN7VhnkzP
FxG8JEEsSIZlcXrKZqFgBuqvDCsSOAjkpUeZ4qGiFfdYZcPvz8v8m//v+af5
zo5y+Rkw+1UXcqe1BsqpEdUn3boRZpL7V/kFGoS6L1+5I+xekX1P8a1h4hC6
EcNPNaU/95u3e5/vD+6BDc2bTwmXNfxx97UaZ2lYMF70mwFjlpRlWYsGOMz9
3FiOuR2FFYroy32lQRmqce7c4V2hkC9aYGvb/8eV/3c57txJCZQ+A3EcAY8o
Jq2QUMK74Wt/PYq9UnFjwncGQl5Zihe996+obAy0WOLq+ePK/1fxwixdHzmf
GdC/qnMn0KYLuGz9p+r3A3omqVj/lX0WaKPGZoaMoRVfMyy4Hq7tQCMYaZM1
NRSgMIQxaZZMQNzO7jH7W4l/3H39q/izlp9mwZ00WLi2hu/zQD+oKMhHpRzJ
Rpo37d8v2cyCffQeC609URUatPvROkH/feLDv4rbDfMsHm+ggOjr5gkhmICI
L/1RoeZ///zgv/m/+f8XXqrDse9qNRGotoZ37qSmQrSZ/5HjRwjooJzS8w8S
ZDj4IWO/ilwFRH/gfubBgENjbXixWEYqRN9L5IuM7oQmatPTb1uH0fZApq9D
OlTIwyoRubf3gafheqcRpj5UvSHY8bESFfQ8184I6g0Bz77QBppsJ3Le3Gxc
PUSBs0k8brqSY3BAyXMdV00D0jttwku5S4bJrbypa8exEDC9RZX2NQ9xKR0e
YfMlQdGnrM8bZPEQitPyFI59h8x1ZTxd4okQobqvzOUOAY7v/Dh95+fvf+9i
YftUz5rLJOiLF+jeNZ8Cwe9keZ2f4JHCr4GAoDIyGAkU3nu1G4Bnzz0rv71Y
VH3xkaeaERXaHb+0Djt2QVwwZcvEzAD6dHfHVUdnKnR3LydsOtoPIexS4gYt
3YhTf31YchYF7rTlX/3uPQ6Uy143M1NqfrucmDM2L21PUkAr1XMmcgngaFuT
wi0lDLK+GxIg/Z4KqsFksScPu+GLBybvaH4fkny700o+iQqFC51fhy8MAE8s
n8EOi06kKNN++bslBa5UNf88+2MClLbkDXXowG+XZ9+hsted7RRQceSWzr5e
CcKyOIzKq/E/rp3/T9/0fd9/+Ka+Fd/0P/3O0IrfOf0//Y7nvRhVXhpsl7Hz
d50ZhNqx3obRX9XItvkEZk8OBTzynresezcBr6vznvEY5CGOEH9lC2Yy2K4z
2oENx4Fx8pD291+rr3Mw/sfBeVN5wT+OlZzl/+r6+bv5nh4HLrkDM/DEuWzi
cUEVsFQEdYnc7UHG3vH3In7QIEbpzLPblt1w7ofF0vj1JqQrfnPrUwYK+Brf
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
S4eY9UHIGeNPFWL8qU8Yf+p/AMiuwqg=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 407.36378100584443`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-1., 5.666668319444688}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.061517367000044, -2.274689792132166, 1.4233525547547852`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.547575973960267*^9, 3.547576013214428*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXeYVcX9P34+997dZVl6FTWJMc2YmCwgYAV71ES9gApiA4WVjiI2LNhj
19grKGLD3rBT7L1rYotGjRpjjCaf9JjznXefmTvn7q75/J7n94f7PGf37rnT
zszr3d8zZ4dJ86ZOmTVp3rR9J631k7mT9p86bd8D19pmzlx3q/w/WfY/D7rr
i7Uy+JxnmfzCn4fgF//z1eevPn/1+avPX33O3sU/PT//7LPPVp5xxhkfrrHG
Go+NGTPm4SVLlnzhfuDbB6dMmfLq008/DZ/h3orjjz9+5UEHHfTQ3nvv/eLD
Dz+cvUBNvY9/ys9tttlmz61YsQL/K+Hv5kevvfba3777Lnb2+osvvvjsFlts
8W/389Fvf/vbV4cOHfpX95M9X9PM8ytXrsT/GvB344pjjz125amnngr//cP9
vLr++uu//dprr7Vf8/Gddtrpydtvvx3++4/7eWHTTTd96dFHH22/5nObb775
c8uXL8/55/lRo0ZBmf8v+1xx3HHHrTzllFPqP+fzI0eOjGu+8dJLL6Um93l/
tSt/+vzzz1fMnz//rXXWWeeFBx98sJGawMU98cQTcXEnTpz44iOPPJJ18b6L
F55Wt0t7ALmXOv8H/ulVtP7wbUdwco/fWiEkKvW/DhspWqlK/a/DRoqAUqn/
9f/lSD6FPyVQeprrA6lS/2tu7hNtLivnbW1tOd3OGBOFYKvU/5pb/1hbJxhZ
FzkyDvdFPVw21PmOAfeR9kAjqvg96HfPUuEP/IflB+VxhXVZrSxp+afp7vt6
o8z1VPcURmgPhZ+epIrv6o2GoorR5DQlyj1Gjb2jjaUKpRrrojW4iV/rjeYO
NtE1Ue5hauxNbayXV1FU8xb9lou/rjd6440GLApVTnPTDBdU65bobxU18Ctt
oK9XiBtwg3e/8VvrmSu+qjf6JypWwopR38upiZe1iYGJJhrxd1ixWWtwEy/q
jUGJJpoSw7+fKj6vN9bgitXBbVqxOdF3atGYNJ+Lvsq8ZkcPsWa7JsbDTTyj
N0qJfuThxg6NGsNiODL8dDc19pQ2VqnT2M7rW2NddGRl/UQEUfHrarvLqKMn
9Mba3Oguw9rCFeSm6sHhdmrsMW3sW16hXYdjgw7Z1kQ9YHBjj+iN73iNjR9B
jdlD9qg7sluosYe0se95c7LbBvqo+F2fuuPiplbpje97TU3YsE3ovH8CIzdR
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
0l3z3XWouw4idmzaiZu4/baiOQYhD+54EfLAye44PqExpyi3V/htROuRKp0S
sBGkByYgHa7El4R0JPlwOhwW9r42z/e6xl1OLO/pZN4ejt/v7q4JV9LMj0+t
VLxKF+BK8Qr0MZI4vWaViByO41U9mlfpcHcd5q6D3XWguw5w1xwa4mb+ikGW
BFQEfz6EIkS7ATZ85wlFJlqkePVJrEQ5QTFNCdqxdfI0zzz3E2s2DJnwl9vs
Y2YUSjjkHY7/7rM0zyddl+cT4XILt/c1tHh7usXb4ypbuN0Wy2J8s4bExrrF
G3NxsHDKy3BRfBI7hRfu57ZwQF5Y7ij3+QheuEPcNU8XLq/O4jL7/Tuv7vtP
0mM38VcS/CgZOxEhMgNK37XzSYLcdWLoxzAzJFL1yuHqNih3ixSulEyteOuc
pzXAEcFKfsmNVbazaJSR3ffztpvyfMqNdE122sa+cF1PfU+SVYYVTpGnW+EJ
i3GVkTyhzq5ulXdZGK2wI8+qrDKsMDNRXBkhT3+VgTyPR2kFpMkI6k5M9BBk
onl1rrv2pxWuTv8PtTX5n3l10t/z6l5/zau7/29eHfcnqruRv+LgscrYK3v2
fqQ/X3c4Sbq7fx560CIGakIt5UXBKR1Ql1ibE0x1uL+6nd/O1hhJzEz4NK1w
JZ92S55PhevmPN/vZtenW3LXoiz4ZF7wfa6XiW5Bst5byPrqJFnjgo+7XOp0
zXd2ZD3WLfqYS6IFP58XnFQUKj4oZMkRVYvQxDU9lNf7QF7v2e6a8Z+8OvUL
+n6ff7j1/ptb77/k1fF/zqu7fJ5Xx/wRe9nQX3ZInso8Z7eYCyBg7zkpkVHs
7+rqmBUROQH6J6CQyihJ6TxDaSnX0SdIxY2G6TKX8hm3wbfTb7PuS7DqJVhy
10MNmdOKEyNfysNvVSqvs+DExxdRP7rgjsqrsugeH1dV6UxezVMLqVz5OJY7
OOLjM9017Yu82vZv+n5vt+J7uBXfza34rm7Fx36WV3f6Az7GCH/VD+TM81Mj
ewmE9L0nh8RO8rgmoJYSxM0JHmBqrwn7XnrPfFu9EzyAl/u7ofBm43vWHe7e
zNthX8gMp025lcZ1nn5rnk+7lYbpVjorGXX3S1G3sfPrqNLe7bBzWGxm5zSd
36nLzWWdQWbjGrWzzsDNsdw85uZzjJujvJ78L/p+T8fNJzhuvuufZJ3z6s9+
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
yFjRSm1n9O2VYHvLP+l7NNdla4sXC+5pGQ0bsmsLieMFJI5q65NMFA+6azl/
vstdt2Ptb/oiRPy0kO3gRQ0waFDKX7y0SIT0UvPCVKPGhED4ktpYKrPCdCuT
LWW1rusSRmckSnedngrQRUXJoazkQPIkNOLLKkkw1CCyAvSrw/xreU5xB/Lv
kjARxAfChHSrBl+3wgv8u6I4+SlABTpWCciEw2rEHjXHLZYhN6kMCaIOMLLO
pk6MudTbB5reG6jaVqxhLTBfFkL3IN8U8cLLk/xY2mccS8PQciZRYkiVqA7/
FZVD8ngWyMMUrBU11GE7a8BhMdiOdgBPMOTvetEMDGaU8pcuayuHKZa2BTyV
xdZR9at/AvAR9Lu2C/0iv20K+vbupVK+4OGcBYPQZDkkB7Q4eOyI/4ydWIh/
0qe8uhbmYDOcLA2fDNihi1dIBhVqHKDfIMkWehn4m4pEhB93I8UgUKLSEkI0
KN3VXo8APG9udwHfCXm4z5XcVOIL9i0GjQ+3F40bxbb1iNfo7+AXGdPioH0I
QV1tvc9dd7vrDnfdAmW/4eN6whA79kD9tUdQ3jDkpEN8o8QWtsevdXNkxMYN
xtFxiBZFLgxXRHtpC1uJBES/UCyUlCK6t0sRRV7eFEWY27iUH/2w++TIogR0
IFTiU0QjUITkGoFwOJwuCnWwWJi/QurWowg0tiUpWWwKlgBl9eQ6kElehcQx
mABKMeuH+EUP3SIOV0dYP9sPeIqxs+0gtxOUH6iumy9izi7G8yl8QNUAdCYh
Wv2ct33rx+8E7dVN3mIF51Vm1c8J2sVcYpesgr3aeiP8b9vqXJk91rcDH84X
L+2RxLZL+SuLYqAjpAKWbj7baGdFpKXYKXup2HTqrICWRDkLcBjDL2lIuR68
O3YwSC7eKO5XsF1WbDcorBsA1syBUw6lKLuC2X2a0Zd9fUedUZ5JoAaB53ht
UcerYLdOBlGGgBdz4DbPHKAeAfKyD7qJcQ2MHZqNGbuG6dg0Rq3mklxCFKMT
ur/nN1ItI8qZqx4iCtzqpMxIgn5NdI63Gm35Pt3b5NdOoeEcuSEvMeafVqcq
ROboHjD+O911a4IWKvmew+xc7QtntpXYH3MXBSwsXNGQoILaYHTKmE3lxXVT
g6FeaNsoymRKKuLRXEQffYvpY4DycnvvRJMiH5V9VmIE+eRV9cfHJrHoOz6f
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
81efv/r81ef//3zO/uf/Ae6edTk=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normalized3D", "[", 
    RowBox[{"x_", ",", "y_", ",", "ref_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{"1", "-", "x", "-", "y"}]}], ",", 
        RowBox[{"rx", "=", 
         RowBox[{"ref", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"ry", "=", 
         RowBox[{"ref", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"rz", "=", 
         RowBox[{"ref", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"med", "=", 
          RowBox[{"Median", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "/", "rx"}], ",", 
             RowBox[{"y", "/", "ry"}], ",", 
             RowBox[{"z", "/", "rz"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "/", "med"}], ",", 
          RowBox[{"y", "/", "med"}], ",", 
          RowBox[{"z", "/", "med"}]}], "}"}]}], "\[IndentingNewLine]", 
       "]"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"0", "<", "y"}], "&&", 
     RowBox[{"0", "<", "x"}], "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}], "<", "1"}]}]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.547467187602984*^9, 3.547467196502426*^9}, {
  3.5475717684130163`*^9, 3.547571988986555*^9}, {3.547572135190092*^9, 
  3.547572266825357*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"normalized3D", "[", 
       RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"normalized3D", "[", 
       RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"normalized3D", "[", 
       RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"MaxRecursion", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547572277687077*^9, 3.547572341854218*^9}, {
  3.547572503443899*^9, 3.5475725284984837`*^9}, {3.547572628547284*^9, 
  3.547572629729044*^9}, {3.547573147855527*^9, 3.5475731654743967`*^9}, {
  3.547573213320202*^9, 3.5475732432115383`*^9}, {3.547573329338565*^9, 
  3.5475733392085247`*^9}, {3.54757440468857*^9, 3.5475745022847853`*^9}, {
  3.5475745426769133`*^9, 3.547574588897246*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
n7Bvdt/ebRq4/+HS24phPsE6+KWu82jv3irwvR584fAMrjc5V0hdeH+gBY23
vXPDTYw/GxrcrhvW78f59rpT4QvHypNA0tLQZP54+y2R4rdCgqDhUbtbCWMF
iivzImOsrv7BfX305/gvEPFqo2vkK0JPnPImC1/2l6L5g7bH/Xg+lQc6m1Kb
5NLq0fy36qp2FqzHcRr5d9evNUnN7eHQ8r2F7oM/zreH8Mfte6f6BtilmxNf
JeG+L+sLCVuvzRZDmP9sXkAgxqNCwpwl/YohWCZo6Xz/FdB78voB0wIwjpmu
13yG+6zs+81jJTblwI9rPGx+D0rBcYVdh85e3Ne0qU2xuONPBRq/hT3k6en2
b0gOh1xGfYi8hn6GJzOR57h267Xm21NVeF+Oegs31/iDyvNS20nvJLROuy0b
1/bZFMJxx9Uc5m3poHGOXVJWGNt/htrJrd95MoBenN7iqTbGh9zvqkhzlUDT
hiMX5uelxXxTub7zlMNb10tdYkzd/8Qpm9zVS/gp41s+yK42YsJ58tJIxvCl
fs1ge1qIa7fzazgzPT7RbhWCvrvb2tLGpM48eFX+aPCL1ScoXj+gVD6M6xFN
Zolel6UKge+IlMKJrh4cv+8dOyATWAhn7pT4M5j9288Qf/+t8FBVH6RmjLHO
X8+Q+tfry//rhJNUeQYhXEZPVijY4xe0VNVaGma/Q3jhQoG04yFjYKkgPWw4
bx7x0fdSQqnjMHyJsG/RyL4tW6zY57qMXpmZ6l/ScF5ljSBf/Ql6Zc0cvbFz
2R+h5Ve+TDFFnsLibUI+O3G/BIqbHk1G20w9V5qND5nWNOJGfurNWQlt0bEn
cF5UY8t8nvYs6flaBZ5nwHssYR2RFyHn8budnt9X+gTsQuo9GusxT1A3MT0Y
vegtlOw5Z9vs9h0a6M4PmY1VQmNer156owXOM1D9RQNYbBRsWcNyHsc7VH9R
B2IPpYYCXHFfBOrjP6po30uR79emYJXAMznAbtZLd1mqAfq0ooVvF55HecLl
LrXco3GD8Nkkwu3V50A0j9nQPmZwGYI9fBwMKpvf4f7PhTWFRTwLlXlY2S5l
38Z5OQMDyb6YmBm4Zz66MFgZ19N5FRwC279zofo+4wm2ylEKD7ausa6an39b
bxa5alcr7otQH+hlNqb4fbN7UneJfBviM4aLjhd6x0KnmNlwjBTmb/Rvr/zc
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
vi6tI8XnJc4/kOeQPJfkePL8kOeJxP8HRR9zTQ==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
zyjOGdMnmE9oPzUtuJ4+kx0DByBTkT2DOcyz2fEgLiYuIT4mrnYUx1OD9xdP
Z8fS4/qfbN4rHr4gO/ZUSMWX+wdzTs2R5ucY9AnIOvBAxqyJroniINWzeciv
4HbZNWC/bP6pvYB888Pin8qZzaLrstamS3Je/VTvIz8O3qf1TZ5b+fH1wfG1
Wr6UXT8bRPML8eojs/Oz9lmK5xtK3mjM+X+i8QnZ7zsFfJzybXR+OD77+bX/
WogsCq7vJ2XP/wzwPPS05NgfxHV3I6dqDPq26HnuxJiNJbdor7IhmEtrLteX
+VyhHIn/z+War8CDy/219lWiubH2q8cnj9+M88dlc4P+2G8vc/5gtn/IN1Qr
6yuG9Uw6j/3fshZTk2vlmuD361Oe4bTit3qGQdn/JT7ZgPt8yz3aIBdHx5TW
8vngmq64EEdXrRH/mBd8/1Ox1Sj5XzlmcjInUV0dVeqa8lLz7DGq3YptxXX7
bL4qnvB4cD1Xvrogmy8pdhTvtZUrg/PmguA8qdz8WPB92jJmZPQY5dhxyc//
ubhEdu3dh/MTo2O/N8cnR/O3s7L5vPLDi8H/2QFZEr0/UFyrb7FZMl/SvnR5
8B5H8T4zOefouhfKteI/LZOx8p5yhO7zlPhFhddpiWIhO8dqTbfFvjo6P1ye
nGPle82x1+P49Oy9iWKwC+OmRK+L8kyz5DwgnqM9rHxZdU31TLXswmy+Or3E
8oDi/+Iq4tk1ir89msznv8N2ZPExxXr/4nuvqi5lc4V+2OZE9yjEkU/OHrMd
tnVIFfB4ZGVwfhDfCYXzaE8hPvOV/JKxt0bzPfVV1H/4MfjciuDnUd68Npjn
H1RysvbjtcBPJj/D5tGxp7h7Ozu375L8zA2yc8iS7D3my9FxtTr42t7RvEl7
HO1nt2HOV3F8D/JnNCfRM61S/gju2/RKjn35/KTi518k7w3kVz3RMZt3qbdy
XPReTHuKKC6VHCMjk7l311Jf1HN4P5unvcP5Edl7c+X/XbPrnXi+9s4nJ+ei
/dHLo3nvt8G5ULld/ZRTS2yKM5ybzUm0Jzon25+bFr4hXqF+3dnZe1v1rH5G
lpU8/UV0rj4efXN0rq4R7Y96X/UT1MvolMzJB5Wc2SibU4knq9fyffSz9UXP
ju6nbaH/zJ5b7d3vit6Daz5bMFd3RL/TN+W9WosLZOcL+UC/4tufMe6gZF/S
/uqH4PtvyvmHk+f/+eQ9tebtquz4V+wLb1/h/K7e3cHJfvtQidnfSg1XjR5c
nrlvWZczVXvFORjzdfF7Xft0NA9TTtPz7lieWXxh35IT1Au6qcTvBjl4MicX
bz80ulepvlC37H2Bems3l9wivbFg9aYOzB7/RHKvRu+uHtp2FZ5T9VP/Kvn5
sOgcp2cQj7wp2B+0f1+YzdePSPbTtcFxpv6G4uVdznWP5kWLsVfi/mdH98pu
TM5L6n20KXE6Ntt35bfqhZwV3Q8Zo3sFv5fGqq+m8dOz+3RjwVWze0bqF6nP
KU6m/1WP7obkej1a/xfMVcRLa/M813KvR5I5g3x1/+h9vt5dPQ/1nfcDV87m
EBPKu2yXvXdWv+LT7L7hYcm5TjlA+8fRyf2oj4LrgWqBOIJ6U/J58elKyfdR
H29lNicUH1QuV61QbtLzqOcgLqw9uzjtrsnPJrvmUv0lzecVyT031T7lkptK
PlHc3hGcw3fh/M7IA8G+MKf4g/xL/Sj5mHoFO0TXhZbZezfVUvUrvs7mveoV
f5ndR1aPddfoOqX9gfps2iNch16HtAvue7YpnEF7d/WvFIPjk/tCqsva+6r+
av+r+qa6rBq3Orl3eja4TvI+S/zit2R+8B83iO7XKE9qnz0neK/9h3wt+7tA
k+SaqNrXHF3B8ezgPZ/6rOJm7ZJ70qOKD2sffknwd4fKFeY9q5LnRXOicx8G
+4n2+vJx5bGl0b1m9WxPSeYG+mahXr642OSSo6pUmBupz94+2c+PLjlyaVmv
P7L3M+qbymf/652WWimsvfhF0ftx8QX1mrQW2hMoLyr/qE+neiU+qR6ivi0o
H6o/fF1ZI9XAq0sd/KvUaNVx8fq5JY9/kMzdxdvV41f90jvqO0uucNyq598j
uxek3q3yovq3NZRHK5zfByZzb32X2S35u4TqmniFOKZ4+LHJfEffAvokc3Lx
5StLfRTfVV91t1IT9f1jn+T/Ve/99+xe4cHIHsmxr7zxT3ZsdEz+1qMcIz/5
O3s/fDiyb3IPRD0A9QOHFH9bn73nFDd7JXve9T1iY3bNU674N7vWar+ovrv2
jOIT6vePCK5BqpmqAarf+iYyuuTAqhXmqdrvqFaq967ejL6fiCfk5L6lfPxz
8N3JNVe9Uu31xMe3Tu4VKF7kq+uy9+riKv/1SYN7NOIEPUv+VMNE9Vu9Ru1Z
xH0OSa6/yqvqL2o/em6Jx7+y+xfiq9rnan3VD1cPQvlG+3f57WPRvQ19L9Ne
rVpyP+SM8vz6JqHvEf8HsHJPew==
         "]], Polygon3DBox[CompressedData["
1:eJw1mXkcFnMXxX+/maeoVJJUUqkURRIKWSpCIdnJWiFSSvuCVkRkS0SRLWlR
qJCtjdCCSmWJNr22FlFp1Xu+7/m9f9zP/M4z8zzzzMy955x7p1q7Lpd1zkII
+2MIBW0nCvybh/Cd8IXCp2t9kHbU0OcfC2fChwmfKTxY+Bzhg4XrCy8UnqJt
ReHztG0lfK+2A/VbpyhqC/cQ7qn1m4qDhZvp+09Ef3+R8MvCSxQNhc8R3qPt
ecJfat1UsU+4ufDXWp+t6CT8kXB5/UYZ4Re0/kpRV583Fj5Q6ysUP2p9qeJK
rfcqztH+n4Sj1pdwvcHX+4B+5wjte0/r+orTtG+1oqo++1C4tq5tjdZttL5Z
xz6nfesVZ0Yf31LrQ3XM6TpmhfA30ffq2+DrCdp/sWKllhcotmvfKcLvan2C
YqDwD8L19L0jhfun+3ecoopwGW2nKjpp/bSij/Z/p+Mr67NDhXtzLuFKwmWF
G2i9TjFbuJfwqen/fiLcR3gn51EU03oU/0/f3yc8hnupuFv4ex1fh/siPJT7
JtxA+BhhkmelcEXhosIPCz+k9amKY4UHCa/S/hOEqwk/IrxWuBHXJHwiz0bx
kXAP4RnpfjdM+fKXjl+TO3/qCD+brucM4eOFH+T/kwNan6wYovWBuv8VtJ0h
/BJ5rPWvWrdWlNJ3r1f8ovU1ioO0r72ihI4rL7xX21uFi2tbXLiuju1NDQgf
JfwmxaLfb6Htf7QsqX3XKTZofbViqj7fL3y+tj8Lj9f6T8UN+v5VwpO1/lvR
Vvh64Ve0baVjNwfjhtrXR1FSn9cTLsex/IbWNyje1bGZzn+5tlupFx13sdYb
tb5OMUnH/qVoE40P0bqvopTwTcIdyWPhcqn+Ogh/IFxWuLTwcK5Tn80h9xUv
at9vinOj8Vitf1U04xnzPKO5YVYwfkzr3dpfS9t5wv9qexb5pnUjxePCe4Rr
a/sp90PbTcJXcx3C7bVtwzVqezP3W/vuUuTCtwgfqnU/RenoGnxL622K24Vv
E+6idU3dn7aZvzNFeIXiWuG25JM+uwGOC8a3aV8nxf7g3++sdVdFQce1hy+i
ufC+4Jotqn2bFa312SXCr2m9hRwQvlx4DFylaCF8FvdL51oKxwifRz4KLxO+
VPh84Ve1/kZxmXBz4cHavxM+03YaHJf47HPt70c+6fPl6fzw67twoeIC4SZw
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt1nnQjlUYx/Hnee63QWkvS8oWkWRJDalhEC1IXrIkmpHS2FMhhCJelLKG
7NkVpawzmVaylkmYRAkVraZSmiZ9rrmfP37vdf2+59znue9zrnPOW6l7/8J+
uUwmM4DOow5JJvMSzc1mMg/Q19hfOqzHqovX0xCsPV+MjujTFDuMnRArY4tj
LPlqbVv4Z6ifvBxdRaX4XvSvfl30O42tFpdgX8kPUwdtC7EvaTp/FzXC5vGv
6bebv0W+F7uTPyifitUTP8WaYwfkU7CbxN1YY2wYtcD20AhsFz9d+zQaH9+O
L5Ifohnyu6lxfI+2jdQI74C1wr6Tj8Se5GvE92Gz+cn4NvkN4kf4bmxqvAtN
kL+MLZcfoTnytvF9+nfUVoK+4e/IpXO/lh8gLy7/Gz9LP/CD8JLynvJ3xK38
KHpaXptq0TltLbF9nq0f84INF8dgI2L+qJq2STEGVlasSu9jhXy7JF3XWN8m
lCRpfcR7xfsd9PwCcSI2Td6GmmvL8W3pUMy59i/wxUk6rzGXn/F7aRQ/Fh8j
v41qamsTv4nP4m+P38CWii/is7GO1Bpbgk3CXuU70b3YYOxZbChfhypil/Cb
qFBbuxgHKxLHYeOipqI+sIr8TvwJPicuwDbEb8a7UC2qQ+/SGvxX/TrLz+pX
EGtK87AuVIit17YC+z7Wi7piO/kimsg3i31Dvflj+i6XPyj+p98O7HkajTWk
W2mmtrnYtpgn+Xb9ekStxL6J/SL+ia2LsfAT2H3yX7Bq/B75MKx4tGNviJPx
+fG71D6T1ujnuXQPHE/Sel0of4i60bdUpN+sJK2ZqJMq4nv4W9gH8mLyHuKZ
bDp3+2mofmfz89g/6pm6x/tG/Wp7POqHVvCPUQFdVJDu1a2xrlGj2Iwk/ZZ4
/xKeX4sdys/Vc/maj9ofzNeki3Pp/oh90ixJ17Bpfu5ry5dia8WTxmslHsOr
0IXyVVhJ8Vp+ZJwzUVvyG6lCfLf3e9PzPeTnqJv2dfz4qJGoJ7FCLvUz8S2e
q5Rv68Z3TdI5j7lvjTfgz4gf8teIm7S9go2Vb5aXj2djnegAjcb2i+1oVdR4
fv2jDn7EVsZ5Jf8du188hc2N9Yw6l9+cPyc7852SdP/EPmoRa8fXodVY2agp
fFmS1lbUUxvxOFYf+yPqIM4+cYO2RUl6HsfY8Ru74oxI0t8OFufzDuxofi9M
yNd31HkN/mftG+UXiCv1Px3rSCfzNRi1ODDGoIHyqlRSv/OT9PyMsynuraPx
jXw9qoTV5a/0THd+eNQf/xtN1laG35yka9gTeyTmXr4vl57VJ7TNkD8V3xNn
b4xFl+pXOz9Xl+Prseuw+fyc/J0Td892vG7s57gL471ojbZB0YcG86XpMuxg
/hwfkk3vyrgz5/FNknTPx97/BOsTdwv1ll8Re0Zb76gf6hVjkUcy0/0pR7Pk
/2Cv009xzmNL447iN1DLWIc4q7EG4j181qBT9Hsh1iGTnqGl+b6UjbWI+or5
ivuNlskfpYcz6Z21jQbw5bPp/XWKf1u/ArF6fB/WX741zgX+aiqG9eU/pj58
qWz6f8mBJP0/oi9fhsrGncE3TNJ7I+6Pyp75H2JIFnU=
         "]], 
        Polygon3DBox[{{797, 894, 369, 292, 291, 510}, {811, 898, 380, 307, 
         306, 526}, {942, 700, 699, 941, 493, 494}, {752, 751, 442, 306, 307, 
         443}, {700, 737, 422, 492, 940, 699}, {924, 663, 662, 923, 453, 
         454}, {844, 908, 407, 340, 339, 
         570}}]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
      Line3DBox[{274, 362, 955, 275, 432, 373, 299, 439, 1015, 383, 310, 991, 
       543, 544, 392, 319, 997, 400, 973, 328, 405, 978, 336, 1004, 411, 344, 
       582, 1049, 416, 349, 1008, 484, 591, 419, 353, 1011, 492, 422, 1066, 
       356, 600, 604, 424, 1059, 359, 606, 1060, 500, 610, 501, 611}], 
      Line3DBox[{276, 363, 956, 277, 374, 964, 300, 384, 311, 992, 446, 545, 
       447, 320, 998, 453, 454, 974, 329, 406, 979, 337, 412, 981, 345, 1006, 
       476, 477, 584, 1050, 485, 592, 486, 593, 1054, 493, 494, 982, 602, 498,
        605, 1058, 499, 607}], 
      Line3DBox[{278, 364, 957, 279, 375, 965, 301, 385, 969, 312, 393, 321, 
       999, 455, 556, 456, 975, 557, 464, 465, 980, 338, 576, 1048, 577, 578, 
       478, 1023, 583, 479, 586, 1051, 487, 488, 596, 1055, 495, 601, 1057, 
       497, 603}], 
      Line3DBox[{280, 365, 958, 282, 376, 966, 302, 386, 970, 313, 394, 971, 
       322, 558, 560, 976, 330, 568, 1045, 570, 339, 470, 1021, 472, 580, 480,
        1024, 585, 482, 350, 489, 1026, 595, 594, 1025, 420, 354, 496, 357}], 
      Line3DBox[{284, 367, 959, 285, 985, 378, 304, 988, 388, 315, 546, 1036, 
       547, 396, 324, 1000, 457, 562, 402, 1041, 332, 466, 408, 341, 473, 
       1022, 414, 347, 1007, 483, 588}], 
      Line3DBox[{286, 368, 960, 287, 519, 520, 379, 967, 305, 533, 1034, 534, 
       389, 316, 994, 448, 548, 397, 325, 1001, 458, 563, 403, 1042, 333, 467,
        572, 409, 1047, 342, 574, 474, 475, 581}], 
      Line3DBox[{288, 504, 505, 961, 507, 433, 521, 434, 968, 523, 440, 1016, 
       535, 441, 616, 1064, 537, 549, 538, 551, 1037, 459, 564, 460, 977, 566,
        468, 573, 1046, 469, 575}], 
      Line3DBox[{289, 427, 506, 428, 962, 511, 435, 522, 1030, 436, 615, 527, 
       1032, 536, 528, 539, 449, 1018, 550, 450, 554, 1039, 461, 565, 1043, 
       463, 567}], 
      Line3DBox[{290, 508, 613, 1062, 510, 291, 524, 614, 1063, 526, 306, 442,
        1017, 444, 541, 451, 1019, 553, 552, 398, 1038, 326, 462, 334}], 
      Line3DBox[{293, 370, 963, 294, 529, 530, 1033, 381, 308, 989, 445, 
       542}], Line3DBox[{295, 513, 514, 371, 1029, 296, 516, 437, 1014, 531, 
       438, 532}], Line3DBox[{297, 429, 515, 1028, 430, 517}], 
      Line3DBox[{503, 426, 361, 273, 431, 518, 1013, 372, 298, 986, 382, 309, 
       990, 391, 318, 996, 399, 972, 327, 1002, 404, 335, 1003, 410, 343, 
       1005, 415, 348, 589, 1053, 590, 418, 352, 1010, 491, 598, 421, 1065, 
       355, 599, 1056, 423, 358, 608, 609, 1061, 425, 360, 1012, 502, 612}], 
      Line3DBox[{512, 509, 1027, 369, 292, 525, 1031, 380, 307, 443, 1035, 
       540, 390, 317, 995, 452, 555}], 
      Line3DBox[{597, 490, 1009, 351, 417, 587, 1052, 481, 346, 413, 1020, 
       579, 471, 340, 407, 1044, 571, 569, 331, 401, 561, 1040, 559, 323, 395,
        993, 314, 387, 987, 303, 377, 984, 283, 366, 983, 281}]}, {
      Line3DBox[{618, 740, 794, 361, 617, 955, 707, 619, 956, 708, 620, 957, 
       709, 621, 958, 893, 983, 622, 959, 710, 623, 960, 711, 624, 946, 961, 
       796, 712, 795, 917, 962, 798, 713, 884, 1062, 797, 894, 1027, 625, 963,
        714, 626, 799, 801, 1029, 715, 800, 1028, 741, 802}], 
      Line3DBox[{627, 742, 895, 1013, 803, 743, 804, 373, 628, 964, 716, 629, 
       965, 717, 630, 966, 896, 984, 631, 897, 985, 632, 806, 967, 718, 807, 
       918, 968, 809, 719, 808, 1030, 744, 886, 720, 885, 1063, 811, 898, 
       1031, 633, 814, 817, 899, 1033, 815, 816, 1014, 745, 947, 746, 634}], 
      Line3DBox[{636, 900, 986, 635, 747, 805, 748, 1015, 637, 384, 638, 969, 
       721, 639, 970, 901, 987, 640, 902, 988, 641, 819, 820, 1034, 642, 1016,
        749, 810, 750, 643, 1032, 812, 887, 813, 644, 1017, 751, 752, 1035, 
       645, 753, 818, 989, 919, 646}], 
      Line3DBox[{648, 903, 990, 647, 825, 991, 949, 649, 920, 992, 754, 650, 
       393, 651, 971, 904, 993, 652, 826, 827, 1036, 653, 755, 821, 994, 921, 
       654, 948, 1064, 888, 822, 655, 1018, 756, 823, 757, 656, 1019, 758, 
       824, 995, 922, 657}], 
      Line3DBox[{661, 972, 723, 659, 973, 724, 663, 924, 974, 725, 833, 926, 
       975, 834, 726, 666, 951, 976, 401, 836, 763, 838, 1041, 727, 837, 765, 
       840, 1042, 728, 839, 930, 977, 842, 729, 841, 1043, 767, 843}], 
      Line3DBox[{672, 907, 1002, 671, 978, 730, 673, 979, 731, 674, 932, 980, 
       732, 675, 1045, 844, 908, 1044, 845, 768, 846, 408, 676, 769, 848, 
       1047, 733, 847, 1046, 770, 849}], 
      Line3DBox[{678, 909, 1003, 677, 910, 1004, 679, 981, 734, 680, 1048, 
       850, 851, 735, 681, 1021, 771, 854, 911, 1020, 853, 772, 912, 1022, 
       682, 474, 952, 773, 683}], 
      Line3DBox[{685, 913, 1005, 684, 856, 857, 1049, 686, 933, 1006, 774, 
       687, 1023, 775, 852, 776, 688, 1024, 777, 855, 778, 1052, 689, 779, 
       1007, 934, 690}], 
      Line3DBox[{692, 861, 862, 1053, 691, 780, 858, 1008, 935, 693, 936, 
       1050, 859, 781, 694, 937, 1051, 860, 782, 695, 1026, 783, 1009, 938, 
       696}], Line3DBox[{698, 786, 889, 1065, 736, 868, 788, 890, 1066, 737, 
       700, 942, 982, 873, 738, 872, 1057, 790, 874}], 
      Line3DBox[{703, 869, 915, 1056, 702, 871, 876, 1059, 739, 875, 1058, 
       791, 877}], 
      Line3DBox[{704, 878, 881, 916, 1061, 879, 880, 944, 1060, 954, 792, 
       705}], Line3DBox[{706, 945, 1012, 882, 793, 883}], 
      Line3DBox[{832, 759, 950, 722, 1038, 891, 831, 1039, 931, 670, 766, 830,
        1037, 929, 669, 928, 1001, 829, 764, 668, 927, 1000, 828, 762, 667, 
       1040, 835, 558, 665, 761, 999, 925, 664, 760, 998, 923, 662, 997, 906, 
       658, 996, 905, 660}], 
      Line3DBox[{867, 784, 953, 1025, 914, 892, 866, 1055, 943, 701, 789, 865,
        1054, 941, 699, 940, 1011, 864, 787, 697, 939, 1010, 863, 785, 
       870}]}}},
   VertexNormals->CompressedData["
1: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
Vdy0Sg==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  ImageSize->{322.0916697651914, 432.},
  PlotRange->{{0., 0.9679932704055101}, {0., 1.0009005313400121`}, {0., 
   1.5944770807097801`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.9539839310990126`, 0.9572238754811687, 1.344507860526533},
  ViewVertical->{0.31030151994960975`, 0.1287048877753079, 
   0.9749677299968292}]], "Output",
 CellChangeTimes->{{3.547574559898089*^9, 3.54757458945993*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEvQd4HNeRLorLIFHZSXKQ1tba17u2d9fPu7b33utdh91339qWZUuWbMmy
cs45UFkUI3LOaZBmMIgESCKHAQZ5kHPOOZIACBAAQfyv6pzuwQDsAQFSuhff
15iZDqe7q/6q+qvO6dO/f/yt555++fG3nn/y8dt//cbjrz33/JNv3v5fr75B
q3b/NweH/+bj4LDrttsd+DscHNR/4s+X/yk/PuPvGeJjzzL9Nfzbv/1b9/e+
972hvr6+Ntute9foryYvL296amqqwMnJ6QL9ObTKXbLFx+7KjIyM0aGhIfGr
RW7Kkpv46JIHHnigwMPDQz1KbtozNjIyMv2Vr3yFG12ivw0H7jEdOXKk8x/+
4R+43a7m5mZla6b4uGr2zJkzg7fffrvl1KlT5+nPdODAAb6w5g17FcfExLT/
8Ic/PEd/vKbQ399/oKenp9n2BveVHz9+fOwb3/hG+V133dXd0iJOVODm5ma5
4447+BpfEbvdxKcscHd3H7311lvL7rnnHm6cT8lbzU8//XRLVVUVf+d1psOH
Dxe8/fbbRY8++mhDcXGxw/02wv+RlEztr371q1qTySR+7RL/ryk1Go3DAwMD
/KujoaGh5j//8z9X6W9seHi45cc//vEi/Tncp91WXUFBgdSYvHnTwYMHC1xc
XPgXa7jlJz/5SW97e/s2D2dpWE6ePMm/WIn1P//5zxtLS0u3eXjtf/zHf9Tm
5+dD+av75S9/yfv8nzm76dChQwXOzs7buPe6X/ziF5sP72xsbNQSve3hP5Qw
nZudnTW9//77bDv1ZrP5KtmOAMHRo0cFCB577LGGkpKSDSD4HK1afP+f/G8v
uxHbs/4L/7uK1+6Rdw+rm6Fff7bZ8x+33HO3/aNP2AhgsxVIlO+ztZayxMRE
FjVrrPDFF18sjY+Pf5I3XM2NX7vFuZ955hl1/cZzf8Ge5fBW1cL4d9cPfvCD
pvLycl5/dn5+vu1HP/oRu5uHrPf+xcs5v13Lk5K86iz9Mab5F38yAlk891lP
+9VLnFaezWHTae3ZzNXySHaTzT/96U8by8rKHO6yilhLvbdc1vntmbxy25Xp
6elFOp2Ob5+1PPb1r3+d3etvrbd9ncZpbxP/91hPq5z6T9u6c3nmvdU5OTkF
jo6OHDAmb7nlFr4Kh/+9pZK3dVp7XkYRKds8X4X49UurwP91O03b80BK02w9
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\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.547572635296042*^9, 3.5475726357007933`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refPt3D", "=", 
       RowBox[{"{", 
        RowBox[{"rx", ",", "ry", ",", "rz"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rx", ">", "0"}], "&&", 
        RowBox[{"ry", " ", ">", " ", "0"}], " ", "&&", " ", 
        RowBox[{"rz", " ", ">", " ", "0"}]}], ",", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"normalized3D", "[", 
             RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"normalized3D", "[", 
             RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"normalized3D", "[", 
             RowBox[{"x", ",", "y", ",", "refPt3D"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
       "\"\<Not valid reference spectrum\>\""}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"rx", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ry", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rz", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.547572277687077*^9, 3.547572341854218*^9}, {
  3.547572503443899*^9, 3.5475725284984837`*^9}, {3.547572628547284*^9, 
  3.547572764189596*^9}, {3.547572841000574*^9, 3.547572842920978*^9}, {
  3.547572909827879*^9, 3.547572910526245*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{714, 719},
WindowMargins->{{78, Automatic}, {Automatic, 27}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"7.0 for Linux x86 (64-bit) (February 25, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 108, 1, 172, "Title"],
Cell[678, 25, 191, 2, 105, "Subtitle"],
Cell[872, 29, 99, 1, 38, "Subsubtitle"],
Cell[974, 32, 108, 1, 38, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1107, 37, 99, 1, 89, "Section"],
Cell[1209, 40, 719, 11, 220, "Text"],
Cell[1931, 53, 551, 9, 194, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2519, 67, 101, 1, 89, "Section"],
Cell[2623, 70, 295, 6, 91, "Text"],
Cell[2921, 78, 1028, 22, 168, "Text"],
Cell[3952, 102, 104, 1, 39, "Text"],
Cell[4059, 105, 510, 8, 142, "Text"],
Cell[CellGroupData[{
Cell[4594, 117, 667, 15, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[5264, 134, 823, 18, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[6090, 154, 1315, 32, 166, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7408, 188, 2863, 58, 353, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10274, 248, 1705, 29, 166, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[11982, 279, 5845, 122, 526, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]],
Cell[17839, 404, 503, 8, 117, "Text"],
Cell[18345, 414, 1007, 28, 121, "Input"],
Cell[CellGroupData[{
Cell[19377, 446, 1305, 37, 175, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[20685, 485, 281, 8, 39, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[20969, 495, 638, 15, 148, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[21610, 512, 2227, 55, 584, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23886, 573, 121, 1, 113, "Section"],
Cell[24010, 576, 588, 10, 188, "Text"],
Cell[24601, 588, 891, 13, 257, "Text"],
Cell[25495, 603, 513, 8, 153, "Text"],
Cell[CellGroupData[{
Cell[26033, 615, 187, 2, 60, "Subsection"],
Cell[CellGroupData[{
Cell[26245, 621, 104, 1, 47, "Subsubsection"],
Cell[26352, 624, 322, 5, 117, "Text"],
Cell[CellGroupData[{
Cell[26699, 633, 1446, 34, 391, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[28148, 669, 398, 12, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[28549, 683, 1527, 42, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[30079, 727, 536, 14, 166, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[30618, 743, 3373, 67, 450, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34037, 816, 111, 1, 47, "Subsubsection"],
Cell[34151, 819, 170, 3, 65, "Text"],
Cell[CellGroupData[{
Cell[34346, 826, 334, 8, 39, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[34683, 836, 687, 12, 39, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[35373, 850, 1419, 37, 175, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[36795, 889, 525, 13, 166, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[37323, 904, 2253, 50, 613, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39625, 960, 118, 1, 47, "Subsubsection"],
Cell[39746, 963, 1556, 31, 365, "Text"],
Cell[CellGroupData[{
Cell[41327, 998, 1816, 45, 278, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[43146, 1045, 2109, 52, 353, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[45258, 1099, 1487, 36, 278, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[46748, 1137, 547, 14, 166, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[47298, 1153, 38951, 922, 615, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, {5}]],
Cell[CellGroupData[{
Cell[86283, 2080, 1990, 48, 278, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[88276, 2130, 2033, 48, 316, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[90312, 2180, 1622, 38, 241, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[91937, 2220, 638, 15, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[92578, 2237, 12063, 275, 615, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {5}]],
Cell[104653, 2515, 1109, 16, 326, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105799, 2536, 120, 1, 47, "Subsubsection"],
Cell[105922, 2539, 2135, 60, 208, "Text"],
Cell[CellGroupData[{
Cell[108082, 2603, 1838, 50, 310, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[109923, 2655, 2401, 64, 497, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[112327, 2721, 400, 11, 91, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[112730, 2734, 402, 11, 91, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[113135, 2747, 778, 17, 128, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[113916, 2766, 457, 9, 91, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[114376, 2777, 668, 15, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[115047, 2794, 9618, 173, 732, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {8}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124711, 2973, 164, 2, 47, "Subsubsection"],
Cell[124878, 2977, 1467, 40, 197, "Text"],
Cell[CellGroupData[{
Cell[126370, 3021, 789, 21, 91, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[127162, 3044, 436, 12, 87, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[127601, 3058, 1473, 35, 228, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[129077, 3095, 17562, 296, 540, 10215, 173, "CachedBoxData", "BoxData", \
"Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[146642, 3393, 914, 24, 166, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[147559, 3419, 542, 11, 91, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[148104, 3432, 620, 14, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[148727, 3448, 12389, 217, 620, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {8}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161162, 3671, 118, 1, 47, "Subsubsection"],
Cell[161283, 3674, 2128, 65, 220, "Text"],
Cell[CellGroupData[{
Cell[163436, 3743, 1153, 30, 166, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[164592, 3775, 1537, 39, 266, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[166132, 3816, 2004, 50, 356, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[168139, 3868, 656, 15, 128, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[168798, 3885, 609, 14, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[169410, 3901, 8054, 145, 518, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]],
Cell[CellGroupData[{
Cell[177498, 4051, 117, 1, 50, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[177640, 4056, 1069, 30, 183, "Input"],
Cell[178712, 4088, 400, 12, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179149, 4105, 361, 10, 75, "Input"],
Cell[179513, 4117, 206, 6, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179756, 4128, 379, 11, 75, "Input"],
Cell[180138, 4141, 355, 11, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180530, 4157, 713, 23, 135, "Input"],
Cell[181246, 4182, 973, 32, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182256, 4219, 1010, 32, 143, "Input"],
Cell[183269, 4253, 265, 9, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183571, 4267, 121, 2, 50, "Input"],
Cell[183695, 4271, 156, 4, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183888, 4280, 406, 12, 75, "Input"],
Cell[184297, 4294, 377, 12, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184711, 4311, 488, 15, 75, "Input"],
Cell[185202, 4328, 536, 18, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185775, 4351, 1330, 35, 272, "Input"],
Cell[187108, 4388, 15189, 255, 395, 9870, 166, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202334, 4648, 456, 13, 110, "Input"],
Cell[202793, 4663, 185, 3, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203015, 4671, 376, 11, 110, "Input"],
Cell[203394, 4684, 113, 3, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203544, 4692, 741, 23, 122, "Input"],
Cell[204288, 4717, 9285, 160, 326, 3186, 58, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213610, 4882, 173, 4, 50, "Input"],
Cell[213786, 4888, 19664, 331, 243, 12886, 218, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233487, 5224, 1644, 39, 238, "Input"],
Cell[235134, 5265, 15389, 258, 532, 9880, 166, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[250538, 5526, 723, 11, 271, "Text"],
Cell[CellGroupData[{
Cell[251286, 5541, 1559, 41, 257, "Input"],
Cell[252848, 5584, 3478, 100, 541, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256363, 5689, 428, 13, 75, "Input"],
Cell[256794, 5704, 279, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257110, 5717, 633, 20, 120, "Input"],
Cell[257746, 5739, 362, 12, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258145, 5756, 813, 23, 153, "Input"],
Cell[258961, 5781, 563, 16, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259561, 5802, 451, 15, 50, "Input"],
Cell[260015, 5819, 231, 8, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260283, 5832, 728, 24, 153, "Input"],
Cell[261014, 5858, 350, 11, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261401, 5874, 169, 4, 50, "Input"],
Cell[261573, 5880, 72, 1, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261682, 5886, 181, 4, 50, "Input"],
Cell[261866, 5892, 112, 1, 50, "Output"]
}, Open  ]],
Cell[261993, 5896, 784, 24, 153, "Input"],
Cell[CellGroupData[{
Cell[262802, 5924, 2730, 74, 551, "Input"],
Cell[265535, 6000, 4985, 86, 532, "Output"]
}, Open  ]],
Cell[270535, 6089, 805, 25, 153, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[271377, 6119, 168, 3, 40, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[271570, 6126, 709, 15, 247, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[272282, 6143, 718, 17, 87, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[273003, 6162, 662, 19, 72, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[273680, 6184, 203, 5, 72, "Text"],
Cell[CellGroupData[{
Cell[273908, 6193, 803, 20, 87, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[274714, 6215, 1490, 50, 200, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[276207, 6267, 793, 20, 87, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[277003, 6289, 398, 11, 75, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[277404, 6302, 2081, 62, 415, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[279488, 6366, 20947, 355, 410, 4021, 75, "CachedBoxData", "BoxData", \
"Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300505, 6729, 157, 2, 60, "Subsection"],
Cell[300665, 6733, 928, 20, 193, "Text"],
Cell[301596, 6755, 514, 14, 85, "Text"],
Cell[302113, 6771, 249, 5, 85, "Text"],
Cell[302365, 6778, 139, 1, 51, "Text"],
Cell[CellGroupData[{
Cell[302529, 6783, 3826, 99, 578, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[306358, 6884, 539, 13, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[306900, 6899, 9309, 167, 518, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {3}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[316255, 7072, 96, 1, 60, "Subsection"],
Cell[CellGroupData[{
Cell[316376, 7077, 104, 1, 37, "Subsubsection"],
Cell[316483, 7080, 442, 7, 142, "Text"],
Cell[CellGroupData[{
Cell[316950, 7091, 1784, 43, 278, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[318737, 7136, 2517, 71, 1103, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[321257, 7209, 398, 12, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[321658, 7223, 1535, 39, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[323196, 7264, 534, 13, 166, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[323733, 7279, 4889, 94, 411, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {6}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328668, 7379, 111, 1, 37, "Subsubsection"],
Cell[328782, 7382, 371, 7, 91, "Text"],
Cell[CellGroupData[{
Cell[329178, 7393, 320, 8, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[329501, 7403, 3445, 83, 466, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[332949, 7488, 615, 13, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[333567, 7503, 2824, 61, 586, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {4}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336437, 7570, 153, 2, 37, "Subsubsection"],
Cell[336593, 7574, 3065, 92, 338, "Text"],
Cell[CellGroupData[{
Cell[339683, 7670, 1213, 28, 128, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[340899, 7700, 1061, 28, 146, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[341963, 7730, 388, 11, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[342354, 7743, 274, 7, 66, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[342631, 7752, 242, 6, 83, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[342876, 7760, 190, 4, 71, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[343069, 7766, 926, 20, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[343998, 7788, 435, 11, 75, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[344436, 7801, 979, 24, 128, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[345418, 7827, 569, 12, 52, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[345990, 7841, 498, 9, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[346491, 7852, 543, 8, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[347037, 7862, 414, 6, 52, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[347454, 7870, 5112, 123, 428, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[352569, 7995, 647, 14, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[353219, 8011, 2150, 47, 617, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {16}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355416, 8064, 131, 1, 37, "Subsubsection"],
Cell[355550, 8067, 1447, 48, 244, "Text"],
Cell[CellGroupData[{
Cell[357022, 8119, 1410, 38, 128, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[358435, 8159, 2428, 67, 278, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[360866, 8228, 774, 21, 91, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[361643, 8251, 868, 23, 241, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[362514, 8276, 950, 25, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[363467, 8303, 637, 13, 128, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[364107, 8318, 3510, 90, 616, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[367620, 8410, 1525, 37, 241, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[369148, 8449, 574, 14, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[369725, 8465, 2537, 55, 617, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {10}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372309, 8526, 136, 1, 37, "Subsubsection"],
Cell[372448, 8529, 2067, 76, 210, "Text"],
Cell[CellGroupData[{
Cell[374540, 8609, 394, 9, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[374937, 8620, 592, 17, 52, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[375532, 8639, 512, 14, 70, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[376047, 8655, 1263, 34, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[377313, 8691, 2731, 72, 428, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[380047, 8765, 3397, 90, 466, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[383447, 8857, 611, 13, 128, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[384061, 8872, 664, 15, 203, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[384728, 8889, 2913, 54, 525, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, {9}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[387687, 8949, 235, 3, 37, "Subsubsection"],
Cell[387925, 8954, 3417, 114, 244, "Text"],
Cell[CellGroupData[{
Cell[391367, 9072, 1031, 25, 148, "Input"],
Cell[392401, 9099, 356, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392794, 9113, 518, 15, 67, "Input"],
Cell[393315, 9130, 486, 9, 52, "Message"],
Cell[393804, 9141, 262, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394103, 9153, 833, 22, 67, "Input"],
Cell[394939, 9177, 3476, 122, 336, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398452, 9304, 638, 17, 67, "Input"],
Cell[399093, 9323, 170866, 2788, 527, 145095, 2364, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[569974, 12114, 1628, 48, 202, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[571627, 12166, 1316, 31, 175, "Input"],
Cell[572946, 12199, 116275, 1909, 558, 55038, 904, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[689236, 14111, 94, 1, 39, "Input"],
Cell[689333, 14114, 1841, 46, 229, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
