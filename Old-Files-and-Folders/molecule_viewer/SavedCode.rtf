% --- Executes on slider movement.
function slider11_Callback(hObject, eventdata, handles)
% hObject    handle to slider11 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of
%        slider

% This is the middle(top) slider X-Zoom

% Checks the frames
frameTracker(hObject, handles);

% This section is the calculation for what the new values should be based
% on the slider's posision.
sliderValue = get(handles.slider11, 'Value');
xRight = handles.axe2xLims(1);
xLeft = handles.axe2xLims(2);
difference = xLeft - xRight;

newFrameCalc = sliderValue * difference;
frameSize = (2*(difference) - newFrameCalc) / 2;
newXRight = xRight + frameSize;
newXLeft = xLeft - frameSize;

% Updates what the new display values for x length should be!
set(handles.group2_axes, 'xlim', [newXLeft newXRight]);

% Update handles structure
guidata(hObject, handles);




% --- Executes on slider movement.
function slider12_Callback(hObject, eventdata, handles)
% hObject    handle to slider12 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider

% This is the middle (top) slider Y-Zoom

% Checks the frames
frameTracker(hObject, handles);

% This section is the calculation for what the new values should be based
% on the slider's posision.
sliderValue = get(handles.slider12, 'Value');
yTop = handles.axe2yLims(1);
yBottom = handles.axe2yLims(2);
difference = yTop - yBottom;

newFrameCalc = sliderValue * difference;
frameSize = (2*(difference) - newFrameCalc) / 2;
%newYTop = yBottom + frameSize;
newYBottom = yTop - frameSize;

% Updates what the new display values for y length should be!
set(handles.group2_axes, 'ylim', [yTop newYBottom]);

% Update handles structure
guidata(hObject, handles);





% --- Executes during object deletion, before destroying properties.
function slider3_DeleteFcn(hObject, eventdata, handles)
% hObject    handle to slider3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% --- This is a helper method to keep track of when frames need to change.
function handles = frameTracker(hObject, handles)
if(handles.checkInitValues == 0)
    handles.axe1xLimsReal = get(handles.group1_axes,'xlim');
    handles.axe2xLimsReal = get(handles.group2_axes,'xlim');
    handles.axe3xLimsReal = get(handles.group3_axes,'xlim');
    handles.axe4xLimsReal = get(handles.group4_axes,'xlim');
    handles.axe5xLimsReal = get(handles.group5_axes,'xlim');
    handles.axe6xLimsReal = get(handles.group6_axes,'xlim');
    handles.axe1yLimsReal = get(handles.group1_axes,'ylim');
    handles.axe2yLimsReal = get(handles.group2_axes,'ylim');
    handles.axe3yLimsReal = get(handles.group3_axes,'ylim');
    handles.axe4yLimsReal = get(handles.group4_axes,'ylim');
    handles.axe5yLimsReal = get(handles.group5_axes,'ylim');
    handles.axe6yLimsReal = get(handles.group6_axes,'ylim');
    
    handles.axe1xLims = get(handles.group1_axes,'xlim');
    handles.axe2xLims = get(handles.group2_axes,'xlim');
    handles.axe3xLims = get(handles.group3_axes,'xlim');
    handles.axe4xLims = get(handles.group4_axes,'xlim');
    handles.axe5xLims = get(handles.group5_axes,'xlim');
    handles.axe6xLims = get(handles.group6_axes,'xlim');
    handles.axe1yLims = get(handles.group1_axes,'ylim');
    handles.axe2yLims = get(handles.group2_axes,'ylim');
    handles.axe3yLims = get(handles.group3_axes,'ylim');
    handles.axe4yLims = get(handles.group4_axes,'ylim');
    handles.axe5yLims = get(handles.group5_axes,'ylim');
    handles.axe6yLims = get(handles.group6_axes,'ylim');
    
    handles.checkInitValues = 1;
    
    % Update handles structure
    guidata(hObject, handles);
elseif(handles.checkInitValues == 2)
    handles.axe6xLims = get(handles.group1_axes,'xlim');
    handles.checkInitValues = 3;
end

% Update handles structure
guidata(hObject, handles);



3
4
5
6
7
8
9
12
14
16
18
20


